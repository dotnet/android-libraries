#nullable enable
AndroidX.MediaRouter.App.MediaRouteActionProvider
AndroidX.MediaRouter.App.MediaRouteActionProvider.MediaRouteActionProvider(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteActionProvider.MediaRouteActionProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteButton
AndroidX.MediaRouter.App.MediaRouteButton.MediaRouteButton(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteButton.MediaRouteButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.MediaRouter.App.MediaRouteButton.MediaRouteButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.MediaRouter.App.MediaRouteButton.MediaRouteButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialog
AndroidX.MediaRouter.App.MediaRouteChooserDialog.MediaRouteChooserDialog(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialog.MediaRouteChooserDialog(Android.Content.Context! context, int theme) -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialog.MediaRouteChooserDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialog.RouteComparator
AndroidX.MediaRouter.App.MediaRouteChooserDialog.RouteComparator.Compare(Java.Lang.Object! lhs, Java.Lang.Object! rhs) -> int
AndroidX.MediaRouter.App.MediaRouteChooserDialog.RouteComparator.RouteComparator() -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment
AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.MediaRouteChooserDialogFragment() -> void
AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.MediaRouteChooserDialogFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteControllerDialog
AndroidX.MediaRouter.App.MediaRouteControllerDialog.MediaRouteControllerDialog(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteControllerDialog.MediaRouteControllerDialog(Android.Content.Context! context, int theme) -> void
AndroidX.MediaRouter.App.MediaRouteControllerDialog.MediaRouteControllerDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment
AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.MediaRouteControllerDialogFragment() -> void
AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.MediaRouteControllerDialogFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog
AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog.MediaRouteDevicePickerDialog() -> void
AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog.RouteComparator
AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog.RouteComparator.Compare(Java.Lang.Object! lhs, Java.Lang.Object! rhs) -> int
AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog.RouteComparator.RouteComparator() -> void
AndroidX.MediaRouter.App.MediaRouteDialogFactory
AndroidX.MediaRouter.App.MediaRouteDialogFactory.MediaRouteDialogFactory() -> void
AndroidX.MediaRouter.App.MediaRouteDialogFactory.MediaRouteDialogFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment
AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.MediaRouteDiscoveryFragment() -> void
AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.MediaRouteDiscoveryFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog
AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.MediaRouteDynamicChooserDialog(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.MediaRouteDynamicChooserDialog(Android.Content.Context! context, int theme) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.MediaRouteDynamicChooserDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog
AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.MediaRouteDynamicControllerDialog(Android.Content.Context! context) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.MediaRouteDynamicControllerDialog(Android.Content.Context! context, int theme) -> void
AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.MediaRouteDynamicControllerDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.App.SystemOutputSwitcherDialogController
AndroidX.MediaRouter.Media.MediaControlIntent
AndroidX.MediaRouter.Media.MediaItemMetadata
AndroidX.MediaRouter.Media.MediaItemStatus
AndroidX.MediaRouter.Media.MediaItemStatus.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.Build() -> AndroidX.MediaRouter.Media.MediaItemStatus!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.Builder(AndroidX.MediaRouter.Media.MediaItemStatus! status) -> void
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.Builder(int playbackState) -> void
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.SetContentDuration(long durationMilliseconds) -> AndroidX.MediaRouter.Media.MediaItemStatus.Builder!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.SetContentPosition(long positionMilliseconds) -> AndroidX.MediaRouter.Media.MediaItemStatus.Builder!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.MediaRouter.Media.MediaItemStatus.Builder!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.SetPlaybackState(int playbackState) -> AndroidX.MediaRouter.Media.MediaItemStatus.Builder!
AndroidX.MediaRouter.Media.MediaItemStatus.Builder.SetTimestamp(long elapsedRealtimeTimestamp) -> AndroidX.MediaRouter.Media.MediaItemStatus.Builder!
AndroidX.MediaRouter.Media.MediaItemStatus.ContentDuration.get -> long
AndroidX.MediaRouter.Media.MediaItemStatus.ContentPosition.get -> long
AndroidX.MediaRouter.Media.MediaItemStatus.Extras.get -> Android.OS.Bundle?
AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackState.get -> int
AndroidX.MediaRouter.Media.MediaItemStatus.Timestamp.get -> long
AndroidX.MediaRouter.Media.MediaRouteDescriptor
AndroidX.MediaRouter.Media.MediaRouteDescriptor.AllowedPackages.get -> System.Collections.Generic.ICollection<string!>!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.AddControlFilter(Android.Content.IntentFilter! filter) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.AddControlFilters(System.Collections.Generic.ICollection<Android.Content.IntentFilter!>! filters) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.AddGroupMemberId(string! groupMemberId) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.AddGroupMemberIds(System.Collections.Generic.ICollection<string!>! groupMemberIds) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteDescriptor!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteDescriptor! descriptor) -> void
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.Builder(string! id, string! name) -> void
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.ClearControlFilters() -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.ClearGroupMemberIds() -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.RemoveGroupMemberId(string! memberRouteId) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetCanDisconnect(bool canDisconnect) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetConnecting(bool connecting) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetConnectionState(int connectionState) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetDeduplicationIds(System.Collections.Generic.ICollection<string!>! deduplicationIds) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetDescription(string? description) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetDeviceType(int deviceType) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetEnabled(bool enabled) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetIconUri(Android.Net.Uri! iconUri) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetId(string! id) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetIsDynamicGroupRoute(bool isDynamicGroupRoute) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetIsSystemRoute(bool isSystemRoute) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetMaxClientVersion(int maxVersion) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetMinClientVersion(int minVersion) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetName(string! name) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetPlaybackStream(int playbackStream) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetPlaybackType(int playbackType) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetPresentationDisplayId(int presentationDisplayId) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetSettingsActivity(Android.Content.IntentSender? is) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetVisibilityPublic() -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetVisibilityRestricted(System.Collections.Generic.ICollection<string!>! allowedPackages) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetVolume(int volume) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetVolumeHandling(int volumeHandling) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.SetVolumeMax(int volumeMax) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.CanDisconnectAndKeepPlaying() -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.ConnectionState.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.ControlFilters.get -> System.Collections.Generic.IList<Android.Content.IntentFilter!>!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.DeduplicationIds.get -> System.Collections.Generic.ICollection<string!>!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Description.get -> string?
AndroidX.MediaRouter.Media.MediaRouteDescriptor.DeviceType.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Extras.get -> Android.OS.Bundle?
AndroidX.MediaRouter.Media.MediaRouteDescriptor.GroupMemberIds.get -> System.Collections.Generic.IList<string!>!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IconUri.get -> Android.Net.Uri?
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Id.get -> string!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsConnecting.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsDynamicGroupRoute.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsEnabled.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsSystemRoute.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsValid.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.IsVisibilityPublic.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDescriptor.MaxClientVersion.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.MinClientVersion.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Name.get -> string!
AndroidX.MediaRouter.Media.MediaRouteDescriptor.PlaybackStream.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.PlaybackType.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.PresentationDisplayId.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.SettingsActivity.get -> Android.Content.IntentSender?
AndroidX.MediaRouter.Media.MediaRouteDescriptor.Volume.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.VolumeHandling.get -> int
AndroidX.MediaRouter.Media.MediaRouteDescriptor.VolumeMax.get -> int
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.IsActiveScan.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.IsValid.get -> bool
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.MediaRouteDiscoveryRequest(AndroidX.MediaRouter.Media.MediaRouteSelector! selector, bool activeScan) -> void
AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.Selector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
AndroidX.MediaRouter.Media.MediaRouteProvider
AndroidX.MediaRouter.Media.MediaRouteProvider.Callback
AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.Callback() -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.Context.get -> Android.Content.Context!
AndroidX.MediaRouter.Media.MediaRouteProvider.Descriptor.get -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor?
AndroidX.MediaRouter.Media.MediaRouteProvider.Descriptor.set -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DiscoveryRequest.get -> AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest?
AndroidX.MediaRouter.Media.MediaRouteProvider.DiscoveryRequest.set -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicGroupRouteController() -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicGroupRouteController(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteDescriptor! descriptor) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor! dynamicRouteDescriptor) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.SetIsGroupable(bool value) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.SetIsTransferable(bool value) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.SetIsUnselectable(bool value) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.SetSelectionState(int state) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.ISelectionState
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.IsGroupable.get -> bool
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.IsTransferable.get -> bool
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.IsUnselectable.get -> bool
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.RouteDescriptor.get -> AndroidX.MediaRouter.Media.MediaRouteDescriptor!
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.SelectionState.get -> int
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.NotifyDynamicRoutesChanged(AndroidX.MediaRouter.Media.MediaRouteDescriptor! groupRoute, System.Collections.Generic.ICollection<AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor!>! dynamicRoutes) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.NotifyDynamicRoutesChanged(System.Collections.Generic.ICollection<AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor!>! routes) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.Handler.get -> Android.OS.Handler!
AndroidX.MediaRouter.Media.MediaRouteProvider.MediaRouteProvider(Android.Content.Context! context) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.MediaRouteProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.Metadata.get -> AndroidX.MediaRouter.Media.MediaRouteProvider.ProviderMetadata!
AndroidX.MediaRouter.Media.MediaRouteProvider.ProviderMetadata
AndroidX.MediaRouter.Media.MediaRouteProvider.ProviderMetadata.ComponentName.get -> Android.Content.ComponentName!
AndroidX.MediaRouter.Media.MediaRouteProvider.ProviderMetadata.PackageName.get -> string!
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.RouteController() -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.RouteController(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions!
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.Builder() -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions! routeControllerOptions) -> void
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.SetClientPackageName(string! clientPackageName) -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.SetControlHints(Android.OS.Bundle? controlHints) -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder!
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.ClientPackageName.get -> string!
AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.ControlHints.get -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaRouteProvider.SetCallback(AndroidX.MediaRouter.Media.MediaRouteProvider.Callback? callback) -> void
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.AddRoute(AndroidX.MediaRouter.Media.MediaRouteDescriptor! route) -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.AddRoutes(System.Collections.Generic.ICollection<AndroidX.MediaRouter.Media.MediaRouteDescriptor!>! routes) -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.Builder() -> void
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor! descriptor) -> void
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.SetSupportsDynamicGroupRoute(bool value) -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.IsValid.get -> bool
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Routes.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouteDescriptor!>!
AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.SupportsDynamicGroupRoute() -> bool
AndroidX.MediaRouter.Media.MediaRouteProviderService
AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo
AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.Builder
AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo!
AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.Builder.Builder(string! packageName) -> void
AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.PackageName.get -> string!
AndroidX.MediaRouter.Media.MediaRouteProviderService.MediaRouteProviderService() -> void
AndroidX.MediaRouter.Media.MediaRouteProviderService.MediaRouteProviderService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouteSelector
AndroidX.MediaRouter.Media.MediaRouteSelector.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.AddControlCategories(System.Collections.Generic.ICollection<string!>! categories) -> AndroidX.MediaRouter.Media.MediaRouteSelector.Builder!
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.AddControlCategory(string! category) -> AndroidX.MediaRouter.Media.MediaRouteSelector.Builder!
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.AddSelector(AndroidX.MediaRouter.Media.MediaRouteSelector! selector) -> AndroidX.MediaRouter.Media.MediaRouteSelector.Builder!
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouteSelector!
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.Builder() -> void
AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouteSelector! selector) -> void
AndroidX.MediaRouter.Media.MediaRouteSelector.Contains(AndroidX.MediaRouter.Media.MediaRouteSelector! selector) -> bool
AndroidX.MediaRouter.Media.MediaRouteSelector.ControlCategories.get -> System.Collections.Generic.IList<string!>!
AndroidX.MediaRouter.Media.MediaRouteSelector.HasControlCategory(string? category) -> bool
AndroidX.MediaRouter.Media.MediaRouteSelector.IsEmpty.get -> bool
AndroidX.MediaRouter.Media.MediaRouteSelector.IsValid.get -> bool
AndroidX.MediaRouter.Media.MediaRouteSelector.MatchesControlFilters(System.Collections.Generic.IList<Android.Content.IntentFilter!>? filters) -> bool
AndroidX.MediaRouter.Media.MediaRouter
AndroidX.MediaRouter.Media.MediaRouter.AddCallback(AndroidX.MediaRouter.Media.MediaRouteSelector! selector, AndroidX.MediaRouter.Media.MediaRouter.Callback! callback) -> void
AndroidX.MediaRouter.Media.MediaRouter.AddCallback(AndroidX.MediaRouter.Media.MediaRouteSelector! selector, AndroidX.MediaRouter.Media.MediaRouter.Callback! callback, int flags) -> void
AndroidX.MediaRouter.Media.MediaRouter.AddProvider(AndroidX.MediaRouter.Media.MediaRouteProvider! providerInstance) -> void
AndroidX.MediaRouter.Media.MediaRouter.AddRemoteControlClient(Java.Lang.Object! remoteControlClient) -> void
AndroidX.MediaRouter.Media.MediaRouter.AddRouteToSelectedGroup(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
AndroidX.MediaRouter.Media.MediaRouter.BluetoothRoute.get -> AndroidX.MediaRouter.Media.MediaRouter.RouteInfo?
AndroidX.MediaRouter.Media.MediaRouter.Callback
AndroidX.MediaRouter.Media.MediaRouter.Callback.Callback() -> void
AndroidX.MediaRouter.Media.MediaRouter.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouter.ConnectedGroupRoutes.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo!>!
AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback
AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.ControlRequestCallback() -> void
AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.ControlRequestCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouter.DefaultRoute.get -> AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!
AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo
AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.GroupRouteInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouter.IOnPrepareTransferListener
AndroidX.MediaRouter.Media.MediaRouter.IOnPrepareTransferListener.OnPrepareTransfer(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! p0, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! p1) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.MediaRouter.Media.MediaRouter.IsRouteAvailable(AndroidX.MediaRouter.Media.MediaRouteSelector! selector, int flags) -> bool
AndroidX.MediaRouter.Media.MediaRouter.MediaSessionToken.get -> Android.Support.V4.Media.Session.MediaSessionCompat.Token?
AndroidX.MediaRouter.Media.MediaRouter.PrepareTransfer.get -> AndroidX.MediaRouter.Media.MediaRouter.PrepareTransferHandler?
AndroidX.MediaRouter.Media.MediaRouter.PrepareTransfer.set -> void
AndroidX.MediaRouter.Media.MediaRouter.PrepareTransferHandler
AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo
AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo.ComponentName.get -> Android.Content.ComponentName!
AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo.PackageName.get -> string!
AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo.ProviderInstance.get -> AndroidX.MediaRouter.Media.MediaRouteProvider!
AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo.Routes.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>!
AndroidX.MediaRouter.Media.MediaRouter.Providers.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo!>!
AndroidX.MediaRouter.Media.MediaRouter.RemoveCallback(AndroidX.MediaRouter.Media.MediaRouter.Callback! callback) -> void
AndroidX.MediaRouter.Media.MediaRouter.RemoveProvider(AndroidX.MediaRouter.Media.MediaRouteProvider! providerInstance) -> void
AndroidX.MediaRouter.Media.MediaRouter.RemoveRemoteControlClient(Java.Lang.Object! remoteControlClient) -> void
AndroidX.MediaRouter.Media.MediaRouter.RemoveRouteFromSelectedGroup(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
AndroidX.MediaRouter.Media.MediaRouter.RouteInfo
AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IDeviceType
AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.MSelectedRoutesInGroup.get -> System.Collections.IList!
AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.MSelectedRoutesInGroup.set -> void
AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.RouteInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaRouter.RouterParams.get -> AndroidX.MediaRouter.Media.MediaRouterParams?
AndroidX.MediaRouter.Media.MediaRouter.RouterParams.set -> void
AndroidX.MediaRouter.Media.MediaRouter.Routes.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>!
AndroidX.MediaRouter.Media.MediaRouter.SelectRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
AndroidX.MediaRouter.Media.MediaRouter.SelectedRoute.get -> AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!
AndroidX.MediaRouter.Media.MediaRouter.SetMediaSession(Java.Lang.Object? mediaSession) -> void
AndroidX.MediaRouter.Media.MediaRouter.SetMediaSessionCompat(Android.Support.V4.Media.Session.MediaSessionCompat? mediaSession) -> void
AndroidX.MediaRouter.Media.MediaRouter.SetOnPrepareTransferListener(AndroidX.MediaRouter.Media.MediaRouter.IOnPrepareTransferListener? listener) -> void
AndroidX.MediaRouter.Media.MediaRouter.SetRouteListingPreference(AndroidX.MediaRouter.Media.RouteListingPreference? routeListingPreference) -> void
AndroidX.MediaRouter.Media.MediaRouter.TransferToRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
AndroidX.MediaRouter.Media.MediaRouter.Unselect(int reason) -> void
AndroidX.MediaRouter.Media.MediaRouter.UpdateSelectedRoute(AndroidX.MediaRouter.Media.MediaRouteSelector! selector) -> AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!
AndroidX.MediaRouter.Media.MediaRouterParams
AndroidX.MediaRouter.Media.MediaRouterParams.Builder
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.Build() -> AndroidX.MediaRouter.Media.MediaRouterParams!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.Builder() -> void
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.Builder(AndroidX.MediaRouter.Media.MediaRouterParams! params) -> void
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetDialogType(int dialogType) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetMediaTransferReceiverEnabled(bool enabled) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetMediaTransferRestrictedToSelfProviders(bool enabled) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetOutputSwitcherEnabled(bool enabled) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.Builder.SetTransferToLocalEnabled(bool enabled) -> AndroidX.MediaRouter.Media.MediaRouterParams.Builder!
AndroidX.MediaRouter.Media.MediaRouterParams.IDialogType
AndroidX.MediaRouter.Media.MediaRouterParams.MediaRouterParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.MediaSessionStatus
AndroidX.MediaRouter.Media.MediaSessionStatus.AsBundle() -> Android.OS.Bundle!
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.Build() -> AndroidX.MediaRouter.Media.MediaSessionStatus!
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.Builder(AndroidX.MediaRouter.Media.MediaSessionStatus! status) -> void
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.Builder(int sessionState) -> void
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.MediaRouter.Media.MediaSessionStatus.Builder!
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.SetQueuePaused(bool queuePaused) -> AndroidX.MediaRouter.Media.MediaSessionStatus.Builder!
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.SetSessionState(int sessionState) -> AndroidX.MediaRouter.Media.MediaSessionStatus.Builder!
AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.SetTimestamp(long elapsedRealtimeTimestamp) -> AndroidX.MediaRouter.Media.MediaSessionStatus.Builder!
AndroidX.MediaRouter.Media.MediaSessionStatus.Extras.get -> Android.OS.Bundle?
AndroidX.MediaRouter.Media.MediaSessionStatus.IsQueuePaused.get -> bool
AndroidX.MediaRouter.Media.MediaSessionStatus.SessionState.get -> int
AndroidX.MediaRouter.Media.MediaSessionStatus.Timestamp.get -> long
AndroidX.MediaRouter.Media.MediaTransferReceiver
AndroidX.MediaRouter.Media.MediaTransferReceiver.MediaTransferReceiver() -> void
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.ICallback
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.ICallback.AddProvider(AndroidX.MediaRouter.Media.MediaRouteProvider! p0) -> void
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.ICallback.RemoveProvider(AndroidX.MediaRouter.Media.MediaRouteProvider! p0) -> void
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.Rescan() -> void
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.Start() -> void
AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.Stop() -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat
AndroidX.MediaRouter.Media.RemoteControlClientCompat.IVolumeCallback
AndroidX.MediaRouter.Media.RemoteControlClientCompat.IVolumeCallback.OnVolumeSetRequest(int p0) -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.IVolumeCallback.OnVolumeUpdateRequest(int p0) -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MContext.get -> Android.Content.Context?
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MContext.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MRcc.get -> Android.Media.RemoteControlClient?
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MRcc.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MVolumeCallback.get -> AndroidX.MediaRouter.Media.RemoteControlClientCompat.IVolumeCallback?
AndroidX.MediaRouter.Media.RemoteControlClientCompat.MVolumeCallback.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.PlaybackInfo() -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.PlaybackStream.get -> int
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.PlaybackStream.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.PlaybackType.get -> int
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.PlaybackType.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.Volume.get -> int
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.Volume.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeControlId.get -> string?
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeControlId.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeHandling.get -> int
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeHandling.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeMax.get -> int
AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.VolumeMax.set -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.RemoteControlClientCompat(Android.Content.Context? context, Android.Media.RemoteControlClient? rcc) -> void
AndroidX.MediaRouter.Media.RemoteControlClientCompat.RemoteControlClientCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient
AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback
AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.ActionCallback() -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.ActionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.IOnMessageReceivedListener
AndroidX.MediaRouter.Media.RemotePlaybackClient.IOnMessageReceivedListener.OnMessageReceived(string! p0, Android.OS.Bundle? p1) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback
AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.ItemActionCallback() -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.ItemActionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceived -> System.EventHandler<AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceivedEventArgs!>!
AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceivedEventArgs
AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceivedEventArgs.MessageReceivedEventArgs(string! p0, Android.OS.Bundle? p1) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceivedEventArgs.P0.get -> string!
AndroidX.MediaRouter.Media.RemotePlaybackClient.MessageReceivedEventArgs.P1.get -> Android.OS.Bundle?
AndroidX.MediaRouter.Media.RemotePlaybackClient.RemotePlaybackClient(Android.Content.Context! context, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.RemotePlaybackClient(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback
AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.SessionActionCallback() -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.SessionActionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback
AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.StatusCallback() -> void
AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.StatusCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.MediaRouter.Media.RouteListingPreference
AndroidX.MediaRouter.Media.RouteListingPreference.Builder
AndroidX.MediaRouter.Media.RouteListingPreference.Builder.Build() -> AndroidX.MediaRouter.Media.RouteListingPreference!
AndroidX.MediaRouter.Media.RouteListingPreference.Builder.Builder() -> void
AndroidX.MediaRouter.Media.RouteListingPreference.Builder.SetItems(System.Collections.Generic.IList<AndroidX.MediaRouter.Media.RouteListingPreference.Item!>! items) -> AndroidX.MediaRouter.Media.RouteListingPreference.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Builder.SetLinkedItemComponentName(Android.Content.ComponentName? linkedItemComponentName) -> AndroidX.MediaRouter.Media.RouteListingPreference.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Builder.SetSystemOrderingEnabled(bool systemOrderingEnabled) -> AndroidX.MediaRouter.Media.RouteListingPreference.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.IsSystemOrderingEnabled.get -> bool
AndroidX.MediaRouter.Media.RouteListingPreference.Item
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.Build() -> AndroidX.MediaRouter.Media.RouteListingPreference.Item!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.Builder(string! routeId) -> void
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.SetCustomSubtextMessage(Java.Lang.ICharSequence? customSubtextMessage) -> AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.SetCustomSubtextMessage(string? customSubtextMessage) -> AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.SetFlags(int flags) -> AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.SetSelectionBehavior(int selectionBehavior) -> AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.SetSubText(int subText) -> AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.CustomSubtextMessage.get -> string?
AndroidX.MediaRouter.Media.RouteListingPreference.Item.CustomSubtextMessageFormatted.get -> Java.Lang.ICharSequence?
AndroidX.MediaRouter.Media.RouteListingPreference.Item.Flags.get -> int
AndroidX.MediaRouter.Media.RouteListingPreference.Item.IFlags
AndroidX.MediaRouter.Media.RouteListingPreference.Item.ISelectionBehavior
AndroidX.MediaRouter.Media.RouteListingPreference.Item.ISubText
AndroidX.MediaRouter.Media.RouteListingPreference.Item.RouteId.get -> string!
AndroidX.MediaRouter.Media.RouteListingPreference.Item.SelectionBehavior.get -> int
AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubText.get -> int
AndroidX.MediaRouter.Media.RouteListingPreference.Items.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.RouteListingPreference.Item!>!
AndroidX.MediaRouter.Media.RouteListingPreference.LinkedItemComponentName.get -> Android.Content.ComponentName?
abstract AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.OnAddMemberRoute(string! p0) -> void
abstract AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.OnRemoveMemberRoute(string! p0) -> void
abstract AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.OnUpdateMemberRoutes(System.Collections.Generic.IList<string!>? p0) -> void
abstract AndroidX.MediaRouter.Media.MediaRouteProviderService.OnCreateMediaRouteProvider() -> AndroidX.MediaRouter.Media.MediaRouteProvider?
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionEndSession = "android.media.intent.action.END_SESSION" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionEnqueue = "android.media.intent.action.ENQUEUE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionGetSessionStatus = "android.media.intent.action.GET_SESSION_STATUS" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionGetStatus = "android.media.intent.action.GET_STATUS" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionPause = "android.media.intent.action.PAUSE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionPlay = "android.media.intent.action.PLAY" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionRemove = "android.media.intent.action.REMOVE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionResume = "android.media.intent.action.RESUME" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionSeek = "android.media.intent.action.SEEK" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionSendMessage = "android.media.intent.action.SEND_MESSAGE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionStartSession = "android.media.intent.action.START_SESSION" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ActionStop = "android.media.intent.action.STOP" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.CategoryLiveAudio = "android.media.intent.category.LIVE_AUDIO" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.CategoryLiveVideo = "android.media.intent.category.LIVE_VIDEO" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.CategoryRemoteAudioPlayback = "android.media.intent.category.REMOTE_AUDIO_PLAYBACK" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.CategoryRemotePlayback = "android.media.intent.category.REMOTE_PLAYBACK" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.CategoryRemoteVideoPlayback = "android.media.intent.category.REMOTE_VIDEO_PLAYBACK" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ErrorInvalidItemId = 3 -> int
const AndroidX.MediaRouter.Media.MediaControlIntent.ErrorInvalidSessionId = 2 -> int
const AndroidX.MediaRouter.Media.MediaControlIntent.ErrorUnknown = 0 -> int
const AndroidX.MediaRouter.Media.MediaControlIntent.ErrorUnsupportedOperation = 1 -> int
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraErrorCode = "android.media.intent.extra.ERROR_CODE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemContentPosition = "android.media.intent.extra.ITEM_POSITION" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemHttpHeaders = "android.media.intent.extra.HTTP_HEADERS" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemId = "android.media.intent.extra.ITEM_ID" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemMetadata = "android.media.intent.extra.ITEM_METADATA" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemStatus = "android.media.intent.extra.ITEM_STATUS" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraItemStatusUpdateReceiver = "android.media.intent.extra.ITEM_STATUS_UPDATE_RECEIVER" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraMessage = "android.media.intent.extra.MESSAGE" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraMessageReceiver = "android.media.intent.extra.MESSAGE_RECEIVER" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraSessionId = "android.media.intent.extra.SESSION_ID" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraSessionStatus = "android.media.intent.extra.SESSION_STATUS" -> string!
const AndroidX.MediaRouter.Media.MediaControlIntent.ExtraSessionStatusUpdateReceiver = "android.media.intent.extra.SESSION_STATUS_UPDATE_RECEIVER" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyAlbumArtist = "android.media.metadata.ALBUM_ARTIST" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyAlbumTitle = "android.media.metadata.ALBUM_TITLE" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyArtist = "android.media.metadata.ARTIST" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyArtworkUri = "android.media.metadata.ARTWORK_URI" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyAuthor = "android.media.metadata.AUTHOR" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyComposer = "android.media.metadata.COMPOSER" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyDiscNumber = "android.media.metadata.DISC_NUMBER" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyDuration = "android.media.metadata.DURATION" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyTitle = "android.media.metadata.TITLE" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyTrackNumber = "android.media.metadata.TRACK_NUMBER" -> string!
const AndroidX.MediaRouter.Media.MediaItemMetadata.KeyYear = "android.media.metadata.YEAR" -> string!
const AndroidX.MediaRouter.Media.MediaItemStatus.ExtraHttpResponseHeaders = "android.media.status.extra.HTTP_RESPONSE_HEADERS" -> string!
const AndroidX.MediaRouter.Media.MediaItemStatus.ExtraHttpStatusCode = "android.media.status.extra.HTTP_STATUS_CODE" -> string!
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStateBuffering = 3 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStateCanceled = 5 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStateError = 7 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStateFinished = 4 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStateInvalidated = 6 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStatePaused = 2 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStatePending = 0 -> int
const AndroidX.MediaRouter.Media.MediaItemStatus.PlaybackStatePlaying = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.NotInGroup = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Selected = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Selecting = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Unselected = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Unselecting = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouteProviderService.ServiceInterface = "android.media.MediaRouteProviderService" -> string!
const AndroidX.MediaRouter.Media.MediaRouter.AvailabilityFlagIgnoreDefaultRoute = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.AvailabilityFlagRequireMatch = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.CallbackFlagForceDiscovery = 8 -> int
const AndroidX.MediaRouter.Media.MediaRouter.CallbackFlagPerformActiveScan = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.CallbackFlagRequestDiscovery = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouter.CallbackFlagUnfilteredEvents = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRouteFailedReasonAlreadyInGroup = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRouteFailedReasonNotAvailableRouteConnection = 5 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRouteFailedReasonNotGroupable = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRouteFailedReasonUnsupportedForGroupRoute = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRouteSuccessful = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteFailedReasonLastRouteInGroup = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteFailedReasonNotAvailableRouteConnection = 6 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteFailedReasonNotInGroup = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteFailedReasonNotUnselectable = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteFailedReasonUnsupportedForGroupRoute = 5 -> int
const AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRouteSuccessful = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonDisconnectCalled = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonFailedToCreateDynamicGroupRouteController = 6 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonRejectedForSelectedRoute = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonRouteConnectionTimeout = 7 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonRouteNotAvailable = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonRouteNotEnabled = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouter.ReasonUnsupportedForNonDynamicController = 5 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ConnectionStateConnected = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ConnectionStateConnecting = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ConnectionStateDisconnected = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeAudioVideoReceiver = 4 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeBleHeadset = 22 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeBluetoothA2dp = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeBuiltinSpeaker = 12 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeCar = 9 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeComputer = 7 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeDock = 19 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeGameConsole = 8 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeGroup = 1000 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeHdmi = 16 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeHdmiArc = 23 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeHdmiEarc = 24 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeHearingAid = 21 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeRemoteSpeaker = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeSmartphone = 11 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeSmartwatch = 10 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeSpeaker = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeTablet = 5 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeTabletDocked = 6 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeTv = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeUnknown = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeUsbAccessory = 18 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeUsbDevice = 17 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeUsbHeadset = 20 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeWiredHeadphones = 14 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceTypeWiredHeadset = 13 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackTypeLocal = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackTypeRemote = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackVolumeFixed = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackVolumeVariable = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PresentationDisplayIdNone = -1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.UnselectReasonDisconnected = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouter.UnselectReasonRouteChanged = 3 -> int
const AndroidX.MediaRouter.Media.MediaRouter.UnselectReasonStopped = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouter.UnselectReasonUnknown = 0 -> int
const AndroidX.MediaRouter.Media.MediaRouterParams.DialogTypeDefault = 1 -> int
const AndroidX.MediaRouter.Media.MediaRouterParams.DialogTypeDynamicGroup = 2 -> int
const AndroidX.MediaRouter.Media.MediaRouterParams.EnableGroupVolumeUx = "androidx.mediarouter.media.MediaRouterParams.ENABLE_GROUP_VOLUME_UX" -> string!
const AndroidX.MediaRouter.Media.MediaRouterParams.ExtrasKeyFixedCastIcon = "androidx.mediarouter.media.MediaRouterParams.FIXED_CAST_ICON" -> string!
const AndroidX.MediaRouter.Media.MediaSessionStatus.SessionStateActive = 0 -> int
const AndroidX.MediaRouter.Media.MediaSessionStatus.SessionStateEnded = 1 -> int
const AndroidX.MediaRouter.Media.MediaSessionStatus.SessionStateInvalidated = 2 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.ActionTransferMedia = "android.media.action.TRANSFER_MEDIA" -> string!
const AndroidX.MediaRouter.Media.RouteListingPreference.ExtraRouteId = "android.media.extra.ROUTE_ID" -> string!
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.FlagOngoingSession = 1 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.FlagOngoingSessionManaged = 2 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.FlagSuggested = 4 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SelectionBehaviorGoToApp = 2 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SelectionBehaviorNone = 0 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SelectionBehaviorTransfer = 1 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextAdRoutingDisallowed = 4 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextCustom = 10000 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextDeviceLowPower = 5 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextDownloadedContentRoutingDisallowed = 3 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextErrorUnknown = 1 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextNone = 0 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextSubscriptionRequired = 2 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextTrackUnsupported = 7 -> int
const AndroidX.MediaRouter.Media.RouteListingPreference.Item.SubtextUnauthorized = 6 -> int
override AndroidX.MediaRouter.App.MediaRouteActionProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteActionProvider.OnCreateActionView() -> Android.Views.View!
override AndroidX.MediaRouter.App.MediaRouteActionProvider.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteActionProvider.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteButton.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteButton.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteChooserDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteChooserDialog.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteChooserDialog.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteControllerDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteControllerDialog.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteControllerDialog.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteDialogFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteDialogFactory.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteDialogFactory.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.ThresholdClass.get -> nint
override AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.App.SystemOutputSwitcherDialogController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaControlIntent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaItemMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaItemStatus.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaItemStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteDescriptor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteDescriptor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.DynamicRouteDescriptor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouteProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.ProviderMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProvider.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouteProvider.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProviderService.ClientInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProviderService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteProviderService.OnBind(Android.Content.Intent! intent) -> Android.OS.IBinder?
override AndroidX.MediaRouter.Media.MediaRouteProviderService.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouteProviderService.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouteSelector.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouteSelector.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.Callback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouter.Callback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaRouterParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouterParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaRouterParams.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.MediaRouterParams.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.MediaSessionStatus.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaSessionStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaTransferReceiver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.MediaTransferReceiver.OnReceive(Android.Content.Context! context, Android.Content.Intent! intent) -> void
override AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemoteControlClientCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemoteControlClientCompat.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemoteControlClientCompat.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ThresholdClass.get -> nint
override AndroidX.MediaRouter.Media.RemotePlaybackClient.ThresholdType.get -> System.Type!
override AndroidX.MediaRouter.Media.RouteListingPreference.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RouteListingPreference.Item.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RouteListingPreference.Item.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.MediaRouter.Media.RouteListingPreference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.MediaRouter.App.MediaRouteDialogFactory.Default.get -> AndroidX.MediaRouter.App.MediaRouteDialogFactory!
static AndroidX.MediaRouter.App.SystemOutputSwitcherDialogController.ShowDialog(Android.Content.Context! context) -> bool
static AndroidX.MediaRouter.Media.MediaItemStatus.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaItemStatus?
static AndroidX.MediaRouter.Media.MediaRouteDescriptor.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaRouteDescriptor?
static AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest?
static AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor?
static AndroidX.MediaRouter.Media.MediaRouteSelector.Empty.get -> AndroidX.MediaRouter.Media.MediaRouteSelector?
static AndroidX.MediaRouter.Media.MediaRouteSelector.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaRouteSelector?
static AndroidX.MediaRouter.Media.MediaRouter.GetInstance(Android.Content.Context! context) -> AndroidX.MediaRouter.Media.MediaRouter!
static AndroidX.MediaRouter.Media.MediaRouter.IsGroupVolumeUxEnabled.get -> bool
static AndroidX.MediaRouter.Media.MediaRouter.IsMediaTransferEnabled.get -> bool
static AndroidX.MediaRouter.Media.MediaRouter.ResetGlobalRouter() -> void
static AndroidX.MediaRouter.Media.MediaSessionStatus.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.MediaRouter.Media.MediaSessionStatus?
static AndroidX.MediaRouter.Media.MediaTransferReceiver.IsDeclared(Android.Content.Context! applicationContext) -> bool
static AndroidX.MediaRouter.Media.RemoteControlClientCompat.Obtain(Android.Content.Context? context, Android.Media.RemoteControlClient? rcc) -> Java.Lang.Object?
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.DialogFactory.get -> AndroidX.MediaRouter.App.MediaRouteDialogFactory!
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.DialogFactory.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.EnableDynamicGroup() -> void
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.MediaRouteButton.get -> AndroidX.MediaRouter.App.MediaRouteButton?
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.OnCreateMediaRouteButton() -> AndroidX.MediaRouter.App.MediaRouteButton!
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteActionProvider.SetAlwaysVisible(bool alwaysVisible) -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.DialogFactory.get -> AndroidX.MediaRouter.App.MediaRouteDialogFactory!
virtual AndroidX.MediaRouter.App.MediaRouteButton.DialogFactory.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.EnableDynamicGroup() -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.OnAttachedToWindow() -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.OnDetachedFromWindow() -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteButton.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.SetAlwaysVisible(bool alwaysVisible) -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.SetRemoteIndicatorDrawable(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.MediaRouter.App.MediaRouteButton.ShowDialog() -> bool
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialog.OnFilterRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialog.OnFilterRoutes(System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>! routes) -> void
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialog.RefreshRoutes() -> void
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialog.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialog.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.OnCreateChooserDialog(Android.Content.Context! context, Android.OS.Bundle? savedInstanceState) -> AndroidX.MediaRouter.App.MediaRouteChooserDialog!
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.OnCreateDynamicChooserDialog(Android.Content.Context! context) -> AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog!
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.MediaControlView.get -> Android.Views.View?
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.MediaSession.get -> Android.Support.V4.Media.Session.MediaSessionCompat.Token?
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.OnCreateMediaControlView(Android.OS.Bundle? savedInstanceState) -> Android.Views.View?
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.Route.get -> AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.VolumeControlEnabled.get -> bool
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialog.VolumeControlEnabled.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.OnCreateControllerDialog(Android.Content.Context! context, Android.OS.Bundle? savedInstanceState) -> AndroidX.MediaRouter.App.MediaRouteControllerDialog!
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.OnCreateDynamicControllerDialog(Android.Content.Context! context) -> AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog!
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteDialogFactory.OnCreateChooserDialogFragment() -> AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment!
virtual AndroidX.MediaRouter.App.MediaRouteDialogFactory.OnCreateControllerDialogFragment() -> AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment!
virtual AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.MediaRouter.get -> AndroidX.MediaRouter.Media.MediaRouter!
virtual AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.OnCreateCallback() -> AndroidX.MediaRouter.Media.MediaRouter.Callback?
virtual AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.OnPrepareCallbackFlags() -> int
virtual AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.OnFilterRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.OnFilterRoutes(System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>! routes) -> void
virtual AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.RefreshRoutes() -> void
virtual AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog.RouteSelector.set -> void
virtual AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.MediaSession.get -> Android.Support.V4.Media.Session.MediaSessionCompat.Token?
virtual AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.OnFilterRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.OnFilterRoutes(System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>! routes) -> void
virtual AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.RouteSelector.get -> AndroidX.MediaRouter.Media.MediaRouteSelector!
virtual AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog.RouteSelector.set -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.Callback.OnDescriptorChanged(AndroidX.MediaRouter.Media.MediaRouteProvider! provider, AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor? descriptor) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.GroupableSelectionTitle.get -> string?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController.TransferableSectionTitle.get -> string?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnCreateDynamicGroupRouteController(string! initialMemberRouteId) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnCreateDynamicGroupRouteController(string! initialMemberRouteId, AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions! routeControllerOptions) -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnCreateRouteController(string! routeId) -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnCreateRouteController(string! routeId, AndroidX.MediaRouter.Media.MediaRouteProvider.RouteControllerOptions! routeControllerOptions) -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnCreateRouteController(string! routeId, string! routeGroupId) -> AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController?
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.OnDiscoveryRequestChanged(AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest? request) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnControlRequest(Android.Content.Intent! intent, AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback? callback) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnRelease() -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnSelect() -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnSetVolume(int volume) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnUnselect() -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnUnselect(int reason) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProvider.RouteController.OnUpdateVolume(int delta) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProviderService.AddClientInfoListener(Java.Util.Concurrent.IExecutor! listenerExecutor, AndroidX.Core.Util.IConsumer! listener) -> void
virtual AndroidX.MediaRouter.Media.MediaRouteProviderService.MediaRouteProvider.get -> AndroidX.MediaRouter.Media.MediaRouteProvider?
virtual AndroidX.MediaRouter.Media.MediaRouteProviderService.RemoveClientInfoListener(AndroidX.Core.Util.IConsumer! listener) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnProviderAdded(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo! provider) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnProviderChanged(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo! provider) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnProviderRemoved(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo! provider) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteAdded(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteChanged(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteConnected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! connectedRoute, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! requestedRoute) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteDisconnected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo? disconnectedRoute, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! requestedRoute, int reason) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRoutePresentationDisplayChanged(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteRemoved(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteSelected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteSelected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route, int reason) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteSelected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! selectedRoute, int reason, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! requestedRoute) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteUnselected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteUnselected(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route, int reason) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouteVolumeChanged(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.Callback.OnRouterParamsChanged(AndroidX.MediaRouter.Media.MediaRouter! router, AndroidX.MediaRouter.Media.MediaRouterParams? params) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.OnError(string? error, Android.OS.Bundle? data) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback.OnResult(Android.OS.Bundle? data) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.AddRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.GetSelectionState(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.IsConnected.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.IsGroupable(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.IsTransferable(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.IsUnselectable(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RemoveRoute(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! route) -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo.RoutesInGroup.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>!
virtual AndroidX.MediaRouter.Media.MediaRouter.PrepareTransferHandler.Invoke(AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! p0, AndroidX.MediaRouter.Media.MediaRouter.RouteInfo! p1) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.AsGroup() -> AndroidX.MediaRouter.Media.MediaRouter.GroupRouteInfo?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.CanDisconnect() -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Connect() -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ConnectionState.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ControlFilters.get -> System.Collections.Generic.IList<Android.Content.IntentFilter!>!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Description.get -> string?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DeviceType.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Disconnect() -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.DynamicGroupController.get -> AndroidX.MediaRouter.Media.MediaRouteProvider.DynamicGroupRouteController?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Extras.get -> Android.OS.Bundle?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IconUri.get -> Android.Net.Uri?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Id.get -> string!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsBluetooth.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsConnecting.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsDefault.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsDefaultOrBluetooth.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsDeviceSpeaker.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsEnabled.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsGroup.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsSelected.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.IsSystemRoute.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.MatchesSelector(AndroidX.MediaRouter.Media.MediaRouteSelector! selector) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.MediaRouteDescriptor.get -> AndroidX.MediaRouter.Media.MediaRouteDescriptor?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Name.get -> string!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackStream.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PlaybackType.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PresentationDisplay.get -> Android.Views.Display?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.PresentationDisplayId.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Provider.get -> AndroidX.MediaRouter.Media.MediaRouter.ProviderInfo!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.ProviderInstance.get -> AndroidX.MediaRouter.Media.MediaRouteProvider!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.RequestSetVolume(int volume) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.RequestUpdateVolume(int delta) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Select() -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Select(bool syncMediaRoute1Provider) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SelectedRoutesInGroup.get -> System.Collections.Generic.IList<AndroidX.MediaRouter.Media.MediaRouter.RouteInfo!>!
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SendControlRequest(Android.Content.Intent! intent, AndroidX.MediaRouter.Media.MediaRouter.ControlRequestCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SettingsIntent.get -> Android.Content.IntentSender?
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SupportsControlAction(string! category, string! action) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SupportsControlCategory(string! category) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.SupportsControlRequest(Android.Content.Intent! intent) -> bool
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.Volume.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.VolumeHandling.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouter.RouteInfo.VolumeMax.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouterParams.DialogType.get -> int
virtual AndroidX.MediaRouter.Media.MediaRouterParams.Extras.get -> Android.OS.Bundle!
virtual AndroidX.MediaRouter.Media.MediaRouterParams.IsMediaTransferReceiverEnabled.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouterParams.IsMediaTransferRestrictedToSelfProviders.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouterParams.IsOutputSwitcherEnabled.get -> bool
virtual AndroidX.MediaRouter.Media.MediaRouterParams.IsTransferToLocalEnabled.get -> bool
virtual AndroidX.MediaRouter.Media.RemoteControlClientCompat.RemoteControlClient.get -> Android.Media.RemoteControlClient?
virtual AndroidX.MediaRouter.Media.RemoteControlClientCompat.SetPlaybackInfo(AndroidX.MediaRouter.Media.RemoteControlClientCompat.PlaybackInfo? info) -> void
virtual AndroidX.MediaRouter.Media.RemoteControlClientCompat.SetVolumeCallback(AndroidX.MediaRouter.Media.RemoteControlClientCompat.IVolumeCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.ActionCallback.OnError(string? error, int code, Android.OS.Bundle? data) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.EndSession(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Enqueue(Android.Net.Uri! contentUri, string? mimeType, Android.OS.Bundle? metadata, long positionMillis, Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.GetSessionStatus(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.GetStatus(string! itemId, Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.HasSession.get -> bool
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.IsMessagingSupported.get -> bool
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.IsQueuingSupported.get -> bool
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.IsRemotePlaybackSupported.get -> bool
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.IsSessionManagementSupported.get -> bool
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback.OnResult(Android.OS.Bundle! data, string! sessionId, AndroidX.MediaRouter.Media.MediaSessionStatus? sessionStatus, string! itemId, AndroidX.MediaRouter.Media.MediaItemStatus! itemStatus) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Pause(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Play(Android.Net.Uri! contentUri, string? mimeType, Android.OS.Bundle? metadata, long positionMillis, Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Release() -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Remove(string! itemId, Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Resume(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Seek(string! itemId, long positionMillis, Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.ItemActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SendMessage(Android.OS.Bundle? message, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback.OnResult(Android.OS.Bundle! data, string! sessionId, AndroidX.MediaRouter.Media.MediaSessionStatus? sessionStatus) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionId.get -> string?
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionId.set -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SetOnMessageReceivedListener(AndroidX.MediaRouter.Media.RemotePlaybackClient.IOnMessageReceivedListener? listener) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.SetStatusCallback(AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.StartSession(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.OnItemStatusChanged(Android.OS.Bundle? data, string! sessionId, AndroidX.MediaRouter.Media.MediaSessionStatus? sessionStatus, string! itemId, AndroidX.MediaRouter.Media.MediaItemStatus! itemStatus) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.OnSessionChanged(string? sessionId) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.StatusCallback.OnSessionStatusChanged(Android.OS.Bundle? data, string! sessionId, AndroidX.MediaRouter.Media.MediaSessionStatus? sessionStatus) -> void
virtual AndroidX.MediaRouter.Media.RemotePlaybackClient.Stop(Android.OS.Bundle? extras, AndroidX.MediaRouter.Media.RemotePlaybackClient.SessionActionCallback? callback) -> void
