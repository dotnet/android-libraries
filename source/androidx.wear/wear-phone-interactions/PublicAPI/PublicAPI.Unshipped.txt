#nullable enable
Android.Support.Wearable.Authentication.AuthenticationRequestCallback
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackConsts
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.AuthenticationRequestCallbackDefault() -> void
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.AuthenticationRequestCallbackDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.InterfaceConsts
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.AuthenticationRequestCallbackStub() -> void
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.AuthenticationRequestCallbackStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.InterfaceConsts
Android.Support.Wearable.Authentication.AuthenticationRequestService
Android.Support.Wearable.Authentication.AuthenticationRequestServiceConsts
Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault
Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.AuthenticationRequestServiceDefault() -> void
Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.AuthenticationRequestServiceDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.InterfaceConsts
Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub
Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.AuthenticationRequestServiceStub() -> void
Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.AuthenticationRequestServiceStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.InterfaceConsts
Android.Support.Wearable.Authentication.IAuthenticationRequestCallback
Android.Support.Wearable.Authentication.IAuthenticationRequestCallback.ApiVersion.get -> int
Android.Support.Wearable.Authentication.IAuthenticationRequestCallback.Descriptor.get -> string?
Android.Support.Wearable.Authentication.IAuthenticationRequestCallback.OnResult(Android.OS.Bundle? p0) -> void
Android.Support.Wearable.Authentication.IAuthenticationRequestService
Android.Support.Wearable.Authentication.IAuthenticationRequestService.ApiVersion.get -> int
Android.Support.Wearable.Authentication.IAuthenticationRequestService.Descriptor.get -> string?
Android.Support.Wearable.Authentication.IAuthenticationRequestService.OpenUrl(Android.OS.Bundle? p0, Android.Support.Wearable.Authentication.IAuthenticationRequestCallback? p1) -> void
Android.Support.Wearable.Notifications.BridgingManagerService
Android.Support.Wearable.Notifications.BridgingManagerServiceConsts
Android.Support.Wearable.Notifications.BridgingManagerServiceDefault
Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.BridgingManagerServiceDefault() -> void
Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.BridgingManagerServiceDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.InterfaceConsts
Android.Support.Wearable.Notifications.BridgingManagerServiceStub
Android.Support.Wearable.Notifications.BridgingManagerServiceStub.BridgingManagerServiceStub() -> void
Android.Support.Wearable.Notifications.BridgingManagerServiceStub.BridgingManagerServiceStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Notifications.BridgingManagerServiceStub.InterfaceConsts
Android.Support.Wearable.Notifications.IBridgingManagerService
Android.Support.Wearable.Notifications.IBridgingManagerService.ApiVersion.get -> int
Android.Support.Wearable.Notifications.IBridgingManagerService.Descriptor.get -> string?
Android.Support.Wearable.Notifications.IBridgingManagerService.SetBridgingConfig(Android.OS.Bundle? p0) -> void
AndroidX.Wear.Phone.Interactions.Authentication.CodeChallenge
AndroidX.Wear.Phone.Interactions.Authentication.CodeChallenge.CodeChallenge(AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier! codeVerifier) -> void
AndroidX.Wear.Phone.Interactions.Authentication.CodeChallenge.Value.get -> string!
AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier
AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier.CodeVerifier() -> void
AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier.CodeVerifier(int byteLength) -> void
AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier.CodeVerifier(string! value) -> void
AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier.Value.get -> string!
AndroidX.Wear.Phone.Interactions.Authentication.IRemoteAuthRequestHandler
AndroidX.Wear.Phone.Interactions.Authentication.IRemoteAuthRequestHandler.IsAuthSupported.get -> bool
AndroidX.Wear.Phone.Interactions.Authentication.IRemoteAuthRequestHandler.SendAuthRequest(AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest! request, Kotlin.Pair! packageNameAndRequestId) -> void
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.Build() -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.Builder(Android.Content.Context! context) -> void
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.SetAuthProviderUrl(Android.Net.Uri! authProviderUrl) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.SetClientId(string! clientId) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.SetCodeChallenge(AndroidX.Wear.Phone.Interactions.Authentication.CodeChallenge! codeChallenge) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.SetRedirectUrl(Android.Net.Uri! redirectUrl) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Companion
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.PackageName.get -> string!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.RedirectUrl.get -> string!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.RequestUrl.get -> Android.Net.Uri!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder.Build() -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder.Builder() -> void
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder.SetErrorCode(int errorCode) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder.SetResponseUrl(Android.Net.Uri! responseUrl) -> AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder!
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.ErrorCode.get -> int
AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.ResponseUrl.get -> Android.Net.Uri?
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.AvailabilityStatus.get -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.Callback() -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Close() -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Companion
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Companion.Create(Android.Content.Context! context) -> AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient!
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Companion.IErrorCode
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.SendAuthorizationRequest(AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest! request, Java.Util.Concurrent.IExecutor! executor, AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback! clientCallback) -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.Companion
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.Companion.SendResponseToCallback(AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse! response, Kotlin.Pair! packageNameAndRequestId) -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.OnBind(Android.Content.Intent! intent, AndroidX.Wear.Phone.Interactions.Authentication.IRemoteAuthRequestHandler! remoteAuthRequestHandler) -> Android.OS.IBinder!
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.RemoteAuthService() -> void
AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.RemoteAuthService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder.AddExcludedTag(string! tag) -> AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder!
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder.AddExcludedTags(System.Collections.Generic.ICollection<string!>! tags) -> AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder!
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder.Build() -> AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig!
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder.Builder(Android.Content.Context! context, bool isBridgingEnabled) -> void
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.ExcludedTags.get -> System.Collections.Generic.ICollection<string!>?
AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.IsBridgingEnabled.get -> bool
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.Companion
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.Companion.FromContext(Android.Content.Context! context) -> AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager!
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.SetConfig(AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig! bridgingConfig) -> void
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManagerService
AndroidX.Wear.Phone.Interactions.Notifications.BridgingManagerService.BridgingManagerService(Android.Content.Context! context, AndroidX.Wear.Phone.Interactions.Notifications.IBridgingConfigurationHandler! bridgingConfigurationHandler) -> void
AndroidX.Wear.Phone.Interactions.Notifications.IBridgingConfigurationHandler
AndroidX.Wear.Phone.Interactions.Notifications.IBridgingConfigurationHandler.ApplyBridgingConfiguration(AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig! bridgingConfig) -> void
AndroidX.Wear.Phone.Interactions.PhoneTypeHelper
AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.Companion
AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.Companion.GetPhoneDeviceType(Android.Content.Context! context) -> int
AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.Companion.IDeviceFamily
abstract Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.ApiVersion.get -> int
abstract Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.OnResult(Android.OS.Bundle? p0) -> void
abstract Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.ApiVersion.get -> int
abstract Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.OpenUrl(Android.OS.Bundle? p0, Android.Support.Wearable.Authentication.IAuthenticationRequestCallback? p1) -> void
abstract Android.Support.Wearable.Notifications.BridgingManagerServiceStub.ApiVersion.get -> int
abstract Android.Support.Wearable.Notifications.BridgingManagerServiceStub.SetBridgingConfig(Android.OS.Bundle? p0) -> void
abstract AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.OnAuthorizationError(AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest! request, int errorCode) -> void
abstract AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.OnAuthorizationResponse(AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest! request, AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse! response) -> void
const AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.RedirectUriKey = "redirect_uri" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.WearRedirectUrlPrefix = "https://wear.googleapis.com/3p_auth/" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.WearRedirectUrlPrefixCn = "https://wear.googleapis-cn.com/3p_auth/" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.ActionAuth = "android.support.wearable.authentication.action.OAUTH" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.ErrorPhoneUnavailable = 1 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.ErrorUnsupported = 0 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.KeyErrorCode = "errorCode" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.KeyPackageName = "packageName" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.KeyRequestUrl = "requestUrl" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.KeyResponseUrl = "responseUrl" -> string!
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.NoError = -1 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.StatusAvailable = 3 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.StatusTemporarilyUnavailable = 2 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.StatusUnavailable = 1 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.StatusUnknown = 0 -> int
const AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.WearablePackageName = "com.google.android.wearable.app" -> string!
const AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.ActionBindBridgingManager = "android.support.wearable.notifications.action.BIND_BRIDGING_MANAGER" -> string!
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.AndroidMode = 1 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.BluetoothMode = "bluetooth_mode" -> string!
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.DeviceTypeAndroid = 1 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.DeviceTypeError = 0 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.DeviceTypeIos = 2 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.DeviceTypeNone = 4 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.DeviceTypeUnknown = 3 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.IosMode = 2 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.NonePairedMode = 3 -> int
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.PairedDeviceOsType = "paired_device_os_type" -> string!
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.SettingsAuthority = "com.google.android.wearable.settings" -> string!
const AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.UnknownMode = 0 -> int
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Notifications.BridgingManagerServiceStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Notifications.BridgingManagerServiceStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Notifications.BridgingManagerServiceStub.ThresholdType.get -> System.Type!
override AndroidX.Wear.Phone.Interactions.Authentication.CodeChallenge.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.CodeVerifier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.OAuthRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.ThresholdClass.get -> nint
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Callback.ThresholdType.get -> System.Type!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.ThresholdClass.get -> nint
override AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.ThresholdType.get -> System.Type!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingManagerService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.Notifications.BridgingManagerService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Android.Support.Wearable.Authentication.AuthenticationRequestCallback.Descriptor.get -> string?
static Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.InterfaceConsts.Descriptor.get -> string?
static Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Authentication.IAuthenticationRequestCallback?
static Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.InterfaceConsts.Descriptor.get -> string?
static Android.Support.Wearable.Authentication.AuthenticationRequestService.Descriptor.get -> string?
static Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.InterfaceConsts.Descriptor.get -> string?
static Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Authentication.IAuthenticationRequestService?
static Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.InterfaceConsts.Descriptor.get -> string?
static Android.Support.Wearable.Notifications.BridgingManagerService.Descriptor.get -> string?
static Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.InterfaceConsts.Descriptor.get -> string?
static Android.Support.Wearable.Notifications.BridgingManagerServiceStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Notifications.IBridgingManagerService?
static Android.Support.Wearable.Notifications.BridgingManagerServiceStub.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient.Create(Android.Content.Context! context) -> AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthClient!
static AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.SendResponseToCallback(AndroidX.Wear.Phone.Interactions.Authentication.OAuthResponse! response, Kotlin.Pair! packageNameAndRequestId) -> void
static AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager.FromContext(Android.Content.Context! context) -> AndroidX.Wear.Phone.Interactions.Notifications.BridgingManager!
static AndroidX.Wear.Phone.Interactions.PhoneTypeHelper.GetPhoneDeviceType(Android.Content.Context! context) -> int
virtual Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.ApiVersion.get -> int
virtual Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Authentication.AuthenticationRequestCallbackDefault.OnResult(Android.OS.Bundle? result) -> void
virtual Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Authentication.AuthenticationRequestCallbackStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.ApiVersion.get -> int
virtual Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Authentication.AuthenticationRequestServiceDefault.OpenUrl(Android.OS.Bundle? request, Android.Support.Wearable.Authentication.IAuthenticationRequestCallback? authenticationRequestCallback) -> void
virtual Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Authentication.AuthenticationRequestServiceStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.ApiVersion.get -> int
virtual Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Notifications.BridgingManagerServiceDefault.SetBridgingConfig(Android.OS.Bundle? bridgingConfig) -> void
virtual Android.Support.Wearable.Notifications.BridgingManagerServiceStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Notifications.BridgingManagerServiceStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Wear.Phone.Interactions.Authentication.RemoteAuthService.VerifyPackageName(Android.Content.Context! context, string? requestPackageName) -> bool
