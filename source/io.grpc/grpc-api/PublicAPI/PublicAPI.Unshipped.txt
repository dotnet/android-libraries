#nullable enable
Xamarin.Grpc.Attributes
Xamarin.Grpc.Attributes.Builder
Xamarin.Grpc.Attributes.Builder.Build() -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Attributes.Builder.Discard(Xamarin.Grpc.Attributes.Key? key) -> Xamarin.Grpc.Attributes.Builder?
Xamarin.Grpc.Attributes.Builder.Set(Xamarin.Grpc.Attributes.Key? key, Java.Lang.Object? value) -> Xamarin.Grpc.Attributes.Builder?
Xamarin.Grpc.Attributes.Builder.SetAll(Xamarin.Grpc.Attributes? other) -> Xamarin.Grpc.Attributes.Builder?
Xamarin.Grpc.Attributes.Get(Xamarin.Grpc.Attributes.Key? key) -> Java.Lang.Object?
Xamarin.Grpc.Attributes.Key
Xamarin.Grpc.Attributes.Keys() -> System.Collections.Generic.ICollection<Xamarin.Grpc.Attributes.Key!>?
Xamarin.Grpc.Attributes.ToBuilder() -> Xamarin.Grpc.Attributes.Builder?
Xamarin.Grpc.BinaryLog
Xamarin.Grpc.BinaryLog.BinaryLog() -> void
Xamarin.Grpc.BinaryLog.BinaryLog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.CallCredentials
Xamarin.Grpc.CallCredentials.CallCredentials() -> void
Xamarin.Grpc.CallCredentials.CallCredentials(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.CallCredentials.MetadataApplier
Xamarin.Grpc.CallCredentials.MetadataApplier.MetadataApplier() -> void
Xamarin.Grpc.CallCredentials.MetadataApplier.MetadataApplier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.CallCredentials.RequestInfo
Xamarin.Grpc.CallCredentials.RequestInfo.RequestInfo() -> void
Xamarin.Grpc.CallCredentials.RequestInfo.RequestInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.CallOptions
Xamarin.Grpc.CallOptions.Authority.get -> string?
Xamarin.Grpc.CallOptions.ClearOnReadyThreshold() -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.Compressor.get -> string?
Xamarin.Grpc.CallOptions.Credentials.get -> Xamarin.Grpc.CallCredentials?
Xamarin.Grpc.CallOptions.Deadline.get -> Xamarin.Grpc.Deadline?
Xamarin.Grpc.CallOptions.Executor.get -> Java.Util.Concurrent.IExecutor?
Xamarin.Grpc.CallOptions.GetOption(Xamarin.Grpc.CallOptions.Key? key) -> Java.Lang.Object?
Xamarin.Grpc.CallOptions.IsWaitForReady.get -> bool
Xamarin.Grpc.CallOptions.Key
Xamarin.Grpc.CallOptions.Key.Default.get -> Java.Lang.Object?
Xamarin.Grpc.CallOptions.MaxInboundMessageSize.get -> Java.Lang.Integer?
Xamarin.Grpc.CallOptions.MaxOutboundMessageSize.get -> Java.Lang.Integer?
Xamarin.Grpc.CallOptions.OnReadyThreshold.get -> Java.Lang.Integer?
Xamarin.Grpc.CallOptions.StreamTracerFactories.get -> System.Collections.Generic.IList<Xamarin.Grpc.ClientStreamTracer.Factory!>?
Xamarin.Grpc.CallOptions.WithAuthority(string? authority) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithCallCredentials(Xamarin.Grpc.CallCredentials? credentials) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithCompression(string? compressorName) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithDeadline(Xamarin.Grpc.Deadline? deadline) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithDeadlineAfter(Java.Time.Duration? duration) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithDeadlineAfter(long duration, Java.Util.Concurrent.TimeUnit? unit) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithExecutor(Java.Util.Concurrent.IExecutor? executor) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithMaxInboundMessageSize(int maxSize) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithMaxOutboundMessageSize(int maxSize) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithOnReadyThreshold(int numBytes) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithOption(Xamarin.Grpc.CallOptions.Key? key, Java.Lang.Object? value) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithStreamTracerFactory(Xamarin.Grpc.ClientStreamTracer.Factory? factory) -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithWaitForReady() -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.CallOptions.WithoutWaitForReady() -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.Channel
Xamarin.Grpc.Channel.Channel() -> void
Xamarin.Grpc.Channel.Channel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ChannelCredentials
Xamarin.Grpc.ChannelCredentials.ChannelCredentials() -> void
Xamarin.Grpc.ChannelCredentials.ChannelCredentials(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ChannelLogger
Xamarin.Grpc.ChannelLogger.ChannelLogLevel
Xamarin.Grpc.ChannelLogger.ChannelLogger() -> void
Xamarin.Grpc.ChannelLogger.ChannelLogger(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ChoiceChannelCredentials
Xamarin.Grpc.ChoiceChannelCredentials.CredentialsList.get -> System.Collections.Generic.IList<Xamarin.Grpc.ChannelCredentials!>?
Xamarin.Grpc.ChoiceServerCredentials
Xamarin.Grpc.ChoiceServerCredentials.CredentialsList.get -> System.Collections.Generic.IList<Xamarin.Grpc.ServerCredentials!>?
Xamarin.Grpc.ClientCall
Xamarin.Grpc.ClientCall.ClientCall() -> void
Xamarin.Grpc.ClientCall.ClientCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientCall.Listener
Xamarin.Grpc.ClientCall.Listener.Listener() -> void
Xamarin.Grpc.ClientCall.Listener.Listener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientInterceptors
Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall
Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.CheckedForwardingClientCall(Xamarin.Grpc.ClientCall? delegate) -> void
Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.CheckedForwardingClientCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientInterceptors.ClientInterceptors(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientStreamTracer
Xamarin.Grpc.ClientStreamTracer.ClientStreamTracer() -> void
Xamarin.Grpc.ClientStreamTracer.ClientStreamTracer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientStreamTracer.Factory
Xamarin.Grpc.ClientStreamTracer.Factory.Factory() -> void
Xamarin.Grpc.ClientStreamTracer.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ClientStreamTracer.StreamInfo
Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder
Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder.Build() -> Xamarin.Grpc.ClientStreamTracer.StreamInfo?
Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder.SetCallOptions(Xamarin.Grpc.CallOptions? callOptions) -> Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder?
Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder.SetIsTransparentRetry(bool isTransparentRetry) -> Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder?
Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder.SetPreviousAttempts(int previousAttempts) -> Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder?
Xamarin.Grpc.ClientStreamTracer.StreamInfo.CallOptions.get -> Xamarin.Grpc.CallOptions?
Xamarin.Grpc.ClientStreamTracer.StreamInfo.IsTransparentRetry.get -> bool
Xamarin.Grpc.ClientStreamTracer.StreamInfo.PreviousAttempts.get -> int
Xamarin.Grpc.ClientStreamTracer.StreamInfo.ToBuilder() -> Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder?
Xamarin.Grpc.ClientTransportFilter
Xamarin.Grpc.ClientTransportFilter.ClientTransportFilter() -> void
Xamarin.Grpc.ClientTransportFilter.ClientTransportFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.CodecGzip
Xamarin.Grpc.CodecGzip.CodecGzip() -> void
Xamarin.Grpc.CodecGzip.Compress(System.IO.Stream? os) -> System.IO.Stream?
Xamarin.Grpc.CodecGzip.Decompress(System.IO.Stream? is) -> System.IO.Stream?
Xamarin.Grpc.CodecGzip.MessageEncoding.get -> string?
Xamarin.Grpc.CodecIdentity
Xamarin.Grpc.CodecIdentity.Compress(System.IO.Stream? os) -> System.IO.Stream?
Xamarin.Grpc.CodecIdentity.Decompress(System.IO.Stream? is) -> System.IO.Stream?
Xamarin.Grpc.CompositeCallCredentials
Xamarin.Grpc.CompositeCallCredentials.CompositeCallCredentials(Xamarin.Grpc.CallCredentials? creds1, Xamarin.Grpc.CallCredentials? creds2) -> void
Xamarin.Grpc.CompositeChannelCredentials
Xamarin.Grpc.CompositeChannelCredentials.CallCredentials.get -> Xamarin.Grpc.CallCredentials?
Xamarin.Grpc.CompositeChannelCredentials.ChannelCredentials.get -> Xamarin.Grpc.ChannelCredentials?
Xamarin.Grpc.CompressorRegistry
Xamarin.Grpc.CompressorRegistry.LookupCompressor(string? compressorName) -> Xamarin.Grpc.ICompressor?
Xamarin.Grpc.CompressorRegistry.Register(Xamarin.Grpc.ICompressor? c) -> void
Xamarin.Grpc.ConnectivityState
Xamarin.Grpc.ConnectivityStateInfo
Xamarin.Grpc.ConnectivityStateInfo.State.get -> Xamarin.Grpc.ConnectivityState?
Xamarin.Grpc.ConnectivityStateInfo.Status.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.Context
Xamarin.Grpc.Context.CancellableContext
Xamarin.Grpc.Context.CancellableContext.Cancel(Java.Lang.Throwable? cause) -> bool
Xamarin.Grpc.Context.CancellableContext.Close() -> void
Xamarin.Grpc.Context.CancellableContext.DetachAndCancel(Xamarin.Grpc.Context? toAttach, Java.Lang.Throwable? cause) -> void
Xamarin.Grpc.Context.CancellableContext.IsCurrent.get -> bool
Xamarin.Grpc.Context.CancellableContext._1CancelOnExpiration
Xamarin.Grpc.Context.CancellableContext._1CancelOnExpiration.Run() -> void
Xamarin.Grpc.Context.CancellationEventArgs
Xamarin.Grpc.Context.CancellationEventArgs.CancellationEventArgs(Xamarin.Grpc.Context? p0) -> void
Xamarin.Grpc.Context.CancellationEventArgs.P0.get -> Xamarin.Grpc.Context?
Xamarin.Grpc.Context.Context(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Context.ICancellationListener
Xamarin.Grpc.Context.ICancellationListener.Cancelled(Xamarin.Grpc.Context? p0) -> void
Xamarin.Grpc.Context.Key
Xamarin.Grpc.Context.Key.Get() -> Java.Lang.Object?
Xamarin.Grpc.Context.Key.Get(Xamarin.Grpc.Context? context) -> Java.Lang.Object?
Xamarin.Grpc.Context.Storage
Xamarin.Grpc.Context.Storage.Storage() -> void
Xamarin.Grpc.Context.Storage.Storage(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Contexts
Xamarin.Grpc.Deadline
Xamarin.Grpc.Deadline.CompareTo(Java.Lang.Object? that) -> int
Xamarin.Grpc.Deadline.IsBefore(Xamarin.Grpc.Deadline? other) -> bool
Xamarin.Grpc.Deadline.IsExpired.get -> bool
Xamarin.Grpc.Deadline.Minimum(Xamarin.Grpc.Deadline? other) -> Xamarin.Grpc.Deadline?
Xamarin.Grpc.Deadline.Offset(long offset, Java.Util.Concurrent.TimeUnit? units) -> Xamarin.Grpc.Deadline?
Xamarin.Grpc.Deadline.RunOnExpiration(Java.Lang.IRunnable? task, Java.Util.Concurrent.IScheduledExecutorService? scheduler) -> Java.Util.Concurrent.IScheduledFuture?
Xamarin.Grpc.Deadline.Ticker
Xamarin.Grpc.Deadline.Ticker.Ticker() -> void
Xamarin.Grpc.Deadline.Ticker.Ticker(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Deadline.TimeRemaining(Java.Util.Concurrent.TimeUnit? unit) -> long
Xamarin.Grpc.DecompressorRegistry
Xamarin.Grpc.DecompressorRegistry.AdvertisedMessageEncodings.get -> System.Collections.Generic.ICollection<string!>?
Xamarin.Grpc.DecompressorRegistry.KnownMessageEncodings.get -> System.Collections.Generic.ICollection<string!>?
Xamarin.Grpc.DecompressorRegistry.LookupDecompressor(string? messageEncoding) -> Xamarin.Grpc.IDecompressor?
Xamarin.Grpc.DecompressorRegistry.With(Xamarin.Grpc.IDecompressor? d, bool advertised) -> Xamarin.Grpc.DecompressorRegistry?
Xamarin.Grpc.DoubleCounterMetricInstrument
Xamarin.Grpc.DoubleCounterMetricInstrument.Description.get -> string?
Xamarin.Grpc.DoubleCounterMetricInstrument.DoubleCounterMetricInstrument(int index, string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> void
Xamarin.Grpc.DoubleCounterMetricInstrument.GetOptionalLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.DoubleCounterMetricInstrument.GetRequiredLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.DoubleCounterMetricInstrument.Index.get -> int
Xamarin.Grpc.DoubleCounterMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.DoubleCounterMetricInstrument.Name.get -> string?
Xamarin.Grpc.DoubleCounterMetricInstrument.OptionalLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.DoubleCounterMetricInstrument.RequiredLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.DoubleCounterMetricInstrument.Unit.get -> string?
Xamarin.Grpc.DoubleHistogramMetricInstrument
Xamarin.Grpc.DoubleHistogramMetricInstrument.BucketBoundaries.get -> System.Collections.Generic.IList<Java.Lang.Double!>?
Xamarin.Grpc.DoubleHistogramMetricInstrument.Description.get -> string?
Xamarin.Grpc.DoubleHistogramMetricInstrument.DoubleHistogramMetricInstrument(int index, string? name, string? description, string? unit, System.Collections.Generic.IList<Java.Lang.Double!>? bucketBoundaries, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> void
Xamarin.Grpc.DoubleHistogramMetricInstrument.GetOptionalLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.DoubleHistogramMetricInstrument.GetRequiredLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.DoubleHistogramMetricInstrument.Index.get -> int
Xamarin.Grpc.DoubleHistogramMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.DoubleHistogramMetricInstrument.Name.get -> string?
Xamarin.Grpc.DoubleHistogramMetricInstrument.OptionalLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.DoubleHistogramMetricInstrument.RequiredLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.DoubleHistogramMetricInstrument.Unit.get -> string?
Xamarin.Grpc.EquivalentAddressGroup
Xamarin.Grpc.EquivalentAddressGroup.Addresses.get -> System.Collections.Generic.IList<Java.Net.SocketAddress!>?
Xamarin.Grpc.EquivalentAddressGroup.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.EquivalentAddressGroup.EquivalentAddressGroup(Java.Net.SocketAddress? addr) -> void
Xamarin.Grpc.EquivalentAddressGroup.EquivalentAddressGroup(Java.Net.SocketAddress? addr, Xamarin.Grpc.Attributes? attrs) -> void
Xamarin.Grpc.EquivalentAddressGroup.EquivalentAddressGroup(System.Collections.Generic.IList<Java.Net.SocketAddress!>? addrs) -> void
Xamarin.Grpc.EquivalentAddressGroup.EquivalentAddressGroup(System.Collections.Generic.IList<Java.Net.SocketAddress!>? addrs, Xamarin.Grpc.Attributes? attrs) -> void
Xamarin.Grpc.EquivalentAddressGroup.IAttr
Xamarin.Grpc.ExperimentalApiAttribute
Xamarin.Grpc.ExperimentalApiAttribute.ExperimentalApiAttribute() -> void
Xamarin.Grpc.ExperimentalApiAttribute.Value.get -> string?
Xamarin.Grpc.ExperimentalApiAttribute.Value.set -> void
Xamarin.Grpc.ForwardingChannelBuilder
Xamarin.Grpc.ForwardingChannelBuilder.ForwardingChannelBuilder() -> void
Xamarin.Grpc.ForwardingChannelBuilder.ForwardingChannelBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingChannelBuilder2
Xamarin.Grpc.ForwardingChannelBuilder2.ForwardingChannelBuilder2() -> void
Xamarin.Grpc.ForwardingChannelBuilder2.ForwardingChannelBuilder2(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingClientCall
Xamarin.Grpc.ForwardingClientCall.ForwardingClientCall() -> void
Xamarin.Grpc.ForwardingClientCall.ForwardingClientCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall
Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.SimpleForwardingClientCall(Xamarin.Grpc.ClientCall? delegate) -> void
Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.SimpleForwardingClientCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingClientCallListener
Xamarin.Grpc.ForwardingClientCallListener.ForwardingClientCallListener() -> void
Xamarin.Grpc.ForwardingClientCallListener.ForwardingClientCallListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener
Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.SimpleForwardingClientCallListener(Xamarin.Grpc.ClientCall.Listener? delegate) -> void
Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.SimpleForwardingClientCallListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingServerBuilder
Xamarin.Grpc.ForwardingServerBuilder.ForwardingServerBuilder() -> void
Xamarin.Grpc.ForwardingServerBuilder.ForwardingServerBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingServerCall
Xamarin.Grpc.ForwardingServerCall.ForwardingServerCall() -> void
Xamarin.Grpc.ForwardingServerCall.ForwardingServerCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall
Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.SimpleForwardingServerCall(Xamarin.Grpc.ServerCall? delegate) -> void
Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.SimpleForwardingServerCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingServerCallListener
Xamarin.Grpc.ForwardingServerCallListener.ForwardingServerCallListener() -> void
Xamarin.Grpc.ForwardingServerCallListener.ForwardingServerCallListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener
Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.SimpleForwardingServerCallListener(Xamarin.Grpc.ServerCall.Listener? delegate) -> void
Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.SimpleForwardingServerCallListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Grpc
Xamarin.Grpc.Grpc.ITransportAttr
Xamarin.Grpc.HandlerRegistry
Xamarin.Grpc.HandlerRegistry.HandlerRegistry() -> void
Xamarin.Grpc.HandlerRegistry.HandlerRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.HandlerRegistry.LookupMethod(string? methodName) -> Xamarin.Grpc.ServerMethodDefinition?
Xamarin.Grpc.HttpConnectProxiedSocketAddress
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.Build() -> Xamarin.Grpc.HttpConnectProxiedSocketAddress?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.SetPassword(string? password) -> Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.SetProxyAddress(Java.Net.SocketAddress? proxyAddress) -> Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.SetTargetAddress(Java.Net.InetSocketAddress? targetAddress) -> Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.SetUsername(string? username) -> Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Password.get -> string?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.ProxyAddress.get -> Java.Net.SocketAddress?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.TargetAddress.get -> Java.Net.InetSocketAddress?
Xamarin.Grpc.HttpConnectProxiedSocketAddress.Username.get -> string?
Xamarin.Grpc.IBindableService
Xamarin.Grpc.IBindableService.BindService() -> Xamarin.Grpc.ServerServiceDefinition?
Xamarin.Grpc.ICallbackMetricInstrument
Xamarin.Grpc.IClientInterceptor
Xamarin.Grpc.IClientInterceptor.InterceptCall(Xamarin.Grpc.MethodDescriptor? p0, Xamarin.Grpc.CallOptions? p1, Xamarin.Grpc.Channel? p2) -> Xamarin.Grpc.ClientCall?
Xamarin.Grpc.ICodec
Xamarin.Grpc.ICompressor
Xamarin.Grpc.ICompressor.Compress(System.IO.Stream? p0) -> System.IO.Stream?
Xamarin.Grpc.IDecompressor
Xamarin.Grpc.IDecompressor.Decompress(System.IO.Stream? p0) -> System.IO.Stream?
Xamarin.Grpc.IDetachable
Xamarin.Grpc.IDetachable.Detach() -> System.IO.Stream?
Xamarin.Grpc.IDrainable
Xamarin.Grpc.IDrainable.DrainTo(System.IO.Stream? p0) -> int
Xamarin.Grpc.IExperimentalApi
Xamarin.Grpc.IExperimentalApi.Value() -> string?
Xamarin.Grpc.IHasByteBuffer
Xamarin.Grpc.IHasByteBuffer.ByteBuffer.get -> Java.Nio.ByteBuffer?
Xamarin.Grpc.IHasByteBuffer.ByteBufferSupported() -> bool
Xamarin.Grpc.IKnownLength
Xamarin.Grpc.IKnownLength.Available() -> int
Xamarin.Grpc.IMetricInstrument
Xamarin.Grpc.IMetricInstrument.Description.get -> string?
Xamarin.Grpc.IMetricInstrument.Index.get -> int
Xamarin.Grpc.IMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.IMetricInstrument.Name.get -> string?
Xamarin.Grpc.IMetricInstrument.OptionalLabelKeys.get -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.IMetricInstrument.RequiredLabelKeys.get -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.IMetricInstrument.Unit.get -> string?
Xamarin.Grpc.IMetricRecorder
Xamarin.Grpc.IMetricRecorder.AddDoubleCounter(Xamarin.Grpc.DoubleCounterMetricInstrument? metricInstrument, double value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricRecorder.AddLongCounter(Xamarin.Grpc.LongCounterMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricRecorder.RecordDoubleHistogram(Xamarin.Grpc.DoubleHistogramMetricInstrument? metricInstrument, double value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricRecorder.RecordLongHistogram(Xamarin.Grpc.LongHistogramMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricRecorder.RegisterBatchCallback(Xamarin.Grpc.IMetricRecorderBatchCallback? callback, params Xamarin.Grpc.ICallbackMetricInstrument![]? metricInstruments) -> Xamarin.Grpc.IMetricRecorderRegistration?
Xamarin.Grpc.IMetricRecorderBatchCallback
Xamarin.Grpc.IMetricRecorderBatchCallback.Accept(Xamarin.Grpc.IMetricRecorderBatchRecorder? p0) -> void
Xamarin.Grpc.IMetricRecorderBatchRecorder
Xamarin.Grpc.IMetricRecorderBatchRecorder.RecordLongGauge(Xamarin.Grpc.LongGaugeMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricRecorderRegistration
Xamarin.Grpc.IMetricRecorderRegistration.Close() -> void
Xamarin.Grpc.IMetricSink
Xamarin.Grpc.IMetricSink.AddDoubleCounter(Xamarin.Grpc.DoubleCounterMetricInstrument? metricInstrument, double value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricSink.AddLongCounter(Xamarin.Grpc.LongCounterMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricSink.EnabledMetrics.get -> System.Collections.Generic.IDictionary<string!, Java.Lang.Boolean!>?
Xamarin.Grpc.IMetricSink.MeasuresSize.get -> int
Xamarin.Grpc.IMetricSink.OptionalLabels.get -> System.Collections.Generic.ICollection<string!>?
Xamarin.Grpc.IMetricSink.RecordDoubleHistogram(Xamarin.Grpc.DoubleHistogramMetricInstrument? metricInstrument, double value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricSink.RecordLongGauge(Xamarin.Grpc.LongGaugeMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricSink.RecordLongHistogram(Xamarin.Grpc.LongHistogramMetricInstrument? metricInstrument, long value, System.Collections.Generic.IList<string!>? requiredLabelValues, System.Collections.Generic.IList<string!>? optionalLabelValues) -> void
Xamarin.Grpc.IMetricSink.RegisterBatchCallback(Java.Lang.IRunnable? callback, params Xamarin.Grpc.ICallbackMetricInstrument![]? metricInstruments) -> Xamarin.Grpc.IMetricSinkRegistration?
Xamarin.Grpc.IMetricSink.UpdateMeasures(System.Collections.Generic.IList<Xamarin.Grpc.IMetricInstrument!>? p0) -> void
Xamarin.Grpc.IMetricSinkRegistration
Xamarin.Grpc.IProxyDetector
Xamarin.Grpc.IProxyDetector.ProxyFor(Java.Net.SocketAddress? p0) -> Xamarin.Grpc.ProxiedSocketAddress?
Xamarin.Grpc.IServerCallExecutorSupplier
Xamarin.Grpc.IServerCallExecutorSupplier.GetExecutor(Xamarin.Grpc.ServerCall? p0, Xamarin.Grpc.Metadata? p1) -> Java.Util.Concurrent.IExecutor?
Xamarin.Grpc.IServerCallHandler
Xamarin.Grpc.IServerCallHandler.StartCall(Xamarin.Grpc.ServerCall? p0, Xamarin.Grpc.Metadata? p1) -> Xamarin.Grpc.ServerCall.Listener?
Xamarin.Grpc.IServerInterceptor
Xamarin.Grpc.IServerInterceptor.InterceptCall(Xamarin.Grpc.ServerCall? p0, Xamarin.Grpc.Metadata? p1, Xamarin.Grpc.IServerCallHandler? p2) -> Xamarin.Grpc.ServerCall.Listener?
Xamarin.Grpc.InsecureChannelCredentials
Xamarin.Grpc.InsecureServerCredentials
Xamarin.Grpc.LoadBalancer
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Addresses.get -> System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.AddOption(Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key? key, Java.Lang.Object? value) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.Build() -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.SetAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? addrs) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.SetAddresses(Xamarin.Grpc.EquivalentAddressGroup? addrs) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.SetAttributes(Xamarin.Grpc.Attributes? attrs) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.GetOption(Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key? key) -> Java.Lang.Object?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key.Default.get -> Java.Lang.Object?
Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.ToBuilder() -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
Xamarin.Grpc.LoadBalancer.ErrorPicker
Xamarin.Grpc.LoadBalancer.ErrorPicker.ErrorPicker(Xamarin.Grpc.Status? error) -> void
Xamarin.Grpc.LoadBalancer.Factory
Xamarin.Grpc.LoadBalancer.Factory.Factory() -> void
Xamarin.Grpc.LoadBalancer.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.FixedResultPicker
Xamarin.Grpc.LoadBalancer.FixedResultPicker.FixedResultPicker(Xamarin.Grpc.LoadBalancer.PickResult? result) -> void
Xamarin.Grpc.LoadBalancer.Helper
Xamarin.Grpc.LoadBalancer.Helper.Helper() -> void
Xamarin.Grpc.LoadBalancer.Helper.Helper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.IPickDetailsConsumer
Xamarin.Grpc.LoadBalancer.IPickDetailsConsumer.AddOptionalLabel(string? key, string? value) -> void
Xamarin.Grpc.LoadBalancer.ISubchannelStateListener
Xamarin.Grpc.LoadBalancer.ISubchannelStateListener.OnSubchannelState(Xamarin.Grpc.ConnectivityStateInfo? p0) -> void
Xamarin.Grpc.LoadBalancer.LoadBalancer() -> void
Xamarin.Grpc.LoadBalancer.LoadBalancer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.PickResult
Xamarin.Grpc.LoadBalancer.PickResult.AuthorityOverride.get -> string?
Xamarin.Grpc.LoadBalancer.PickResult.HasResult.get -> bool
Xamarin.Grpc.LoadBalancer.PickResult.IsDrop.get -> bool
Xamarin.Grpc.LoadBalancer.PickResult.Status.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.LoadBalancer.PickResult.StreamTracerFactory.get -> Xamarin.Grpc.ClientStreamTracer.Factory?
Xamarin.Grpc.LoadBalancer.PickResult.Subchannel.get -> Xamarin.Grpc.LoadBalancer.Subchannel?
Xamarin.Grpc.LoadBalancer.PickSubchannelArgs
Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.PickSubchannelArgs() -> void
Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.PickSubchannelArgs(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.ResolvedAddresses
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Addresses.get -> System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder.Build() -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder.SetAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? addresses) -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder.SetAttributes(Xamarin.Grpc.Attributes? attributes) -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder.SetLoadBalancingPolicyConfig(Java.Lang.Object? loadBalancingPolicyConfig) -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.LoadBalancingPolicyConfig.get -> Java.Lang.Object?
Xamarin.Grpc.LoadBalancer.ResolvedAddresses.ToBuilder() -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder?
Xamarin.Grpc.LoadBalancer.Subchannel
Xamarin.Grpc.LoadBalancer.Subchannel.Addresses.get -> Xamarin.Grpc.EquivalentAddressGroup?
Xamarin.Grpc.LoadBalancer.Subchannel.Subchannel() -> void
Xamarin.Grpc.LoadBalancer.Subchannel.Subchannel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.SubchannelPicker
Xamarin.Grpc.LoadBalancer.SubchannelPicker.SubchannelPicker() -> void
Xamarin.Grpc.LoadBalancer.SubchannelPicker.SubchannelPicker(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancer.SubchannelStateEventArgs
Xamarin.Grpc.LoadBalancer.SubchannelStateEventArgs.P0.get -> Xamarin.Grpc.ConnectivityStateInfo?
Xamarin.Grpc.LoadBalancer.SubchannelStateEventArgs.SubchannelStateEventArgs(Xamarin.Grpc.ConnectivityStateInfo? p0) -> void
Xamarin.Grpc.LoadBalancerProvider
Xamarin.Grpc.LoadBalancerProvider.LoadBalancerProvider() -> void
Xamarin.Grpc.LoadBalancerProvider.LoadBalancerProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.LoadBalancerRegistry
Xamarin.Grpc.LoadBalancerRegistry.Deregister(Xamarin.Grpc.LoadBalancerProvider? provider) -> void
Xamarin.Grpc.LoadBalancerRegistry.GetProvider(string? policy) -> Xamarin.Grpc.LoadBalancerProvider?
Xamarin.Grpc.LoadBalancerRegistry.LoadBalancerRegistry() -> void
Xamarin.Grpc.LoadBalancerRegistry.Register(Xamarin.Grpc.LoadBalancerProvider? provider) -> void
Xamarin.Grpc.LongCounterMetricInstrument
Xamarin.Grpc.LongCounterMetricInstrument.Description.get -> string?
Xamarin.Grpc.LongCounterMetricInstrument.GetOptionalLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongCounterMetricInstrument.GetRequiredLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongCounterMetricInstrument.Index.get -> int
Xamarin.Grpc.LongCounterMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.LongCounterMetricInstrument.LongCounterMetricInstrument(int index, string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> void
Xamarin.Grpc.LongCounterMetricInstrument.Name.get -> string?
Xamarin.Grpc.LongCounterMetricInstrument.OptionalLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongCounterMetricInstrument.RequiredLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongCounterMetricInstrument.Unit.get -> string?
Xamarin.Grpc.LongGaugeMetricInstrument
Xamarin.Grpc.LongGaugeMetricInstrument.Description.get -> string?
Xamarin.Grpc.LongGaugeMetricInstrument.GetOptionalLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongGaugeMetricInstrument.GetRequiredLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongGaugeMetricInstrument.Index.get -> int
Xamarin.Grpc.LongGaugeMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.LongGaugeMetricInstrument.LongGaugeMetricInstrument(int index, string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> void
Xamarin.Grpc.LongGaugeMetricInstrument.Name.get -> string?
Xamarin.Grpc.LongGaugeMetricInstrument.OptionalLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongGaugeMetricInstrument.RequiredLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongGaugeMetricInstrument.Unit.get -> string?
Xamarin.Grpc.LongHistogramMetricInstrument
Xamarin.Grpc.LongHistogramMetricInstrument.BucketBoundaries.get -> System.Collections.Generic.IList<Java.Lang.Long!>?
Xamarin.Grpc.LongHistogramMetricInstrument.Description.get -> string?
Xamarin.Grpc.LongHistogramMetricInstrument.GetOptionalLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongHistogramMetricInstrument.GetRequiredLabelKeys() -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.LongHistogramMetricInstrument.Index.get -> int
Xamarin.Grpc.LongHistogramMetricInstrument.IsEnableByDefault.get -> bool
Xamarin.Grpc.LongHistogramMetricInstrument.LongHistogramMetricInstrument(int index, string? name, string? description, string? unit, System.Collections.Generic.IList<Java.Lang.Long!>? bucketBoundaries, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> void
Xamarin.Grpc.LongHistogramMetricInstrument.Name.get -> string?
Xamarin.Grpc.LongHistogramMetricInstrument.OptionalLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongHistogramMetricInstrument.RequiredLabelKeys.get -> System.Collections.IList?
Xamarin.Grpc.LongHistogramMetricInstrument.Unit.get -> string?
Xamarin.Grpc.ManagedChannel
Xamarin.Grpc.ManagedChannel.ManagedChannel() -> void
Xamarin.Grpc.ManagedChannel.ManagedChannel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ManagedChannelBuilder
Xamarin.Grpc.ManagedChannelBuilder.IInterceptorFactory
Xamarin.Grpc.ManagedChannelBuilder.IInterceptorFactory.NewInterceptor(string? p0) -> Xamarin.Grpc.IClientInterceptor?
Xamarin.Grpc.ManagedChannelBuilder.ManagedChannelBuilder() -> void
Xamarin.Grpc.ManagedChannelBuilder.ManagedChannelBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ManagedChannelProvider
Xamarin.Grpc.ManagedChannelProvider.ManagedChannelProvider() -> void
Xamarin.Grpc.ManagedChannelProvider.ManagedChannelProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult
Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult.ChannelBuilder.get -> Xamarin.Grpc.ManagedChannelBuilder?
Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult.Error.get -> string?
Xamarin.Grpc.ManagedChannelProvider.ProviderNotFoundException
Xamarin.Grpc.ManagedChannelProvider.ProviderNotFoundException.ProviderNotFoundException(string? msg) -> void
Xamarin.Grpc.ManagedChannelRegistry
Xamarin.Grpc.ManagedChannelRegistry.Deregister(Xamarin.Grpc.ManagedChannelProvider? provider) -> void
Xamarin.Grpc.ManagedChannelRegistry.ManagedChannelRegistry() -> void
Xamarin.Grpc.ManagedChannelRegistry.ProviderNotFoundException
Xamarin.Grpc.ManagedChannelRegistry.ProviderNotFoundException.ProviderNotFoundException(string? msg) -> void
Xamarin.Grpc.ManagedChannelRegistry.Register(Xamarin.Grpc.ManagedChannelProvider? provider) -> void
Xamarin.Grpc.Metadata
Xamarin.Grpc.Metadata.ContainsKey(Xamarin.Grpc.Metadata.Key? key) -> bool
Xamarin.Grpc.Metadata.DiscardAll(Xamarin.Grpc.Metadata.Key? key) -> void
Xamarin.Grpc.Metadata.Get(Xamarin.Grpc.Metadata.Key? key) -> Java.Lang.Object?
Xamarin.Grpc.Metadata.GetAll(Xamarin.Grpc.Metadata.Key? key) -> Java.Lang.IIterable?
Xamarin.Grpc.Metadata.IAsciiMarshaller
Xamarin.Grpc.Metadata.IAsciiMarshaller.ParseAsciiString(string? p0) -> Java.Lang.Object?
Xamarin.Grpc.Metadata.IAsciiMarshaller.ToAsciiString(Java.Lang.Object? p0) -> string?
Xamarin.Grpc.Metadata.IBinaryMarshaller
Xamarin.Grpc.Metadata.IBinaryMarshaller.ParseBytes(byte[]? p0) -> Java.Lang.Object?
Xamarin.Grpc.Metadata.IBinaryMarshaller.ToBytes(Java.Lang.Object? p0) -> byte[]?
Xamarin.Grpc.Metadata.IBinaryStreamMarshaller
Xamarin.Grpc.Metadata.IBinaryStreamMarshaller.ParseStream(System.IO.Stream? p0) -> Java.Lang.Object?
Xamarin.Grpc.Metadata.IBinaryStreamMarshaller.ToStream(Java.Lang.Object? p0) -> System.IO.Stream?
Xamarin.Grpc.Metadata.Key
Xamarin.Grpc.Metadata.Key.Key(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Metadata.Key.Name() -> string?
Xamarin.Grpc.Metadata.Key.OriginalName() -> string?
Xamarin.Grpc.Metadata.Keys() -> System.Collections.Generic.ICollection<string!>?
Xamarin.Grpc.Metadata.Merge(Xamarin.Grpc.Metadata? other) -> void
Xamarin.Grpc.Metadata.Merge(Xamarin.Grpc.Metadata? other, System.Collections.Generic.ICollection<Xamarin.Grpc.Metadata.Key!>? keys) -> void
Xamarin.Grpc.Metadata.Metadata() -> void
Xamarin.Grpc.Metadata.Put(Xamarin.Grpc.Metadata.Key? key, Java.Lang.Object? value) -> void
Xamarin.Grpc.Metadata.Remove(Xamarin.Grpc.Metadata.Key? key, Java.Lang.Object? value) -> bool
Xamarin.Grpc.Metadata.RemoveAll(Xamarin.Grpc.Metadata.Key? key) -> Java.Lang.IIterable?
Xamarin.Grpc.MethodDescriptor
Xamarin.Grpc.MethodDescriptor.BareMethodName.get -> string?
Xamarin.Grpc.MethodDescriptor.Builder
Xamarin.Grpc.MethodDescriptor.Builder.Build() -> Xamarin.Grpc.MethodDescriptor?
Xamarin.Grpc.MethodDescriptor.Builder.SetFullMethodName(string? fullMethodName) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetIdempotent(bool idempotent) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetRequestMarshaller(Xamarin.Grpc.MethodDescriptor.IMarshaller? requestMarshaller) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetResponseMarshaller(Xamarin.Grpc.MethodDescriptor.IMarshaller? responseMarshaller) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetSafe(bool safe) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetSampledToLocalTracing(bool value) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetSchemaDescriptor(Java.Lang.Object? schemaDescriptor) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Builder.SetType(Xamarin.Grpc.MethodDescriptor.MethodType? type) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.FullMethodName.get -> string?
Xamarin.Grpc.MethodDescriptor.IMarshaller
Xamarin.Grpc.MethodDescriptor.IMarshaller.Parse(System.IO.Stream? p0) -> Java.Lang.Object?
Xamarin.Grpc.MethodDescriptor.IMarshaller.Stream(Java.Lang.Object? p0) -> System.IO.Stream?
Xamarin.Grpc.MethodDescriptor.IPrototypeMarshaller
Xamarin.Grpc.MethodDescriptor.IPrototypeMarshaller.MessagePrototype.get -> Java.Lang.Object?
Xamarin.Grpc.MethodDescriptor.IReflectableMarshaller
Xamarin.Grpc.MethodDescriptor.IReflectableMarshaller.MessageClass.get -> Java.Lang.Class?
Xamarin.Grpc.MethodDescriptor.IsIdempotent.get -> bool
Xamarin.Grpc.MethodDescriptor.IsSafe.get -> bool
Xamarin.Grpc.MethodDescriptor.IsSampledToLocalTracing.get -> bool
Xamarin.Grpc.MethodDescriptor.MethodType
Xamarin.Grpc.MethodDescriptor.MethodType.ClientSendsOneMessage() -> bool
Xamarin.Grpc.MethodDescriptor.MethodType.ServerSendsOneMessage() -> bool
Xamarin.Grpc.MethodDescriptor.ParseRequest(System.IO.Stream? input) -> Java.Lang.Object?
Xamarin.Grpc.MethodDescriptor.ParseResponse(System.IO.Stream? input) -> Java.Lang.Object?
Xamarin.Grpc.MethodDescriptor.RequestMarshaller.get -> Xamarin.Grpc.MethodDescriptor.IMarshaller?
Xamarin.Grpc.MethodDescriptor.ResponseMarshaller.get -> Xamarin.Grpc.MethodDescriptor.IMarshaller?
Xamarin.Grpc.MethodDescriptor.SchemaDescriptor.get -> Java.Lang.Object?
Xamarin.Grpc.MethodDescriptor.ServiceName.get -> string?
Xamarin.Grpc.MethodDescriptor.StreamRequest(Java.Lang.Object? requestMessage) -> System.IO.Stream?
Xamarin.Grpc.MethodDescriptor.StreamResponse(Java.Lang.Object? response) -> System.IO.Stream?
Xamarin.Grpc.MethodDescriptor.ToBuilder() -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.ToBuilder(Xamarin.Grpc.MethodDescriptor.IMarshaller? requestMarshaller, Xamarin.Grpc.MethodDescriptor.IMarshaller? responseMarshaller) -> Xamarin.Grpc.MethodDescriptor.Builder?
Xamarin.Grpc.MethodDescriptor.Type.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
Xamarin.Grpc.MetricInstrumentRegistry
Xamarin.Grpc.MetricInstrumentRegistry.MetricInstruments.get -> System.Collections.Generic.IList<Xamarin.Grpc.IMetricInstrument!>?
Xamarin.Grpc.MetricInstrumentRegistry.RegisterDoubleCounter(string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> Xamarin.Grpc.DoubleCounterMetricInstrument?
Xamarin.Grpc.MetricInstrumentRegistry.RegisterDoubleHistogram(string? name, string? description, string? unit, System.Collections.Generic.IList<Java.Lang.Double!>? bucketBoundaries, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> Xamarin.Grpc.DoubleHistogramMetricInstrument?
Xamarin.Grpc.MetricInstrumentRegistry.RegisterLongCounter(string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> Xamarin.Grpc.LongCounterMetricInstrument?
Xamarin.Grpc.MetricInstrumentRegistry.RegisterLongGauge(string? name, string? description, string? unit, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> Xamarin.Grpc.LongGaugeMetricInstrument?
Xamarin.Grpc.MetricInstrumentRegistry.RegisterLongHistogram(string? name, string? description, string? unit, System.Collections.Generic.IList<Java.Lang.Long!>? bucketBoundaries, System.Collections.Generic.IList<string!>? requiredLabelKeys, System.Collections.Generic.IList<string!>? optionalLabelKeys, bool enableByDefault) -> Xamarin.Grpc.LongHistogramMetricInstrument?
Xamarin.Grpc.NameResolver
Xamarin.Grpc.NameResolver.AddressesEventArgs
Xamarin.Grpc.NameResolver.AddressesEventArgs.AddressesEventArgs(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? p0, Xamarin.Grpc.Attributes? p1) -> void
Xamarin.Grpc.NameResolver.AddressesEventArgs.P0.get -> System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>?
Xamarin.Grpc.NameResolver.AddressesEventArgs.P1.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.NameResolver.Args
Xamarin.Grpc.NameResolver.Args.Builder
Xamarin.Grpc.NameResolver.Args.Builder.Build() -> Xamarin.Grpc.NameResolver.Args?
Xamarin.Grpc.NameResolver.Args.Builder.SetArg(Xamarin.Grpc.NameResolver.Args.Key? key, Java.Lang.Object? value) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetChannelLogger(Xamarin.Grpc.ChannelLogger? channelLogger) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetDefaultPort(int defaultPort) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetMetricRecorder(Xamarin.Grpc.IMetricRecorder? metricRecorder) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetNameResolverRegistry(Xamarin.Grpc.NameResolverRegistry? registry) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetOffloadExecutor(Java.Util.Concurrent.IExecutor? executor) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetOverrideAuthority(string? authority) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetProxyDetector(Xamarin.Grpc.IProxyDetector? proxyDetector) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetScheduledExecutorService(Java.Util.Concurrent.IScheduledExecutorService? scheduledExecutorService) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetServiceConfigParser(Xamarin.Grpc.NameResolver.ServiceConfigParser? parser) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.Builder.SetSynchronizationContext(Xamarin.Grpc.SynchronizationContext? syncContext) -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.Args.ChannelLogger.get -> Xamarin.Grpc.ChannelLogger?
Xamarin.Grpc.NameResolver.Args.DefaultPort.get -> int
Xamarin.Grpc.NameResolver.Args.GetArg(Xamarin.Grpc.NameResolver.Args.Key? key) -> Java.Lang.Object?
Xamarin.Grpc.NameResolver.Args.Key
Xamarin.Grpc.NameResolver.Args.MetricRecorder.get -> Xamarin.Grpc.IMetricRecorder?
Xamarin.Grpc.NameResolver.Args.NameResolverRegistry.get -> Xamarin.Grpc.NameResolverRegistry?
Xamarin.Grpc.NameResolver.Args.OffloadExecutor.get -> Java.Util.Concurrent.IExecutor?
Xamarin.Grpc.NameResolver.Args.OverrideAuthority.get -> string?
Xamarin.Grpc.NameResolver.Args.ProxyDetector.get -> Xamarin.Grpc.IProxyDetector?
Xamarin.Grpc.NameResolver.Args.ScheduledExecutorService.get -> Java.Util.Concurrent.IScheduledExecutorService?
Xamarin.Grpc.NameResolver.Args.ServiceConfigParser.get -> Xamarin.Grpc.NameResolver.ServiceConfigParser?
Xamarin.Grpc.NameResolver.Args.SynchronizationContext.get -> Xamarin.Grpc.SynchronizationContext?
Xamarin.Grpc.NameResolver.Args.ToBuilder() -> Xamarin.Grpc.NameResolver.Args.Builder?
Xamarin.Grpc.NameResolver.ConfigOrError
Xamarin.Grpc.NameResolver.ConfigOrError.Config.get -> Java.Lang.Object?
Xamarin.Grpc.NameResolver.ConfigOrError.Error.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.NameResolver.ErrorEventArgs
Xamarin.Grpc.NameResolver.ErrorEventArgs.ErrorEventArgs(Xamarin.Grpc.Status? p0) -> void
Xamarin.Grpc.NameResolver.ErrorEventArgs.P0.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.NameResolver.Factory
Xamarin.Grpc.NameResolver.Factory.Factory() -> void
Xamarin.Grpc.NameResolver.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.NameResolver.IListener
Xamarin.Grpc.NameResolver.IListener.OnAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? p0, Xamarin.Grpc.Attributes? p1) -> void
Xamarin.Grpc.NameResolver.IListener.OnError(Xamarin.Grpc.Status? p0) -> void
Xamarin.Grpc.NameResolver.IResolutionResultAttr
Xamarin.Grpc.NameResolver.Listener2
Xamarin.Grpc.NameResolver.Listener2.Listener2() -> void
Xamarin.Grpc.NameResolver.Listener2.Listener2(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.NameResolver.Listener2.OnAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? servers, Xamarin.Grpc.Attributes? attributes) -> void
Xamarin.Grpc.NameResolver.NameResolver() -> void
Xamarin.Grpc.NameResolver.NameResolver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.NameResolver.ResolutionResult
Xamarin.Grpc.NameResolver.ResolutionResult.Addresses.get -> System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>?
Xamarin.Grpc.NameResolver.ResolutionResult.AddressesOrError.get -> Xamarin.Grpc.StatusOr?
Xamarin.Grpc.NameResolver.ResolutionResult.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.NameResolver.ResolutionResult.Builder
Xamarin.Grpc.NameResolver.ResolutionResult.Builder.Build() -> Xamarin.Grpc.NameResolver.ResolutionResult?
Xamarin.Grpc.NameResolver.ResolutionResult.Builder.SetAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? addresses) -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
Xamarin.Grpc.NameResolver.ResolutionResult.Builder.SetAddressesOrError(Xamarin.Grpc.StatusOr? addresses) -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
Xamarin.Grpc.NameResolver.ResolutionResult.Builder.SetAttributes(Xamarin.Grpc.Attributes? attributes) -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
Xamarin.Grpc.NameResolver.ResolutionResult.Builder.SetServiceConfig(Xamarin.Grpc.NameResolver.ConfigOrError? serviceConfig) -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
Xamarin.Grpc.NameResolver.ResolutionResult.ServiceConfig.get -> Xamarin.Grpc.NameResolver.ConfigOrError?
Xamarin.Grpc.NameResolver.ResolutionResult.ToBuilder() -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
Xamarin.Grpc.NameResolver.ServiceConfigParser
Xamarin.Grpc.NameResolver.ServiceConfigParser.ServiceConfigParser() -> void
Xamarin.Grpc.NameResolver.ServiceConfigParser.ServiceConfigParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.NameResolverProvider
Xamarin.Grpc.NameResolverProvider.NameResolverProvider() -> void
Xamarin.Grpc.NameResolverProvider.NameResolverProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.NameResolverRegistry
Xamarin.Grpc.NameResolverRegistry.AsFactory() -> Xamarin.Grpc.NameResolver.Factory?
Xamarin.Grpc.NameResolverRegistry.DefaultScheme.get -> string?
Xamarin.Grpc.NameResolverRegistry.Deregister(Xamarin.Grpc.NameResolverProvider? provider) -> void
Xamarin.Grpc.NameResolverRegistry.GetProviderForScheme(string? scheme) -> Xamarin.Grpc.NameResolverProvider?
Xamarin.Grpc.NameResolverRegistry.NameResolverRegistry() -> void
Xamarin.Grpc.NameResolverRegistry.Register(Xamarin.Grpc.NameResolverProvider? provider) -> void
Xamarin.Grpc.ProxiedSocketAddress
Xamarin.Grpc.ProxiedSocketAddress.ProxiedSocketAddress() -> void
Xamarin.Grpc.ProxiedSocketAddress.ProxiedSocketAddress(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.SecurityLevel
Xamarin.Grpc.Server
Xamarin.Grpc.Server.Server() -> void
Xamarin.Grpc.Server.Server(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerBuilder
Xamarin.Grpc.ServerBuilder.AddServices(System.Collections.Generic.IList<Xamarin.Grpc.ServerServiceDefinition!>? services) -> Java.Lang.Object?
Xamarin.Grpc.ServerBuilder.ServerBuilder() -> void
Xamarin.Grpc.ServerBuilder.ServerBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerCall
Xamarin.Grpc.ServerCall.Listener
Xamarin.Grpc.ServerCall.Listener.Listener() -> void
Xamarin.Grpc.ServerCall.Listener.Listener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerCall.ServerCall() -> void
Xamarin.Grpc.ServerCall.ServerCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerCredentials
Xamarin.Grpc.ServerCredentials.ServerCredentials() -> void
Xamarin.Grpc.ServerCredentials.ServerCredentials(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerInterceptors
Xamarin.Grpc.ServerMethodDefinition
Xamarin.Grpc.ServerMethodDefinition.MethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
Xamarin.Grpc.ServerMethodDefinition.ServerCallHandler.get -> Xamarin.Grpc.IServerCallHandler?
Xamarin.Grpc.ServerMethodDefinition.WithServerCallHandler(Xamarin.Grpc.IServerCallHandler? handler) -> Xamarin.Grpc.ServerMethodDefinition?
Xamarin.Grpc.ServerProvider
Xamarin.Grpc.ServerProvider.NewServerBuilderResult
Xamarin.Grpc.ServerProvider.NewServerBuilderResult.Error.get -> string?
Xamarin.Grpc.ServerProvider.NewServerBuilderResult.ServerBuilder.get -> Xamarin.Grpc.ServerBuilder?
Xamarin.Grpc.ServerProvider.ServerProvider() -> void
Xamarin.Grpc.ServerProvider.ServerProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerRegistry
Xamarin.Grpc.ServerRegistry.Deregister(Xamarin.Grpc.ServerProvider? provider) -> void
Xamarin.Grpc.ServerRegistry.ProviderNotFoundException
Xamarin.Grpc.ServerRegistry.ProviderNotFoundException.ProviderNotFoundException(string? msg) -> void
Xamarin.Grpc.ServerRegistry.Register(Xamarin.Grpc.ServerProvider? provider) -> void
Xamarin.Grpc.ServerRegistry.ServerRegistry() -> void
Xamarin.Grpc.ServerServiceDefinition
Xamarin.Grpc.ServerServiceDefinition.Builder
Xamarin.Grpc.ServerServiceDefinition.Builder.AddMethod(Xamarin.Grpc.MethodDescriptor? method, Xamarin.Grpc.IServerCallHandler? handler) -> Xamarin.Grpc.ServerServiceDefinition.Builder?
Xamarin.Grpc.ServerServiceDefinition.Builder.AddMethod(Xamarin.Grpc.ServerMethodDefinition? def) -> Xamarin.Grpc.ServerServiceDefinition.Builder?
Xamarin.Grpc.ServerServiceDefinition.Builder.Build() -> Xamarin.Grpc.ServerServiceDefinition?
Xamarin.Grpc.ServerServiceDefinition.GetMethod(string? methodName) -> Xamarin.Grpc.ServerMethodDefinition?
Xamarin.Grpc.ServerServiceDefinition.Methods.get -> System.Collections.Generic.ICollection<Xamarin.Grpc.ServerMethodDefinition!>?
Xamarin.Grpc.ServerServiceDefinition.ServiceDescriptor.get -> Xamarin.Grpc.ServiceDescriptor?
Xamarin.Grpc.ServerStreamTracer
Xamarin.Grpc.ServerStreamTracer.Factory
Xamarin.Grpc.ServerStreamTracer.Factory.Factory() -> void
Xamarin.Grpc.ServerStreamTracer.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerStreamTracer.ServerCallInfo
Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.ServerCallInfo() -> void
Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.ServerCallInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerStreamTracer.ServerStreamTracer() -> void
Xamarin.Grpc.ServerStreamTracer.ServerStreamTracer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServerTransportFilter
Xamarin.Grpc.ServerTransportFilter.ServerTransportFilter() -> void
Xamarin.Grpc.ServerTransportFilter.ServerTransportFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.ServiceDescriptor
Xamarin.Grpc.ServiceDescriptor.Builder
Xamarin.Grpc.ServiceDescriptor.Builder.AddMethod(Xamarin.Grpc.MethodDescriptor? method) -> Xamarin.Grpc.ServiceDescriptor.Builder?
Xamarin.Grpc.ServiceDescriptor.Builder.Build() -> Xamarin.Grpc.ServiceDescriptor?
Xamarin.Grpc.ServiceDescriptor.Builder.SetName(string? name) -> Xamarin.Grpc.ServiceDescriptor.Builder?
Xamarin.Grpc.ServiceDescriptor.Builder.SetSchemaDescriptor(Java.Lang.Object? schemaDescriptor) -> Xamarin.Grpc.ServiceDescriptor.Builder?
Xamarin.Grpc.ServiceDescriptor.Methods.get -> System.Collections.Generic.ICollection<Xamarin.Grpc.MethodDescriptor!>?
Xamarin.Grpc.ServiceDescriptor.Name.get -> string?
Xamarin.Grpc.ServiceDescriptor.SchemaDescriptor.get -> Java.Lang.Object?
Xamarin.Grpc.ServiceDescriptor.ServiceDescriptor(string? name, System.Collections.Generic.ICollection<Xamarin.Grpc.MethodDescriptor!>? methods) -> void
Xamarin.Grpc.ServiceDescriptor.ServiceDescriptor(string? name, params Xamarin.Grpc.MethodDescriptor![]? methods) -> void
Xamarin.Grpc.Status
Xamarin.Grpc.Status.AsException() -> Xamarin.Grpc.StatusException?
Xamarin.Grpc.Status.AsException(Xamarin.Grpc.Metadata? trailers) -> Xamarin.Grpc.StatusException?
Xamarin.Grpc.Status.AsRuntimeException() -> Xamarin.Grpc.StatusRuntimeException?
Xamarin.Grpc.Status.AsRuntimeException(Xamarin.Grpc.Metadata? trailers) -> Xamarin.Grpc.StatusRuntimeException?
Xamarin.Grpc.Status.AugmentDescription(string? additionalDetail) -> Xamarin.Grpc.Status?
Xamarin.Grpc.Status.Cause.get -> Java.Lang.Throwable?
Xamarin.Grpc.Status.Code
Xamarin.Grpc.Status.Code.ToStatus() -> Xamarin.Grpc.Status?
Xamarin.Grpc.Status.Code.Value() -> int
Xamarin.Grpc.Status.Description.get -> string?
Xamarin.Grpc.Status.GetCode() -> Xamarin.Grpc.Status.Code?
Xamarin.Grpc.Status.IsOk.get -> bool
Xamarin.Grpc.Status.WithCause(Java.Lang.Throwable? cause) -> Xamarin.Grpc.Status?
Xamarin.Grpc.Status.WithDescription(string? description) -> Xamarin.Grpc.Status?
Xamarin.Grpc.StatusException
Xamarin.Grpc.StatusException.Status.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.StatusException.StatusException(Xamarin.Grpc.Status? status) -> void
Xamarin.Grpc.StatusException.StatusException(Xamarin.Grpc.Status? status, Xamarin.Grpc.Metadata? trailers) -> void
Xamarin.Grpc.StatusException.StatusException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.StatusException.Trailers.get -> Xamarin.Grpc.Metadata?
Xamarin.Grpc.StatusOr
Xamarin.Grpc.StatusOr.StatusOr(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.StatusRuntimeException
Xamarin.Grpc.StatusRuntimeException.Status.get -> Xamarin.Grpc.Status?
Xamarin.Grpc.StatusRuntimeException.StatusRuntimeException(Xamarin.Grpc.Status? status) -> void
Xamarin.Grpc.StatusRuntimeException.StatusRuntimeException(Xamarin.Grpc.Status? status, Xamarin.Grpc.Metadata? trailers) -> void
Xamarin.Grpc.StatusRuntimeException.StatusRuntimeException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.StatusRuntimeException.Trailers.get -> Xamarin.Grpc.Metadata?
Xamarin.Grpc.StreamTracer
Xamarin.Grpc.StreamTracer.StreamTracer() -> void
Xamarin.Grpc.StreamTracer.StreamTracer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.SynchronizationContext
Xamarin.Grpc.SynchronizationContext.Drain() -> void
Xamarin.Grpc.SynchronizationContext.Execute(Java.Lang.IRunnable? task) -> void
Xamarin.Grpc.SynchronizationContext.ExecuteLater(Java.Lang.IRunnable? runnable) -> void
Xamarin.Grpc.SynchronizationContext.Schedule(Java.Lang.IRunnable? task, Java.Time.Duration? delay, Java.Util.Concurrent.IScheduledExecutorService? timerService) -> Xamarin.Grpc.SynchronizationContext.ScheduledHandle?
Xamarin.Grpc.SynchronizationContext.Schedule(Java.Lang.IRunnable? task, long delay, Java.Util.Concurrent.TimeUnit? unit, Java.Util.Concurrent.IScheduledExecutorService? timerService) -> Xamarin.Grpc.SynchronizationContext.ScheduledHandle?
Xamarin.Grpc.SynchronizationContext.ScheduleWithFixedDelay(Java.Lang.IRunnable? task, Java.Time.Duration? initialDelay, Java.Time.Duration? delay, Java.Util.Concurrent.IScheduledExecutorService? timerService) -> Xamarin.Grpc.SynchronizationContext.ScheduledHandle?
Xamarin.Grpc.SynchronizationContext.ScheduleWithFixedDelay(Java.Lang.IRunnable? task, long initialDelay, long delay, Java.Util.Concurrent.TimeUnit? unit, Java.Util.Concurrent.IScheduledExecutorService? timerService) -> Xamarin.Grpc.SynchronizationContext.ScheduledHandle?
Xamarin.Grpc.SynchronizationContext.ScheduledHandle
Xamarin.Grpc.SynchronizationContext.ScheduledHandle.Cancel() -> void
Xamarin.Grpc.SynchronizationContext.ScheduledHandle.IsPending.get -> bool
Xamarin.Grpc.SynchronizationContext.SynchronizationContext(Java.Lang.Thread.IUncaughtExceptionHandler? uncaughtExceptionHandler) -> void
Xamarin.Grpc.SynchronizationContext.ThrowIfNotInThisSynchronizationContext() -> void
Xamarin.Grpc.TlsChannelCredentials
Xamarin.Grpc.TlsChannelCredentials.Builder
Xamarin.Grpc.TlsChannelCredentials.Builder.Build() -> Xamarin.Grpc.ChannelCredentials?
Xamarin.Grpc.TlsChannelCredentials.Builder.KeyManager(Java.IO.File? certChain, Java.IO.File? privateKey) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.KeyManager(Java.IO.File? certChain, Java.IO.File? privateKey, string? privateKeyPassword) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.KeyManager(System.IO.Stream? certChain, System.IO.Stream? privateKey) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.KeyManager(System.IO.Stream? certChain, System.IO.Stream? privateKey, string? privateKeyPassword) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.KeyManager(params Javax.Net.Ssl.IKeyManager![]? keyManagers) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.RequireFakeFeature() -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.TrustManager(Java.IO.File? rootCerts) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.TrustManager(System.IO.Stream? rootCerts) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Builder.TrustManager(params Javax.Net.Ssl.ITrustManager![]? trustManagers) -> Xamarin.Grpc.TlsChannelCredentials.Builder?
Xamarin.Grpc.TlsChannelCredentials.Feature
Xamarin.Grpc.TlsChannelCredentials.GetCertificateChain() -> byte[]?
Xamarin.Grpc.TlsChannelCredentials.GetPrivateKey() -> byte[]?
Xamarin.Grpc.TlsChannelCredentials.GetRootCertificates() -> byte[]?
Xamarin.Grpc.TlsChannelCredentials.Incomprehensible(System.Collections.Generic.ICollection<Xamarin.Grpc.TlsChannelCredentials.Feature!>? understoodFeatures) -> System.Collections.Generic.ICollection<Xamarin.Grpc.TlsChannelCredentials.Feature!>?
Xamarin.Grpc.TlsChannelCredentials.KeyManagers.get -> System.Collections.Generic.IList<Javax.Net.Ssl.IKeyManager!>?
Xamarin.Grpc.TlsChannelCredentials.PrivateKeyPassword.get -> string?
Xamarin.Grpc.TlsChannelCredentials.TrustManagers.get -> System.Collections.Generic.IList<Javax.Net.Ssl.ITrustManager!>?
Xamarin.Grpc.TlsServerCredentials
Xamarin.Grpc.TlsServerCredentials.Builder
Xamarin.Grpc.TlsServerCredentials.Builder.Build() -> Xamarin.Grpc.ServerCredentials?
Xamarin.Grpc.TlsServerCredentials.Builder.ClientAuth(Xamarin.Grpc.TlsServerCredentials.ClientAuth? clientAuth) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.KeyManager(Java.IO.File? certChain, Java.IO.File? privateKey) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.KeyManager(Java.IO.File? certChain, Java.IO.File? privateKey, string? privateKeyPassword) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.KeyManager(System.IO.Stream? certChain, System.IO.Stream? privateKey) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.KeyManager(System.IO.Stream? certChain, System.IO.Stream? privateKey, string? privateKeyPassword) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.KeyManager(params Javax.Net.Ssl.IKeyManager![]? keyManagers) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.RequireFakeFeature() -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.TrustManager(Java.IO.File? rootCerts) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.TrustManager(System.IO.Stream? rootCerts) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.Builder.TrustManager(params Javax.Net.Ssl.ITrustManager![]? trustManagers) -> Xamarin.Grpc.TlsServerCredentials.Builder?
Xamarin.Grpc.TlsServerCredentials.ClientAuth
Xamarin.Grpc.TlsServerCredentials.Feature
Xamarin.Grpc.TlsServerCredentials.GetCertificateChain() -> byte[]?
Xamarin.Grpc.TlsServerCredentials.GetClientAuth() -> Xamarin.Grpc.TlsServerCredentials.ClientAuth?
Xamarin.Grpc.TlsServerCredentials.GetPrivateKey() -> byte[]?
Xamarin.Grpc.TlsServerCredentials.GetRootCertificates() -> byte[]?
Xamarin.Grpc.TlsServerCredentials.Incomprehensible(System.Collections.Generic.ICollection<Xamarin.Grpc.TlsServerCredentials.Feature!>? understoodFeatures) -> System.Collections.Generic.ICollection<Xamarin.Grpc.TlsServerCredentials.Feature!>?
Xamarin.Grpc.TlsServerCredentials.KeyManagers.get -> System.Collections.Generic.IList<Javax.Net.Ssl.IKeyManager!>?
Xamarin.Grpc.TlsServerCredentials.PrivateKeyPassword.get -> string?
Xamarin.Grpc.TlsServerCredentials.TrustManagers.get -> System.Collections.Generic.IList<Javax.Net.Ssl.ITrustManager!>?
abstract Xamarin.Grpc.BinaryLog.Close() -> void
abstract Xamarin.Grpc.BinaryLog.WrapChannel(Xamarin.Grpc.Channel? p0) -> Xamarin.Grpc.Channel?
abstract Xamarin.Grpc.BinaryLog.WrapMethodDefinition(Xamarin.Grpc.ServerMethodDefinition? p0) -> Xamarin.Grpc.ServerMethodDefinition?
abstract Xamarin.Grpc.CallCredentials.ApplyRequestMetadata(Xamarin.Grpc.CallCredentials.RequestInfo? p0, Java.Util.Concurrent.IExecutor? p1, Xamarin.Grpc.CallCredentials.MetadataApplier? p2) -> void
abstract Xamarin.Grpc.CallCredentials.MetadataApplier.Apply(Xamarin.Grpc.Metadata? p0) -> void
abstract Xamarin.Grpc.CallCredentials.MetadataApplier.Fail(Xamarin.Grpc.Status? p0) -> void
abstract Xamarin.Grpc.CallCredentials.RequestInfo.Authority.get -> string?
abstract Xamarin.Grpc.CallCredentials.RequestInfo.MethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
abstract Xamarin.Grpc.CallCredentials.RequestInfo.SecurityLevel.get -> Xamarin.Grpc.SecurityLevel?
abstract Xamarin.Grpc.CallCredentials.RequestInfo.TransportAttrs.get -> Xamarin.Grpc.Attributes?
abstract Xamarin.Grpc.Channel.Authority() -> string?
abstract Xamarin.Grpc.Channel.NewCall(Xamarin.Grpc.MethodDescriptor? p0, Xamarin.Grpc.CallOptions? p1) -> Xamarin.Grpc.ClientCall?
abstract Xamarin.Grpc.ChannelCredentials.WithoutBearerTokens() -> Xamarin.Grpc.ChannelCredentials?
abstract Xamarin.Grpc.ChannelLogger.Log(Xamarin.Grpc.ChannelLogger.ChannelLogLevel? p0, string? p1) -> void
abstract Xamarin.Grpc.ChannelLogger.Log(Xamarin.Grpc.ChannelLogger.ChannelLogLevel? p0, string? p1, params Java.Lang.Object![]? p2) -> void
abstract Xamarin.Grpc.ClientCall.Cancel(string? p0, Java.Lang.Throwable? p1) -> void
abstract Xamarin.Grpc.ClientCall.HalfClose() -> void
abstract Xamarin.Grpc.ClientCall.Request(int p0) -> void
abstract Xamarin.Grpc.ClientCall.SendMessage(Java.Lang.Object? p0) -> void
abstract Xamarin.Grpc.ClientCall.Start(Xamarin.Grpc.ClientCall.Listener? p0, Xamarin.Grpc.Metadata? p1) -> void
abstract Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.CheckedStart(Xamarin.Grpc.ClientCall.Listener? p0, Xamarin.Grpc.Metadata? p1) -> void
abstract Xamarin.Grpc.Context.Storage.Current() -> Xamarin.Grpc.Context?
abstract Xamarin.Grpc.Context.Storage.Detach(Xamarin.Grpc.Context? p0, Xamarin.Grpc.Context? p1) -> void
abstract Xamarin.Grpc.Context.Storage.DoAttach(Xamarin.Grpc.Context? p0) -> Xamarin.Grpc.Context?
abstract Xamarin.Grpc.Deadline.Ticker.NanoTime() -> long
abstract Xamarin.Grpc.ForwardingChannelBuilder2.Delegate() -> Xamarin.Grpc.ManagedChannelBuilder?
abstract Xamarin.Grpc.ForwardingClientCall.Delegate() -> Xamarin.Grpc.ClientCall?
abstract Xamarin.Grpc.ForwardingClientCallListener.Delegate() -> Xamarin.Grpc.ClientCall.Listener?
abstract Xamarin.Grpc.ForwardingServerBuilder.Delegate() -> Xamarin.Grpc.ServerBuilder?
abstract Xamarin.Grpc.ForwardingServerCall.Delegate() -> Xamarin.Grpc.ServerCall?
abstract Xamarin.Grpc.ForwardingServerCallListener.Delegate() -> Xamarin.Grpc.ServerCall.Listener?
abstract Xamarin.Grpc.HandlerRegistry.LookupMethod(string? p0, string? p1) -> Xamarin.Grpc.ServerMethodDefinition?
abstract Xamarin.Grpc.LoadBalancer.Factory.NewLoadBalancer(Xamarin.Grpc.LoadBalancer.Helper? p0) -> Xamarin.Grpc.LoadBalancer?
abstract Xamarin.Grpc.LoadBalancer.HandleNameResolutionError(Xamarin.Grpc.Status? p0) -> void
abstract Xamarin.Grpc.LoadBalancer.Helper.Authority.get -> string?
abstract Xamarin.Grpc.LoadBalancer.Helper.CreateOobChannel(Xamarin.Grpc.EquivalentAddressGroup? p0, string? p1) -> Xamarin.Grpc.ManagedChannel?
abstract Xamarin.Grpc.LoadBalancer.Helper.UpdateBalancingState(Xamarin.Grpc.ConnectivityState? p0, Xamarin.Grpc.LoadBalancer.SubchannelPicker? p1) -> void
abstract Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.CallOptions.get -> Xamarin.Grpc.CallOptions?
abstract Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.Headers.get -> Xamarin.Grpc.Metadata?
abstract Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.MethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
abstract Xamarin.Grpc.LoadBalancer.Shutdown() -> void
abstract Xamarin.Grpc.LoadBalancer.Subchannel.Attributes.get -> Xamarin.Grpc.Attributes?
abstract Xamarin.Grpc.LoadBalancer.Subchannel.RequestConnection() -> void
abstract Xamarin.Grpc.LoadBalancer.Subchannel.Shutdown() -> void
abstract Xamarin.Grpc.LoadBalancer.SubchannelPicker.PickSubchannel(Xamarin.Grpc.LoadBalancer.PickSubchannelArgs? p0) -> Xamarin.Grpc.LoadBalancer.PickResult?
abstract Xamarin.Grpc.LoadBalancerProvider.IsAvailable.get -> bool
abstract Xamarin.Grpc.LoadBalancerProvider.PolicyName.get -> string?
abstract Xamarin.Grpc.LoadBalancerProvider.Priority.get -> int
abstract Xamarin.Grpc.ManagedChannel.AwaitTermination(long p0, Java.Util.Concurrent.TimeUnit? p1) -> bool
abstract Xamarin.Grpc.ManagedChannel.IsShutdown.get -> bool
abstract Xamarin.Grpc.ManagedChannel.IsTerminated.get -> bool
abstract Xamarin.Grpc.ManagedChannel.Shutdown() -> Xamarin.Grpc.ManagedChannel?
abstract Xamarin.Grpc.ManagedChannel.ShutdownNow() -> Xamarin.Grpc.ManagedChannel?
abstract Xamarin.Grpc.ManagedChannelBuilder.Build() -> Xamarin.Grpc.ManagedChannel?
abstract Xamarin.Grpc.ManagedChannelBuilder.CompressorRegistry(Xamarin.Grpc.CompressorRegistry? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.DecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.DirectExecutor() -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.Executor(Java.Util.Concurrent.IExecutor? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.IdleTimeout(long p0, Java.Util.Concurrent.TimeUnit? p1) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.NameResolverFactory(Xamarin.Grpc.NameResolver.Factory? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.OverrideAuthority(string? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelBuilder.UserAgent(string? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ManagedChannelProvider.IsAvailable.get -> bool
abstract Xamarin.Grpc.ManagedChannelProvider.Priority() -> int
abstract Xamarin.Grpc.ManagedChannelProvider.SupportedSocketAddressTypes.get -> System.Collections.Generic.ICollection<Java.Lang.Class!>?
abstract Xamarin.Grpc.NameResolver.Factory.DefaultScheme.get -> string?
abstract Xamarin.Grpc.NameResolver.Factory.NewNameResolver(Java.Net.URI? p0, Xamarin.Grpc.NameResolver.Args? p1) -> Xamarin.Grpc.NameResolver?
abstract Xamarin.Grpc.NameResolver.Listener2.OnError(Xamarin.Grpc.Status? p0) -> void
abstract Xamarin.Grpc.NameResolver.Listener2.OnResult(Xamarin.Grpc.NameResolver.ResolutionResult? p0) -> void
abstract Xamarin.Grpc.NameResolver.ServiceAuthority.get -> string?
abstract Xamarin.Grpc.NameResolver.ServiceConfigParser.ParseServiceConfig(System.Collections.Generic.IDictionary<string!, object!>? p0) -> Xamarin.Grpc.NameResolver.ConfigOrError?
abstract Xamarin.Grpc.NameResolver.Shutdown() -> void
abstract Xamarin.Grpc.NameResolverProvider.IsAvailable.get -> bool
abstract Xamarin.Grpc.NameResolverProvider.Priority() -> int
abstract Xamarin.Grpc.Server.AwaitTermination() -> void
abstract Xamarin.Grpc.Server.AwaitTermination(long p0, Java.Util.Concurrent.TimeUnit? p1) -> bool
abstract Xamarin.Grpc.Server.IsShutdown.get -> bool
abstract Xamarin.Grpc.Server.IsTerminated.get -> bool
abstract Xamarin.Grpc.Server.Shutdown() -> Xamarin.Grpc.Server?
abstract Xamarin.Grpc.Server.ShutdownNow() -> Xamarin.Grpc.Server?
abstract Xamarin.Grpc.Server.Start() -> Xamarin.Grpc.Server?
abstract Xamarin.Grpc.ServerBuilder.AddService(Xamarin.Grpc.IBindableService? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.AddService(Xamarin.Grpc.ServerServiceDefinition? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.Build() -> Xamarin.Grpc.Server?
abstract Xamarin.Grpc.ServerBuilder.CompressorRegistry(Xamarin.Grpc.CompressorRegistry? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.DecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.DirectExecutor() -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.Executor(Java.Util.Concurrent.IExecutor? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.FallbackHandlerRegistry(Xamarin.Grpc.HandlerRegistry? p0) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerBuilder.UseTransportSecurity(Java.IO.File? p0, Java.IO.File? p1) -> Java.Lang.Object?
abstract Xamarin.Grpc.ServerCall.Close(Xamarin.Grpc.Status? p0, Xamarin.Grpc.Metadata? p1) -> void
abstract Xamarin.Grpc.ServerCall.IsCancelled.get -> bool
abstract Xamarin.Grpc.ServerCall.RawMethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
abstract Xamarin.Grpc.ServerCall.Request(int p0) -> void
abstract Xamarin.Grpc.ServerCall.SendHeaders(Xamarin.Grpc.Metadata? p0) -> void
abstract Xamarin.Grpc.ServerCall.SendMessage(Java.Lang.Object? p0) -> void
abstract Xamarin.Grpc.ServerProvider.BuilderForPort(int p0) -> Xamarin.Grpc.ServerBuilder?
abstract Xamarin.Grpc.ServerProvider.IsAvailable.get -> bool
abstract Xamarin.Grpc.ServerProvider.Priority() -> int
abstract Xamarin.Grpc.ServerStreamTracer.Factory.NewServerStreamTracer(string? p0, Xamarin.Grpc.Metadata? p1) -> Xamarin.Grpc.ServerStreamTracer?
abstract Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.Attributes.get -> Xamarin.Grpc.Attributes?
abstract Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.Authority.get -> string?
abstract Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.RawMethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
const Xamarin.Grpc.Metadata.BinaryHeaderSuffix = "-bin" -> string!
override Xamarin.Grpc.Attributes.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Attributes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Attributes.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.BinaryLog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.BinaryLog.ThresholdClass.get -> nint
override Xamarin.Grpc.BinaryLog.ThresholdType.get -> System.Type!
override Xamarin.Grpc.CallCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CallCredentials.MetadataApplier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CallCredentials.MetadataApplier.ThresholdClass.get -> nint
override Xamarin.Grpc.CallCredentials.MetadataApplier.ThresholdType.get -> System.Type!
override Xamarin.Grpc.CallCredentials.RequestInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CallCredentials.RequestInfo.ThresholdClass.get -> nint
override Xamarin.Grpc.CallCredentials.RequestInfo.ThresholdType.get -> System.Type!
override Xamarin.Grpc.CallCredentials.ThresholdClass.get -> nint
override Xamarin.Grpc.CallCredentials.ThresholdType.get -> System.Type!
override Xamarin.Grpc.CallOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CallOptions.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Channel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Channel.ThresholdClass.get -> nint
override Xamarin.Grpc.Channel.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ChannelCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ChannelCredentials.ThresholdClass.get -> nint
override Xamarin.Grpc.ChannelCredentials.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ChannelLogger.ChannelLogLevel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ChannelLogger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ChannelLogger.ThresholdClass.get -> nint
override Xamarin.Grpc.ChannelLogger.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ChoiceChannelCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ChoiceChannelCredentials.WithoutBearerTokens() -> Xamarin.Grpc.ChannelCredentials?
override Xamarin.Grpc.ChoiceServerCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientCall.Listener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientCall.Listener.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientCall.Listener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientInterceptors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientInterceptors.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientInterceptors.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientStreamTracer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientStreamTracer.Factory.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientStreamTracer.Factory.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientStreamTracer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientStreamTracer.StreamInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientStreamTracer.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientStreamTracer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ClientTransportFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ClientTransportFilter.ThresholdClass.get -> nint
override Xamarin.Grpc.ClientTransportFilter.ThresholdType.get -> System.Type!
override Xamarin.Grpc.CodecGzip.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CodecIdentity.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CompositeCallCredentials.ApplyRequestMetadata(Xamarin.Grpc.CallCredentials.RequestInfo? requestInfo, Java.Util.Concurrent.IExecutor? appExecutor, Xamarin.Grpc.CallCredentials.MetadataApplier? applier) -> void
override Xamarin.Grpc.CompositeCallCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CompositeChannelCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.CompositeChannelCredentials.WithoutBearerTokens() -> Xamarin.Grpc.ChannelCredentials?
override Xamarin.Grpc.CompressorRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ConnectivityState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ConnectivityStateInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.CancellableContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.CancellableContext._1CancelOnExpiration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.Storage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Context.Storage.ThresholdClass.get -> nint
override Xamarin.Grpc.Context.Storage.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Context.ThresholdClass.get -> nint
override Xamarin.Grpc.Context.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Contexts.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Deadline.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Deadline.Ticker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Deadline.Ticker.ThresholdClass.get -> nint
override Xamarin.Grpc.Deadline.Ticker.ThresholdType.get -> System.Type!
override Xamarin.Grpc.DecompressorRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.DoubleCounterMetricInstrument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.DoubleCounterMetricInstrument.ToString() -> string?
override Xamarin.Grpc.DoubleHistogramMetricInstrument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.DoubleHistogramMetricInstrument.ToString() -> string?
override Xamarin.Grpc.EquivalentAddressGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingChannelBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingChannelBuilder.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingChannelBuilder.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingChannelBuilder2.Build() -> Xamarin.Grpc.ManagedChannel?
override Xamarin.Grpc.ForwardingChannelBuilder2.CompressorRegistry(Xamarin.Grpc.CompressorRegistry? registry) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.DecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? registry) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.DirectExecutor() -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.Executor(Java.Util.Concurrent.IExecutor? executor) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.IdleTimeout(long value, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingChannelBuilder2.NameResolverFactory(Xamarin.Grpc.NameResolver.Factory? resolverFactory) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.OverrideAuthority(string? authority) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingChannelBuilder2.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingChannelBuilder2.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingChannelBuilder2.UserAgent(string? userAgent) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingClientCall.Attributes.get -> Xamarin.Grpc.Attributes?
override Xamarin.Grpc.ForwardingClientCall.Cancel(string? p0, Java.Lang.Throwable? p1) -> void
override Xamarin.Grpc.ForwardingClientCall.HalfClose() -> void
override Xamarin.Grpc.ForwardingClientCall.IsReady.get -> bool
override Xamarin.Grpc.ForwardingClientCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingClientCall.Request(int p0) -> void
override Xamarin.Grpc.ForwardingClientCall.SendMessage(Java.Lang.Object? message) -> void
override Xamarin.Grpc.ForwardingClientCall.SetMessageCompression(bool p0) -> void
override Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.Delegate() -> Xamarin.Grpc.ClientCall?
override Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingClientCall.SimpleForwardingClientCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingClientCall.Start(Xamarin.Grpc.ClientCall.Listener? responseListener, Xamarin.Grpc.Metadata? headers) -> void
override Xamarin.Grpc.ForwardingClientCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingClientCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingClientCall.ToString() -> string?
override Xamarin.Grpc.ForwardingClientCallListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingClientCallListener.OnClose(Xamarin.Grpc.Status? p0, Xamarin.Grpc.Metadata? p1) -> void
override Xamarin.Grpc.ForwardingClientCallListener.OnHeaders(Xamarin.Grpc.Metadata? p0) -> void
override Xamarin.Grpc.ForwardingClientCallListener.OnMessage(Java.Lang.Object? message) -> void
override Xamarin.Grpc.ForwardingClientCallListener.OnReady() -> void
override Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.Delegate() -> Xamarin.Grpc.ClientCall.Listener?
override Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingClientCallListener.SimpleForwardingClientCallListener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingClientCallListener.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingClientCallListener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingClientCallListener.ToString() -> string?
override Xamarin.Grpc.ForwardingServerBuilder.AddService(Xamarin.Grpc.IBindableService? bindableService) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.AddService(Xamarin.Grpc.ServerServiceDefinition? service) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.Build() -> Xamarin.Grpc.Server?
override Xamarin.Grpc.ForwardingServerBuilder.CompressorRegistry(Xamarin.Grpc.CompressorRegistry? registry) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.DecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? registry) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.DirectExecutor() -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.Executor(Java.Util.Concurrent.IExecutor? executor) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.FallbackHandlerRegistry(Xamarin.Grpc.HandlerRegistry? fallbackRegistry) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingServerBuilder.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingServerBuilder.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingServerBuilder.UseTransportSecurity(Java.IO.File? certChain, Java.IO.File? privateKey) -> Java.Lang.Object?
override Xamarin.Grpc.ForwardingServerCall.Attributes.get -> Xamarin.Grpc.Attributes?
override Xamarin.Grpc.ForwardingServerCall.Authority.get -> string?
override Xamarin.Grpc.ForwardingServerCall.Close(Xamarin.Grpc.Status? p0, Xamarin.Grpc.Metadata? p1) -> void
override Xamarin.Grpc.ForwardingServerCall.IsCancelled.get -> bool
override Xamarin.Grpc.ForwardingServerCall.IsReady.get -> bool
override Xamarin.Grpc.ForwardingServerCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingServerCall.Request(int p0) -> void
override Xamarin.Grpc.ForwardingServerCall.SecurityLevel.get -> Xamarin.Grpc.SecurityLevel?
override Xamarin.Grpc.ForwardingServerCall.SendHeaders(Xamarin.Grpc.Metadata? p0) -> void
override Xamarin.Grpc.ForwardingServerCall.SendMessage(Java.Lang.Object? message) -> void
override Xamarin.Grpc.ForwardingServerCall.SetCompression(string? p0) -> void
override Xamarin.Grpc.ForwardingServerCall.SetMessageCompression(bool p0) -> void
override Xamarin.Grpc.ForwardingServerCall.SetOnReadyThreshold(int p0) -> void
override Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.Delegate() -> Xamarin.Grpc.ServerCall?
override Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingServerCall.SimpleForwardingServerCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingServerCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingServerCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingServerCall.ToString() -> string?
override Xamarin.Grpc.ForwardingServerCallListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingServerCallListener.OnCancel() -> void
override Xamarin.Grpc.ForwardingServerCallListener.OnComplete() -> void
override Xamarin.Grpc.ForwardingServerCallListener.OnHalfClose() -> void
override Xamarin.Grpc.ForwardingServerCallListener.OnReady() -> void
override Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.Delegate() -> Xamarin.Grpc.ServerCall.Listener?
override Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingServerCallListener.SimpleForwardingServerCallListener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingServerCallListener.ThresholdClass.get -> nint
override Xamarin.Grpc.ForwardingServerCallListener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ForwardingServerCallListener.ToString() -> string?
override Xamarin.Grpc.Grpc.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.HandlerRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.HandlerRegistry.ThresholdClass.get -> nint
override Xamarin.Grpc.HandlerRegistry.ThresholdType.get -> System.Type!
override Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.HttpConnectProxiedSocketAddress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.InsecureChannelCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.InsecureChannelCredentials.WithoutBearerTokens() -> Xamarin.Grpc.ChannelCredentials?
override Xamarin.Grpc.InsecureServerCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.ErrorPicker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.ErrorPicker.PickSubchannel(Xamarin.Grpc.LoadBalancer.PickSubchannelArgs? args) -> Xamarin.Grpc.LoadBalancer.PickResult?
override Xamarin.Grpc.LoadBalancer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.Factory.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.Factory.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancer.FixedResultPicker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.FixedResultPicker.PickSubchannel(Xamarin.Grpc.LoadBalancer.PickSubchannelArgs? args) -> Xamarin.Grpc.LoadBalancer.PickResult?
override Xamarin.Grpc.LoadBalancer.Helper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.Helper.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.Helper.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.PickResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.ResolvedAddresses.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.Subchannel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.Subchannel.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.Subchannel.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancer.SubchannelPicker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancer.SubchannelPicker.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.SubchannelPicker.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancer.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancerProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LoadBalancerProvider.ThresholdClass.get -> nint
override Xamarin.Grpc.LoadBalancerProvider.ThresholdType.get -> System.Type!
override Xamarin.Grpc.LoadBalancerRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LongCounterMetricInstrument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LongCounterMetricInstrument.ToString() -> string?
override Xamarin.Grpc.LongGaugeMetricInstrument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LongGaugeMetricInstrument.ToString() -> string?
override Xamarin.Grpc.LongHistogramMetricInstrument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.LongHistogramMetricInstrument.ToString() -> string?
override Xamarin.Grpc.ManagedChannel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannel.ThresholdClass.get -> nint
override Xamarin.Grpc.ManagedChannel.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ManagedChannelBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannelBuilder.ThresholdClass.get -> nint
override Xamarin.Grpc.ManagedChannelBuilder.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ManagedChannelProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannelProvider.ProviderNotFoundException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannelProvider.ThresholdClass.get -> nint
override Xamarin.Grpc.ManagedChannelProvider.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ManagedChannelRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ManagedChannelRegistry.ProviderNotFoundException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Metadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Metadata.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Metadata.Key.ThresholdClass.get -> nint
override Xamarin.Grpc.Metadata.Key.ThresholdType.get -> System.Type!
override Xamarin.Grpc.MethodDescriptor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.MethodDescriptor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.MethodDescriptor.MethodType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.MetricInstrumentRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Args.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Args.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Args.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.ConfigOrError.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Factory.ThresholdClass.get -> nint
override Xamarin.Grpc.NameResolver.Factory.ThresholdType.get -> System.Type!
override Xamarin.Grpc.NameResolver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Listener2.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.Listener2.ThresholdClass.get -> nint
override Xamarin.Grpc.NameResolver.Listener2.ThresholdType.get -> System.Type!
override Xamarin.Grpc.NameResolver.ResolutionResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.ResolutionResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.ServiceConfigParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolver.ServiceConfigParser.ThresholdClass.get -> nint
override Xamarin.Grpc.NameResolver.ServiceConfigParser.ThresholdType.get -> System.Type!
override Xamarin.Grpc.NameResolver.ThresholdClass.get -> nint
override Xamarin.Grpc.NameResolver.ThresholdType.get -> System.Type!
override Xamarin.Grpc.NameResolverProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.NameResolverProvider.ThresholdClass.get -> nint
override Xamarin.Grpc.NameResolverProvider.ThresholdType.get -> System.Type!
override Xamarin.Grpc.NameResolverRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ProxiedSocketAddress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ProxiedSocketAddress.ThresholdClass.get -> nint
override Xamarin.Grpc.ProxiedSocketAddress.ThresholdType.get -> System.Type!
override Xamarin.Grpc.SecurityLevel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Server.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Server.ThresholdClass.get -> nint
override Xamarin.Grpc.Server.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerBuilder.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerBuilder.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerCall.Listener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerCall.Listener.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerCall.Listener.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerCall.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerCredentials.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerCredentials.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerInterceptors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerMethodDefinition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerProvider.NewServerBuilderResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerProvider.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerProvider.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerRegistry.ProviderNotFoundException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerServiceDefinition.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerServiceDefinition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerStreamTracer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerStreamTracer.Factory.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerStreamTracer.Factory.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerStreamTracer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerStreamTracer.ServerCallInfo.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerStreamTracer.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerStreamTracer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServerTransportFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServerTransportFilter.ThresholdClass.get -> nint
override Xamarin.Grpc.ServerTransportFilter.ThresholdType.get -> System.Type!
override Xamarin.Grpc.ServiceDescriptor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.ServiceDescriptor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Status.Code.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Status.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.StatusException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.StatusException.ThresholdClass.get -> nint
override Xamarin.Grpc.StatusException.ThresholdType.get -> System.Type!
override Xamarin.Grpc.StatusOr.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.StatusOr.ThresholdClass.get -> nint
override Xamarin.Grpc.StatusOr.ThresholdType.get -> System.Type!
override Xamarin.Grpc.StatusRuntimeException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.StatusRuntimeException.ThresholdClass.get -> nint
override Xamarin.Grpc.StatusRuntimeException.ThresholdType.get -> System.Type!
override Xamarin.Grpc.StreamTracer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.StreamTracer.ThresholdClass.get -> nint
override Xamarin.Grpc.StreamTracer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.SynchronizationContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.SynchronizationContext.ScheduledHandle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsChannelCredentials.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsChannelCredentials.Feature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsChannelCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsChannelCredentials.WithoutBearerTokens() -> Xamarin.Grpc.ChannelCredentials?
override Xamarin.Grpc.TlsServerCredentials.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsServerCredentials.ClientAuth.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsServerCredentials.Feature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.TlsServerCredentials.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.Delegate() -> Xamarin.Grpc.ClientCall?
override sealed Xamarin.Grpc.ClientInterceptors.CheckedForwardingClientCall.Start(Xamarin.Grpc.ClientCall.Listener? responseListener, Xamarin.Grpc.Metadata? headers) -> void
override sealed Xamarin.Grpc.LoadBalancerProvider.Equals(Java.Lang.Object? other) -> bool
override sealed Xamarin.Grpc.LoadBalancerProvider.GetHashCode() -> int
override sealed Xamarin.Grpc.LoadBalancerProvider.ToString() -> string?
override sealed Xamarin.Grpc.Metadata.Key.Equals(Java.Lang.Object? o) -> bool
override sealed Xamarin.Grpc.Metadata.Key.GetHashCode() -> int
static Xamarin.Grpc.Attributes.Empty.get -> Xamarin.Grpc.Attributes?
static Xamarin.Grpc.Attributes.Key.Create(string? debugString) -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Attributes.Key.Of(string? debugString) -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Attributes.NewBuilder() -> Xamarin.Grpc.Attributes.Builder?
static Xamarin.Grpc.Attributes.NewBuilder(Xamarin.Grpc.Attributes? base) -> Xamarin.Grpc.Attributes.Builder?
static Xamarin.Grpc.CallOptions.Default.get -> Xamarin.Grpc.CallOptions?
static Xamarin.Grpc.CallOptions.Key.Create(string? debugString) -> Xamarin.Grpc.CallOptions.Key?
static Xamarin.Grpc.CallOptions.Key.CreateWithDefault(string? debugString, Java.Lang.Object? defaultValue) -> Xamarin.Grpc.CallOptions.Key?
static Xamarin.Grpc.CallOptions.Key.Of(string? debugString, Java.Lang.Object? defaultValue) -> Xamarin.Grpc.CallOptions.Key?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.Debug.get -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.Error.get -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.Info.get -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.ValueOf(string? name) -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.Values() -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel![]?
static Xamarin.Grpc.ChannelLogger.ChannelLogLevel.Warning.get -> Xamarin.Grpc.ChannelLogger.ChannelLogLevel?
static Xamarin.Grpc.ChoiceChannelCredentials.Create(params Xamarin.Grpc.ChannelCredentials![]? creds) -> Xamarin.Grpc.ChannelCredentials?
static Xamarin.Grpc.ChoiceServerCredentials.Create(params Xamarin.Grpc.ServerCredentials![]? creds) -> Xamarin.Grpc.ServerCredentials?
static Xamarin.Grpc.ClientInterceptors.Intercept(Xamarin.Grpc.Channel? channel, System.Collections.Generic.IList<Xamarin.Grpc.IClientInterceptor!>? interceptors) -> Xamarin.Grpc.Channel?
static Xamarin.Grpc.ClientInterceptors.Intercept(Xamarin.Grpc.Channel? channel, params Xamarin.Grpc.IClientInterceptor![]? interceptors) -> Xamarin.Grpc.Channel?
static Xamarin.Grpc.ClientInterceptors.InterceptForward(Xamarin.Grpc.Channel? channel, System.Collections.Generic.IList<Xamarin.Grpc.IClientInterceptor!>? interceptors) -> Xamarin.Grpc.Channel?
static Xamarin.Grpc.ClientInterceptors.InterceptForward(Xamarin.Grpc.Channel? channel, params Xamarin.Grpc.IClientInterceptor![]? interceptors) -> Xamarin.Grpc.Channel?
static Xamarin.Grpc.ClientStreamTracer.NameResolutionDelayed.get -> Xamarin.Grpc.CallOptions.Key?
static Xamarin.Grpc.ClientStreamTracer.StreamInfo.NewBuilder() -> Xamarin.Grpc.ClientStreamTracer.StreamInfo.Builder?
static Xamarin.Grpc.CodecIdentity.None.get -> Xamarin.Grpc.ICodec?
static Xamarin.Grpc.CompositeChannelCredentials.Create(Xamarin.Grpc.ChannelCredentials? channelCreds, Xamarin.Grpc.CallCredentials? callCreds) -> Xamarin.Grpc.ChannelCredentials?
static Xamarin.Grpc.CompressorRegistry.DefaultInstance.get -> Xamarin.Grpc.CompressorRegistry?
static Xamarin.Grpc.CompressorRegistry.NewEmptyInstance() -> Xamarin.Grpc.CompressorRegistry?
static Xamarin.Grpc.ConnectivityState.Connecting.get -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.Idle.get -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.Ready.get -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.Shutdown.get -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.TransientFailure.get -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.ValueOf(string? name) -> Xamarin.Grpc.ConnectivityState?
static Xamarin.Grpc.ConnectivityState.Values() -> Xamarin.Grpc.ConnectivityState![]?
static Xamarin.Grpc.ConnectivityStateInfo.ForNonError(Xamarin.Grpc.ConnectivityState? state) -> Xamarin.Grpc.ConnectivityStateInfo?
static Xamarin.Grpc.ConnectivityStateInfo.ForTransientFailure(Xamarin.Grpc.Status? error) -> Xamarin.Grpc.ConnectivityStateInfo?
static Xamarin.Grpc.Context.Current() -> Xamarin.Grpc.Context?
static Xamarin.Grpc.Context.CurrentContextExecutor(Java.Util.Concurrent.IExecutor? e) -> Java.Util.Concurrent.IExecutor?
static Xamarin.Grpc.Context.InvokeKey(string? debugString) -> Xamarin.Grpc.Context.Key?
static Xamarin.Grpc.Context.KeyWithDefault(string? debugString, Java.Lang.Object? defaultValue) -> Xamarin.Grpc.Context.Key?
static Xamarin.Grpc.Context.Root.get -> Xamarin.Grpc.Context?
static Xamarin.Grpc.Contexts.InterceptCall(Xamarin.Grpc.Context? context, Xamarin.Grpc.ServerCall? call, Xamarin.Grpc.Metadata? headers, Xamarin.Grpc.IServerCallHandler? next) -> Xamarin.Grpc.ServerCall.Listener?
static Xamarin.Grpc.Contexts.StatusFromCancelled(Xamarin.Grpc.Context? context) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Deadline.After(long duration, Java.Util.Concurrent.TimeUnit? units) -> Xamarin.Grpc.Deadline?
static Xamarin.Grpc.Deadline.After(long duration, Java.Util.Concurrent.TimeUnit? units, Xamarin.Grpc.Deadline.Ticker? ticker) -> Xamarin.Grpc.Deadline?
static Xamarin.Grpc.Deadline.SystemTicker.get -> Xamarin.Grpc.Deadline.Ticker?
static Xamarin.Grpc.DecompressorRegistry.DefaultInstance.get -> Xamarin.Grpc.DecompressorRegistry?
static Xamarin.Grpc.DecompressorRegistry.EmptyInstance() -> Xamarin.Grpc.DecompressorRegistry?
static Xamarin.Grpc.EquivalentAddressGroup.AttrAuthorityOverride.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.ForwardingChannelBuilder2.ForAddress(string? name, int port) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.ForwardingChannelBuilder2.ForTarget(string? target) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.ForwardingServerBuilder.ForPort(int port) -> Xamarin.Grpc.ServerBuilder?
static Xamarin.Grpc.Grpc.NewChannelBuilder(string? target, Xamarin.Grpc.ChannelCredentials? creds) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.Grpc.NewChannelBuilderForAddress(string? host, int port, Xamarin.Grpc.ChannelCredentials? creds) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.Grpc.NewServerBuilderForPort(int port, Xamarin.Grpc.ServerCredentials? creds) -> Xamarin.Grpc.ServerBuilder?
static Xamarin.Grpc.Grpc.TransportAttrLocalAddr.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Grpc.TransportAttrRemoteAddr.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Grpc.TransportAttrSslSession.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.HttpConnectProxiedSocketAddress.NewBuilder() -> Xamarin.Grpc.HttpConnectProxiedSocketAddress.Builder?
static Xamarin.Grpc.InsecureChannelCredentials.Create() -> Xamarin.Grpc.ChannelCredentials?
static Xamarin.Grpc.InsecureServerCredentials.Create() -> Xamarin.Grpc.ServerCredentials?
static Xamarin.Grpc.LoadBalancer.AttrHealthCheckingConfig.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key.Create(string? debugString) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key?
static Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key.CreateWithDefault(string? debugString, Java.Lang.Object? defaultValue) -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key?
static Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.NewBuilder() -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Builder?
static Xamarin.Grpc.LoadBalancer.DisableSubchannelReconnectKey.get -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key?
static Xamarin.Grpc.LoadBalancer.EmptyPicker.get -> Xamarin.Grpc.LoadBalancer.SubchannelPicker?
static Xamarin.Grpc.LoadBalancer.HasHealthProducerListenerKey.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.LoadBalancer.HealthConsumerListenerArgKey.get -> Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs.Key?
static Xamarin.Grpc.LoadBalancer.IsPetiolePolicy.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.LoadBalancer.PickResult.WithDrop(Xamarin.Grpc.Status? status) -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.PickResult.WithError(Xamarin.Grpc.Status? error) -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.PickResult.WithNoResult() -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.PickResult.WithSubchannel(Xamarin.Grpc.LoadBalancer.Subchannel? subchannel) -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.PickResult.WithSubchannel(Xamarin.Grpc.LoadBalancer.Subchannel? subchannel, Xamarin.Grpc.ClientStreamTracer.Factory? streamTracerFactory) -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.PickResult.WithSubchannel(Xamarin.Grpc.LoadBalancer.Subchannel? subchannel, Xamarin.Grpc.ClientStreamTracer.Factory? streamTracerFactory, string? authorityOverride) -> Xamarin.Grpc.LoadBalancer.PickResult?
static Xamarin.Grpc.LoadBalancer.ResolvedAddresses.NewBuilder() -> Xamarin.Grpc.LoadBalancer.ResolvedAddresses.Builder?
static Xamarin.Grpc.LoadBalancerRegistry.DefaultRegistry.get -> Xamarin.Grpc.LoadBalancerRegistry?
static Xamarin.Grpc.ManagedChannelBuilder.ForAddress(string? name, int port) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.ManagedChannelBuilder.ForTarget(string? target) -> Xamarin.Grpc.ManagedChannelBuilder?
static Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult.InvokeChannelBuilder(Xamarin.Grpc.ManagedChannelBuilder? builder) -> Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult?
static Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult.InvokeError(string? error) -> Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult?
static Xamarin.Grpc.ManagedChannelProvider.Provider() -> Xamarin.Grpc.ManagedChannelProvider?
static Xamarin.Grpc.ManagedChannelRegistry.DefaultRegistry.get -> Xamarin.Grpc.ManagedChannelRegistry?
static Xamarin.Grpc.Metadata.AsciiStringMarshaller.get -> Xamarin.Grpc.Metadata.IAsciiMarshaller?
static Xamarin.Grpc.Metadata.BinaryByteMarshaller.get -> Xamarin.Grpc.Metadata.IBinaryMarshaller?
static Xamarin.Grpc.Metadata.Key.Of(string? name, Xamarin.Grpc.Metadata.IAsciiMarshaller? marshaller) -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Metadata.Key.Of(string? name, Xamarin.Grpc.Metadata.IBinaryMarshaller? marshaller) -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Metadata.Key.Of(string? name, Xamarin.Grpc.Metadata.IBinaryStreamMarshaller? marshaller) -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.MethodDescriptor.Create(Xamarin.Grpc.MethodDescriptor.MethodType? type, string? fullMethodName, Xamarin.Grpc.MethodDescriptor.IMarshaller? requestMarshaller, Xamarin.Grpc.MethodDescriptor.IMarshaller? responseMarshaller) -> Xamarin.Grpc.MethodDescriptor?
static Xamarin.Grpc.MethodDescriptor.ExtractBareMethodName(string? fullMethodName) -> string?
static Xamarin.Grpc.MethodDescriptor.ExtractFullServiceName(string? fullMethodName) -> string?
static Xamarin.Grpc.MethodDescriptor.GenerateFullMethodName(string? fullServiceName, string? methodName) -> string?
static Xamarin.Grpc.MethodDescriptor.MethodType.BidiStreaming.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.ClientStreaming.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.ServerStreaming.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.Unary.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.Unknown.get -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.ValueOf(string? name) -> Xamarin.Grpc.MethodDescriptor.MethodType?
static Xamarin.Grpc.MethodDescriptor.MethodType.Values() -> Xamarin.Grpc.MethodDescriptor.MethodType![]?
static Xamarin.Grpc.MethodDescriptor.NewBuilder() -> Xamarin.Grpc.MethodDescriptor.Builder?
static Xamarin.Grpc.MethodDescriptor.NewBuilder(Xamarin.Grpc.MethodDescriptor.IMarshaller? requestMarshaller, Xamarin.Grpc.MethodDescriptor.IMarshaller? responseMarshaller) -> Xamarin.Grpc.MethodDescriptor.Builder?
static Xamarin.Grpc.MetricInstrumentRegistry.DefaultRegistry.get -> Xamarin.Grpc.MetricInstrumentRegistry?
static Xamarin.Grpc.NameResolver.Args.Key.Create(string? debugString) -> Xamarin.Grpc.NameResolver.Args.Key?
static Xamarin.Grpc.NameResolver.Args.NewBuilder() -> Xamarin.Grpc.NameResolver.Args.Builder?
static Xamarin.Grpc.NameResolver.AttrBackendService.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.NameResolver.ConfigOrError.FromConfig(Java.Lang.Object? config) -> Xamarin.Grpc.NameResolver.ConfigOrError?
static Xamarin.Grpc.NameResolver.ConfigOrError.FromError(Xamarin.Grpc.Status? status) -> Xamarin.Grpc.NameResolver.ConfigOrError?
static Xamarin.Grpc.NameResolver.ResolutionResult.NewBuilder() -> Xamarin.Grpc.NameResolver.ResolutionResult.Builder?
static Xamarin.Grpc.NameResolverRegistry.DefaultRegistry.get -> Xamarin.Grpc.NameResolverRegistry?
static Xamarin.Grpc.SecurityLevel.Integrity.get -> Xamarin.Grpc.SecurityLevel?
static Xamarin.Grpc.SecurityLevel.None.get -> Xamarin.Grpc.SecurityLevel?
static Xamarin.Grpc.SecurityLevel.PrivacyAndIntegrity.get -> Xamarin.Grpc.SecurityLevel?
static Xamarin.Grpc.SecurityLevel.ValueOf(string? name) -> Xamarin.Grpc.SecurityLevel?
static Xamarin.Grpc.SecurityLevel.Values() -> Xamarin.Grpc.SecurityLevel![]?
static Xamarin.Grpc.ServerBuilder.ForPort(int port) -> Xamarin.Grpc.ServerBuilder?
static Xamarin.Grpc.ServerInterceptors.Intercept(Xamarin.Grpc.IBindableService? bindableService, System.Collections.Generic.IList<Xamarin.Grpc.IServerInterceptor!>? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.Intercept(Xamarin.Grpc.IBindableService? bindableService, params Xamarin.Grpc.IServerInterceptor![]? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.Intercept(Xamarin.Grpc.ServerServiceDefinition? serviceDef, System.Collections.Generic.IList<Xamarin.Grpc.IServerInterceptor!>? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.Intercept(Xamarin.Grpc.ServerServiceDefinition? serviceDef, params Xamarin.Grpc.IServerInterceptor![]? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.InterceptForward(Xamarin.Grpc.IBindableService? bindableService, System.Collections.Generic.IList<Xamarin.Grpc.IServerInterceptor!>? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.InterceptForward(Xamarin.Grpc.IBindableService? bindableService, params Xamarin.Grpc.IServerInterceptor![]? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.InterceptForward(Xamarin.Grpc.ServerServiceDefinition? serviceDef, System.Collections.Generic.IList<Xamarin.Grpc.IServerInterceptor!>? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.InterceptForward(Xamarin.Grpc.ServerServiceDefinition? serviceDef, params Xamarin.Grpc.IServerInterceptor![]? interceptors) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.UseInputStreamMessages(Xamarin.Grpc.ServerServiceDefinition? serviceDef) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.UseMarshalledMessages(Xamarin.Grpc.ServerServiceDefinition? serviceDef, Xamarin.Grpc.MethodDescriptor.IMarshaller? marshaller) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerInterceptors.UseMarshalledMessages(Xamarin.Grpc.ServerServiceDefinition? serviceDef, Xamarin.Grpc.MethodDescriptor.IMarshaller? requestMarshaller, Xamarin.Grpc.MethodDescriptor.IMarshaller? responseMarshaller) -> Xamarin.Grpc.ServerServiceDefinition?
static Xamarin.Grpc.ServerMethodDefinition.Create(Xamarin.Grpc.MethodDescriptor? method, Xamarin.Grpc.IServerCallHandler? handler) -> Xamarin.Grpc.ServerMethodDefinition?
static Xamarin.Grpc.ServerProvider.NewServerBuilderResult.InvokeError(string? error) -> Xamarin.Grpc.ServerProvider.NewServerBuilderResult?
static Xamarin.Grpc.ServerProvider.NewServerBuilderResult.InvokeServerBuilder(Xamarin.Grpc.ServerBuilder? builder) -> Xamarin.Grpc.ServerProvider.NewServerBuilderResult?
static Xamarin.Grpc.ServerProvider.Provider() -> Xamarin.Grpc.ServerProvider?
static Xamarin.Grpc.ServerRegistry.DefaultRegistry.get -> Xamarin.Grpc.ServerRegistry?
static Xamarin.Grpc.ServerServiceDefinition.InvokeBuilder(Xamarin.Grpc.ServiceDescriptor? serviceDescriptor) -> Xamarin.Grpc.ServerServiceDefinition.Builder?
static Xamarin.Grpc.ServerServiceDefinition.InvokeBuilder(string? serviceName) -> Xamarin.Grpc.ServerServiceDefinition.Builder?
static Xamarin.Grpc.ServiceDescriptor.NewBuilder(string? name) -> Xamarin.Grpc.ServiceDescriptor.Builder?
static Xamarin.Grpc.Status.Aborted.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.AlreadyExists.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Cancelled.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Code.Aborted.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.AlreadyExists.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Cancelled.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.DataLoss.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.DeadlineExceeded.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.FailedPrecondition.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Internal.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.InvalidArgument.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.NotFound.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Ok.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.OutOfRange.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.PermissionDenied.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.ResourceExhausted.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Unauthenticated.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Unavailable.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Unimplemented.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Unknown.get -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.ValueOf(string? name) -> Xamarin.Grpc.Status.Code?
static Xamarin.Grpc.Status.Code.Values() -> Xamarin.Grpc.Status.Code![]?
static Xamarin.Grpc.Status.DataLoss.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.DeadlineExceeded.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.FailedPrecondition.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.FromCode(Xamarin.Grpc.Status.Code? code) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.FromCodeValue(int codeValue) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.FromThrowable(Java.Lang.Throwable? t) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Internal.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.InvalidArgument.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.NotFound.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Ok.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.OutOfRange.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.PermissionDenied.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.ResourceExhausted.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.TrailersFromThrowable(Java.Lang.Throwable? t) -> Xamarin.Grpc.Metadata?
static Xamarin.Grpc.Status.Unauthenticated.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Unavailable.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Unimplemented.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Status.Unknown.get -> Xamarin.Grpc.Status?
static Xamarin.Grpc.StatusOr.FromStatus(Xamarin.Grpc.Status? status) -> Xamarin.Grpc.StatusOr?
static Xamarin.Grpc.StatusOr.FromValue(Java.Lang.Object? value) -> Xamarin.Grpc.StatusOr?
static Xamarin.Grpc.TlsChannelCredentials.Create() -> Xamarin.Grpc.ChannelCredentials?
static Xamarin.Grpc.TlsChannelCredentials.Feature.CustomManagers.get -> Xamarin.Grpc.TlsChannelCredentials.Feature?
static Xamarin.Grpc.TlsChannelCredentials.Feature.Fake.get -> Xamarin.Grpc.TlsChannelCredentials.Feature?
static Xamarin.Grpc.TlsChannelCredentials.Feature.Mtls.get -> Xamarin.Grpc.TlsChannelCredentials.Feature?
static Xamarin.Grpc.TlsChannelCredentials.Feature.ValueOf(string? name) -> Xamarin.Grpc.TlsChannelCredentials.Feature?
static Xamarin.Grpc.TlsChannelCredentials.Feature.Values() -> Xamarin.Grpc.TlsChannelCredentials.Feature![]?
static Xamarin.Grpc.TlsChannelCredentials.NewBuilder() -> Xamarin.Grpc.TlsChannelCredentials.Builder?
static Xamarin.Grpc.TlsServerCredentials.ClientAuth.None.get -> Xamarin.Grpc.TlsServerCredentials.ClientAuth?
static Xamarin.Grpc.TlsServerCredentials.ClientAuth.Optional.get -> Xamarin.Grpc.TlsServerCredentials.ClientAuth?
static Xamarin.Grpc.TlsServerCredentials.ClientAuth.Require.get -> Xamarin.Grpc.TlsServerCredentials.ClientAuth?
static Xamarin.Grpc.TlsServerCredentials.ClientAuth.ValueOf(string? name) -> Xamarin.Grpc.TlsServerCredentials.ClientAuth?
static Xamarin.Grpc.TlsServerCredentials.ClientAuth.Values() -> Xamarin.Grpc.TlsServerCredentials.ClientAuth![]?
static Xamarin.Grpc.TlsServerCredentials.Create(Java.IO.File? certChain, Java.IO.File? privateKey) -> Xamarin.Grpc.ServerCredentials?
static Xamarin.Grpc.TlsServerCredentials.Create(System.IO.Stream? certChain, System.IO.Stream? privateKey) -> Xamarin.Grpc.ServerCredentials?
static Xamarin.Grpc.TlsServerCredentials.Feature.CustomManagers.get -> Xamarin.Grpc.TlsServerCredentials.Feature?
static Xamarin.Grpc.TlsServerCredentials.Feature.Fake.get -> Xamarin.Grpc.TlsServerCredentials.Feature?
static Xamarin.Grpc.TlsServerCredentials.Feature.Mtls.get -> Xamarin.Grpc.TlsServerCredentials.Feature?
static Xamarin.Grpc.TlsServerCredentials.Feature.ValueOf(string? name) -> Xamarin.Grpc.TlsServerCredentials.Feature?
static Xamarin.Grpc.TlsServerCredentials.Feature.Values() -> Xamarin.Grpc.TlsServerCredentials.Feature![]?
static Xamarin.Grpc.TlsServerCredentials.NewBuilder() -> Xamarin.Grpc.TlsServerCredentials.Builder?
virtual Xamarin.Grpc.CallCredentials.RequestInfo.CallOptions.get -> Xamarin.Grpc.CallOptions?
virtual Xamarin.Grpc.CallCredentials.ThisUsesUnstableApi() -> void
virtual Xamarin.Grpc.ClientCall.Attributes.get -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.ClientCall.IsReady.get -> bool
virtual Xamarin.Grpc.ClientCall.Listener.OnClose(Xamarin.Grpc.Status? status, Xamarin.Grpc.Metadata? trailers) -> void
virtual Xamarin.Grpc.ClientCall.Listener.OnHeaders(Xamarin.Grpc.Metadata? headers) -> void
virtual Xamarin.Grpc.ClientCall.Listener.OnMessage(Java.Lang.Object? message) -> void
virtual Xamarin.Grpc.ClientCall.Listener.OnReady() -> void
virtual Xamarin.Grpc.ClientCall.SetMessageCompression(bool enabled) -> void
virtual Xamarin.Grpc.ClientStreamTracer.AddOptionalLabel(string? key, string? value) -> void
virtual Xamarin.Grpc.ClientStreamTracer.CreatePendingStream() -> void
virtual Xamarin.Grpc.ClientStreamTracer.Factory.NewClientStreamTracer(Xamarin.Grpc.ClientStreamTracer.StreamInfo? info, Xamarin.Grpc.Metadata? headers) -> Xamarin.Grpc.ClientStreamTracer?
virtual Xamarin.Grpc.ClientStreamTracer.InboundHeaders() -> void
virtual Xamarin.Grpc.ClientStreamTracer.InboundHeaders(Xamarin.Grpc.Metadata? headers) -> void
virtual Xamarin.Grpc.ClientStreamTracer.InboundTrailers(Xamarin.Grpc.Metadata? trailers) -> void
virtual Xamarin.Grpc.ClientStreamTracer.OutboundHeaders() -> void
virtual Xamarin.Grpc.ClientStreamTracer.StreamCreated(Xamarin.Grpc.Attributes? transportAttrs, Xamarin.Grpc.Metadata? headers) -> void
virtual Xamarin.Grpc.ClientTransportFilter.TransportReady(Xamarin.Grpc.Attributes? transportAttrs) -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.ClientTransportFilter.TransportTerminated(Xamarin.Grpc.Attributes? transportAttrs) -> void
virtual Xamarin.Grpc.Context.AddListener(Xamarin.Grpc.Context.ICancellationListener? cancellationListener, Java.Util.Concurrent.IExecutor? executor) -> void
virtual Xamarin.Grpc.Context.Attach() -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.Call(Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
virtual Xamarin.Grpc.Context.CancellationCause() -> Java.Lang.Throwable?
virtual Xamarin.Grpc.Context.Deadline.get -> Xamarin.Grpc.Deadline?
virtual Xamarin.Grpc.Context.Detach(Xamarin.Grpc.Context? toAttach) -> void
virtual Xamarin.Grpc.Context.FixedContextExecutor(Java.Util.Concurrent.IExecutor? e) -> Java.Util.Concurrent.IExecutor?
virtual Xamarin.Grpc.Context.Fork() -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.IsCancelled.get -> bool
virtual Xamarin.Grpc.Context.RemoveListener(Xamarin.Grpc.Context.ICancellationListener? cancellationListener) -> void
virtual Xamarin.Grpc.Context.Run(Java.Lang.IRunnable? r) -> void
virtual Xamarin.Grpc.Context.WithCancellation() -> Xamarin.Grpc.Context.CancellableContext?
virtual Xamarin.Grpc.Context.WithDeadline(Xamarin.Grpc.Deadline? newDeadline, Java.Util.Concurrent.IScheduledExecutorService? scheduler) -> Xamarin.Grpc.Context.CancellableContext?
virtual Xamarin.Grpc.Context.WithDeadlineAfter(long duration, Java.Util.Concurrent.TimeUnit? unit, Java.Util.Concurrent.IScheduledExecutorService? scheduler) -> Xamarin.Grpc.Context.CancellableContext?
virtual Xamarin.Grpc.Context.WithValue(Xamarin.Grpc.Context.Key? k1, Java.Lang.Object? v1) -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.WithValues(Xamarin.Grpc.Context.Key? k1, Java.Lang.Object? v1, Xamarin.Grpc.Context.Key? k2, Java.Lang.Object? v2) -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.WithValues(Xamarin.Grpc.Context.Key? k1, Java.Lang.Object? v1, Xamarin.Grpc.Context.Key? k2, Java.Lang.Object? v2, Xamarin.Grpc.Context.Key? k3, Java.Lang.Object? v3) -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.WithValues(Xamarin.Grpc.Context.Key? k1, Java.Lang.Object? v1, Xamarin.Grpc.Context.Key? k2, Java.Lang.Object? v2, Xamarin.Grpc.Context.Key? k3, Java.Lang.Object? v3, Xamarin.Grpc.Context.Key? k4, Java.Lang.Object? v4) -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.Context.Wrap(Java.Lang.IRunnable? r) -> Java.Lang.IRunnable?
virtual Xamarin.Grpc.Context.Wrap(Java.Util.Concurrent.ICallable? c) -> Java.Util.Concurrent.ICallable?
virtual Xamarin.Grpc.ForwardingChannelBuilder2.Intercept(System.Collections.Generic.IList<Xamarin.Grpc.IClientInterceptor!>? interceptors) -> Java.Lang.Object?
virtual Xamarin.Grpc.ForwardingChannelBuilder2.Intercept(params Xamarin.Grpc.IClientInterceptor![]? interceptors) -> Java.Lang.Object?
virtual Xamarin.Grpc.ForwardingServerCall.MethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
virtual Xamarin.Grpc.HandlerRegistry.Services.get -> System.Collections.Generic.IList<Xamarin.Grpc.ServerServiceDefinition!>?
virtual Xamarin.Grpc.LoadBalancer.AcceptResolvedAddresses(Xamarin.Grpc.LoadBalancer.ResolvedAddresses? resolvedAddresses) -> Xamarin.Grpc.Status?
virtual Xamarin.Grpc.LoadBalancer.CanHandleEmptyAddressListFromNameResolution() -> bool
virtual Xamarin.Grpc.LoadBalancer.HandleResolvedAddresses(Xamarin.Grpc.LoadBalancer.ResolvedAddresses? resolvedAddresses) -> void
virtual Xamarin.Grpc.LoadBalancer.HandleSubchannelState(Xamarin.Grpc.LoadBalancer.Subchannel? subchannel, Xamarin.Grpc.ConnectivityStateInfo? stateInfo) -> void
virtual Xamarin.Grpc.LoadBalancer.Helper.ChannelCredentials.get -> Xamarin.Grpc.ChannelCredentials?
virtual Xamarin.Grpc.LoadBalancer.Helper.ChannelLogger.get -> Xamarin.Grpc.ChannelLogger?
virtual Xamarin.Grpc.LoadBalancer.Helper.ChannelTarget.get -> string?
virtual Xamarin.Grpc.LoadBalancer.Helper.CreateOobChannel(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? eag, string? authority) -> Xamarin.Grpc.ManagedChannel?
virtual Xamarin.Grpc.LoadBalancer.Helper.CreateResolvingOobChannel(string? target) -> Xamarin.Grpc.ManagedChannel?
virtual Xamarin.Grpc.LoadBalancer.Helper.CreateResolvingOobChannelBuilder(string? target) -> Xamarin.Grpc.ManagedChannelBuilder?
virtual Xamarin.Grpc.LoadBalancer.Helper.CreateResolvingOobChannelBuilder(string? target, Xamarin.Grpc.ChannelCredentials? creds) -> Xamarin.Grpc.ManagedChannelBuilder?
virtual Xamarin.Grpc.LoadBalancer.Helper.CreateSubchannel(Xamarin.Grpc.LoadBalancer.CreateSubchannelArgs? args) -> Xamarin.Grpc.LoadBalancer.Subchannel?
virtual Xamarin.Grpc.LoadBalancer.Helper.IgnoreRefreshNameResolutionCheck() -> void
virtual Xamarin.Grpc.LoadBalancer.Helper.MetricRecorder.get -> Xamarin.Grpc.IMetricRecorder?
virtual Xamarin.Grpc.LoadBalancer.Helper.NameResolverArgs.get -> Xamarin.Grpc.NameResolver.Args?
virtual Xamarin.Grpc.LoadBalancer.Helper.NameResolverRegistry.get -> Xamarin.Grpc.NameResolverRegistry?
virtual Xamarin.Grpc.LoadBalancer.Helper.RefreshNameResolution() -> void
virtual Xamarin.Grpc.LoadBalancer.Helper.ScheduledExecutorService.get -> Java.Util.Concurrent.IScheduledExecutorService?
virtual Xamarin.Grpc.LoadBalancer.Helper.SynchronizationContext.get -> Xamarin.Grpc.SynchronizationContext?
virtual Xamarin.Grpc.LoadBalancer.Helper.UnsafeChannelCredentials.get -> Xamarin.Grpc.ChannelCredentials?
virtual Xamarin.Grpc.LoadBalancer.Helper.UpdateOobChannelAddresses(Xamarin.Grpc.ManagedChannel? channel, System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? eag) -> void
virtual Xamarin.Grpc.LoadBalancer.Helper.UpdateOobChannelAddresses(Xamarin.Grpc.ManagedChannel? channel, Xamarin.Grpc.EquivalentAddressGroup? eag) -> void
virtual Xamarin.Grpc.LoadBalancer.PickSubchannelArgs.PickDetailsConsumer.get -> Xamarin.Grpc.LoadBalancer.IPickDetailsConsumer?
virtual Xamarin.Grpc.LoadBalancer.RequestConnection() -> void
virtual Xamarin.Grpc.LoadBalancer.Subchannel.AllAddresses.get -> System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>?
virtual Xamarin.Grpc.LoadBalancer.Subchannel.AsChannel() -> Xamarin.Grpc.Channel?
virtual Xamarin.Grpc.LoadBalancer.Subchannel.ChannelLogger.get -> Xamarin.Grpc.ChannelLogger?
virtual Xamarin.Grpc.LoadBalancer.Subchannel.ConnectedAddressAttributes.get -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.LoadBalancer.Subchannel.InternalSubchannel.get -> Java.Lang.Object?
virtual Xamarin.Grpc.LoadBalancer.Subchannel.Start(Xamarin.Grpc.LoadBalancer.ISubchannelStateListener? listener) -> void
virtual Xamarin.Grpc.LoadBalancer.Subchannel.UpdateAddresses(System.Collections.Generic.IList<Xamarin.Grpc.EquivalentAddressGroup!>? addrs) -> void
virtual Xamarin.Grpc.LoadBalancerProvider.ParseLoadBalancingPolicyConfig(System.Collections.Generic.IDictionary<string!, object!>? rawLoadBalancingPolicyConfig) -> Xamarin.Grpc.NameResolver.ConfigOrError?
virtual Xamarin.Grpc.ManagedChannel.EnterIdle() -> void
virtual Xamarin.Grpc.ManagedChannel.GetState(bool requestConnection) -> Xamarin.Grpc.ConnectivityState?
virtual Xamarin.Grpc.ManagedChannel.NotifyWhenStateChanged(Xamarin.Grpc.ConnectivityState? source, Java.Lang.IRunnable? callback) -> void
virtual Xamarin.Grpc.ManagedChannel.ResetConnectBackoff() -> void
virtual Xamarin.Grpc.ManagedChannelBuilder.AddMetricSink(Xamarin.Grpc.IMetricSink? metricSink) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.AddTransportFilter(Xamarin.Grpc.ClientTransportFilter? filter) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.DefaultLoadBalancingPolicy(string? policy) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.DefaultServiceConfig(System.Collections.IDictionary? serviceConfig) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.DisableRetry() -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.DisableServiceConfigLookUp() -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.EnableRetry() -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.InterceptWithTarget(Xamarin.Grpc.ManagedChannelBuilder.IInterceptorFactory? factory) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.KeepAliveTime(long keepAliveTime, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.KeepAliveTimeout(long keepAliveTimeout, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.KeepAliveWithoutCalls(bool enable) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.MaxHedgedAttempts(int maxHedgedAttempts) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.MaxInboundMessageSize(int bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.MaxInboundMetadataSize(int bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.MaxRetryAttempts(int maxRetryAttempts) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.MaxTraceEvents(int maxTraceEvents) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.OffloadExecutor(Java.Util.Concurrent.IExecutor? executor) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.PerRpcBufferLimit(long bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.ProxyDetector(Xamarin.Grpc.IProxyDetector? proxyDetector) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.RetryBufferSize(long bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.SetBinaryLog(Xamarin.Grpc.BinaryLog? binaryLog) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.SetNameResolverArg(Xamarin.Grpc.NameResolver.Args.Key? key, Java.Lang.Object? value) -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.UsePlaintext() -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelBuilder.UseTransportSecurity() -> Java.Lang.Object?
virtual Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilder(string? target, Xamarin.Grpc.ChannelCredentials? creds) -> Xamarin.Grpc.ManagedChannelProvider.NewChannelBuilderResult?
virtual Xamarin.Grpc.NameResolver.Listener2.OnResult2(Xamarin.Grpc.NameResolver.ResolutionResult? resolutionResult) -> Xamarin.Grpc.Status?
virtual Xamarin.Grpc.NameResolver.Refresh() -> void
virtual Xamarin.Grpc.NameResolver.Start(Xamarin.Grpc.NameResolver.IListener? listener) -> void
virtual Xamarin.Grpc.NameResolver.Start(Xamarin.Grpc.NameResolver.Listener2? listener) -> void
virtual Xamarin.Grpc.NameResolverProvider.ProducedSocketAddressTypes.get -> System.Collections.Generic.ICollection<Java.Lang.Class!>?
virtual Xamarin.Grpc.NameResolverProvider.Scheme.get -> string?
virtual Xamarin.Grpc.Server.ImmutableServices.get -> System.Collections.Generic.IList<Xamarin.Grpc.ServerServiceDefinition!>?
virtual Xamarin.Grpc.Server.ListenSockets.get -> System.Collections.Generic.IList<Java.Net.SocketAddress!>?
virtual Xamarin.Grpc.Server.MutableServices.get -> System.Collections.Generic.IList<Xamarin.Grpc.ServerServiceDefinition!>?
virtual Xamarin.Grpc.Server.Port.get -> int
virtual Xamarin.Grpc.Server.Services.get -> System.Collections.Generic.IList<Xamarin.Grpc.ServerServiceDefinition!>?
virtual Xamarin.Grpc.ServerBuilder.AddStreamTracerFactory(Xamarin.Grpc.ServerStreamTracer.Factory? factory) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.AddTransportFilter(Xamarin.Grpc.ServerTransportFilter? filter) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.CallExecutor(Xamarin.Grpc.IServerCallExecutorSupplier? executorSupplier) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.HandshakeTimeout(long timeout, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.Intercept(Xamarin.Grpc.IServerInterceptor? interceptor) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.KeepAliveTime(long keepAliveTime, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.KeepAliveTimeout(long keepAliveTimeout, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.MaxConnectionAge(long maxConnectionAge, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.MaxConnectionAgeGrace(long maxConnectionAgeGrace, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.MaxConnectionIdle(long maxConnectionIdle, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.MaxInboundMessageSize(int bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.MaxInboundMetadataSize(int bytes) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.PermitKeepAliveTime(long keepAliveTime, Java.Util.Concurrent.TimeUnit? timeUnit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.PermitKeepAliveWithoutCalls(bool permit) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.SetBinaryLog(Xamarin.Grpc.BinaryLog? binaryLog) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerBuilder.UseTransportSecurity(System.IO.Stream? certChain, System.IO.Stream? privateKey) -> Java.Lang.Object?
virtual Xamarin.Grpc.ServerCall.Attributes.get -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.ServerCall.Authority.get -> string?
virtual Xamarin.Grpc.ServerCall.IsReady.get -> bool
virtual Xamarin.Grpc.ServerCall.Listener.OnCancel() -> void
virtual Xamarin.Grpc.ServerCall.Listener.OnComplete() -> void
virtual Xamarin.Grpc.ServerCall.Listener.OnHalfClose() -> void
virtual Xamarin.Grpc.ServerCall.Listener.OnMessage(Java.Lang.Object? message) -> void
virtual Xamarin.Grpc.ServerCall.Listener.OnReady() -> void
virtual Xamarin.Grpc.ServerCall.SecurityLevel.get -> Xamarin.Grpc.SecurityLevel?
virtual Xamarin.Grpc.ServerCall.SetCompression(string? compressor) -> void
virtual Xamarin.Grpc.ServerCall.SetMessageCompression(bool enabled) -> void
virtual Xamarin.Grpc.ServerCall.SetOnReadyThreshold(int numBytes) -> void
virtual Xamarin.Grpc.ServerProvider.NewServerBuilderForPort(int port, Xamarin.Grpc.ServerCredentials? creds) -> Xamarin.Grpc.ServerProvider.NewServerBuilderResult?
virtual Xamarin.Grpc.ServerStreamTracer.FilterContext(Xamarin.Grpc.Context? context) -> Xamarin.Grpc.Context?
virtual Xamarin.Grpc.ServerStreamTracer.ServerCallStarted(Xamarin.Grpc.ServerCall? call) -> void
virtual Xamarin.Grpc.ServerStreamTracer.ServerCallStarted(Xamarin.Grpc.ServerStreamTracer.ServerCallInfo? callInfo) -> void
virtual Xamarin.Grpc.ServerTransportFilter.TransportReady(Xamarin.Grpc.Attributes? transportAttrs) -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.ServerTransportFilter.TransportTerminated(Xamarin.Grpc.Attributes? transportAttrs) -> void
virtual Xamarin.Grpc.StatusOr.HasValue.get -> bool
virtual Xamarin.Grpc.StatusOr.Status.get -> Xamarin.Grpc.Status?
virtual Xamarin.Grpc.StatusOr.Value.get -> Java.Lang.Object?
virtual Xamarin.Grpc.StreamTracer.InboundMessage(int seqNo) -> void
virtual Xamarin.Grpc.StreamTracer.InboundMessageRead(int seqNo, long optionalWireSize, long optionalUncompressedSize) -> void
virtual Xamarin.Grpc.StreamTracer.InboundUncompressedSize(long bytes) -> void
virtual Xamarin.Grpc.StreamTracer.InboundWireSize(long bytes) -> void
virtual Xamarin.Grpc.StreamTracer.OutboundMessage(int seqNo) -> void
virtual Xamarin.Grpc.StreamTracer.OutboundMessageSent(int seqNo, long optionalWireSize, long optionalUncompressedSize) -> void
virtual Xamarin.Grpc.StreamTracer.OutboundUncompressedSize(long bytes) -> void
virtual Xamarin.Grpc.StreamTracer.OutboundWireSize(long bytes) -> void
virtual Xamarin.Grpc.StreamTracer.StreamClosed(Xamarin.Grpc.Status? status) -> void
