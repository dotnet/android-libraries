#nullable enable
Xamarin.Grpc.Core.Internal.AbstractReadableBuffer
Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.AbstractReadableBuffer() -> void
Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.AbstractReadableBuffer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.CheckReadable(int length) -> void
Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadInt() -> int
Xamarin.Grpc.Core.Internal.AbstractStream
Xamarin.Grpc.Core.Internal.AbstractStream.AbstractStream() -> void
Xamarin.Grpc.Core.Internal.AbstractStream.AbstractStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.EndOfMessages() -> void
Xamarin.Grpc.Core.Internal.AbstractStream.Flush() -> void
Xamarin.Grpc.Core.Internal.AbstractStream.OnSendingBytes(int numBytes) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.Request(int numMessages) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.SetCompressor(Xamarin.Grpc.ICompressor? compressor) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.SetMessageCompression(bool enable) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.CloseDeframer(bool stopDelivery) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.Deframe(Xamarin.Grpc.Core.Internal.IReadableBuffer? frame) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.OnSentBytes(int numBytes) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.OnStreamDeallocated() -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.RequestMessagesFromDeframerForTesting(int numMessages) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.SetDecompressor(Xamarin.Grpc.IDecompressor? decompressor) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.StatsTraceContext.get -> Xamarin.Grpc.Core.Internal.StatsTraceContext?
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.TransportState(int maxMessageSize, Xamarin.Grpc.Core.Internal.StatsTraceContext? statsTraceCtx, Xamarin.Grpc.Core.Internal.TransportTracer? transportTracer) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.TransportState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable
Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable._1RequestRunnable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.AbstractStream.WriteMessage(System.IO.Stream? message) -> void
Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer
Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.ApplicationThreadDeframer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.AtomicBackoff
Xamarin.Grpc.Core.Internal.AtomicBackoff.AtomicBackoff(string? name, long value) -> void
Xamarin.Grpc.Core.Internal.AtomicBackoff.GetState() -> Xamarin.Grpc.Core.Internal.AtomicBackoff.State?
Xamarin.Grpc.Core.Internal.AtomicBackoff.State
Xamarin.Grpc.Core.Internal.AtomicBackoff.State.Backoff() -> void
Xamarin.Grpc.Core.Internal.AtomicBackoff.State.Get() -> long
Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory
Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.AutoConfiguredLoadBalancer
Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.AutoConfiguredLoadBalancer.Delegate.get -> Xamarin.Grpc.LoadBalancer?
Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.AutoConfiguredLoadBalancerFactory(string? defaultPolicy) -> void
Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.NewLoadBalancer(Xamarin.Grpc.LoadBalancer.Helper? helper) -> Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.AutoConfiguredLoadBalancer?
Xamarin.Grpc.Core.Internal.CertificateUtils
Xamarin.Grpc.Core.Internal.CertificateUtils.CertificateUtils() -> void
Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.Authority.get -> string?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.ChannelLogger.get -> Xamarin.Grpc.ChannelLogger?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.ClientTransportFactoryClientTransportOptions() -> void
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.EagAttributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.HttpConnectProxiedSocketAddress.get -> Xamarin.Grpc.HttpConnectProxiedSocketAddress?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.SetAuthority(string? authority) -> Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.SetChannelLogger(Xamarin.Grpc.ChannelLogger? channelLogger) -> Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.SetEagAttributes(Xamarin.Grpc.Attributes? eagAttributes) -> Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.SetHttpConnectProxiedSocketAddress(Xamarin.Grpc.HttpConnectProxiedSocketAddress? connectProxiedSocketAddr) -> Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.SetUserAgent(string? userAgent) -> Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions?
Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.UserAgent.get -> string?
Xamarin.Grpc.Core.Internal.ClientTransportFactorySwapChannelCredentialsResult
Xamarin.Grpc.Core.Internal.ClientTransportFactorySwapChannelCredentialsResult.ClientTransportFactorySwapChannelCredentialsResult(Xamarin.Grpc.Core.Internal.IClientTransportFactory? transportFactory, Xamarin.Grpc.CallCredentials? callCredentials) -> void
Xamarin.Grpc.Core.Internal.ConscryptLoader
Xamarin.Grpc.Core.Internal.ConscryptLoader.ConscryptLoader() -> void
Xamarin.Grpc.Core.Internal.DelayedClientCall
Xamarin.Grpc.Core.Internal.DelayedClientCall.DelayedClientCall(Java.Util.Concurrent.IExecutor? callExecutor, Java.Util.Concurrent.IScheduledExecutorService? scheduler, Xamarin.Grpc.Deadline? deadline) -> void
Xamarin.Grpc.Core.Internal.DelayedClientCall.DelayedClientCall(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.DelayedClientCall.SetCall(Xamarin.Grpc.ClientCall? call) -> Java.Lang.IRunnable?
Xamarin.Grpc.Core.Internal.DnsNameResolver
Xamarin.Grpc.Core.Internal.DnsNameResolver.AddressResolver.get -> Xamarin.Grpc.Core.Internal.DnsNameResolver.IAddressResolver?
Xamarin.Grpc.Core.Internal.DnsNameResolver.AddressResolver.set -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.DnsNameResolver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.IAddressResolver
Xamarin.Grpc.Core.Internal.DnsNameResolver.IAddressResolver.ResolveAddress(string? p0) -> System.Collections.Generic.IList<Java.Net.InetAddress!>?
Xamarin.Grpc.Core.Internal.DnsNameResolver.IResourceResolver
Xamarin.Grpc.Core.Internal.DnsNameResolver.IResourceResolver.ResolveSrv(string? p0) -> System.Collections.Generic.IList<Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord!>?
Xamarin.Grpc.Core.Internal.DnsNameResolver.IResourceResolver.ResolveTxt(string? p0) -> System.Collections.Generic.IList<string!>?
Xamarin.Grpc.Core.Internal.DnsNameResolver.InternalResolutionResult
Xamarin.Grpc.Core.Internal.DnsNameResolver.InternalResolutionResult.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Core.Internal.DnsNameResolver.InternalResolutionResult.Attributes.set -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.Resolved.get -> bool
Xamarin.Grpc.Core.Internal.DnsNameResolver.Resolved.set -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.Host.get -> string?
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.Host.set -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.Port.get -> int
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.Port.set -> void
Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.SrvRecord(string? host, int port) -> void
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.ExponentialBackoffPolicy() -> void
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.NextBackoffNanos() -> long
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.Provider
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.Provider.Get() -> Xamarin.Grpc.Core.Internal.IBackoffPolicy?
Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.Provider.Provider() -> void
Xamarin.Grpc.Core.Internal.FailingClientStream
Xamarin.Grpc.Core.Internal.FailingClientStream.FailingClientStream(Xamarin.Grpc.Status? error, Xamarin.Grpc.ClientStreamTracer![]? tracers) -> void
Xamarin.Grpc.Core.Internal.FailingClientStream.FailingClientStream(Xamarin.Grpc.Status? error, Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress? rpcProgress, Xamarin.Grpc.ClientStreamTracer![]? tracers) -> void
Xamarin.Grpc.Core.Internal.FixedObjectPool
Xamarin.Grpc.Core.Internal.FixedObjectPool.FixedObjectPool(Java.Lang.Object? object) -> void
Xamarin.Grpc.Core.Internal.FixedObjectPool.Object.get -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.FixedObjectPool.ReturnObject(Java.Lang.Object? returned) -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer
Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.ForwardingClientStreamTracer() -> void
Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.ForwardingClientStreamTracer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer
Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ForwardingReadableBuffer(Xamarin.Grpc.Core.Internal.IReadableBuffer? buf) -> void
Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ForwardingReadableBuffer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.GrpcAttributes
Xamarin.Grpc.Core.Internal.GrpcUtil
Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper
Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.AuthorityEscaper() -> void
Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.AuthorityEscaper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.GrpcUtil.GrpcBuildVersion
Xamarin.Grpc.Core.Internal.GrpcUtil.GrpcBuildVersion.ImplementationVersion.get -> string?
Xamarin.Grpc.Core.Internal.GrpcUtil.GrpcBuildVersion.UserAgent.get -> string?
Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error
Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.Code() -> long
Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.Status() -> Xamarin.Grpc.Status?
Xamarin.Grpc.Core.Internal.Http2Ping
Xamarin.Grpc.Core.Internal.Http2Ping.Http2Ping(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.IAuthorityVerifier
Xamarin.Grpc.Core.Internal.IAuthorityVerifier.VerifyAuthority(string? p0) -> Xamarin.Grpc.Status?
Xamarin.Grpc.Core.Internal.IBackoffPolicy
Xamarin.Grpc.Core.Internal.IBackoffPolicy.NextBackoffNanos() -> long
Xamarin.Grpc.Core.Internal.IBackoffPolicyProvider
Xamarin.Grpc.Core.Internal.IBackoffPolicyProvider.Get() -> Xamarin.Grpc.Core.Internal.IBackoffPolicy?
Xamarin.Grpc.Core.Internal.IClientStream
Xamarin.Grpc.Core.Internal.IClientStream.AppendTimeoutInsight(Xamarin.Grpc.Core.Internal.InsightBuilder? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Core.Internal.IClientStream.Cancel(Xamarin.Grpc.Status? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.HalfClose() -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetAuthority(string? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetDeadline(Xamarin.Grpc.Deadline? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetDecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetFullStreamDecompression(bool p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetMaxInboundMessageSize(int p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.SetMaxOutboundMessageSize(int p0) -> void
Xamarin.Grpc.Core.Internal.IClientStream.Start(Xamarin.Grpc.Core.Internal.IClientStreamListener? p0) -> void
Xamarin.Grpc.Core.Internal.IClientStreamListener
Xamarin.Grpc.Core.Internal.IClientStreamListener.Closed(Xamarin.Grpc.Status? p0, Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress? p1, Xamarin.Grpc.Metadata? p2) -> void
Xamarin.Grpc.Core.Internal.IClientStreamListener.HeadersRead(Xamarin.Grpc.Metadata? p0) -> void
Xamarin.Grpc.Core.Internal.IClientTransportFactory
Xamarin.Grpc.Core.Internal.IClientTransportFactory.Close() -> void
Xamarin.Grpc.Core.Internal.IClientTransportFactory.ScheduledExecutorService.get -> Java.Util.Concurrent.IScheduledExecutorService?
Xamarin.Grpc.Core.Internal.IClientTransportFactory.SupportedSocketAddressTypes.get -> System.Collections.Generic.ICollection<Java.Lang.Class!>?
Xamarin.Grpc.Core.Internal.IClientTransportFactory.SwapChannelCredentials(Xamarin.Grpc.ChannelCredentials? p0) -> Xamarin.Grpc.Core.Internal.ClientTransportFactorySwapChannelCredentialsResult?
Xamarin.Grpc.Core.Internal.IDeframer
Xamarin.Grpc.Core.Internal.IDeframer.Close() -> void
Xamarin.Grpc.Core.Internal.IDeframer.CloseWhenComplete() -> void
Xamarin.Grpc.Core.Internal.IDeframer.Deframe(Xamarin.Grpc.Core.Internal.IReadableBuffer? p0) -> void
Xamarin.Grpc.Core.Internal.IDeframer.Request(int p0) -> void
Xamarin.Grpc.Core.Internal.IDeframer.SetDecompressor(Xamarin.Grpc.IDecompressor? p0) -> void
Xamarin.Grpc.Core.Internal.IDeframer.SetMaxInboundMessageSize(int p0) -> void
Xamarin.Grpc.Core.Internal.IFramer
Xamarin.Grpc.Core.Internal.IFramer.Close() -> void
Xamarin.Grpc.Core.Internal.IFramer.Dispose() -> void
Xamarin.Grpc.Core.Internal.IFramer.Flush() -> void
Xamarin.Grpc.Core.Internal.IFramer.IsClosed.get -> bool
Xamarin.Grpc.Core.Internal.IFramer.SetCompressor(Xamarin.Grpc.ICompressor? p0) -> Xamarin.Grpc.Core.Internal.IFramer?
Xamarin.Grpc.Core.Internal.IFramer.SetMaxOutboundMessageSize(int p0) -> void
Xamarin.Grpc.Core.Internal.IFramer.SetMessageCompression(bool p0) -> Xamarin.Grpc.Core.Internal.IFramer?
Xamarin.Grpc.Core.Internal.IFramer.WritePayload(System.IO.Stream? p0) -> void
Xamarin.Grpc.Core.Internal.IInternalServer
Xamarin.Grpc.Core.Internal.IInternalServer.ListenSocketAddress.get -> Java.Net.SocketAddress?
Xamarin.Grpc.Core.Internal.IInternalServer.ListenSocketAddresses.get -> System.Collections.Generic.IList<Java.Net.SocketAddress!>?
Xamarin.Grpc.Core.Internal.IInternalServer.Shutdown() -> void
Xamarin.Grpc.Core.Internal.IInternalServer.Start(Xamarin.Grpc.Core.Internal.IServerListener? p0) -> void
Xamarin.Grpc.Core.Internal.ILongCounter
Xamarin.Grpc.Core.Internal.ILongCounter.Add(long p0) -> void
Xamarin.Grpc.Core.Internal.ILongCounter.Value() -> long
Xamarin.Grpc.Core.Internal.IObjectPool
Xamarin.Grpc.Core.Internal.IObjectPool.Object.get -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.IObjectPool.ReturnObject(Java.Lang.Object? p0) -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.IReadableBuffer
Xamarin.Grpc.Core.Internal.IReadableBuffer.Array() -> byte[]?
Xamarin.Grpc.Core.Internal.IReadableBuffer.ArrayOffset() -> int
Xamarin.Grpc.Core.Internal.IReadableBuffer.ByteBuffer.get -> Java.Nio.ByteBuffer?
Xamarin.Grpc.Core.Internal.IReadableBuffer.ByteBufferSupported() -> bool
Xamarin.Grpc.Core.Internal.IReadableBuffer.Close() -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.HasArray.get -> bool
Xamarin.Grpc.Core.Internal.IReadableBuffer.Mark() -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.MarkSupported() -> bool
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadBytes(Java.Nio.ByteBuffer? p0) -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadBytes(System.IO.Stream? p0, int p1) -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadBytes(byte[]? p0, int p1, int p2) -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadBytes(int p0) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadInt() -> int
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadUnsignedByte() -> int
Xamarin.Grpc.Core.Internal.IReadableBuffer.ReadableBytes() -> int
Xamarin.Grpc.Core.Internal.IReadableBuffer.Reset() -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.SkipBytes(int p0) -> void
Xamarin.Grpc.Core.Internal.IReadableBuffer.Touch() -> void
Xamarin.Grpc.Core.Internal.IRetryScheduler
Xamarin.Grpc.Core.Internal.IRetryScheduler.Reset() -> void
Xamarin.Grpc.Core.Internal.IRetryScheduler.Schedule(Java.Lang.IRunnable? p0) -> void
Xamarin.Grpc.Core.Internal.IServerListener
Xamarin.Grpc.Core.Internal.IServerListener.ServerShutdown() -> void
Xamarin.Grpc.Core.Internal.IServerStream
Xamarin.Grpc.Core.Internal.IServerStream.Attributes.get -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Core.Internal.IServerStream.Authority.get -> string?
Xamarin.Grpc.Core.Internal.IServerStream.Cancel(Xamarin.Grpc.Status? p0) -> void
Xamarin.Grpc.Core.Internal.IServerStream.Close(Xamarin.Grpc.Status? p0, Xamarin.Grpc.Metadata? p1) -> void
Xamarin.Grpc.Core.Internal.IServerStream.SetDecompressor(Xamarin.Grpc.IDecompressor? p0) -> void
Xamarin.Grpc.Core.Internal.IServerStream.SetListener(Xamarin.Grpc.Core.Internal.IServerStreamListener? p0) -> void
Xamarin.Grpc.Core.Internal.IServerStream.SetOnReadyThreshold(int p0) -> void
Xamarin.Grpc.Core.Internal.IServerStream.StatsTraceContext() -> Xamarin.Grpc.Core.Internal.StatsTraceContext?
Xamarin.Grpc.Core.Internal.IServerStream.StreamId() -> int
Xamarin.Grpc.Core.Internal.IServerStream.WriteHeaders(Xamarin.Grpc.Metadata? p0, bool p1) -> void
Xamarin.Grpc.Core.Internal.IServerStreamListener
Xamarin.Grpc.Core.Internal.IServerStreamListener.Closed(Xamarin.Grpc.Status? p0) -> void
Xamarin.Grpc.Core.Internal.IServerStreamListener.HalfClosed() -> void
Xamarin.Grpc.Core.Internal.IServerTransportListener
Xamarin.Grpc.Core.Internal.IServerTransportListener.StreamCreated(Xamarin.Grpc.Core.Internal.IServerStream? p0, string? p1, Xamarin.Grpc.Metadata? p2) -> void
Xamarin.Grpc.Core.Internal.IServerTransportListener.TransportReady(Xamarin.Grpc.Attributes? p0) -> Xamarin.Grpc.Attributes?
Xamarin.Grpc.Core.Internal.IServerTransportListener.TransportTerminated() -> void
Xamarin.Grpc.Core.Internal.IStream
Xamarin.Grpc.Core.Internal.IStream.Flush() -> void
Xamarin.Grpc.Core.Internal.IStream.IsReady.get -> bool
Xamarin.Grpc.Core.Internal.IStream.OptimizeForDirectExecutor() -> void
Xamarin.Grpc.Core.Internal.IStream.Request(int p0) -> void
Xamarin.Grpc.Core.Internal.IStream.SetCompressor(Xamarin.Grpc.ICompressor? p0) -> void
Xamarin.Grpc.Core.Internal.IStream.SetMessageCompression(bool p0) -> void
Xamarin.Grpc.Core.Internal.IStream.WriteMessage(System.IO.Stream? p0) -> void
Xamarin.Grpc.Core.Internal.IStreamListener
Xamarin.Grpc.Core.Internal.IStreamListener.MessagesAvailable(Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer? p0) -> void
Xamarin.Grpc.Core.Internal.IStreamListener.OnReady() -> void
Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer
Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer.Next() -> System.IO.Stream?
Xamarin.Grpc.Core.Internal.IThreadOptimizedDeframer
Xamarin.Grpc.Core.Internal.IThreadOptimizedDeframer.Request(int p0) -> void
Xamarin.Grpc.Core.Internal.ITimeProvider
Xamarin.Grpc.Core.Internal.ITimeProvider.CurrentTimeNanos() -> long
Xamarin.Grpc.Core.Internal.ITimeProvider.SystemTimeProvider.get -> Xamarin.Grpc.Core.Internal.ITimeProvider?
Xamarin.Grpc.Core.Internal.IWritableBuffer
Xamarin.Grpc.Core.Internal.IWritableBuffer.ReadableBytes() -> int
Xamarin.Grpc.Core.Internal.IWritableBuffer.Release() -> void
Xamarin.Grpc.Core.Internal.IWritableBuffer.WritableBytes() -> int
Xamarin.Grpc.Core.Internal.IWritableBuffer.Write(byte[]? p0, int p1, int p2) -> void
Xamarin.Grpc.Core.Internal.IWritableBuffer.Write(sbyte p0) -> void
Xamarin.Grpc.Core.Internal.IWritableBufferAllocator
Xamarin.Grpc.Core.Internal.IWritableBufferAllocator.Allocate(int p0) -> Xamarin.Grpc.Core.Internal.IWritableBuffer?
Xamarin.Grpc.Core.Internal.InUseStateAggregator
Xamarin.Grpc.Core.Internal.InUseStateAggregator.AnyObjectInUse(params Java.Lang.Object![]? objects) -> bool
Xamarin.Grpc.Core.Internal.InUseStateAggregator.InUseStateAggregator() -> void
Xamarin.Grpc.Core.Internal.InUseStateAggregator.InUseStateAggregator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.InUseStateAggregator.IsInUse.get -> bool
Xamarin.Grpc.Core.Internal.InUseStateAggregator.UpdateObjectInUse(Java.Lang.Object? object, bool inUse) -> void
Xamarin.Grpc.Core.Internal.InsightBuilder
Xamarin.Grpc.Core.Internal.InsightBuilder.Append(Java.Lang.Object? insight) -> Xamarin.Grpc.Core.Internal.InsightBuilder?
Xamarin.Grpc.Core.Internal.InsightBuilder.AppendKeyValue(string? key, Java.Lang.Object? value) -> Xamarin.Grpc.Core.Internal.InsightBuilder?
Xamarin.Grpc.Core.Internal.InsightBuilder.InsightBuilder() -> void
Xamarin.Grpc.Core.Internal.JsonParser
Xamarin.Grpc.Core.Internal.JsonUtil
Xamarin.Grpc.Core.Internal.JsonUtil.JsonUtil() -> void
Xamarin.Grpc.Core.Internal.JsonUtil.JsonUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.KeepAliveEnforcer(bool permitWithoutCalls, long minTime, Java.Util.Concurrent.TimeUnit? unit) -> void
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.OnTransportActive() -> void
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.OnTransportIdle() -> void
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.PingAcceptable() -> bool
Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.ResetCounters() -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager
Xamarin.Grpc.Core.Internal.KeepAliveManager.ClientKeepAlivePinger
Xamarin.Grpc.Core.Internal.KeepAliveManager.ClientKeepAlivePinger.OnPingTimeout() -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager.ClientKeepAlivePinger.Ping() -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager.IKeepAlivePinger
Xamarin.Grpc.Core.Internal.KeepAliveManager.IKeepAlivePinger.OnPingTimeout() -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager.IKeepAlivePinger.Ping() -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager.KeepAliveManager(Xamarin.Grpc.Core.Internal.KeepAliveManager.IKeepAlivePinger? keepAlivePinger, Java.Util.Concurrent.IScheduledExecutorService? scheduler, long keepAliveTimeInNanos, long keepAliveTimeoutInNanos, bool keepAliveDuringTransportIdle) -> void
Xamarin.Grpc.Core.Internal.KeepAliveManager.KeepAliveManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.LogExceptionRunnable
Xamarin.Grpc.Core.Internal.LogExceptionRunnable.LogExceptionRunnable(Java.Lang.IRunnable? task) -> void
Xamarin.Grpc.Core.Internal.LogExceptionRunnable.Run() -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.ITicker
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.ITicker.NanoTime() -> long
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.MaxConnectionIdleManager(long maxConnectionIdleInNanos) -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.MaxConnectionIdleManager(long maxConnectionIdleInNanos, Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.ITicker? ticker) -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.OnTransportActive() -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.OnTransportIdle() -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.OnTransportTermination() -> void
Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.Start(Java.Lang.IRunnable? closeJob, Java.Util.Concurrent.IScheduledExecutorService? scheduler) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer
Xamarin.Grpc.Core.Internal.MessageDeframer.BytesReadEventArgs
Xamarin.Grpc.Core.Internal.MessageDeframer.BytesReadEventArgs.BytesReadEventArgs(int p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.BytesReadEventArgs.P0.get -> int
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframeFailedEventArgs
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframeFailedEventArgs.DeframeFailedEventArgs(Java.Lang.Throwable? p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframeFailedEventArgs.P0.get -> Java.Lang.Throwable?
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframerClosedEventArgs
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframerClosedEventArgs.DeframerClosedEventArgs(bool p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.DeframerClosedEventArgs.P0.get -> bool
Xamarin.Grpc.Core.Internal.MessageDeframer.IListener
Xamarin.Grpc.Core.Internal.MessageDeframer.IListener.BytesRead(int p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.IListener.DeframeFailed(Java.Lang.Throwable? p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.IListener.DeframerClosed(bool p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.IListener.MessagesAvailable(Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer? p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.MessageDeframer(Xamarin.Grpc.Core.Internal.MessageDeframer.IListener? listener, Xamarin.Grpc.IDecompressor? decompressor, int maxMessageSize, Xamarin.Grpc.Core.Internal.StatsTraceContext? statsTraceCtx, Xamarin.Grpc.Core.Internal.TransportTracer? transportTracer) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.MessageDeframer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.MessagesAvailableEventArgs
Xamarin.Grpc.Core.Internal.MessageDeframer.MessagesAvailableEventArgs.MessagesAvailableEventArgs(Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer? p0) -> void
Xamarin.Grpc.Core.Internal.MessageDeframer.MessagesAvailableEventArgs.P0.get -> Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer?
Xamarin.Grpc.Core.Internal.MessagesAvailableEventArgs
Xamarin.Grpc.Core.Internal.MessagesAvailableEventArgs.MessagesAvailableEventArgs(Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer? p0) -> void
Xamarin.Grpc.Core.Internal.MessagesAvailableEventArgs.P0.get -> Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer?
Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade
Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.NameResolverFactoryToProviderFacade(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.NoopClientStream
Xamarin.Grpc.Core.Internal.NoopClientStream.NoopClientStream() -> void
Xamarin.Grpc.Core.Internal.NoopClientStream.NoopClientStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.NoopSslSession
Xamarin.Grpc.Core.Internal.NoopSslSession.NoopSslSession() -> void
Xamarin.Grpc.Core.Internal.NoopSslSession.NoopSslSession(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider
Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.ParseLoadBalancingPolicyConfig(System.Collections.Generic.IDictionary<string!, object!>? rawLbPolicyConfig) -> Xamarin.Grpc.NameResolver.ConfigOrError?
Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.PickFirstLoadBalancerProvider() -> void
Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl
Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.PickSubchannelArgsImpl(Xamarin.Grpc.MethodDescriptor? method, Xamarin.Grpc.Metadata? headers, Xamarin.Grpc.CallOptions? callOptions, Xamarin.Grpc.LoadBalancer.IPickDetailsConsumer? pickDetailsConsumer) -> void
Xamarin.Grpc.Core.Internal.ReadableBuffers
Xamarin.Grpc.Core.Internal.ReflectionLongAdderCounter
Xamarin.Grpc.Core.Internal.ReflectionLongAdderCounter.Add(long delta) -> void
Xamarin.Grpc.Core.Internal.ReflectionLongAdderCounter.Value() -> long
Xamarin.Grpc.Core.Internal.SerializingExecutor
Xamarin.Grpc.Core.Internal.SerializingExecutor.Execute(Java.Lang.IRunnable? r) -> void
Xamarin.Grpc.Core.Internal.SerializingExecutor.Run() -> void
Xamarin.Grpc.Core.Internal.SerializingExecutor.SerializingExecutor(Java.Util.Concurrent.IExecutor? executor) -> void
Xamarin.Grpc.Core.Internal.SerializingExecutor.SetExecutor(Java.Util.Concurrent.IExecutor? executor) -> void
Xamarin.Grpc.Core.Internal.ServerTransportTransportReadyHandler
Xamarin.Grpc.Core.Internal.ServiceConfigUtil
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig.LbConfig(string? policyName, System.Collections.Generic.IDictionary<string!, object!>? rawConfigValue) -> void
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig.PolicyName.get -> string?
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig.RawConfigValue.get -> System.Collections.Generic.IDictionary<string!, object!>?
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.PolicySelection
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.PolicySelection.Config.get -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.PolicySelection.PolicySelection(Xamarin.Grpc.LoadBalancerProvider? provider, Java.Lang.Object? config) -> void
Xamarin.Grpc.Core.Internal.ServiceConfigUtil.PolicySelection.Provider.get -> Xamarin.Grpc.LoadBalancerProvider?
Xamarin.Grpc.Core.Internal.SharedResourceHolder
Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource
Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource.Close(Java.Lang.Object? p0) -> void
Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource.Create() -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.SharedResourcePool
Xamarin.Grpc.Core.Internal.SharedResourcePool.Object.get -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.SharedResourcePool.ReturnObject(Java.Lang.Object? object) -> Java.Lang.Object?
Xamarin.Grpc.Core.Internal.SpiffeUtil
Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeBundle
Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId
Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.SpiffeId(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext
Xamarin.Grpc.Core.Internal.StatsTraceContext.ClientInboundHeaders(Xamarin.Grpc.Metadata? headers) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.ClientInboundTrailers(Xamarin.Grpc.Metadata? trailers) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.ClientOutboundHeaders() -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.InboundMessage(int seqNo) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.InboundMessageRead(int seqNo, long optionalWireSize, long optionalUncompressedSize) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.InboundUncompressedSize(long bytes) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.InboundWireSize(long bytes) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.OutboundMessage(int seqNo) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.OutboundMessageSent(int seqNo, long optionalWireSize, long optionalUncompressedSize) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.OutboundUncompressedSize(long bytes) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.OutboundWireSize(long bytes) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.ServerCallStarted(Xamarin.Grpc.ServerStreamTracer.ServerCallInfo? callInfo) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.ServerFilterContext(Xamarin.Grpc.Context? context) -> Xamarin.Grpc.Context?
Xamarin.Grpc.Core.Internal.StatsTraceContext.StreamClosed(Xamarin.Grpc.Status? status) -> void
Xamarin.Grpc.Core.Internal.StatsTraceContext.TracersForTest.get -> System.Collections.Generic.IList<Xamarin.Grpc.StreamTracer!>?
Xamarin.Grpc.Core.Internal.StreamCreatedEventArgs
Xamarin.Grpc.Core.Internal.StreamCreatedEventArgs.P0.get -> Xamarin.Grpc.Core.Internal.IServerStream?
Xamarin.Grpc.Core.Internal.StreamCreatedEventArgs.P1.get -> string?
Xamarin.Grpc.Core.Internal.StreamCreatedEventArgs.P2.get -> Xamarin.Grpc.Metadata?
Xamarin.Grpc.Core.Internal.StreamCreatedEventArgs.StreamCreatedEventArgs(Xamarin.Grpc.Core.Internal.IServerStream? p0, string? p1, Xamarin.Grpc.Metadata? p2) -> void
Xamarin.Grpc.Core.Internal.TimeProvider
Xamarin.Grpc.Core.Internal.TimeProviderConsts
Xamarin.Grpc.Core.Internal.TransportFrameUtil
Xamarin.Grpc.Core.Internal.TransportTracer
Xamarin.Grpc.Core.Internal.TransportTracer.Factory
Xamarin.Grpc.Core.Internal.TransportTracer.Factory.Create() -> Xamarin.Grpc.Core.Internal.TransportTracer?
Xamarin.Grpc.Core.Internal.TransportTracer.Factory.Factory(Xamarin.Grpc.Core.Internal.ITimeProvider? timeProvider) -> void
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.FlowControlWindows(long localBytes, long remoteBytes) -> void
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.LocalBytes.get -> long
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.LocalBytes.set -> void
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.RemoteBytes.get -> long
Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.RemoteBytes.set -> void
Xamarin.Grpc.Core.Internal.TransportTracer.IFlowControlReader
Xamarin.Grpc.Core.Internal.TransportTracer.IFlowControlReader.Read() -> Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows?
Xamarin.Grpc.Core.Internal.TransportTracer.ReportKeepAliveSent() -> void
Xamarin.Grpc.Core.Internal.TransportTracer.ReportLocalStreamStarted() -> void
Xamarin.Grpc.Core.Internal.TransportTracer.ReportMessageReceived() -> void
Xamarin.Grpc.Core.Internal.TransportTracer.ReportMessageSent(int numMessages) -> void
Xamarin.Grpc.Core.Internal.TransportTracer.ReportRemoteStreamStarted() -> void
Xamarin.Grpc.Core.Internal.TransportTracer.ReportStreamClosed(bool success) -> void
Xamarin.Grpc.Core.Internal.TransportTracer.SetFlowControlWindowReader(Xamarin.Grpc.Core.Internal.TransportTracer.IFlowControlReader? flowControlWindowReader) -> void
Xamarin.Grpc.Core.Internal.TransportTracer.TransportTracer() -> void
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadBytes(Java.Nio.ByteBuffer? p0) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadBytes(System.IO.Stream? p0, int p1) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadBytes(byte[]? p0, int p1, int p2) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadBytes(int p0) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadUnsignedByte() -> int
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ReadableBytes() -> int
abstract Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.SkipBytes(int p0) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractStream.Framer() -> Xamarin.Grpc.Core.Internal.IFramer?
abstract Xamarin.Grpc.Core.Internal.AbstractStream.InvokeTransportState() -> Xamarin.Grpc.Core.Internal.AbstractStream.TransportState?
abstract Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.BytesRead(int p0) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.DeframeFailed(Java.Lang.Throwable? p0) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.DeframerClosed(bool p0) -> void
abstract Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.Listener() -> Xamarin.Grpc.Core.Internal.IStreamListener?
abstract Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.RunOnTransportThread(Java.Lang.IRunnable? p0) -> void
abstract Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.Delegate() -> Xamarin.Grpc.ClientStreamTracer?
abstract Xamarin.Grpc.Core.Internal.InUseStateAggregator.HandleInUse() -> void
abstract Xamarin.Grpc.Core.Internal.InUseStateAggregator.HandleNotInUse() -> void
const Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.DefaultOnreadyThreshold = 32768 -> int
const Xamarin.Grpc.Core.Internal.GrpcUtil.ContentAcceptEncoding = "accept-encoding" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.ContentEncoding = "content-encoding" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.ContentTypeGrpc = "application/grpc" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultLbPolicy = "pick_first" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultMaxHeaderListSize = 8192 -> int
const Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultMaxMessageSize = 4194304 -> int
const Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultPortPlaintext = 80 -> int
const Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultPortSsl = 443 -> int
const Xamarin.Grpc.Core.Internal.GrpcUtil.HttpMethod = "POST" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.ImplementationVersion = "1.74.0" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.KeepaliveTimeNanosDisabled = 9223372036854775807 -> long
const Xamarin.Grpc.Core.Internal.GrpcUtil.MessageAcceptEncoding = "grpc-accept-encoding" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.MessageEncoding = "grpc-encoding" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.ServerKeepaliveTimeNanosDisabled = 9223372036854775807 -> long
const Xamarin.Grpc.Core.Internal.GrpcUtil.TeTrailers = "trailers" -> string!
const Xamarin.Grpc.Core.Internal.GrpcUtil.Timeout = "grpc-timeout" -> string!
const Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.MaxPingStrikes = 2 -> int
const Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.GrpcPfUseHappyEyeballs = "GRPC_PF_USE_HAPPY_EYEBALLS" -> string!
override Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.AbstractStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AbstractStream.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.AbstractStream.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.AtomicBackoff.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AtomicBackoff.State.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.AutoConfiguredLoadBalancer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.AutoConfiguredLoadBalancerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.CertificateUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ClientTransportFactoryClientTransportOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ClientTransportFactorySwapChannelCredentialsResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ConscryptLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.DelayedClientCall.Attributes.get -> Xamarin.Grpc.Attributes?
override Xamarin.Grpc.Core.Internal.DelayedClientCall.IsReady.get -> bool
override Xamarin.Grpc.Core.Internal.DelayedClientCall.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.DelayedClientCall.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.DelayedClientCall.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.DnsNameResolver.InternalResolutionResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.DnsNameResolver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.DnsNameResolver.ServiceAuthority.get -> string?
override Xamarin.Grpc.Core.Internal.DnsNameResolver.Shutdown() -> void
override Xamarin.Grpc.Core.Internal.DnsNameResolver.SrvRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.DnsNameResolver.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.DnsNameResolver.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ExponentialBackoffPolicy.Provider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.FailingClientStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.FixedObjectPool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.ForwardingClientStreamTracer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.GrpcAttributes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.GrpcUtil.GrpcBuildVersion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.GrpcUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.Http2Ping.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.Http2Ping.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.Http2Ping.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.InUseStateAggregator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.InUseStateAggregator.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.InUseStateAggregator.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.InsightBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.JsonParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.JsonUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.JsonUtil.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.JsonUtil.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.KeepAliveManager.ClientKeepAlivePinger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.KeepAliveManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.KeepAliveManager.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.KeepAliveManager.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.LogExceptionRunnable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.MaxConnectionIdleManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.MessageDeframer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.MessageDeframer.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.MessageDeframer.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.DefaultScheme.get -> string?
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.IsAvailable.get -> bool
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.NewNameResolver(Java.Net.URI? targetUri, Xamarin.Grpc.NameResolver.Args? args) -> Xamarin.Grpc.NameResolver?
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.Priority() -> int
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.NameResolverFactoryToProviderFacade.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.NoopClientStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.NoopClientStream.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.NoopClientStream.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.NoopSslSession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.NoopSslSession.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.NoopSslSession.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.IsAvailable.get -> bool
override Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.NewLoadBalancer(Xamarin.Grpc.LoadBalancer.Helper? helper) -> Xamarin.Grpc.LoadBalancer?
override Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.PolicyName.get -> string?
override Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.Priority.get -> int
override Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.CallOptions.get -> Xamarin.Grpc.CallOptions?
override Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.Headers.get -> Xamarin.Grpc.Metadata?
override Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.MethodDescriptor.get -> Xamarin.Grpc.MethodDescriptor?
override Xamarin.Grpc.Core.Internal.ReadableBuffers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ReflectionLongAdderCounter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SerializingExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ServiceConfigUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.ServiceConfigUtil.PolicySelection.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SharedResourceHolder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SharedResourcePool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SpiffeUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeBundle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.ThresholdClass.get -> nint
override Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.ThresholdType.get -> System.Type!
override Xamarin.Grpc.Core.Internal.StatsTraceContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.TransportFrameUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.TransportTracer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.TransportTracer.FlowControlWindows.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Grpc.Core.Internal.TransportTracer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.Cancel(string? message, Java.Lang.Throwable? cause) -> void
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.HalfClose() -> void
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.Request(int numMessages) -> void
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.SendMessage(Java.Lang.Object? message) -> void
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.SetMessageCompression(bool enable) -> void
override sealed Xamarin.Grpc.Core.Internal.DelayedClientCall.Start(Xamarin.Grpc.ClientCall.Listener? listener, Xamarin.Grpc.Metadata? headers) -> void
override sealed Xamarin.Grpc.Core.Internal.PickSubchannelArgsImpl.ToString() -> string?
static Xamarin.Grpc.Core.Internal.CertificateUtils.CreateTrustManager(System.IO.Stream? rootCerts) -> Javax.Net.Ssl.ITrustManager![]?
static Xamarin.Grpc.Core.Internal.CertificateUtils.CreateTrustManager(byte[]? rootCerts) -> Javax.Net.Ssl.ITrustManager![]?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.Dropped.get -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.Miscarried.get -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.Processed.get -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.Refused.get -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.ValueOf(string? name) -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress?
static Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress.Values() -> Xamarin.Grpc.Core.Internal.ClientStreamListenerRpcProgress![]?
static Xamarin.Grpc.Core.Internal.ConscryptLoader.IsConscrypt(Java.Security.Provider? provider) -> bool
static Xamarin.Grpc.Core.Internal.ConscryptLoader.IsPresent.get -> bool
static Xamarin.Grpc.Core.Internal.ConscryptLoader.NewProvider() -> Java.Security.Provider?
static Xamarin.Grpc.Core.Internal.DnsNameResolver.EnableTxt.get -> bool
static Xamarin.Grpc.Core.Internal.DnsNameResolver.EnableTxt.set -> void
static Xamarin.Grpc.Core.Internal.DnsNameResolver.ShouldUseJndi(bool jndiEnabled, bool jndiLocalhostEnabled, string? target) -> bool
static Xamarin.Grpc.Core.Internal.GrpcAttributes.AttrAuthorityVerifier.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Core.Internal.GrpcAttributes.AttrClientEagAttrs.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Core.Internal.GrpcAttributes.AttrSecurityLevel.get -> Xamarin.Grpc.Attributes.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityEscaper.EncodeAuthority(string? authority) -> string?
static Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityFromHostAndPort(string? host, int port) -> string?
static Xamarin.Grpc.Core.Internal.GrpcUtil.AuthorityToUri(string? authority) -> Java.Net.URI?
static Xamarin.Grpc.Core.Internal.GrpcUtil.CallOptionsRpcOwnedByBalancer.get -> Xamarin.Grpc.CallOptions.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.CheckAuthority(string? authority) -> string?
static Xamarin.Grpc.Core.Internal.GrpcUtil.CloseQuietly(Java.IO.ICloseable? message) -> void
static Xamarin.Grpc.Core.Internal.GrpcUtil.ContentAcceptEncodingKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.ContentEncodingKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.ContentTypeKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultKeepaliveTimeoutNanos.get -> long
static Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultProxyDetector.get -> Xamarin.Grpc.IProxyDetector?
static Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultServerKeepaliveTimeNanos.get -> long
static Xamarin.Grpc.Core.Internal.GrpcUtil.DefaultServerKeepaliveTimeoutNanos.get -> long
static Xamarin.Grpc.Core.Internal.GrpcUtil.Exhaust(System.IO.Stream? in) -> void
static Xamarin.Grpc.Core.Internal.GrpcUtil.GetClientStreamTracers(Xamarin.Grpc.CallOptions? callOptions, Xamarin.Grpc.Metadata? headers, int previousAttempts, bool isTransparentRetry) -> Xamarin.Grpc.ClientStreamTracer![]?
static Xamarin.Grpc.Core.Internal.GrpcUtil.GetFlag(string? envVarName, bool enableByDefault) -> bool
static Xamarin.Grpc.Core.Internal.GrpcUtil.GetGrpcBuildVersion() -> Xamarin.Grpc.Core.Internal.GrpcUtil.GrpcBuildVersion?
static Xamarin.Grpc.Core.Internal.GrpcUtil.GetGrpcUserAgent(string? transportName, string? applicationUserAgent) -> string?
static Xamarin.Grpc.Core.Internal.GrpcUtil.GetThreadFactory(string? nameFormat, bool daemon) -> Java.Util.Concurrent.IThreadFactory?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.Cancel.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.CompressionError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.ConnectError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.EnhanceYourCalm.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.FlowControlError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.ForCode(long code) -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.FrameSizeError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.Http11Required.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.InadequateSecurity.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.InternalError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.NoError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.ProtocolError.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.RefusedStream.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.SettingsTimeout.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.StatusForCode(long code) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.StreamClosed.get -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.ValueOf(string? name) -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error?
static Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error.Values() -> Xamarin.Grpc.Core.Internal.GrpcUtil.Http2Error![]?
static Xamarin.Grpc.Core.Internal.GrpcUtil.HttpStatusToGrpcStatus(int httpStatusCode) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Core.Internal.GrpcUtil.IsGrpcContentType(string? contentType) -> bool
static Xamarin.Grpc.Core.Internal.GrpcUtil.MessageAcceptEncodingKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.MessageEncodingKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.NoopProxyDetector.get -> Xamarin.Grpc.IProxyDetector?
static Xamarin.Grpc.Core.Internal.GrpcUtil.ReplaceInappropriateControlPlaneStatus(Xamarin.Grpc.Status? status) -> Xamarin.Grpc.Status?
static Xamarin.Grpc.Core.Internal.GrpcUtil.SharedChannelExecutor.get -> Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource?
static Xamarin.Grpc.Core.Internal.GrpcUtil.ShouldBeCountedForInUse(Xamarin.Grpc.CallOptions? callOptions) -> bool
static Xamarin.Grpc.Core.Internal.GrpcUtil.TeHeader.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.TimeoutKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.GrpcUtil.TimerService.get -> Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource?
static Xamarin.Grpc.Core.Internal.GrpcUtil.UsAscii.get -> Java.Nio.Charset.Charset?
static Xamarin.Grpc.Core.Internal.GrpcUtil.UserAgentKey.get -> Xamarin.Grpc.Metadata.Key?
static Xamarin.Grpc.Core.Internal.JsonParser.Parse(string? raw) -> Java.Lang.Object?
static Xamarin.Grpc.Core.Internal.JsonUtil.CheckObjectList(System.Collections.Generic.IList<object!>? rawList) -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string!, object!>!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.CheckStringList(System.Collections.Generic.IList<object!>? rawList) -> System.Collections.Generic.IList<string!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetBoolean(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Boolean?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetList(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> System.Collections.Generic.IList<object!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetListOfObjects(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string!, object!>!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetListOfStrings(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> System.Collections.Generic.IList<string!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetNumberAsDouble(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Double?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetNumberAsFloat(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Float?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetNumberAsInteger(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Integer?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetNumberAsLong(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Long?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetObject(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> System.Collections.Generic.IDictionary<string!, object!>?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetString(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> string?
static Xamarin.Grpc.Core.Internal.JsonUtil.GetStringAsDuration(System.Collections.Generic.IDictionary<string!, object!>? obj, string? key) -> Java.Lang.Long?
static Xamarin.Grpc.Core.Internal.KeepAliveEnforcer.ImplicitPermitTimeNanos.get -> long
static Xamarin.Grpc.Core.Internal.KeepAliveManager.ClampKeepAliveTimeInNanos(long keepAliveTimeInNanos) -> long
static Xamarin.Grpc.Core.Internal.KeepAliveManager.ClampKeepAliveTimeoutInNanos(long keepAliveTimeoutInNanos) -> long
static Xamarin.Grpc.Core.Internal.NoopClientStream.Instance.get -> Xamarin.Grpc.Core.Internal.NoopClientStream?
static Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.IsEnabledHappyEyeballs.get -> bool
static Xamarin.Grpc.Core.Internal.PickFirstLoadBalancerProvider.IsEnabledNewPickFirst.get -> bool
static Xamarin.Grpc.Core.Internal.ReadableBuffers.Empty() -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.IgnoreClose(Xamarin.Grpc.Core.Internal.IReadableBuffer? buffer) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.OpenStream(Xamarin.Grpc.Core.Internal.IReadableBuffer? buffer, bool owner) -> System.IO.Stream?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.ReadArray(Xamarin.Grpc.Core.Internal.IReadableBuffer? buffer) -> byte[]?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.ReadAsString(Xamarin.Grpc.Core.Internal.IReadableBuffer? buffer, Java.Nio.Charset.Charset? charset) -> string?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.ReadAsStringUtf8(Xamarin.Grpc.Core.Internal.IReadableBuffer? buffer) -> string?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.Wrap(Java.Nio.ByteBuffer? bytes) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.Wrap(byte[]? bytes) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
static Xamarin.Grpc.Core.Internal.ReadableBuffers.Wrap(byte[]? bytes, int offset, int length) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.GetHealthCheckedService(System.Collections.Generic.IDictionary<string!, object!>? serviceConfig) -> System.Collections.Generic.IDictionary<string!, object!>?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.GetHealthCheckedServiceName(System.Collections.Generic.IDictionary<string!, object!>? healthCheckedServiceConfig) -> string?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.GetLoadBalancingConfigsFromServiceConfig(System.Collections.Generic.IDictionary<string!, object!>? serviceConfig) -> System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string!, object!>!>?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.SelectLbPolicyFromList(System.Collections.Generic.IList<Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig!>? lbConfigs, Xamarin.Grpc.LoadBalancerRegistry? lbRegistry) -> Xamarin.Grpc.NameResolver.ConfigOrError?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.UnwrapLoadBalancingConfig(System.Collections.Generic.IDictionary<string!, object!>? lbConfig) -> Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig?
static Xamarin.Grpc.Core.Internal.ServiceConfigUtil.UnwrapLoadBalancingConfigList(System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string!, object!>!>? list) -> System.Collections.Generic.IList<Xamarin.Grpc.Core.Internal.ServiceConfigUtil.LbConfig!>?
static Xamarin.Grpc.Core.Internal.SharedResourceHolder.Get(Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource? resource) -> Java.Lang.Object?
static Xamarin.Grpc.Core.Internal.SharedResourceHolder.Release(Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource? resource, Java.Lang.Object? instance) -> Java.Lang.Object?
static Xamarin.Grpc.Core.Internal.SharedResourcePool.ForResource(Xamarin.Grpc.Core.Internal.SharedResourceHolder.IResource? resource) -> Xamarin.Grpc.Core.Internal.SharedResourcePool?
static Xamarin.Grpc.Core.Internal.SpiffeUtil.LoadTrustBundleFromFile(string? trustBundleFile) -> Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeBundle?
static Xamarin.Grpc.Core.Internal.SpiffeUtil.Parse(string? uri) -> Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId?
static Xamarin.Grpc.Core.Internal.StatsTraceContext.NewClientContext(Xamarin.Grpc.ClientStreamTracer![]? tracers, Xamarin.Grpc.Attributes? transportAtts, Xamarin.Grpc.Metadata? headers) -> Xamarin.Grpc.Core.Internal.StatsTraceContext?
static Xamarin.Grpc.Core.Internal.StatsTraceContext.NewServerContext(System.Collections.Generic.IList<Xamarin.Grpc.ServerStreamTracer.Factory!>? factories, string? fullMethodName, Xamarin.Grpc.Metadata? headers) -> Xamarin.Grpc.Core.Internal.StatsTraceContext?
static Xamarin.Grpc.Core.Internal.StatsTraceContext.Noop.get -> Xamarin.Grpc.Core.Internal.StatsTraceContext?
static Xamarin.Grpc.Core.Internal.TimeProvider.SystemTimeProvider.get -> Xamarin.Grpc.Core.Internal.ITimeProvider?
static Xamarin.Grpc.Core.Internal.TransportFrameUtil.ToHttp2Headers(Xamarin.Grpc.Metadata? headers) -> byte[]![]?
static Xamarin.Grpc.Core.Internal.TransportFrameUtil.ToRawSerializedHeaders(byte[]![]? http2Headers) -> byte[]![]?
static Xamarin.Grpc.Core.Internal.TransportTracer.DefaultFactory.get -> Xamarin.Grpc.Core.Internal.TransportTracer.Factory?
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.Array() -> byte[]?
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ArrayOffset() -> int
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ByteBuffer.get -> Java.Nio.ByteBuffer?
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.ByteBufferSupported() -> bool
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.Close() -> void
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.HasArray.get -> bool
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.Mark() -> void
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.MarkSupported() -> bool
virtual Xamarin.Grpc.Core.Internal.AbstractReadableBuffer.Reset() -> void
virtual Xamarin.Grpc.Core.Internal.AbstractStream.IsReady.get -> bool
virtual Xamarin.Grpc.Core.Internal.AbstractStream.OptimizeForDirectExecutor() -> void
virtual Xamarin.Grpc.Core.Internal.AbstractStream.SetOnReadyThreshold(int numBytes) -> void
virtual Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.IsStreamDeallocated.get -> bool
virtual Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.MessagesAvailable(Xamarin.Grpc.Core.Internal.IStreamListenerMessageProducer? producer) -> void
virtual Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.OnStreamAllocated() -> void
virtual Xamarin.Grpc.Core.Internal.AbstractStream.TransportState.TransportTracer.get -> Xamarin.Grpc.Core.Internal.TransportTracer?
virtual Xamarin.Grpc.Core.Internal.AbstractStream.TransportState._1RequestRunnable.Run() -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.Close() -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.CloseWhenComplete() -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.Deframe(Xamarin.Grpc.Core.Internal.IReadableBuffer? data) -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.Request(int numMessages) -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.SetDecompressor(Xamarin.Grpc.IDecompressor? decompressor) -> void
virtual Xamarin.Grpc.Core.Internal.ApplicationThreadDeframer.SetMaxInboundMessageSize(int messageSize) -> void
virtual Xamarin.Grpc.Core.Internal.DelayedClientCall.CallCancelled() -> void
virtual Xamarin.Grpc.Core.Internal.DnsNameResolver.DoResolve(bool forceTxt) -> Xamarin.Grpc.Core.Internal.DnsNameResolver.InternalResolutionResult?
virtual Xamarin.Grpc.Core.Internal.DnsNameResolver.Host.get -> string?
virtual Xamarin.Grpc.Core.Internal.DnsNameResolver.ResourceResolver.get -> Xamarin.Grpc.Core.Internal.DnsNameResolver.IResourceResolver?
virtual Xamarin.Grpc.Core.Internal.DnsNameResolver.ResourceResolver.set -> void
virtual Xamarin.Grpc.Core.Internal.DnsNameResolver.SetAddressResolver(Xamarin.Grpc.Core.Internal.DnsNameResolver.IAddressResolver? addressResolver) -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.Array() -> byte[]?
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ArrayOffset() -> int
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ByteBuffer.get -> Java.Nio.ByteBuffer?
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ByteBufferSupported() -> bool
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.Close() -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.HasArray.get -> bool
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.Mark() -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.MarkSupported() -> bool
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadBytes(Java.Nio.ByteBuffer? dest) -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadBytes(System.IO.Stream? dest, int length) -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadBytes(byte[]? dest, int destOffset, int length) -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadBytes(int length) -> Xamarin.Grpc.Core.Internal.IReadableBuffer?
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadInt() -> int
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadUnsignedByte() -> int
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.ReadableBytes() -> int
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.Reset() -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.SkipBytes(int length) -> void
virtual Xamarin.Grpc.Core.Internal.ForwardingReadableBuffer.Touch() -> void
virtual Xamarin.Grpc.Core.Internal.Http2Ping.Complete() -> bool
virtual Xamarin.Grpc.Core.Internal.Http2Ping.Failed(Xamarin.Grpc.Status? failureCause) -> void
virtual Xamarin.Grpc.Core.Internal.Http2Ping.Payload() -> long
virtual Xamarin.Grpc.Core.Internal.KeepAliveManager.OnDataReceived() -> void
virtual Xamarin.Grpc.Core.Internal.KeepAliveManager.OnTransportActive() -> void
virtual Xamarin.Grpc.Core.Internal.KeepAliveManager.OnTransportIdle() -> void
virtual Xamarin.Grpc.Core.Internal.KeepAliveManager.OnTransportStarted() -> void
virtual Xamarin.Grpc.Core.Internal.KeepAliveManager.OnTransportTermination() -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.Close() -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.CloseWhenComplete() -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.Deframe(Xamarin.Grpc.Core.Internal.IReadableBuffer? data) -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.IsClosed.get -> bool
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.Request(int numMessages) -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.SetDecompressor(Xamarin.Grpc.IDecompressor? decompressor) -> void
virtual Xamarin.Grpc.Core.Internal.MessageDeframer.SetMaxInboundMessageSize(int messageSize) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.AppendTimeoutInsight(Xamarin.Grpc.Core.Internal.InsightBuilder? insight) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.Attributes.get -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.Cancel(Xamarin.Grpc.Status? status) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.Flush() -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.HalfClose() -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.IsReady.get -> bool
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.OptimizeForDirectExecutor() -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.Request(int numMessages) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetAuthority(string? authority) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetCompressor(Xamarin.Grpc.ICompressor? compressor) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetDeadline(Xamarin.Grpc.Deadline? deadline) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetDecompressorRegistry(Xamarin.Grpc.DecompressorRegistry? decompressorRegistry) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetFullStreamDecompression(bool fullStreamDecompression) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetMaxInboundMessageSize(int maxSize) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetMaxOutboundMessageSize(int maxSize) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.SetMessageCompression(bool enable) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.Start(Xamarin.Grpc.Core.Internal.IClientStreamListener? listener) -> void
virtual Xamarin.Grpc.Core.Internal.NoopClientStream.WriteMessage(System.IO.Stream? message) -> void
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.ApplicationBufferSize.get -> int
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.CipherSuite.get -> string?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.CreationTime.get -> long
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetId() -> byte[]?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetLocalCertificates() -> Java.Security.Cert.Certificate![]?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetPeerCertificateChain() -> Javax.Security.Cert.X509Certificate![]?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetPeerCertificates() -> Java.Security.Cert.Certificate![]?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetValue(string? s) -> Java.Lang.Object?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.GetValueNames() -> string![]?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.Invalidate() -> void
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.IsValid.get -> bool
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.LastAccessedTime.get -> long
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.LocalPrincipal.get -> Java.Security.IPrincipal?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.PacketBufferSize.get -> int
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.PeerHost.get -> string?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.PeerPort.get -> int
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.PeerPrincipal.get -> Java.Security.IPrincipal?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.Protocol.get -> string?
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.PutValue(string? s, Java.Lang.Object? o) -> void
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.RemoveValue(string? s) -> void
virtual Xamarin.Grpc.Core.Internal.NoopSslSession.SessionContext.get -> Javax.Net.Ssl.ISSLSessionContext?
virtual Xamarin.Grpc.Core.Internal.ServerTransportTransportReadyHandler.Invoke(Xamarin.Grpc.Attributes? p0) -> Xamarin.Grpc.Attributes?
virtual Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.Path.get -> string?
virtual Xamarin.Grpc.Core.Internal.SpiffeUtil.SpiffeId.TrustDomain.get -> string?
