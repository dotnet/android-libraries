#nullable enable
Xamarin.Io.Perfmark.Impl
Xamarin.Io.Perfmark.Impl.Impl(Xamarin.Io.Perfmark.Tag? key) -> void
Xamarin.Io.Perfmark.Impl.Impl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Io.Perfmark.Link
Xamarin.Io.Perfmark.Link.InvokeLink() -> void
Xamarin.Io.Perfmark.PerfMark
Xamarin.Io.Perfmark.Tag
Xamarin.Io.Perfmark.TaskCloseable
Xamarin.Io.Perfmark.TaskCloseable.Close() -> void
override Xamarin.Io.Perfmark.Impl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Io.Perfmark.Impl.ThresholdClass.get -> nint
override Xamarin.Io.Perfmark.Impl.ThresholdType.get -> System.Type!
override Xamarin.Io.Perfmark.Link.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Io.Perfmark.PerfMark.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Io.Perfmark.Tag.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Io.Perfmark.TaskCloseable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Xamarin.Io.Perfmark.Impl.PackLink(long linkId) -> Xamarin.Io.Perfmark.Link?
static Xamarin.Io.Perfmark.Impl.PackTag(string? tagName, long tagId) -> Xamarin.Io.Perfmark.Tag?
static Xamarin.Io.Perfmark.Impl.UnpackLinkId(Xamarin.Io.Perfmark.Link? link) -> long
static Xamarin.Io.Perfmark.Impl.UnpackTagId(Xamarin.Io.Perfmark.Tag? tag) -> long
static Xamarin.Io.Perfmark.Impl.UnpackTagName(Xamarin.Io.Perfmark.Tag? tag) -> string?
static Xamarin.Io.Perfmark.PerfMark.AttachIntTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IToIntFunction? intFunction) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachLongTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IToLongFunction? longFunction) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachStringTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IFunction? stringFunction) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachTag(Xamarin.Io.Perfmark.Tag? tag) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachTag(string? tagName, long tagValue) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachTag(string? tagName, long tagValue0, long tagValue1) -> void
static Xamarin.Io.Perfmark.PerfMark.AttachTag(string? tagName, string? tagValue) -> void
static Xamarin.Io.Perfmark.PerfMark.CreateTag() -> Xamarin.Io.Perfmark.Tag?
static Xamarin.Io.Perfmark.PerfMark.CreateTag(long id) -> Xamarin.Io.Perfmark.Tag?
static Xamarin.Io.Perfmark.PerfMark.CreateTag(string? name) -> Xamarin.Io.Perfmark.Tag?
static Xamarin.Io.Perfmark.PerfMark.CreateTag(string? name, long id) -> Xamarin.Io.Perfmark.Tag?
static Xamarin.Io.Perfmark.PerfMark.Event(string? eventName) -> void
static Xamarin.Io.Perfmark.PerfMark.Event(string? eventName, Xamarin.Io.Perfmark.Tag? tag) -> void
static Xamarin.Io.Perfmark.PerfMark.Event(string? eventName, string? subEventName) -> void
static Xamarin.Io.Perfmark.PerfMark.Link() -> Xamarin.Io.Perfmark.Link?
static Xamarin.Io.Perfmark.PerfMark.LinkIn(Xamarin.Io.Perfmark.Link? link) -> void
static Xamarin.Io.Perfmark.PerfMark.LinkOut() -> Xamarin.Io.Perfmark.Link?
static Xamarin.Io.Perfmark.PerfMark.SetEnabled(bool value) -> bool
static Xamarin.Io.Perfmark.PerfMark.StartTask(string? taskName) -> void
static Xamarin.Io.Perfmark.PerfMark.StartTask(string? taskName, Xamarin.Io.Perfmark.Tag? tag) -> void
static Xamarin.Io.Perfmark.PerfMark.StartTask(string? taskName, string? subTaskName) -> void
static Xamarin.Io.Perfmark.PerfMark.StopTask() -> void
static Xamarin.Io.Perfmark.PerfMark.StopTask(string? taskName) -> void
static Xamarin.Io.Perfmark.PerfMark.StopTask(string? taskName, Xamarin.Io.Perfmark.Tag? tag) -> void
static Xamarin.Io.Perfmark.PerfMark.StopTask(string? taskName, string? subTaskName) -> void
static Xamarin.Io.Perfmark.PerfMark.TraceTask(string? taskName) -> Xamarin.Io.Perfmark.TaskCloseable?
virtual Xamarin.Io.Perfmark.Impl.AttachTag(Xamarin.Io.Perfmark.Tag? tag) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IFunction? stringFunction) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IToIntFunction? intFunction) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, Java.Lang.Object? tagObject, Java.Util.Functions.IToLongFunction? longFunction) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, long tagValue) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, long tagValue0, long tagValue1) -> void
virtual Xamarin.Io.Perfmark.Impl.AttachTag(string? tagName, string? tagValue) -> void
virtual Xamarin.Io.Perfmark.Impl.CreateTag(string? tagName, long tagId) -> Xamarin.Io.Perfmark.Tag?
virtual Xamarin.Io.Perfmark.Impl.Event(string? eventName) -> void
virtual Xamarin.Io.Perfmark.Impl.Event(string? eventName, Xamarin.Io.Perfmark.Tag? tag) -> void
virtual Xamarin.Io.Perfmark.Impl.Event(string? eventName, string? subEventName) -> void
virtual Xamarin.Io.Perfmark.Impl.LinkIn(Xamarin.Io.Perfmark.Link? link) -> void
virtual Xamarin.Io.Perfmark.Impl.LinkOut() -> Xamarin.Io.Perfmark.Link?
virtual Xamarin.Io.Perfmark.Impl.SetEnabled(bool value) -> void
virtual Xamarin.Io.Perfmark.Impl.SetEnabled(bool value, bool overload) -> bool
virtual Xamarin.Io.Perfmark.Impl.StartTask(Java.Lang.Object? taskNameObject, Java.Util.Functions.IFunction? taskNameFunc) -> void
virtual Xamarin.Io.Perfmark.Impl.StartTask(string? taskName) -> void
virtual Xamarin.Io.Perfmark.Impl.StartTask(string? taskName, Xamarin.Io.Perfmark.Tag? tag) -> void
virtual Xamarin.Io.Perfmark.Impl.StartTask(string? taskName, string? subTaskName) -> void
virtual Xamarin.Io.Perfmark.Impl.StopTask() -> void
virtual Xamarin.Io.Perfmark.Impl.StopTask(string? taskName) -> void
virtual Xamarin.Io.Perfmark.Impl.StopTask(string? taskName, Xamarin.Io.Perfmark.Tag? tag) -> void
virtual Xamarin.Io.Perfmark.Impl.StopTask(string? taskName, string? subTaskName) -> void
