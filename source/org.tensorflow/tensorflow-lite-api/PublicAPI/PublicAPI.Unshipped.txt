#nullable enable
Xamarin.TensorFlow.Lite.Acceleration.IValidatedAccelerationConfig
Xamarin.TensorFlow.Lite.Acceleration.IValidatedAccelerationConfig.Apply(Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> void
Xamarin.TensorFlow.Lite.Acceleration.IValidatedAccelerationConfig.Serialize() -> byte[]?
Xamarin.TensorFlow.Lite.Annotations.IUsedByReflection
Xamarin.TensorFlow.Lite.Annotations.IUsedByReflection.Value() -> string?
Xamarin.TensorFlow.Lite.Annotations.UsedByReflectionAttribute
Xamarin.TensorFlow.Lite.Annotations.UsedByReflectionAttribute.UsedByReflectionAttribute() -> void
Xamarin.TensorFlow.Lite.Annotations.UsedByReflectionAttribute.Value.get -> string?
Xamarin.TensorFlow.Lite.Annotations.UsedByReflectionAttribute.Value.set -> void
Xamarin.TensorFlow.Lite.DataType
Xamarin.TensorFlow.Lite.DataType.ByteSize() -> int
Xamarin.TensorFlow.Lite.IDelegate
Xamarin.TensorFlow.Lite.IDelegate.NativeHandle.get -> long
Xamarin.TensorFlow.Lite.IDelegateFactory
Xamarin.TensorFlow.Lite.IDelegateFactory.Create(Xamarin.TensorFlow.Lite.RuntimeFlavor? runtimeFlavor) -> Xamarin.TensorFlow.Lite.IDelegate?
Xamarin.TensorFlow.Lite.IInterpreterApi
Xamarin.TensorFlow.Lite.IInterpreterApi.AllocateTensors() -> void
Xamarin.TensorFlow.Lite.IInterpreterApi.Close() -> void
Xamarin.TensorFlow.Lite.IInterpreterApi.Create(Java.IO.File? modelFile, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
Xamarin.TensorFlow.Lite.IInterpreterApi.Create(Java.Nio.ByteBuffer? byteBuffer, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
Xamarin.TensorFlow.Lite.IInterpreterApi.GetInputIndex(string? opName) -> int
Xamarin.TensorFlow.Lite.IInterpreterApi.GetInputTensor(int inputIndex) -> Xamarin.TensorFlow.Lite.ITensor?
Xamarin.TensorFlow.Lite.IInterpreterApi.GetOutputIndex(string? opName) -> int
Xamarin.TensorFlow.Lite.IInterpreterApi.GetOutputTensor(int outputIndex) -> Xamarin.TensorFlow.Lite.ITensor?
Xamarin.TensorFlow.Lite.IInterpreterApi.InputTensorCount.get -> int
Xamarin.TensorFlow.Lite.IInterpreterApi.LastNativeInferenceDurationNanoseconds.get -> Java.Lang.Long?
Xamarin.TensorFlow.Lite.IInterpreterApi.OutputTensorCount.get -> int
Xamarin.TensorFlow.Lite.IInterpreterApi.ResizeInput(int idx, int[]? dims) -> void
Xamarin.TensorFlow.Lite.IInterpreterApi.ResizeInput(int idx, int[]? dims, bool strict) -> void
Xamarin.TensorFlow.Lite.IInterpreterApi.Run(Java.Lang.Object? input, Java.Lang.Object? output) -> void
Xamarin.TensorFlow.Lite.IInterpreterApi.RunForMultipleInputsOutputs(Java.Lang.Object![]? inputs, System.Collections.Generic.IDictionary<Java.Lang.Integer!, Java.Lang.Object!>? outputs) -> void
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi.Create(Java.IO.File? modelFile, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi.Create(Java.Nio.ByteBuffer? byteBuffer, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi.CreateNnApiDelegateImpl(Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options? options) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.IPrivateInterface?
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi.RuntimeVersion() -> string?
Xamarin.TensorFlow.Lite.IInterpreterFactoryApi.SchemaVersion() -> string?
Xamarin.TensorFlow.Lite.ITensor
Xamarin.TensorFlow.Lite.ITensor.AsReadOnlyBuffer() -> Java.Nio.ByteBuffer?
Xamarin.TensorFlow.Lite.ITensor.DataType() -> Xamarin.TensorFlow.Lite.DataType?
Xamarin.TensorFlow.Lite.ITensor.Index() -> int
Xamarin.TensorFlow.Lite.ITensor.Name() -> string?
Xamarin.TensorFlow.Lite.ITensor.NumBytes() -> int
Xamarin.TensorFlow.Lite.ITensor.NumDimensions() -> int
Xamarin.TensorFlow.Lite.ITensor.NumElements() -> int
Xamarin.TensorFlow.Lite.ITensor.QuantizationParams() -> Xamarin.TensorFlow.Lite.TensorQuantizationParams?
Xamarin.TensorFlow.Lite.ITensor.Shape() -> int[]?
Xamarin.TensorFlow.Lite.ITensor.ShapeSignature() -> int[]?
Xamarin.TensorFlow.Lite.InterpreterApi
Xamarin.TensorFlow.Lite.InterpreterApiConsts
Xamarin.TensorFlow.Lite.InterpreterApiOptions
Xamarin.TensorFlow.Lite.InterpreterApiOptions.InterpreterApiOptions() -> void
Xamarin.TensorFlow.Lite.InterpreterApiOptions.InterpreterApiOptions(Xamarin.TensorFlow.Lite.InterpreterApiOptions? other) -> void
Xamarin.TensorFlow.Lite.InterpreterApiOptions.InterpreterApiOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime
Xamarin.TensorFlow.Lite.InterpreterFactory
Xamarin.TensorFlow.Lite.InterpreterFactory.InterpreterFactory() -> void
Xamarin.TensorFlow.Lite.InterpreterFactory.InterpreterFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.IPrivateInterface
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.IPrivateInterface.Close() -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.IPrivateInterface.NnapiErrno.get -> int
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.NnApiDelegate() -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.NnApiDelegate(Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options? options) -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.NnApiDelegate(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.AcceleratorName.get -> string?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.AllowFp16.get -> bool
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.CacheDir.get -> string?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ExecutionPreference.get -> int
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.MaxNumberOfDelegatedPartitions.get -> int
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ModelToken.get -> string?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.NnApiSupportLibraryHandle.get -> long
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.Options() -> void
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetAcceleratorName(string? name) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetAllowFp16(bool enable) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetCacheDir(string? cacheDir) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetExecutionPreference(int preference) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetMaxNumberOfDelegatedPartitions(int limit) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetModelToken(string? modelToken) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetNnApiSupportLibraryHandle(long handle) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.SetUseNnapiCpu(bool enable) -> Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options?
Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.UseNnapiCpu.get -> Java.Lang.Boolean?
Xamarin.TensorFlow.Lite.RuntimeFlavor
Xamarin.TensorFlow.Lite.TensorFlowLite
Xamarin.TensorFlow.Lite.TensorQuantizationParams
Xamarin.TensorFlow.Lite.TensorQuantizationParams.TensorQuantizationParams(float scale, int zeroPoint) -> void
Xamarin.TensorFlow.Lite.TensorQuantizationParams.TensorQuantizationParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ExecutionPreferenceFastSingleAnswer = 1 -> int
const Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ExecutionPreferenceLowPower = 0 -> int
const Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ExecutionPreferenceSustainedSpeed = 2 -> int
const Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.ExecutionPreferenceUndefined = -1 -> int
override Xamarin.TensorFlow.Lite.DataType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.InterpreterApiOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.InterpreterApiOptions.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Lite.InterpreterApiOptions.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.Lite.InterpreterFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.InterpreterFactory.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Lite.InterpreterFactory.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Options.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.Lite.RuntimeFlavor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.TensorFlowLite.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.TensorQuantizationParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Lite.TensorQuantizationParams.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Lite.TensorQuantizationParams.ThresholdType.get -> System.Type!
static Xamarin.TensorFlow.Lite.DataType.Bool.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Float32.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Int16.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Int32.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Int64.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Int8.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.String.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Uint8.get -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.ValueOf(string? name) -> Xamarin.TensorFlow.Lite.DataType?
static Xamarin.TensorFlow.Lite.DataType.Values() -> Xamarin.TensorFlow.Lite.DataType![]?
static Xamarin.TensorFlow.Lite.InterpreterApi.Create(Java.IO.File? modelFile, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
static Xamarin.TensorFlow.Lite.InterpreterApi.Create(Java.Nio.ByteBuffer? byteBuffer, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
static Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.FromApplicationOnly.get -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime?
static Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.FromSystemOnly.get -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime?
static Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.PreferSystemOverApplication.get -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime?
static Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.ValueOf(string? name) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime?
static Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime.Values() -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime![]?
static Xamarin.TensorFlow.Lite.RuntimeFlavor.Application.get -> Xamarin.TensorFlow.Lite.RuntimeFlavor?
static Xamarin.TensorFlow.Lite.RuntimeFlavor.System.get -> Xamarin.TensorFlow.Lite.RuntimeFlavor?
static Xamarin.TensorFlow.Lite.RuntimeFlavor.ValueOf(string? name) -> Xamarin.TensorFlow.Lite.RuntimeFlavor?
static Xamarin.TensorFlow.Lite.RuntimeFlavor.Values() -> Xamarin.TensorFlow.Lite.RuntimeFlavor![]?
static Xamarin.TensorFlow.Lite.TensorFlowLite.Init() -> void
static Xamarin.TensorFlow.Lite.TensorFlowLite.RuntimeVersion() -> string?
static Xamarin.TensorFlow.Lite.TensorFlowLite.RuntimeVersion(Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime? runtime) -> string?
static Xamarin.TensorFlow.Lite.TensorFlowLite.SchemaVersion() -> string?
static Xamarin.TensorFlow.Lite.TensorFlowLite.SchemaVersion(Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime? runtime) -> string?
static Xamarin.TensorFlow.Lite.TensorFlowLite.Version() -> string?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.AccelerationConfig.get -> Xamarin.TensorFlow.Lite.Acceleration.IValidatedAccelerationConfig?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.AddDelegate(Xamarin.TensorFlow.Lite.IDelegate? delegate) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.AddDelegateFactory(Xamarin.TensorFlow.Lite.IDelegateFactory? delegateFactory) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.DelegateFactories.get -> System.Collections.Generic.IList<Xamarin.TensorFlow.Lite.IDelegateFactory!>?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.Delegates.get -> System.Collections.Generic.IList<Xamarin.TensorFlow.Lite.IDelegate!>?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.IsCancellable.get -> bool
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.NumThreads.get -> int
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.Runtime.get -> Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetAccelerationConfig(Xamarin.TensorFlow.Lite.Acceleration.IValidatedAccelerationConfig? config) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetCancellable(bool allow) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetNumThreads(int numThreads) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetRuntime(Xamarin.TensorFlow.Lite.InterpreterApiOptions.TfLiteRuntime? runtime) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetUseNNAPI(bool useNNAPI) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.SetUseXNNPACK(bool useXNNPACK) -> Xamarin.TensorFlow.Lite.InterpreterApiOptions?
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.UseNNAPI.get -> bool
virtual Xamarin.TensorFlow.Lite.InterpreterApiOptions.UseXNNPACK.get -> bool
virtual Xamarin.TensorFlow.Lite.InterpreterFactory.Create(Java.IO.File? modelFile, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
virtual Xamarin.TensorFlow.Lite.InterpreterFactory.Create(Java.Nio.ByteBuffer? byteBuffer, Xamarin.TensorFlow.Lite.InterpreterApiOptions? options) -> Xamarin.TensorFlow.Lite.IInterpreterApi?
virtual Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.Close() -> void
virtual Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.HasErrors.get -> bool
virtual Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.InitWithInterpreterFactoryApi(Xamarin.TensorFlow.Lite.IInterpreterFactoryApi? interpreterFactoryApi) -> void
virtual Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.NativeHandle.get -> long
virtual Xamarin.TensorFlow.Lite.Nnapi.NnApiDelegate.NnapiErrno.get -> int
virtual Xamarin.TensorFlow.Lite.TensorQuantizationParams.Scale.get -> float
virtual Xamarin.TensorFlow.Lite.TensorQuantizationParams.ZeroPoint.get -> int
