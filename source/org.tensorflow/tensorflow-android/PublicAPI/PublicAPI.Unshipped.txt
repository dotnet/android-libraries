#nullable enable
Xamarin.TensorFlow.Contrib.Android.RunStats
Xamarin.TensorFlow.Contrib.Android.RunStats.RunStats() -> void
Xamarin.TensorFlow.Contrib.Android.RunStats.RunStats(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface
Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.TensorFlowInferenceInterface(Android.Content.Res.AssetManager? assetManager, string? model) -> void
Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.TensorFlowInferenceInterface(System.IO.Stream? is) -> void
Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.TensorFlowInferenceInterface(Xamarin.TensorFlow.Graph? g) -> void
Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.TensorFlowInferenceInterface(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.DataType
Xamarin.TensorFlow.DataType.ByteSize() -> int
Xamarin.TensorFlow.Graph
Xamarin.TensorFlow.Graph.AddGradients(Xamarin.TensorFlow.Output? y, Xamarin.TensorFlow.Output![]? x) -> Xamarin.TensorFlow.Output![]?
Xamarin.TensorFlow.Graph.AddGradients(string? prefix, Xamarin.TensorFlow.Output![]? y, Xamarin.TensorFlow.Output![]? x, Xamarin.TensorFlow.Output![]? dx) -> Xamarin.TensorFlow.Output![]?
Xamarin.TensorFlow.Graph.Close() -> void
Xamarin.TensorFlow.Graph.Graph() -> void
Xamarin.TensorFlow.Graph.ImportGraphDef(byte[]? graphDef) -> void
Xamarin.TensorFlow.Graph.ImportGraphDef(byte[]? graphDef, string? prefix) -> void
Xamarin.TensorFlow.Graph.OpBuilder(string? type, string? name) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.Graph.Operation(string? name) -> Xamarin.TensorFlow.Operation?
Xamarin.TensorFlow.Graph.Operations() -> Java.Util.IIterator?
Xamarin.TensorFlow.Graph.ToGraphDef() -> byte[]?
Xamarin.TensorFlow.IOperand
Xamarin.TensorFlow.IOperand.AsOutput() -> Xamarin.TensorFlow.Output?
Xamarin.TensorFlow.Operation
Xamarin.TensorFlow.Operation.InputListLength(string? name) -> int
Xamarin.TensorFlow.Operation.Name() -> string?
Xamarin.TensorFlow.Operation.NumOutputs() -> int
Xamarin.TensorFlow.Operation.Output(int idx) -> Xamarin.TensorFlow.Output?
Xamarin.TensorFlow.Operation.OutputList(int idx, int length) -> Xamarin.TensorFlow.Output![]?
Xamarin.TensorFlow.Operation.OutputListLength(string? name) -> int
Xamarin.TensorFlow.Operation.Type() -> string?
Xamarin.TensorFlow.OperationBuilder
Xamarin.TensorFlow.OperationBuilder.AddControlInput(Xamarin.TensorFlow.Operation? control) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.AddInput(Xamarin.TensorFlow.Output? input) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.AddInputList(Xamarin.TensorFlow.Output![]? inputs) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.Build() -> Xamarin.TensorFlow.Operation?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.DataType![]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.DataType? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.Shape![]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.Shape? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.Tensor![]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, Xamarin.TensorFlow.Tensor? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, bool value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, bool[]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, byte[]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, float value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, float[]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, long value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, long[]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, string![]? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetAttr(string? name, string? value) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.OperationBuilder.SetDevice(string? device) -> Xamarin.TensorFlow.OperationBuilder?
Xamarin.TensorFlow.Output
Xamarin.TensorFlow.Output.AsOutput() -> Xamarin.TensorFlow.Output?
Xamarin.TensorFlow.Output.DataType() -> Xamarin.TensorFlow.DataType?
Xamarin.TensorFlow.Output.Index() -> int
Xamarin.TensorFlow.Output.Op() -> Xamarin.TensorFlow.Operation?
Xamarin.TensorFlow.Output.Output(Xamarin.TensorFlow.Operation? op, int idx) -> void
Xamarin.TensorFlow.Output.Shape() -> Xamarin.TensorFlow.Shape?
Xamarin.TensorFlow.SavedModelBundle
Xamarin.TensorFlow.SavedModelBundle.Loader
Xamarin.TensorFlow.SavedModelBundle.Loader.Load() -> Xamarin.TensorFlow.SavedModelBundle?
Xamarin.TensorFlow.SavedModelBundle.Loader.WithConfigProto(byte[]? configProto) -> Xamarin.TensorFlow.SavedModelBundle.Loader?
Xamarin.TensorFlow.SavedModelBundle.Loader.WithRunOptions(byte[]? options) -> Xamarin.TensorFlow.SavedModelBundle.Loader?
Xamarin.TensorFlow.SavedModelBundle.Loader.WithTags(params string![]? tags) -> Xamarin.TensorFlow.SavedModelBundle.Loader?
Xamarin.TensorFlow.SavedModelBundle.SavedModelBundle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.TensorFlow.Server
Xamarin.TensorFlow.Server.Close() -> void
Xamarin.TensorFlow.Server.Join() -> void
Xamarin.TensorFlow.Server.Server(byte[]? serverDef) -> void
Xamarin.TensorFlow.Server.Start() -> void
Xamarin.TensorFlow.Server.Stop() -> void
Xamarin.TensorFlow.Session
Xamarin.TensorFlow.Session.Close() -> void
Xamarin.TensorFlow.Session.InvokeRunner() -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Run
Xamarin.TensorFlow.Session.Run.Metadata.get -> System.Collections.Generic.IList<byte>?
Xamarin.TensorFlow.Session.Run.Metadata.set -> void
Xamarin.TensorFlow.Session.Run.Outputs.get -> System.Collections.IList?
Xamarin.TensorFlow.Session.Run.Outputs.set -> void
Xamarin.TensorFlow.Session.Run.Run() -> void
Xamarin.TensorFlow.Session.Runner
Xamarin.TensorFlow.Session.Runner.AddTarget(Xamarin.TensorFlow.IOperand? operand) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.AddTarget(Xamarin.TensorFlow.Operation? operation) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.AddTarget(string? operation) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Feed(Xamarin.TensorFlow.Output? o, Xamarin.TensorFlow.Tensor? t) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Feed(string? operation, Xamarin.TensorFlow.Tensor? t) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Feed(string? operation, int index, Xamarin.TensorFlow.Tensor? t) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Fetch(Xamarin.TensorFlow.IOperand? operand) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Fetch(Xamarin.TensorFlow.Output? output) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Fetch(string? operation) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Fetch(string? operation, int index) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Runner.Run() -> System.Collections.Generic.IList<Xamarin.TensorFlow.Tensor!>?
Xamarin.TensorFlow.Session.Runner.RunAndFetchMetadata() -> Xamarin.TensorFlow.Session.Run?
Xamarin.TensorFlow.Session.Runner.Runner(Xamarin.TensorFlow.Session? __self) -> void
Xamarin.TensorFlow.Session.Runner.SetOptions(byte[]? options) -> Xamarin.TensorFlow.Session.Runner?
Xamarin.TensorFlow.Session.Session(Xamarin.TensorFlow.Graph? g) -> void
Xamarin.TensorFlow.Session.Session(Xamarin.TensorFlow.Graph? g, byte[]? config) -> void
Xamarin.TensorFlow.Shape
Xamarin.TensorFlow.Shape.NumDimensions() -> int
Xamarin.TensorFlow.Shape.Size(int i) -> long
Xamarin.TensorFlow.Tensor
Xamarin.TensorFlow.Tensor.BooleanValue() -> bool
Xamarin.TensorFlow.Tensor.BytesValue() -> byte[]?
Xamarin.TensorFlow.Tensor.Close() -> void
Xamarin.TensorFlow.Tensor.CopyTo(Java.Lang.Object? dst) -> Java.Lang.Object?
Xamarin.TensorFlow.Tensor.DataType() -> Xamarin.TensorFlow.DataType?
Xamarin.TensorFlow.Tensor.DoubleValue() -> double
Xamarin.TensorFlow.Tensor.Expect(Java.Lang.Class? type) -> Xamarin.TensorFlow.Tensor?
Xamarin.TensorFlow.Tensor.FloatValue() -> float
Xamarin.TensorFlow.Tensor.IntValue() -> int
Xamarin.TensorFlow.Tensor.LongValue() -> long
Xamarin.TensorFlow.Tensor.NumBytes() -> int
Xamarin.TensorFlow.Tensor.NumDimensions() -> int
Xamarin.TensorFlow.Tensor.NumElements() -> int
Xamarin.TensorFlow.Tensor.Shape() -> long[]?
Xamarin.TensorFlow.Tensor.WriteTo(Java.Nio.ByteBuffer? dst) -> void
Xamarin.TensorFlow.Tensor.WriteTo(Java.Nio.DoubleBuffer? dst) -> void
Xamarin.TensorFlow.Tensor.WriteTo(Java.Nio.FloatBuffer? dst) -> void
Xamarin.TensorFlow.Tensor.WriteTo(Java.Nio.IntBuffer? dst) -> void
Xamarin.TensorFlow.Tensor.WriteTo(Java.Nio.LongBuffer? dst) -> void
Xamarin.TensorFlow.TensorFlow
Xamarin.TensorFlow.TensorFlowException
Xamarin.TensorFlow.Tensors
Xamarin.TensorFlow.Types.UInt8
Xamarin.TensorFlow.Types.UInt8.UInt8(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
override Xamarin.TensorFlow.Contrib.Android.RunStats.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Contrib.Android.RunStats.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Contrib.Android.RunStats.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.DataType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Graph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Operation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.OperationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Output.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.SavedModelBundle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.SavedModelBundle.Loader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.SavedModelBundle.ThresholdClass.get -> nint
override Xamarin.TensorFlow.SavedModelBundle.ThresholdType.get -> System.Type!
override Xamarin.TensorFlow.Server.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Session.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Session.Run.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Session.Runner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Shape.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Tensor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.TensorFlow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.TensorFlowException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Tensors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Types.UInt8.DoubleValue() -> double
override Xamarin.TensorFlow.Types.UInt8.FloatValue() -> float
override Xamarin.TensorFlow.Types.UInt8.IntValue() -> int
override Xamarin.TensorFlow.Types.UInt8.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.TensorFlow.Types.UInt8.LongValue() -> long
override Xamarin.TensorFlow.Types.UInt8.ThresholdClass.get -> nint
override Xamarin.TensorFlow.Types.UInt8.ThresholdType.get -> System.Type!
static Xamarin.TensorFlow.Contrib.Android.RunStats.RunOptions() -> byte[]?
static Xamarin.TensorFlow.DataType.Bool.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Double.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Float.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.FromClass(Java.Lang.Class? c) -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Int32.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Int64.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.String.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Uint8.get -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.ValueOf(string? name) -> Xamarin.TensorFlow.DataType?
static Xamarin.TensorFlow.DataType.Values() -> Xamarin.TensorFlow.DataType![]?
static Xamarin.TensorFlow.SavedModelBundle.InvokeLoader(string? exportDir) -> Xamarin.TensorFlow.SavedModelBundle.Loader?
static Xamarin.TensorFlow.SavedModelBundle.Load(string? exportDir, params string![]? tags) -> Xamarin.TensorFlow.SavedModelBundle?
static Xamarin.TensorFlow.Shape.Make(long firstDimensionSize, params long[]? otherDimensionSizes) -> Xamarin.TensorFlow.Shape?
static Xamarin.TensorFlow.Shape.Scalar() -> Xamarin.TensorFlow.Shape?
static Xamarin.TensorFlow.Shape.Unknown() -> Xamarin.TensorFlow.Shape?
static Xamarin.TensorFlow.Tensor.Create(Java.Lang.Class? type, long[]? shape, Java.Nio.ByteBuffer? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(Java.Lang.Object? obj) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(Java.Lang.Object? obj, Java.Lang.Class? type) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(long[]? shape, Java.Nio.DoubleBuffer? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(long[]? shape, Java.Nio.FloatBuffer? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(long[]? shape, Java.Nio.IntBuffer? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensor.Create(long[]? shape, Java.Nio.LongBuffer? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.TensorFlow.LoadLibrary(string? filename) -> byte[]?
static Xamarin.TensorFlow.TensorFlow.RegisteredOpList() -> byte[]?
static Xamarin.TensorFlow.TensorFlow.Version() -> string?
static Xamarin.TensorFlow.Tensors.Create(bool data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(bool[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(byte[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(double[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(float[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(int[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]![]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]![]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]![]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]![]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]![]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(long[]? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(string? data) -> Xamarin.TensorFlow.Tensor?
static Xamarin.TensorFlow.Tensors.Create(string? data, Java.Nio.Charset.Charset? charset) -> Xamarin.TensorFlow.Tensor?
virtual Xamarin.TensorFlow.Contrib.Android.RunStats.Add(byte[]? runMetadata) -> void
virtual Xamarin.TensorFlow.Contrib.Android.RunStats.Close() -> void
virtual Xamarin.TensorFlow.Contrib.Android.RunStats.Summary() -> string?
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Close() -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, Java.Nio.ByteBuffer? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, Java.Nio.DoubleBuffer? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, Java.Nio.FloatBuffer? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, Java.Nio.IntBuffer? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, Java.Nio.LongBuffer? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, bool[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, byte[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, double[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, float[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, int[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Feed(string? inputName, long[]? src, params long[]? dims) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.FeedString(string? inputName, byte[]![]? src) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.FeedString(string? inputName, byte[]? src) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, Java.Nio.ByteBuffer? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, Java.Nio.DoubleBuffer? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, Java.Nio.FloatBuffer? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, Java.Nio.IntBuffer? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, Java.Nio.LongBuffer? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, byte[]? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, double[]? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, float[]? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, int[]? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Fetch(string? outputName, long[]? dst) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Graph() -> Xamarin.TensorFlow.Graph?
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.GraphOperation(string? operationName) -> Xamarin.TensorFlow.Operation?
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Run(string![]? outputNames) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Run(string![]? outputNames, bool enableStats) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.Run(string![]? outputNames, bool enableStats, string![]? targetNodeNames) -> void
virtual Xamarin.TensorFlow.Contrib.Android.TensorFlowInferenceInterface.StatString.get -> string?
virtual Xamarin.TensorFlow.SavedModelBundle.Close() -> void
virtual Xamarin.TensorFlow.SavedModelBundle.Graph() -> Xamarin.TensorFlow.Graph?
virtual Xamarin.TensorFlow.SavedModelBundle.MetaGraphDef() -> byte[]?
virtual Xamarin.TensorFlow.SavedModelBundle.Session() -> Xamarin.TensorFlow.Session?
