#nullable enable
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule.BackendRegistryModule() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule.BackendRegistryModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.BackendRequest() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.BackendRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.Builder() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.BackendResponse() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.BackendResponse(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.CreationContext() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.CreationContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory.CreationContextFactory_Factory(JavaX.Inject.IProvider? applicationContextProvider, JavaX.Inject.IProvider? wallClockProvider, JavaX.Inject.IProvider? monotonicClockProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendFactory
Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendFactory.Create(Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend?
Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry
Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry.Get(string? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend?
Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend
Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend.Decorate(Xamarin.Google.Android.DataTransport.Runtime.EventInternal? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal?
Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend.Send(Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory
Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory.MetadataBackendRegistry_Factory(JavaX.Inject.IProvider? applicationContextProvider, JavaX.Inject.IProvider? creationContextFactoryProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery
Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.TransportBackendDiscovery() -> void
Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.TransportBackendDiscovery(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.BuildConfig
Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.BuildConfig() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.BindsAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.BindsAttribute.BindsAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.BindsInstanceAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.BindsInstanceAttribute.BindsInstanceAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute.ComponentAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute.Dependencies.get -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute.Dependencies.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute.Modules.get -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ComponentAttribute.Modules.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IBinds
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IBindsInstance
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IComponent
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IComponent.Dependencies() -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IComponent.Modules() -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IComponentBuilder
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IComponentFactory
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ILazy
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ILazy.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IModule
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IModule.Includes() -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IModule.Subcomponents() -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.IProvides
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DaggerGeneratedAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DaggerGeneratedAttribute.DaggerGeneratedAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DoubleCheck
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DoubleCheck.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IDaggerGenerated
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IFactory
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IQualifierMetadata
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IQualifierMetadata.Value() -> string![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IScopeMetadata
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IScopeMetadata.Value() -> string?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.InstanceFactory
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.InstanceFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.QualifierMetadataAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.QualifierMetadataAttribute.QualifierMetadataAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.QualifierMetadataAttribute.Value.get -> string![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.QualifierMetadataAttribute.Value.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.ScopeMetadataAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.ScopeMetadataAttribute.ScopeMetadataAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.ScopeMetadataAttribute.Value.get -> string?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.ScopeMetadataAttribute.Value.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute.Includes.get -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute.Includes.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute.ModuleAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute.Subcomponents.get -> Java.Lang.Class![]?
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ModuleAttribute.Subcomponents.set -> void
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ProvidesAttribute
Xamarin.Google.Android.DataTransport.Runtime.Dagger.ProvidesAttribute.ProvidesAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload
Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload.EncodedPayload(Xamarin.Google.Android.DataTransport.Encoding! encoding, byte[]! bytes) -> void
Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload.Encoding.get -> Xamarin.Google.Android.DataTransport.Encoding?
Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload.GetBytes() -> byte[]?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.AddMetadata(string? key, int value) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.AddMetadata(string? key, long value) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.AddMetadata(string? key, string? value) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.Builder() -> void
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.EventInternal() -> void
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.EventInternal(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Get(string? key) -> string?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetInteger(string? key) -> int
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetLong(string? key) -> long
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetOrDefault(string? key, string? defaultValue) -> string?
Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Metadata.get -> System.Collections.Generic.IDictionary<string!, string!>?
Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory
Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory.ExecutionModule_ExecutorFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.AppNamespace.get -> string?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.AddLogSourceMetrics(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics? log_source_metrics_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.SetAppNamespace(string? app_namespace_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.SetGlobalMetrics(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics? global_metrics_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.SetLogSourceMetricsList(System.Collections.Generic.IList<Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics!>? log_source_metrics_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.SetWindow(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow? window_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.GlobalMetrics.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.GlobalMetricsInternal.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.LogSourceMetricsList.get -> System.Collections.Generic.IList<Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics!>?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.ToByteArray() -> byte[]?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Window.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.WindowInternal.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.WriteTo(System.IO.Stream? output) -> void
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder.SetStorageMetrics(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics? storage_metrics_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.StorageMetrics.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.StorageMetricsInternal.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder.SetEventsDroppedCount(long events_dropped_count_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder.SetReason(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason? reason_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.EventsDroppedCount.get -> long
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.GetReason() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.Number.get -> int
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder.AddLogEventDropped(Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped? log_event_dropped_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder.SetLogEventDroppedList(System.Collections.Generic.IList<Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped!>? log_event_dropped_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder.SetLogSource(string? log_source_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.LogEventDroppedList.get -> System.Collections.Generic.IList<Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped!>?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.LogSource.get -> string?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder.SetCurrentCacheSizeBytes(long current_cache_size_bytes_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder.SetMaxCacheSizeBytes(long max_cache_size_bytes_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.CurrentCacheSizeBytes.get -> long
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.MaxCacheSizeBytes.get -> long
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder.SetEndMs(long end_ms_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder.SetStartMs(long start_ms_) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder?
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.EndMs.get -> long
Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.StartMs.get -> long
Xamarin.Google.Android.DataTransport.Runtime.ForcedSender
Xamarin.Google.Android.DataTransport.Runtime.IDestination
Xamarin.Google.Android.DataTransport.Runtime.IDestination.GetExtras() -> byte[]?
Xamarin.Google.Android.DataTransport.Runtime.IDestination.Name.get -> string!
Xamarin.Google.Android.DataTransport.Runtime.IEncodedDestination
Xamarin.Google.Android.DataTransport.Runtime.IEncodedDestination.SupportedEncodings.get -> System.Collections.Generic.ICollection<Xamarin.Google.Android.DataTransport.Encoding!>?
Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule.EventStoreModule() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule.EventStoreModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory.EventStoreModule_DbNameFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory.EventStoreModule_PackageNameFactory(JavaX.Inject.IProvider? contextProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory.EventStoreModule_SchemaVersionFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory.EventStoreModule_StoreConfigFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore.LoadClientMetrics() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore.RecordLogEventDropped(long p0, Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason? p1, string? p2) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore.ResetClientMetrics() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.CleanUp() -> int
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.GetNextCallTime(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0) -> long
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.HasPendingEventsFor(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0) -> bool
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.LoadActiveContexts() -> Java.Lang.IIterable?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.LoadBatch(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0) -> Java.Lang.IIterable?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.Persist(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0, Xamarin.Google.Android.DataTransport.Runtime.EventInternal? p1) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.RecordFailure(Java.Lang.IIterable? p0) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.RecordNextCallTime(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0, long p1) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore.RecordSuccess(Java.Lang.IIterable? p0) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent
Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.PersistedEvent() -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.PersistedEvent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.SQLiteEventStore(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory.SQLiteEventStore_Factory(JavaX.Inject.IProvider? wallClockProvider, JavaX.Inject.IProvider? clockProvider, JavaX.Inject.IProvider? configProvider, JavaX.Inject.IProvider? schemaManagerProvider, JavaX.Inject.IProvider? packageNameProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory.SchemaManager_Factory(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? dbNameProvider, JavaX.Inject.IProvider? schemaVersionProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse
Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.ProtoEncoderDoNotUse(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Retries.IFunction
Xamarin.Google.Android.DataTransport.Runtime.Retries.IFunction.Apply(Java.Lang.Object? p0) -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Retries.IRetryStrategy
Xamarin.Google.Android.DataTransport.Runtime.Retries.IRetryStrategy.ShouldRetry(Java.Lang.Object? p0, Java.Lang.Object? p1) -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Retries.Retries
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.DefaultScheduler(Java.Util.Concurrent.IExecutor? executor, Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry? backendRegistry, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler? workScheduler, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard? guard) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.DefaultScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory.DefaultScheduler_Factory(JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? backendRegistryProvider, JavaX.Inject.IProvider? workSchedulerProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? guardProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.IScheduler
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.IScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0, Xamarin.Google.Android.DataTransport.Runtime.EventInternal? p1, Xamarin.Google.Android.DataTransport.ITransportScheduleCallback? p2) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.AlarmManagerScheduler(Android.Content.Context? applicationContext, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig? config) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.AlarmManagerScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.AlarmManagerSchedulerBroadcastReceiver() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.AlarmManagerSchedulerBroadcastReceiver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0, int p1) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? p0, int p1, bool p2) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.JobInfoScheduler(Android.Content.Context? applicationContext, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig? config) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.JobInfoScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.JobInfoSchedulerService() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.JobInfoSchedulerService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.Builder() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.Builder() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.ConfigValue() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.ConfigValue(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.SchedulerConfig() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.SchedulerConfig(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.Uploader(Android.Content.Context? context, Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry? backendRegistry, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler? workScheduler, Java.Util.Concurrent.IExecutor? executor, Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard? guard, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? uptimeClock, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore? clientHealthMetricsStore) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.Uploader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory.Uploader_Factory(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? backendRegistryProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? workSchedulerProvider, JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? guardProvider, JavaX.Inject.IProvider? clockProvider, JavaX.Inject.IProvider? uptimeClockProvider, JavaX.Inject.IProvider? clientHealthMetricsStoreProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer.WorkInitializer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory.WorkInitializer_Factory(JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? storeProvider, JavaX.Inject.IProvider? schedulerProvider, JavaX.Inject.IProvider? guardProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule.SchedulingConfigModule() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule.SchedulingConfigModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory.SchedulingConfigModule_ConfigFactory(JavaX.Inject.IProvider? clockProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule.SchedulingModule() -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule.SchedulingModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory.SchedulingModule_WorkSchedulerFactory(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? configProvider, JavaX.Inject.IProvider? clockProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard.RunCriticalSection(Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuardCriticalSection? p0) -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuardCriticalSection
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuardCriticalSection.Execute() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException.SynchronizationException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException.SynchronizationException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.IClock
Xamarin.Google.Android.DataTransport.Runtime.Time.IClock.Time.get -> long
Xamarin.Google.Android.DataTransport.Runtime.Time.IMonotonic
Xamarin.Google.Android.DataTransport.Runtime.Time.IWallTime
Xamarin.Google.Android.DataTransport.Runtime.Time.MonotonicAttribute
Xamarin.Google.Android.DataTransport.Runtime.Time.MonotonicAttribute.MonotonicAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock
Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.TestClock(long initialTimestamp) -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.TestClock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule.TimeModule() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule.TimeModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory.TimeModule_EventClockFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory.TimeModule_UptimeClockFactory() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock
Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.UptimeClock() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.UptimeClock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeAttribute
Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeAttribute.WallTimeAttribute() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock
Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.WallTimeClock() -> void
Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.WallTimeClock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportContext
Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder
Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.Builder() -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportContext.TransportContext() -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportContext.TransportContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.TransportRuntime(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent.TransportRuntimeComponent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory.Get() -> Java.Lang.Object?
Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory.TransportRuntime_Factory(JavaX.Inject.IProvider? eventClockProvider, JavaX.Inject.IProvider? uptimeClockProvider, JavaX.Inject.IProvider? schedulerProvider, JavaX.Inject.IProvider? uploaderProvider, JavaX.Inject.IProvider? initializerProvider) -> void
Xamarin.Google.Android.DataTransport.Runtime.Util.PriorityMapping
Xamarin.Google.Android.DataTransport.Runtime.Util.PriorityMapping.PriorityMapping() -> void
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.SetEvents(Java.Lang.IIterable? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.SetExtras(byte[]? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Events.get -> Java.Lang.IIterable?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.GetExtras() -> byte[]?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.GetStatus() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.NextRequestWaitMillis.get -> long
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.ApplicationContext.get -> Android.Content.Context?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.BackendName.get -> string!
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.MonotonicClock.get -> Xamarin.Google.Android.DataTransport.Runtime.Time.IClock?
abstract Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.WallClock.get -> Xamarin.Google.Android.DataTransport.Runtime.Time.IClock?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.AutoMetadata.get -> System.Collections.Generic.IDictionary<string!, string!>?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.AutoMetadata.get -> System.Collections.Generic.IDictionary<string!, string!>?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetAutoMetadata(System.Collections.Generic.IDictionary<string!, string!>? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetCode(Java.Lang.Integer? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetEncodedPayload(Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetEventMillis(long p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetExperimentIdsClear(byte[]? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetExperimentIdsEncrypted(byte[]? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetProductId(Java.Lang.Integer? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetPseudonymousId(string? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetTransportName(string? p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.SetUptimeMillis(long p0) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Code.get -> Java.Lang.Integer?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.EncodedPayload.get -> Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.EventMillis.get -> long
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetExperimentIdsClear() -> byte[]?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetExperimentIdsEncrypted() -> byte[]?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.ProductId.get -> Java.Lang.Integer?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.PseudonymousId.get -> string?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.TransportName.get -> string?
abstract Xamarin.Google.Android.DataTransport.Runtime.EventInternal.UptimeMillis.get -> long
abstract Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.Event.get -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal?
abstract Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.Id.get -> long
abstract Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.TransportContext.get -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext?
abstract Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.ClientMetrics.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics?
abstract Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue?
abstract Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.SetDelta(long p0) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.SetFlags(System.Collections.Generic.ICollection<Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag!>? p0) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.SetMaxAllowedDelay(long p0) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.BackendName.get -> string?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.SetBackendName(string? p0) -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.SetExtras(byte[]? p0) -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.SetPriority(Xamarin.Google.Android.DataTransport.Priority? p0) -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.GetExtras() -> byte[]?
abstract Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Priority.get -> Xamarin.Google.Android.DataTransport.Priority?
const Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.BuildType = "release" -> string!
const Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.Debug = false -> bool
const Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.LibraryPackageName = "com.google.android.datatransport.runtime" -> string!
const Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.VersionName = "4.0.0" -> string!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRegistryModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Backends.TransportBackendDiscovery.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DoubleCheck.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.InstanceFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.EncodedPayload.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.EventInternal.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.ForcedSender.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Retries.Retries.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.OnReceive(Android.Content.Context? context, Android.Content.Intent? intent) -> void
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerSchedulerBroadcastReceiver.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.OnStartJob(Android.App.Job.JobParameters? params) -> bool
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.OnStopJob(Android.App.Job.JobParameters? params) -> bool
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoSchedulerService.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Synchronization.SynchronizationException.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.TransportContext.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent.ThresholdClass.get -> nint
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.DataTransport.Runtime.Util.PriorityMapping.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Google.Android.DataTransport.Runtime.TransportContext.ToString() -> string?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Create(Java.Lang.IIterable? events) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.InvokeBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendRequest.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.FatalError() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.InvalidPayload() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Ok(long nextRequestWaitMillis) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.FatalError.get -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.InvalidPayload.get -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.Ok.get -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.TransientError.get -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.ValueOf(string? name) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status.Values() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.Status![]?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse.TransientError() -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.Create(Android.Content.Context? applicationContext, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? wallClock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? monotonicClock) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext.Create(Android.Content.Context? applicationContext, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? wallClock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? monotonicClock, string? backendName) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContext?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory.Create(JavaX.Inject.IProvider? applicationContextProvider, JavaX.Inject.IProvider? wallClockProvider, JavaX.Inject.IProvider? monotonicClockProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.CreationContextFactory_Factory.NewInstance(Android.Content.Context? applicationContext, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? wallClock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? monotonicClock) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory.Create(JavaX.Inject.IProvider? applicationContextProvider, JavaX.Inject.IProvider? creationContextFactoryProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Backends.MetadataBackendRegistry_Factory.NewInstance(Android.Content.Context? applicationContext, Java.Lang.Object? creationContextFactory) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DoubleCheck.Lazy(Java.Lang.Object? provider) -> Xamarin.Google.Android.DataTransport.Runtime.Dagger.ILazy?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.DoubleCheck.Provider(Java.Lang.Object? delegate) -> JavaX.Inject.IProvider?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.InstanceFactory.Create(Java.Lang.Object? instance) -> Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.InstanceFactory.CreateNullable(Java.Lang.Object? instance) -> Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.IFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckBuilderRequirement(Java.Lang.Object? requirement, Java.Lang.Class? clazz) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessage) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessageTemplate, Java.Lang.Object? errorMessageArg) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckNotNullFromComponent(Java.Lang.Object? reference) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Dagger.Internal.Preconditions.CheckNotNullFromProvides(Java.Lang.Object? reference) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.EventInternal.InvokeBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory?
static Xamarin.Google.Android.DataTransport.Runtime.ExecutionModule_ExecutorFactory.Executor() -> Java.Util.Concurrent.IExecutor?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.GlobalMetrics.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.CacheFull.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.InvalidPaylod.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.MaxRetriesReached.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.MessageTooOld.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.PayloadTooBig.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.ReasonUnknown.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.ServerError.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.ValueOf(string? name) -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason.Values() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason![]?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogSourceMetrics.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.StorageMetrics.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.DefaultInstance.get -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow?
static Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.NewBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.TimeWindow.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.ForcedSender.SendBlocking(Xamarin.Google.Android.DataTransport.ITransport? transport, Xamarin.Google.Android.DataTransport.Priority? priority) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.D(string? tag, string? message) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.D(string? tag, string? message, Java.Lang.Object? arg1) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.D(string? tag, string? message, Java.Lang.Object? arg1, Java.Lang.Object? arg2) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.D(string? tag, string? message, params Java.Lang.Object![]? args) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.E(string? tag, string? message, Java.Lang.Throwable? e) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.I(string? tag, string? message, Java.Lang.Object? arg1) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Logging.Logging.W(string? tag, string? message, Java.Lang.Object? arg1) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_DbNameFactory.DbName() -> string?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory.Create(JavaX.Inject.IProvider? contextProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_PackageNameFactory.PackageName(Android.Content.Context? context) -> string?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_SchemaVersionFactory.SchemaVersion() -> int
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.EventStoreModule_StoreConfigFactory.StoreConfig() -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent.Create(long id, Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, Xamarin.Google.Android.DataTransport.Runtime.EventInternal? object) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory.Create(JavaX.Inject.IProvider? wallClockProvider, JavaX.Inject.IProvider? clockProvider, JavaX.Inject.IProvider? configProvider, JavaX.Inject.IProvider? schemaManagerProvider, JavaX.Inject.IProvider? packageNameProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore_Factory.NewInstance(Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? wallClock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock, Java.Lang.Object? config, Java.Lang.Object? schemaManager, JavaX.Inject.IProvider? packageName) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory.Create(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? dbNameProvider, JavaX.Inject.IProvider? schemaVersionProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Persistence.SchemaManager_Factory.NewInstance(Android.Content.Context? context, string? dbName, int schemaVersion) -> Android.Database.Sqlite.SQLiteOpenHelper?
static Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.Encode(Java.Lang.Object? value) -> byte[]?
static Xamarin.Google.Android.DataTransport.Runtime.ProtoEncoderDoNotUse.Encode(Java.Lang.Object? value, System.IO.Stream? output) -> void
static Xamarin.Google.Android.DataTransport.Runtime.Retries.Retries.Retry(int maxAttempts, Java.Lang.Object? input, Xamarin.Google.Android.DataTransport.Runtime.Retries.IFunction? function, Xamarin.Google.Android.DataTransport.Runtime.Retries.IRetryStrategy? retryStrategy) -> Java.Lang.Object?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory.Create(JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? backendRegistryProvider, JavaX.Inject.IProvider? workSchedulerProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? guardProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler_Factory.NewInstance(Java.Util.Concurrent.IExecutor? executor, Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry? backendRegistry, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler? workScheduler, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard? guard) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.InvokeBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.DeviceCharging.get -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.DeviceIdle.get -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.NetworkUnmetered.get -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.ValueOf(string? name) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag.Values() -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag![]?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.GetDefault(Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.InvokeBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory.Create(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? backendRegistryProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? workSchedulerProvider, JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? guardProvider, JavaX.Inject.IProvider? clockProvider, JavaX.Inject.IProvider? uptimeClockProvider, JavaX.Inject.IProvider? clientHealthMetricsStoreProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader_Factory.NewInstance(Android.Content.Context? context, Xamarin.Google.Android.DataTransport.Runtime.Backends.IBackendRegistry? backendRegistry, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler? workScheduler, Java.Util.Concurrent.IExecutor? executor, Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard? guard, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? uptimeClock, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IClientHealthMetricsStore? clientHealthMetricsStore) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory.Create(JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? storeProvider, JavaX.Inject.IProvider? schedulerProvider, JavaX.Inject.IProvider? guardProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer_Factory.NewInstance(Java.Util.Concurrent.IExecutor? executor, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? store, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler? scheduler, Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuard? guard) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory.Config(Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory.Create(JavaX.Inject.IProvider? clockProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingConfigModule_ConfigFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory.Create(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? eventStoreProvider, JavaX.Inject.IProvider? configProvider, JavaX.Inject.IProvider? clockProvider) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Scheduling.SchedulingModule_WorkSchedulerFactory.WorkScheduler(Android.Content.Context? context, Xamarin.Google.Android.DataTransport.Runtime.Persistence.IEventStore? eventStore, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig? config, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.IWorkScheduler?
static Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_EventClockFactory.EventClock() -> Xamarin.Google.Android.DataTransport.Runtime.Time.IClock?
static Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory.Create() -> Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory?
static Xamarin.Google.Android.DataTransport.Runtime.Time.TimeModule_UptimeClockFactory.UptimeClock() -> Xamarin.Google.Android.DataTransport.Runtime.Time.IClock?
static Xamarin.Google.Android.DataTransport.Runtime.TransportContext.InvokeBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext.Builder?
static Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.Initialize(Android.Content.Context? applicationContext) -> void
static Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.Instance.get -> Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime?
static Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory.Create(JavaX.Inject.IProvider? eventClockProvider, JavaX.Inject.IProvider? uptimeClockProvider, JavaX.Inject.IProvider? schedulerProvider, JavaX.Inject.IProvider? uploaderProvider, JavaX.Inject.IProvider? initializerProvider) -> Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory?
static Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime_Factory.NewInstance(Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? eventClock, Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? uptimeClock, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.IScheduler? scheduler, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader? uploader, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer? initializer) -> Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime?
static Xamarin.Google.Android.DataTransport.Runtime.Util.PriorityMapping.ToInt(Xamarin.Google.Android.DataTransport.Priority! priority) -> int
static Xamarin.Google.Android.DataTransport.Runtime.Util.PriorityMapping.ValueOf(int value) -> Xamarin.Google.Android.DataTransport.Priority!
virtual Xamarin.Google.Android.DataTransport.Runtime.EventInternal.GetPayload() -> byte[]?
virtual Xamarin.Google.Android.DataTransport.Runtime.EventInternal.ToBuilder() -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal.Builder?
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.CleanUp() -> int
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.ClearDb() -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.Close() -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.GetNextCallTime(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext) -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.HasPendingEventsFor(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext) -> bool
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.LoadActiveContexts() -> Java.Lang.IIterable?
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.LoadBatch(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext) -> Java.Lang.IIterable?
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.LoadClientMetrics() -> Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.ClientMetrics?
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.Persist(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, Xamarin.Google.Android.DataTransport.Runtime.EventInternal? e) -> Xamarin.Google.Android.DataTransport.Runtime.Persistence.PersistedEvent?
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.RecordFailure(Java.Lang.IIterable? events) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.RecordLogEventDropped(long eventsDroppedCount, Xamarin.Google.Android.DataTransport.Runtime.Firebase.Transport.LogEventDropped.Reason? reason, string? logSource) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.RecordNextCallTime(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, long timestampMs) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.RecordSuccess(Java.Lang.IIterable? events) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.ResetClientMetrics() -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Persistence.SQLiteEventStore.RunCriticalSection(Xamarin.Google.Android.DataTransport.Runtime.Synchronization.ISynchronizationGuardCriticalSection? criticalSection) -> Java.Lang.Object?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.DefaultScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, Xamarin.Google.Android.DataTransport.Runtime.EventInternal? e, Xamarin.Google.Android.DataTransport.ITransportScheduleCallback? callback) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.AlarmManagerScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber, bool force) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.JobInfoScheduler.Schedule(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber, bool force) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.AddConfig(Xamarin.Google.Android.DataTransport.Priority? priority, Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigValue? value) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.Build() -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder.SetClock(Xamarin.Google.Android.DataTransport.Runtime.Time.IClock? clock) -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Builder?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigureJob(Android.App.Job.JobInfo.Builder? builder, Xamarin.Google.Android.DataTransport.Priority? priority, long minimumTimestamp, int attemptNumber) -> Android.App.Job.JobInfo.Builder?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.ConfigureJob(Android.App.Job.JobInfo.Builder? builder, Xamarin.Google.Android.DataTransport.Priority? priority, long minimumTimestamp, int attemptNumber, bool skipDelta) -> Android.App.Job.JobInfo.Builder?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.GetFlags(Xamarin.Google.Android.DataTransport.Priority? priority) -> System.Collections.Generic.ICollection<Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.Flag!>?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.GetScheduleDelay(Xamarin.Google.Android.DataTransport.Priority? priority, long minTimestamp, int attemptNumber) -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.SchedulerConfig.GetScheduleDelay(Xamarin.Google.Android.DataTransport.Priority? priority, long minTimestamp, int attemptNumber, bool skipDelta) -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.CreateMetricsEvent(Xamarin.Google.Android.DataTransport.Runtime.Backends.ITransportBackend? backend, string? pseudonymousId) -> Xamarin.Google.Android.DataTransport.Runtime.EventInternal?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.LogAndUpdateState(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber) -> Xamarin.Google.Android.DataTransport.Runtime.Backends.BackendResponse?
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader.Upload(Xamarin.Google.Android.DataTransport.Runtime.TransportContext? transportContext, int attemptNumber, Java.Lang.IRunnable? callback) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.WorkInitializer.EnsureContextsScheduled() -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.Advance(long value) -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.Tick() -> void
virtual Xamarin.Google.Android.DataTransport.Runtime.Time.TestClock.Time.get -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.Time.UptimeClock.Time.get -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.Time.WallTimeClock.Time.get -> long
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportContext.ShouldUploadClientHealthMetrics() -> bool
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportContext.WithPriority(Xamarin.Google.Android.DataTransport.Priority? priority) -> Xamarin.Google.Android.DataTransport.Runtime.TransportContext?
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.NewFactory(Xamarin.Google.Android.DataTransport.Runtime.IDestination? destination) -> Xamarin.Google.Android.DataTransport.ITransportFactory?
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.NewFactory(string? backendName) -> Xamarin.Google.Android.DataTransport.ITransportFactory?
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportRuntime.Uploader.get -> Xamarin.Google.Android.DataTransport.Runtime.Scheduling.JobScheduling.Uploader?
virtual Xamarin.Google.Android.DataTransport.Runtime.TransportRuntimeComponent.Close() -> void
