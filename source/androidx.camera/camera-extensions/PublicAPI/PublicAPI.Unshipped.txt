#nullable enable
AndroidX.Camera.Extensions.ExtensionMode
AndroidX.Camera.Extensions.ExtensionMode.IMode
AndroidX.Camera.Extensions.ExtensionsManager
AndroidX.Camera.Extensions.ExtensionsManager.GetCameraExtensionsControl(AndroidX.Camera.Core.ICameraControl! cameraControl) -> AndroidX.Camera.Extensions.ICameraExtensionsControl?
AndroidX.Camera.Extensions.ExtensionsManager.GetCameraExtensionsInfo(AndroidX.Camera.Core.ICameraInfo! cameraInfo) -> AndroidX.Camera.Extensions.ICameraExtensionsInfo!
AndroidX.Camera.Extensions.ExtensionsManager.GetEstimatedCaptureLatencyRange(AndroidX.Camera.Core.CameraSelector! cameraSelector, int mode) -> Android.Util.Range?
AndroidX.Camera.Extensions.ExtensionsManager.GetExtensionEnabledCameraSelector(AndroidX.Camera.Core.CameraSelector! baseCameraSelector, int mode) -> AndroidX.Camera.Core.CameraSelector!
AndroidX.Camera.Extensions.ExtensionsManager.IsExtensionAvailable(AndroidX.Camera.Core.CameraSelector! baseCameraSelector, int mode) -> bool
AndroidX.Camera.Extensions.ExtensionsManager.IsImageAnalysisSupported(AndroidX.Camera.Core.CameraSelector! cameraSelector, int mode) -> bool
AndroidX.Camera.Extensions.ExtensionsManager.Shutdown() -> Google.Common.Util.Concurrent.IListenableFuture!
AndroidX.Camera.Extensions.ICameraExtensionsControl
AndroidX.Camera.Extensions.ICameraExtensionsControl.SetExtensionStrength(int strength) -> void
AndroidX.Camera.Extensions.ICameraExtensionsInfo
AndroidX.Camera.Extensions.ICameraExtensionsInfo.CurrentExtensionMode.get -> AndroidX.Lifecycle.LiveData?
AndroidX.Camera.Extensions.ICameraExtensionsInfo.ExtensionStrength.get -> AndroidX.Lifecycle.LiveData?
AndroidX.Camera.Extensions.ICameraExtensionsInfo.IsCurrentExtensionModeAvailable.get -> bool
AndroidX.Camera.Extensions.ICameraExtensionsInfo.IsExtensionStrengthAvailable.get -> bool
AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender
AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.AdvancedVendorExtender(int mode) -> void
AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.AdvancedVendorExtender(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.BasicVendorExtender
AndroidX.Camera.Extensions.Internal.BasicVendorExtender.BasicVendorExtender(int mode) -> void
AndroidX.Camera.Extensions.Internal.BasicVendorExtender.BasicVendorExtender(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult
AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.Camera2CameraCaptureResult(Android.Hardware.Camera2.CaptureResult! captureResult) -> void
AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.Camera2CameraCaptureResult(AndroidX.Camera.Core.Impl.TagBundle! tagBundle, Android.Hardware.Camera2.CaptureResult! captureResult) -> void
AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.Camera2CameraCaptureResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.ClientVersion
AndroidX.Camera.Extensions.Internal.ClientVersion.ClientVersion(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.ClientVersion.ClientVersion(string! versionString) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk.CaptureOutputSurfaceOccupiedQuirk() -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk.CaptureOutputSurfaceOccupiedQuirk(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon.CrashWhenOnDisableTooSoon() -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon.CrashWhenOnDisableTooSoon(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks
AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.DeviceQuirks(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirksLoader
AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirksLoader.DeviceQuirksLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk
AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.ExtensionDisabledQuirk() -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.ExtensionDisabledQuirk(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit
AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit.GetAvailableKeysNeedsOnInit() -> void
AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit.GetAvailableKeysNeedsOnInit(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever
AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever.AvailableKeysRetriever() -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever.AvailableKeysRetriever(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor
AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.CaptureOutputSurfaceForCaptureProcessor(Android.Views.Surface! surface, Android.Util.Size! surfaceSize, bool needOverrideTimestamp) -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.CaptureOutputSurfaceForCaptureProcessor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator
AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.ExtensionDisabledValidator() -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.ExtensionDisabledValidator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck
AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.OnEnableDisableSessionDurationCheck() -> void
AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.OnEnableDisableSessionDurationCheck(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.ExtensionVersion
AndroidX.Camera.Extensions.Internal.ExtensionVersion.ExtensionVersion() -> void
AndroidX.Camera.Extensions.Internal.ExtensionVersion.ExtensionVersion(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.ExtensionsUseCaseConfigFactory
AndroidX.Camera.Extensions.Internal.ExtensionsUseCaseConfigFactory.ExtensionsUseCaseConfigFactory(AndroidX.Camera.Extensions.Internal.IVendorExtender! vendorExtender) -> void
AndroidX.Camera.Extensions.Internal.ExtensionsUseCaseConfigFactory.GetConfig(AndroidX.Camera.Core.Impl.UseCaseConfigFactoryCaptureType! captureType, int captureMode) -> AndroidX.Camera.Core.Impl.IConfig?
AndroidX.Camera.Extensions.Internal.ExtensionsUtils
AndroidX.Camera.Extensions.Internal.ExtensionsUtils.ExtensionsUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.IVendorExtender
AndroidX.Camera.Extensions.Internal.IVendorExtender.CreateSessionProcessor(Android.Content.Context! context) -> AndroidX.Camera.Core.Impl.ISessionProcessor?
AndroidX.Camera.Extensions.Internal.IVendorExtender.GetEstimatedCaptureLatencyRange(Android.Util.Size? size) -> Android.Util.Range?
AndroidX.Camera.Extensions.Internal.IVendorExtender.GetSupportedPostviewResolutions(Android.Util.Size! captureSize) -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, System.Collections.Generic.IList<Android.Util.Size!>!>!
AndroidX.Camera.Extensions.Internal.IVendorExtender.GetSupportedYuvAnalysisResolutions() -> Android.Util.Size![]!
AndroidX.Camera.Extensions.Internal.IVendorExtender.Init(AndroidX.Camera.Core.ICameraInfo! cameraInfo) -> void
AndroidX.Camera.Extensions.Internal.IVendorExtender.IsCaptureProcessProgressAvailable.get -> bool
AndroidX.Camera.Extensions.Internal.IVendorExtender.IsCurrentExtensionModeAvailable.get -> bool
AndroidX.Camera.Extensions.Internal.IVendorExtender.IsExtensionAvailable(string! cameraId, System.Collections.Generic.IDictionary<string!, Android.Hardware.Camera2.CameraCharacteristics!>! characteristicsMap) -> bool
AndroidX.Camera.Extensions.Internal.IVendorExtender.IsExtensionStrengthAvailable.get -> bool
AndroidX.Camera.Extensions.Internal.IVendorExtender.IsPostviewAvailable.get -> bool
AndroidX.Camera.Extensions.Internal.IVendorExtender.SupportedCaptureOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
AndroidX.Camera.Extensions.Internal.IVendorExtender.SupportedCaptureResultKeys.get -> System.Collections.Generic.IList<Android.Hardware.Camera2.CaptureResult.Key!>!
AndroidX.Camera.Extensions.Internal.IVendorExtender.SupportedPreviewOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
AndroidX.Camera.Extensions.Internal.IVendorExtender.WillReceiveOnCaptureCompleted() -> bool
AndroidX.Camera.Extensions.Internal.IVendorProcessor
AndroidX.Camera.Extensions.Internal.IVendorProcessor.Close() -> void
AndroidX.Camera.Extensions.Internal.IVendorProcessor.OnDeInit() -> void
AndroidX.Camera.Extensions.Internal.IVendorProcessor.OnInit() -> void
AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider
AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.ImageAnalysisConfigProvider(AndroidX.Camera.Extensions.Internal.IVendorExtender! vendorExtender) -> void
AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.ImageAnalysisConfigProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider
AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.ImageCaptureConfigProvider(AndroidX.Camera.Extensions.Internal.IVendorExtender! vendorExtender) -> void
AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.ImageCaptureConfigProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.PreviewConfigProvider
AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.PreviewConfigProvider(AndroidX.Camera.Extensions.Internal.IVendorExtender! vendorExtender) -> void
AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.PreviewConfigProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.RequestOptionConfig
AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder
AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.Builder() -> void
AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.RequestOptionConfig.RequestOptionConfig(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Camera.Extensions.Internal.Version
AndroidX.Camera.Extensions.Internal.Version.Version(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.Camera.Extensions.Internal.Version.CompareTo(Java.Lang.Object! o) -> int
abstract AndroidX.Camera.Extensions.Internal.Version.Major.get -> int
const AndroidX.Camera.Extensions.ExtensionMode.Auto = 5 -> int
const AndroidX.Camera.Extensions.ExtensionMode.Bokeh = 1 -> int
const AndroidX.Camera.Extensions.ExtensionMode.FaceRetouch = 4 -> int
const AndroidX.Camera.Extensions.ExtensionMode.Hdr = 2 -> int
const AndroidX.Camera.Extensions.ExtensionMode.Night = 3 -> int
const AndroidX.Camera.Extensions.ExtensionMode.None = 0 -> int
override AndroidX.Camera.Extensions.ExtensionMode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.ExtensionsManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.BasicVendorExtender.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.BasicVendorExtender.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.BasicVendorExtender.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.ClientVersion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ClientVersion.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.ClientVersion.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CaptureOutputSurfaceOccupiedQuirk.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.CrashWhenOnDisableTooSoon.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirksLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirksLoader.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirksLoader.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Quirk.GetAvailableKeysNeedsOnInit.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.AvailableKeysRetriever.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.ExtensionVersion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ExtensionVersion.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.ExtensionVersion.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.ExtensionsUseCaseConfigFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ExtensionsUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ExtensionsUtils.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.ExtensionsUtils.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.RequestOptionConfig.ThresholdType.get -> System.Type!
override AndroidX.Camera.Extensions.Internal.Version.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Camera.Extensions.Internal.Version.ThresholdClass.get -> nint
override AndroidX.Camera.Extensions.Internal.Version.ThresholdType.get -> System.Type!
override sealed AndroidX.Camera.Extensions.Internal.Version.Equals(Java.Lang.Object? obj) -> bool
override sealed AndroidX.Camera.Extensions.Internal.Version.GetHashCode() -> int
override sealed AndroidX.Camera.Extensions.Internal.Version.ToString() -> string!
static AndroidX.Camera.Extensions.ExtensionsManager.GetInstanceAsync(Android.Content.Context! context, AndroidX.Camera.Core.ICameraProvider! cameraProvider) -> Google.Common.Util.Concurrent.IListenableFuture!
static AndroidX.Camera.Extensions.ExtensionsManager.GetInstanceAsync(Android.Content.Context! context, AndroidX.Camera.Core.ICameraProvider! cameraProvider, string! clientVersionStr) -> Google.Common.Util.Concurrent.IListenableFuture!
static AndroidX.Camera.Extensions.Internal.ClientVersion.CurrentVersion.get -> AndroidX.Camera.Extensions.Internal.ClientVersion!
static AndroidX.Camera.Extensions.Internal.ClientVersion.CurrentVersion.set -> void
static AndroidX.Camera.Extensions.Internal.ClientVersion.IsMaximumCompatibleVersion(AndroidX.Camera.Extensions.Internal.Version! version) -> bool
static AndroidX.Camera.Extensions.Internal.ClientVersion.IsMinimumCompatibleVersion(AndroidX.Camera.Extensions.Internal.Version! version) -> bool
static AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.All.get -> AndroidX.Camera.Core.Impl.Quirks!
static AndroidX.Camera.Extensions.Internal.Compat.Quirk.DeviceQuirks.Get(Java.Lang.Class! quirkClass) -> Java.Lang.Object?
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.InjectInstance(AndroidX.Camera.Extensions.Internal.ExtensionVersion? extensionVersion) -> void
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.IsAdvancedExtenderSupported.get -> bool
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.IsExtensionVersionSupported.get -> bool
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.IsMaximumCompatibleVersion(AndroidX.Camera.Extensions.Internal.Version! version) -> bool
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.IsMinimumCompatibleVersion(AndroidX.Camera.Extensions.Internal.Version! version) -> bool
static AndroidX.Camera.Extensions.Internal.ExtensionVersion.RuntimeVersion.get -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.ExtensionsUtils.GetCameraCharacteristicsMap(AndroidX.Camera.Core.Impl.ICameraInfoInternal! cameraInfoInternal) -> System.Collections.Generic.IDictionary<string!, Android.Hardware.Camera2.CameraCharacteristics!>!
static AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.From(AndroidX.Camera.Core.Impl.IConfig! config) -> AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder!
static AndroidX.Camera.Extensions.Internal.Version.Create(int major, int minor, int patch, string! description) -> AndroidX.Camera.Extensions.Internal.Version!
static AndroidX.Camera.Extensions.Internal.Version.Parse(string! versionString) -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.Version.Version10.get -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.Version.Version11.get -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.Version.Version12.get -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.Version.Version13.get -> AndroidX.Camera.Extensions.Internal.Version?
static AndroidX.Camera.Extensions.Internal.Version.Version14.get -> AndroidX.Camera.Extensions.Internal.Version?
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.CreateSessionProcessor(Android.Content.Context! context) -> AndroidX.Camera.Core.Impl.ISessionProcessor?
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.GetEstimatedCaptureLatencyRange(Android.Util.Size? size) -> Android.Util.Range?
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.GetSupportedPostviewResolutions(Android.Util.Size! captureSize) -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, System.Collections.Generic.IList<Android.Util.Size!>!>!
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.GetSupportedYuvAnalysisResolutions() -> Android.Util.Size![]!
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.Init(AndroidX.Camera.Core.ICameraInfo! cameraInfo) -> void
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.IsCaptureProcessProgressAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.IsCurrentExtensionModeAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.IsExtensionAvailable(string! cameraId, System.Collections.Generic.IDictionary<string!, Android.Hardware.Camera2.CameraCharacteristics!>! characteristicsMap) -> bool
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.IsExtensionStrengthAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.IsPostviewAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.SupportedCaptureOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.SupportedCaptureResultKeys.get -> System.Collections.Generic.IList<Android.Hardware.Camera2.CaptureResult.Key!>!
virtual AndroidX.Camera.Extensions.Internal.AdvancedVendorExtender.SupportedPreviewOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.CreateSessionProcessor(Android.Content.Context! context) -> AndroidX.Camera.Core.Impl.ISessionProcessor?
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.GetEstimatedCaptureLatencyRange(Android.Util.Size? size) -> Android.Util.Range?
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.GetSupportedPostviewResolutions(Android.Util.Size! captureSize) -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, System.Collections.Generic.IList<Android.Util.Size!>!>!
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.GetSupportedYuvAnalysisResolutions() -> Android.Util.Size![]!
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.Init(AndroidX.Camera.Core.ICameraInfo! cameraInfo) -> void
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.IsCaptureProcessProgressAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.IsExtensionAvailable(string! cameraId, System.Collections.Generic.IDictionary<string!, Android.Hardware.Camera2.CameraCharacteristics!>! characteristicsMap) -> bool
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.IsExtensionStrengthAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.IsPostviewAvailable.get -> bool
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.SupportedCaptureOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.SupportedCaptureResultKeys.get -> System.Collections.Generic.IList<Android.Hardware.Camera2.CaptureResult.Key!>!
virtual AndroidX.Camera.Extensions.Internal.BasicVendorExtender.SupportedPreviewOutputResolutions.get -> System.Collections.Generic.IList<Android.Util.Pair!>!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AeMode.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AeMode!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AeState.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AeState!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AfMode.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AfMode!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AfState.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AfState!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AwbMode.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AwbMode!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.AwbState.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.AwbState!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.CaptureResult.get -> Android.Hardware.Camera2.CaptureResult!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.FlashState.get -> AndroidX.Camera.Core.Impl.CameraCaptureMetaData.FlashState!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.PopulateExifData(AndroidX.Camera.Core.Impl.Utils.ExifData.Builder! exifData) -> void
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.TagBundle.get -> AndroidX.Camera.Core.Impl.TagBundle!
virtual AndroidX.Camera.Extensions.Internal.Camera2CameraCaptureResult.Timestamp.get -> long
virtual AndroidX.Camera.Extensions.Internal.ClientVersion.ToVersionString() -> string!
virtual AndroidX.Camera.Extensions.Internal.ClientVersion.Version.get -> AndroidX.Camera.Extensions.Internal.Version!
virtual AndroidX.Camera.Extensions.Internal.Compat.Quirk.ExtensionDisabledQuirk.ShouldDisableExtension() -> bool
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.Close() -> void
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.SetOutputImageTimestamp(long timestamp) -> void
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.CaptureOutputSurfaceForCaptureProcessor.Surface.get -> Android.Views.Surface!
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.ExtensionDisabledValidator.ShouldDisableExtension() -> bool
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.OnDisableSessionInvoked() -> void
virtual AndroidX.Camera.Extensions.Internal.Compat.Workaround.OnEnableDisableSessionDurationCheck.OnEnableSessionInvoked() -> void
virtual AndroidX.Camera.Extensions.Internal.ImageAnalysisConfigProvider.Config.get -> Java.Lang.Object!
virtual AndroidX.Camera.Extensions.Internal.ImageCaptureConfigProvider.Config.get -> Java.Lang.Object!
virtual AndroidX.Camera.Extensions.Internal.PreviewConfigProvider.Config.get -> Java.Lang.Object!
virtual AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.Build() -> AndroidX.Camera.Extensions.Internal.RequestOptionConfig!
virtual AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder.SetCaptureRequestOption(Android.Hardware.Camera2.CaptureRequest.Key! key, Java.Lang.Object! value) -> AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Builder!
virtual AndroidX.Camera.Extensions.Internal.RequestOptionConfig.Config.get -> AndroidX.Camera.Core.Impl.IConfig!
virtual AndroidX.Camera.Extensions.Internal.Version.CompareTo(AndroidX.Camera.Extensions.Internal.Version! other) -> int
virtual AndroidX.Camera.Extensions.Internal.Version.CompareTo(int majorVersion) -> int
virtual AndroidX.Camera.Extensions.Internal.Version.CompareTo(int majorVersion, int minorVersion) -> int
