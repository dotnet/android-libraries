#nullable enable
AndroidX.Media3.ExoPlayer.Rtsp.Reader.DefaultRtpPayloadReaderFactory
AndroidX.Media3.ExoPlayer.Rtsp.Reader.DefaultRtpPayloadReaderFactory.CreatePayloadReader(AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat? payloadFormat) -> AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader?
AndroidX.Media3.ExoPlayer.Rtsp.Reader.DefaultRtpPayloadReaderFactory.DefaultRtpPayloadReaderFactory() -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader.Consume(AndroidX.Media3.Common.Util.ParsableByteArray? p0, long p1, int p2, bool p3) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader.CreateTracks(AndroidX.Media3.Extractor.IExtractorOutput? p0, int p1) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader.OnReceivingFirstPacket(long p0, int p1) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader.Seek(long p0, long p1) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReaderFactory
AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReaderFactory.CreatePayloadReader(AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat? p0) -> AndroidX.Media3.ExoPlayer.Rtsp.Reader.IRtpPayloadReader?
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.Consume(AndroidX.Media3.Common.Util.ParsableByteArray? data, long timestamp, int sequenceNumber, bool rtpMarker) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.CreateTracks(AndroidX.Media3.Extractor.IExtractorOutput? extractorOutput, int trackId) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.OnReceivingFirstPacket(long timestamp, int sequenceNumber) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.RtpAc3Reader(AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat? payloadFormat) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.Seek(long nextRtpTimestamp, long timeUs) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.Consume(AndroidX.Media3.Common.Util.ParsableByteArray? data, long timestamp, int sequenceNumber, bool rtpMarker) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.CreateTracks(AndroidX.Media3.Extractor.IExtractorOutput? extractorOutput, int trackId) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.OnReceivingFirstPacket(long timestamp, int sequenceNumber) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.RtpPcmReader(AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat? payloadFormat) -> void
AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.Seek(long nextRtpTimestamp, long timeUs) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.Build() -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.Builder() -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetCsrc(byte[]? csrc) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetMarker(bool marker) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetPadding(bool padding) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetPayloadData(byte[]? payloadData) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetPayloadType(sbyte payloadType) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetSequenceNumber(int sequenceNumber) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetSsrc(int ssrc) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.SetTimestamp(long timestamp) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Csrc.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Csrc.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.CsrcCount.get -> sbyte
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.CsrcCount.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Extension.get -> bool
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Extension.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Marker.get -> bool
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Marker.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Padding.get -> bool
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Padding.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.PayloadData.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.PayloadData.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.PayloadType.get -> sbyte
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.PayloadType.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.SequenceNumber.get -> int
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.SequenceNumber.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Ssrc.get -> int
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Ssrc.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Timestamp.get -> long
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Timestamp.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Version.get -> sbyte
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Version.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.WriteToBuffer(byte[]? target, int offset, int length) -> int
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.ClockRate.get -> int
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.ClockRate.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.FmtpParameters.get -> Google.Common.Collect.ImmutableMap?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.FmtpParameters.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.Format.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.Format.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.MediaEncoding.get -> string?
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.MediaEncoding.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpPayloadFormat(AndroidX.Media3.Common.Format? format, int rtpPayloadType, int clockRate, System.Collections.Generic.IDictionary<string!, string!>? fmtpParameters, string? mediaEncoding) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpPayloadType.get -> int
AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpPayloadType.set -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtpUtils
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.CanUpdateMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> bool
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.CreateMediaSource(AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.ExoPlayer.Source.IMediaSource?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.Factory() -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.GetSupportedTypes() -> int[]?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetDebugLoggingEnabled(bool debugLoggingEnabled) -> AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetDrmSessionManagerProvider(AndroidX.Media3.ExoPlayer.Drm.IDrmSessionManagerProvider? drmSessionManager) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetForceUseRtpTcp(bool forceUseRtpTcp) -> AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetLoadErrorHandlingPolicy(AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? loadErrorHandlingPolicy) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetSocketFactory(Javax.Net.SocketFactory? socketFactory) -> AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetTimeoutMs(long timeoutMs) -> AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.SetUserAgent(string? userAgent) -> AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.RtspPlaybackException(Java.Lang.Throwable? e) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.RtspPlaybackException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.RtspPlaybackException(string? message) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.RtspPlaybackException(string? message, Java.Lang.Throwable? e) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspUdpUnsupportedTransportException
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspUdpUnsupportedTransportException.RtspUdpUnsupportedTransportException(string? message) -> void
AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.UpdateMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.CsrcSize = 4 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.MaxSequenceNumber = 65535 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.MaxSize = 65507 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.MinHeaderSize = 12 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.MinSequenceNumber = 0 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.RtpVersion = 2 -> int
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaAc3 = "AC3" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaAmr = "AMR" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaAmrWb = "AMR-WB" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaH2631998 = "H263-1998" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaH2632000 = "H263-2000" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaH264 = "H264" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaH265 = "H265" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaMpeg4Generic = "MPEG4-GENERIC" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaMpeg4LatmAudio = "MP4A-LATM" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaMpeg4Video = "MP4V-ES" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaOpus = "OPUS" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaPcmL16 = "L16" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaPcmL8 = "L8" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaPcma = "PCMA" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaPcmu = "PCMU" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaVp8 = "VP8" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.RtpMediaVp9 = "VP9" -> string!
const AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.DefaultTimeoutMs = 8000 -> long
override AndroidX.Media3.ExoPlayer.Rtsp.Reader.DefaultRtpPayloadReaderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpAc3Reader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.Reader.RtpPcmReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtpUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.CreatePeriod(AndroidX.Media3.ExoPlayer.Source.MediaSourceMediaPeriodId? id, AndroidX.Media3.ExoPlayer.Upstream.IAllocator? allocator, long startPositionUs) -> AndroidX.Media3.ExoPlayer.Source.IMediaPeriod?
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.MaybeThrowSourceInfoRefreshError() -> void
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.ReleasePeriod(AndroidX.Media3.ExoPlayer.Source.IMediaPeriod? mediaPeriod) -> void
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.ThresholdClass.get -> nint
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspPlaybackException.ThresholdType.get -> System.Type!
override AndroidX.Media3.ExoPlayer.Rtsp.RtspMediaSource.RtspUdpUnsupportedTransportException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.GetNextSequenceNumber(int sequenceNumber) -> int
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.GetPreviousSequenceNumber(int sequenceNumber) -> int
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Parse(AndroidX.Media3.Common.Util.ParsableByteArray? packetBuffer) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket?
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket.Parse(byte[]? buffer, int length) -> AndroidX.Media3.ExoPlayer.Rtsp.RtpPacket?
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.GetMimeTypeFromRtpMediaType(string? mediaType) -> string?
static AndroidX.Media3.ExoPlayer.Rtsp.RtpPayloadFormat.GetRawPcmEncodingType(string? mediaEncoding) -> int
static AndroidX.Media3.ExoPlayer.Rtsp.RtpUtils.GetIncomingRtpDataSpec(int portNumber) -> AndroidX.Media3.DataSource.DataSpec?
