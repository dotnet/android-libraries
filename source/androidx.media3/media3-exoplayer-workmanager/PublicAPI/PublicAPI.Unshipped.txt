#nullable enable
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.Cancel() -> bool
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.GetSupportedRequirements(AndroidX.Media3.ExoPlayer.Scheduler.Requirements? requirements) -> AndroidX.Media3.ExoPlayer.Scheduler.Requirements?
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.Schedule(AndroidX.Media3.ExoPlayer.Scheduler.Requirements? requirements, string? servicePackage, string? serviceAction) -> bool
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.SchedulerWorker
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.SchedulerWorker.SchedulerWorker(Android.Content.Context? context, AndroidX.Work.WorkerParameters? workerParams) -> void
AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.WorkManagerScheduler(Android.Content.Context? context, string? workName) -> void
override AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.SchedulerWorker.DoWork() -> AndroidX.Work.ListenableWorker.Result?
override AndroidX.Media3.ExoPlayer.WorkManager.WorkManagerScheduler.SchedulerWorker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
