#nullable enable
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.AssetLoaderCompositionSettings(int hdrMode, bool retainHdrFromUltraHdrImage) -> void
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.AssetLoaderCompositionSettings(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.HdrMode.get -> int
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.HdrMode.set -> void
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.RetainHdrFromUltraHdrImage.get -> bool
AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.RetainHdrFromUltraHdrImage.set -> void
AndroidX.Media3.Transformer.AssetLoaderOnOutputFormatHandler
AndroidX.Media3.Transformer.AudioEncoderSettings
AndroidX.Media3.Transformer.AudioEncoderSettings.Bitrate.get -> int
AndroidX.Media3.Transformer.AudioEncoderSettings.Bitrate.set -> void
AndroidX.Media3.Transformer.AudioEncoderSettings.Builder
AndroidX.Media3.Transformer.AudioEncoderSettings.Builder.Build() -> AndroidX.Media3.Transformer.AudioEncoderSettings?
AndroidX.Media3.Transformer.AudioEncoderSettings.Builder.Builder() -> void
AndroidX.Media3.Transformer.AudioEncoderSettings.Builder.SetBitrate(int bitrate) -> AndroidX.Media3.Transformer.AudioEncoderSettings.Builder?
AndroidX.Media3.Transformer.AudioEncoderSettings.Builder.SetProfile(int profile) -> AndroidX.Media3.Transformer.AudioEncoderSettings.Builder?
AndroidX.Media3.Transformer.AudioEncoderSettings.Profile.get -> int
AndroidX.Media3.Transformer.AudioEncoderSettings.Profile.set -> void
AndroidX.Media3.Transformer.Composition
AndroidX.Media3.Transformer.Composition.Builder
AndroidX.Media3.Transformer.Composition.Builder.Build() -> AndroidX.Media3.Transformer.Composition?
AndroidX.Media3.Transformer.Composition.Builder.Builder(AndroidX.Media3.Transformer.EditedMediaItemSequence? sequence, params AndroidX.Media3.Transformer.EditedMediaItemSequence![]? sequences) -> void
AndroidX.Media3.Transformer.Composition.Builder.Builder(System.Collections.Generic.IList<AndroidX.Media3.Transformer.EditedMediaItemSequence!>? sequences) -> void
AndroidX.Media3.Transformer.Composition.Builder.ExperimentalSetForceAudioTrack(bool forceAudioTrack) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.ExperimentalSetRetainHdrFromUltraHdrImage(bool retainHdrFromUltraHdrImage) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.SetEffects(AndroidX.Media3.Transformer.Effects? effects) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.SetHdrMode(int hdrMode) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.SetTransmuxAudio(bool transmuxAudio) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.SetTransmuxVideo(bool transmuxVideo) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Builder.SetVideoCompositorSettings(AndroidX.Media3.Common.IVideoCompositorSettings? videoCompositorSettings) -> AndroidX.Media3.Transformer.Composition.Builder?
AndroidX.Media3.Transformer.Composition.Effects.get -> AndroidX.Media3.Transformer.Effects?
AndroidX.Media3.Transformer.Composition.Effects.set -> void
AndroidX.Media3.Transformer.Composition.ForceAudioTrack.get -> bool
AndroidX.Media3.Transformer.Composition.ForceAudioTrack.set -> void
AndroidX.Media3.Transformer.Composition.HdrMode.get -> int
AndroidX.Media3.Transformer.Composition.HdrMode.set -> void
AndroidX.Media3.Transformer.Composition.IHdrMode
AndroidX.Media3.Transformer.Composition.RetainHdrFromUltraHdrImage.get -> bool
AndroidX.Media3.Transformer.Composition.RetainHdrFromUltraHdrImage.set -> void
AndroidX.Media3.Transformer.Composition.TransmuxAudio.get -> bool
AndroidX.Media3.Transformer.Composition.TransmuxAudio.set -> void
AndroidX.Media3.Transformer.Composition.TransmuxVideo.get -> bool
AndroidX.Media3.Transformer.Composition.TransmuxVideo.set -> void
AndroidX.Media3.Transformer.Composition.VideoCompositorSettings.get -> AndroidX.Media3.Common.IVideoCompositorSettings?
AndroidX.Media3.Transformer.Composition.VideoCompositorSettings.set -> void
AndroidX.Media3.Transformer.CompositionPlayer
AndroidX.Media3.Transformer.CompositionPlayer.Builder
AndroidX.Media3.Transformer.CompositionPlayer.Builder.Build() -> AndroidX.Media3.Transformer.CompositionPlayer?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetAudioSink(AndroidX.Media3.ExoPlayer.Audio.IAudioSink? audioSink) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetClock(AndroidX.Media3.Common.Util.IClock? clock) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetImageDecoderFactory(AndroidX.Media3.ExoPlayer.Image.IImageDecoderFactory? imageDecoderFactory) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetLooper(Android.OS.Looper? looper) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetMediaSourceFactory(AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.Builder.SetPreviewingVideoGraphFactory(AndroidX.Media3.Common.IPreviewingVideoGraphFactory? previewingVideoGraphFactory) -> AndroidX.Media3.Transformer.CompositionPlayer.Builder?
AndroidX.Media3.Transformer.CompositionPlayer.OnError(AndroidX.Media3.ExoPlayer.Video.PlaybackVideoGraphWrapper? playbackVideoGraphWrapper, AndroidX.Media3.Common.VideoFrameProcessingException? videoFrameProcessingException) -> void
AndroidX.Media3.Transformer.CompositionPlayer.OnError(string? message, Java.Lang.Exception? cause, int errorCode) -> void
AndroidX.Media3.Transformer.CompositionPlayer.OnFirstFrameRendered(AndroidX.Media3.ExoPlayer.Video.PlaybackVideoGraphWrapper? playbackVideoGraphWrapper) -> void
AndroidX.Media3.Transformer.CompositionPlayer.OnFrameDropped(AndroidX.Media3.ExoPlayer.Video.PlaybackVideoGraphWrapper? playbackVideoGraphWrapper) -> void
AndroidX.Media3.Transformer.CompositionPlayer.OnVideoSizeChanged(AndroidX.Media3.ExoPlayer.Video.PlaybackVideoGraphWrapper? playbackVideoGraphWrapper, AndroidX.Media3.Common.VideoSize? videoSize) -> void
AndroidX.Media3.Transformer.CompositionPlayer.SetComposition(AndroidX.Media3.Transformer.Composition? composition) -> void
AndroidX.Media3.Transformer.CompositionPlayer.SetVideoSurface(Android.Views.Surface? surface, AndroidX.Media3.Common.Util.Size? videoOutputSize) -> void
AndroidX.Media3.Transformer.CompositionPlayer.SurfaceChanged(Android.Views.ISurfaceHolder? holder, Android.Graphics.Format format, int width, int height) -> void
AndroidX.Media3.Transformer.CompositionPlayer.SurfaceCreated(Android.Views.ISurfaceHolder? holder) -> void
AndroidX.Media3.Transformer.CompositionPlayer.SurfaceDestroyed(Android.Views.ISurfaceHolder? holder) -> void
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, Android.OS.Looper? looper, AndroidX.Media3.Transformer.IAssetLoaderListener? listener, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? compositionSettings) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.DefaultAssetLoaderFactory(Android.Content.Context? context, AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> void
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.DefaultAssetLoaderFactory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock) -> void
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.DefaultAssetLoaderFactory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory, AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> void
AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.DefaultAssetLoaderFactory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory, AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader, AndroidX.Media3.ExoPlayer.TrackSelection.TrackSelector.IFactory? trackSelectorFactory) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer
AndroidX.Media3.Transformer.DefaultAudioMixer.AddSource(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? sourceFormat, long startTimeUs) -> int
AndroidX.Media3.Transformer.DefaultAudioMixer.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? outputAudioFormat, int bufferSizeMs, long startTimeUs) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.Factory
AndroidX.Media3.Transformer.DefaultAudioMixer.Factory.Create() -> AndroidX.Media3.Transformer.IAudioMixer?
AndroidX.Media3.Transformer.DefaultAudioMixer.Factory.Factory() -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.Factory.Factory(bool outputSilenceWithNoSources, bool clipFloatOutput) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.HasSource(int sourceId) -> bool
AndroidX.Media3.Transformer.DefaultAudioMixer.IsEnded.get -> bool
AndroidX.Media3.Transformer.DefaultAudioMixer.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Transformer.DefaultAudioMixer.QueueInput(int sourceId, Java.Nio.ByteBuffer? sourceBuffer) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.RemoveSource(int sourceId) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.Reset() -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.SetEndTimeUs(long endTimeUs) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.SetSourceVolume(int sourceId, float volume) -> void
AndroidX.Media3.Transformer.DefaultAudioMixer.SupportsSourceAudioFormat(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? sourceFormat) -> bool
AndroidX.Media3.Transformer.DefaultCodec
AndroidX.Media3.Transformer.DefaultCodec.ConfigurationFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.DefaultCodec.DefaultCodec(Android.Content.Context? context, AndroidX.Media3.Common.Format? configurationFormat, Android.Media.MediaFormat? configurationMediaFormat, string? mediaCodecName, bool isDecoder, Android.Views.Surface? outputSurface) -> void
AndroidX.Media3.Transformer.DefaultCodec.InputFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.DefaultCodec.InputSurface.get -> Android.Views.Surface?
AndroidX.Media3.Transformer.DefaultCodec.IsEnded.get -> bool
AndroidX.Media3.Transformer.DefaultCodec.MaxPendingFrameCount.get -> int
AndroidX.Media3.Transformer.DefaultCodec.MaybeDequeueInputBuffer(AndroidX.Media3.Decoder.DecoderInputBuffer? inputBuffer) -> bool
AndroidX.Media3.Transformer.DefaultCodec.Name.get -> string?
AndroidX.Media3.Transformer.DefaultCodec.OutputBuffer.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Transformer.DefaultCodec.OutputBufferInfo.get -> Android.Media.MediaCodec.BufferInfo?
AndroidX.Media3.Transformer.DefaultCodec.OutputFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.DefaultCodec.QueueInputBuffer(AndroidX.Media3.Decoder.DecoderInputBuffer? inputBuffer) -> void
AndroidX.Media3.Transformer.DefaultCodec.Release() -> void
AndroidX.Media3.Transformer.DefaultCodec.ReleaseOutputBuffer(bool render) -> void
AndroidX.Media3.Transformer.DefaultCodec.ReleaseOutputBuffer(long renderPresentationTimeUs) -> void
AndroidX.Media3.Transformer.DefaultCodec.SignalEndOfInputStream() -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.Build() -> AndroidX.Media3.Transformer.DefaultDecoderFactory?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.ExperimentalSetDynamicSchedulingEnabled(bool dynamicSchedulingEnabled) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.SetCodecPriority(int codecPriority) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.SetEnableDecoderFallback(bool enableDecoderFallback) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.SetListener(AndroidX.Media3.Transformer.DefaultDecoderFactory.IListener? listener) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.SetMediaCodecSelector(AndroidX.Media3.ExoPlayer.MediaCodec.IMediaCodecSelector? mediaCodecSelector) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.SetShouldConfigureOperatingRate(bool shouldConfigureOperatingRate) -> AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultDecoderFactory.CreateForAudioDecoding(AndroidX.Media3.Common.Format? format) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.DefaultDecoderFactory.CreateForVideoDecoding(AndroidX.Media3.Common.Format? format, Android.Views.Surface? outputSurface, bool requestSdrToneMapping) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.DefaultDecoderFactory.DefaultDecoderFactory(Android.Content.Context? context) -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory.DefaultDecoderFactory(Android.Content.Context? context, bool enableDecoderFallback, AndroidX.Media3.Transformer.DefaultDecoderFactory.IListener? listener) -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory.EventArgs
AndroidX.Media3.Transformer.DefaultDecoderFactory.EventArgs.EventArgs(string? p0, System.Collections.Generic.IList<AndroidX.Media3.Transformer.ExportException!>? p1) -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory.EventArgs.P0.get -> string?
AndroidX.Media3.Transformer.DefaultDecoderFactory.EventArgs.P1.get -> System.Collections.Generic.IList<AndroidX.Media3.Transformer.ExportException!>?
AndroidX.Media3.Transformer.DefaultDecoderFactory.IListener
AndroidX.Media3.Transformer.DefaultDecoderFactory.IListener.OnCodecInitialized(string? p0, System.Collections.Generic.IList<AndroidX.Media3.Transformer.ExportException!>? p1) -> void
AndroidX.Media3.Transformer.DefaultDecoderFactory.IsDynamicSchedulingEnabled.get -> bool
AndroidX.Media3.Transformer.DefaultEncoderFactory
AndroidX.Media3.Transformer.DefaultEncoderFactory.AudioNeedsEncoding() -> bool
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.Build() -> AndroidX.Media3.Transformer.DefaultEncoderFactory?
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.SetCodecPriority(int codecPriority) -> AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.SetEnableFallback(bool enableFallback) -> AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.SetRequestedAudioEncoderSettings(AndroidX.Media3.Transformer.AudioEncoderSettings? requestedAudioEncoderSettings) -> AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.SetRequestedVideoEncoderSettings(AndroidX.Media3.Transformer.VideoEncoderSettings? requestedVideoEncoderSettings) -> AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.SetVideoEncoderSelector(AndroidX.Media3.Transformer.IEncoderSelector? videoEncoderSelector) -> AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder?
AndroidX.Media3.Transformer.DefaultEncoderFactory.CreateForAudioEncoding(AndroidX.Media3.Common.Format? format) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.DefaultEncoderFactory.CreateForVideoEncoding(AndroidX.Media3.Common.Format? format) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.DefaultEncoderFactory.VideoNeedsEncoding() -> bool
AndroidX.Media3.Transformer.DefaultMuxer
AndroidX.Media3.Transformer.DefaultMuxer.AddMetadataEntry(AndroidX.Media3.Common.Metadata.IEntry? metadataEntry) -> void
AndroidX.Media3.Transformer.DefaultMuxer.AddTrack(AndroidX.Media3.Common.Format? format) -> int
AndroidX.Media3.Transformer.DefaultMuxer.Close() -> void
AndroidX.Media3.Transformer.DefaultMuxer.Factory
AndroidX.Media3.Transformer.DefaultMuxer.Factory.Create(string? path) -> AndroidX.Media3.Transformer.IMuxer?
AndroidX.Media3.Transformer.DefaultMuxer.Factory.Factory() -> void
AndroidX.Media3.Transformer.DefaultMuxer.Factory.Factory(long videoDurationMs) -> void
AndroidX.Media3.Transformer.DefaultMuxer.Factory.SetVideoDurationUs(long videoDurationUs) -> AndroidX.Media3.Transformer.DefaultMuxer.Factory?
AndroidX.Media3.Transformer.DefaultMuxer.WriteSampleData(int trackId, Java.Nio.ByteBuffer? byteBuffer, Android.Media.MediaCodec.BufferInfo? bufferInfo) -> void
AndroidX.Media3.Transformer.DurationUsEventArgs
AndroidX.Media3.Transformer.DurationUsEventArgs.DurationUsEventArgs(long p0) -> void
AndroidX.Media3.Transformer.DurationUsEventArgs.P0.get -> long
AndroidX.Media3.Transformer.EditedMediaItem
AndroidX.Media3.Transformer.EditedMediaItem.BuildUpon() -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder
AndroidX.Media3.Transformer.EditedMediaItem.Builder.Build() -> AndroidX.Media3.Transformer.EditedMediaItem?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.Builder(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetDurationUs(long durationUs) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetEffects(AndroidX.Media3.Transformer.Effects? effects) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetFlattenForSlowMotion(bool flattenForSlowMotion) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetFrameRate(int frameRate) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetRemoveAudio(bool removeAudio) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.Builder.SetRemoveVideo(bool removeVideo) -> AndroidX.Media3.Transformer.EditedMediaItem.Builder?
AndroidX.Media3.Transformer.EditedMediaItem.DurationUs.get -> long
AndroidX.Media3.Transformer.EditedMediaItem.DurationUs.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.Effects.get -> AndroidX.Media3.Transformer.Effects?
AndroidX.Media3.Transformer.EditedMediaItem.Effects.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.FlattenForSlowMotion.get -> bool
AndroidX.Media3.Transformer.EditedMediaItem.FlattenForSlowMotion.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.FrameRate.get -> int
AndroidX.Media3.Transformer.EditedMediaItem.FrameRate.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Transformer.EditedMediaItem.MediaItem.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.RemoveAudio.get -> bool
AndroidX.Media3.Transformer.EditedMediaItem.RemoveAudio.set -> void
AndroidX.Media3.Transformer.EditedMediaItem.RemoveVideo.get -> bool
AndroidX.Media3.Transformer.EditedMediaItem.RemoveVideo.set -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.AddGap(long durationUs) -> AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder?
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.AddItem(AndroidX.Media3.Transformer.EditedMediaItem? item) -> AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder?
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.AddItems(System.Collections.Generic.IList<AndroidX.Media3.Transformer.EditedMediaItem!>? items) -> AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder?
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.AddItems(params AndroidX.Media3.Transformer.EditedMediaItem![]? items) -> AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder?
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.Build() -> AndroidX.Media3.Transformer.EditedMediaItemSequence?
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.Builder(System.Collections.Generic.IList<AndroidX.Media3.Transformer.EditedMediaItem!>? editedMediaItems) -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.Builder(params AndroidX.Media3.Transformer.EditedMediaItem![]? editedMediaItems) -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.SetIsLooping(bool isLooping) -> AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder?
AndroidX.Media3.Transformer.EditedMediaItemSequence.EditedMediaItemSequence(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, params AndroidX.Media3.Transformer.EditedMediaItem![]? editedMediaItems) -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence.EditedMediaItemSequence(System.Collections.Generic.IList<AndroidX.Media3.Transformer.EditedMediaItem!>? editedMediaItems) -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence.EditedMediaItemSequence(System.Collections.Generic.IList<AndroidX.Media3.Transformer.EditedMediaItem!>? editedMediaItems, bool isLooping) -> void
AndroidX.Media3.Transformer.EditedMediaItemSequence.IsLooping.get -> bool
AndroidX.Media3.Transformer.EditedMediaItemSequence.IsLooping.set -> void
AndroidX.Media3.Transformer.Effects
AndroidX.Media3.Transformer.Effects.Effects(System.Collections.Generic.IList<AndroidX.Media3.Common.Audio.IAudioProcessor!>? audioProcessors, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? videoEffects) -> void
AndroidX.Media3.Transformer.EncoderUtil
AndroidX.Media3.Transformer.ErrorEventArgs
AndroidX.Media3.Transformer.ErrorEventArgs.ErrorEventArgs(AndroidX.Media3.Transformer.ExportException? p0) -> void
AndroidX.Media3.Transformer.ErrorEventArgs.P0.get -> AndroidX.Media3.Transformer.ExportException?
AndroidX.Media3.Transformer.ExoPlayerAssetLoader
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, Android.OS.Looper? looper, AndroidX.Media3.Transformer.IAssetLoaderListener? listener, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? compositionSettings) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory.Factory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock) -> void
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory.Factory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory) -> void
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory.Factory(Android.Content.Context? context, AndroidX.Media3.Transformer.ICodecDecoderFactory? decoderFactory, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory, AndroidX.Media3.ExoPlayer.TrackSelection.TrackSelector.IFactory? trackSelectorFactory) -> void
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Release() -> void
AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Start() -> void
AndroidX.Media3.Transformer.ExperimentalAnalyzerModeFactory
AndroidX.Media3.Transformer.ExperimentalFrameExtractor
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.Build() -> AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.Builder() -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.SetExtractHdrFrames(bool extractHdrFrames) -> AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.SetMediaCodecSelector(AndroidX.Media3.ExoPlayer.MediaCodec.IMediaCodecSelector? mediaCodecSelector) -> AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.SetSeekParameters(AndroidX.Media3.ExoPlayer.SeekParameters? seekParameters) -> AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.ExtractHdrFrames.get -> bool
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.ExtractHdrFrames.set -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.MediaCodecSelector.get -> AndroidX.Media3.ExoPlayer.MediaCodec.IMediaCodecSelector?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.MediaCodecSelector.set -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.SeekParameters.get -> AndroidX.Media3.ExoPlayer.SeekParameters?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.SeekParameters.set -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.ExperimentalFrameExtractor(Android.Content.Context? context, AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration? configuration) -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame.Bitmap.get -> Android.Graphics.Bitmap?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame.Bitmap.set -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame.PresentationTimeMs.get -> long
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame.PresentationTimeMs.set -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.GetFrame(long positionMs) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Release() -> void
AndroidX.Media3.Transformer.ExperimentalFrameExtractor.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects) -> void
AndroidX.Media3.Transformer.ExportException
AndroidX.Media3.Transformer.ExportException.CodecInfo
AndroidX.Media3.Transformer.ExportException.CodecInfo.CodecInfo(string? configurationFormat, bool isVideo, bool isDecoder, string? name) -> void
AndroidX.Media3.Transformer.ExportException.CodecInfo.ConfigurationFormat.get -> string?
AndroidX.Media3.Transformer.ExportException.CodecInfo.ConfigurationFormat.set -> void
AndroidX.Media3.Transformer.ExportException.CodecInfo.IsDecoder.get -> bool
AndroidX.Media3.Transformer.ExportException.CodecInfo.IsDecoder.set -> void
AndroidX.Media3.Transformer.ExportException.CodecInfo.IsVideo.get -> bool
AndroidX.Media3.Transformer.ExportException.CodecInfo.IsVideo.set -> void
AndroidX.Media3.Transformer.ExportException.CodecInfo.Name.get -> string?
AndroidX.Media3.Transformer.ExportException.CodecInfo.Name.set -> void
AndroidX.Media3.Transformer.ExportException.ErrorCode.get -> int
AndroidX.Media3.Transformer.ExportException.ErrorCode.set -> void
AndroidX.Media3.Transformer.ExportException.ErrorCodeName.get -> string?
AndroidX.Media3.Transformer.ExportException.ErrorInfoEquals(AndroidX.Media3.Transformer.ExportException? other) -> bool
AndroidX.Media3.Transformer.ExportException.IErrorCode
AndroidX.Media3.Transformer.ExportException.TimestampMs.get -> long
AndroidX.Media3.Transformer.ExportException.TimestampMs.set -> void
AndroidX.Media3.Transformer.ExportResult
AndroidX.Media3.Transformer.ExportResult.AudioConversionProcess.get -> int
AndroidX.Media3.Transformer.ExportResult.AudioConversionProcess.set -> void
AndroidX.Media3.Transformer.ExportResult.AudioEncoderName.get -> string?
AndroidX.Media3.Transformer.ExportResult.AudioEncoderName.set -> void
AndroidX.Media3.Transformer.ExportResult.AudioMimeType.get -> string?
AndroidX.Media3.Transformer.ExportResult.AudioMimeType.set -> void
AndroidX.Media3.Transformer.ExportResult.AverageAudioBitrate.get -> int
AndroidX.Media3.Transformer.ExportResult.AverageAudioBitrate.set -> void
AndroidX.Media3.Transformer.ExportResult.AverageVideoBitrate.get -> int
AndroidX.Media3.Transformer.ExportResult.AverageVideoBitrate.set -> void
AndroidX.Media3.Transformer.ExportResult.BuildUpon() -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder
AndroidX.Media3.Transformer.ExportResult.Builder.AddProcessedInputs(System.Collections.Generic.IList<AndroidX.Media3.Transformer.ExportResult.ProcessedInput!>? processedInputs) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.Build() -> AndroidX.Media3.Transformer.ExportResult?
AndroidX.Media3.Transformer.ExportResult.Builder.Builder() -> void
AndroidX.Media3.Transformer.ExportResult.Builder.Reset() -> void
AndroidX.Media3.Transformer.ExportResult.Builder.SetAudioEncoderName(string? audioEncoderName) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetAudioMimeType(string? audioMimeType) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetAverageAudioBitrate(int averageAudioBitrate) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetAverageVideoBitrate(int averageVideoBitrate) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetChannelCount(int channelCount) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetColorInfo(AndroidX.Media3.Common.ColorInfo? colorInfo) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetDurationMs(long durationMs) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetExportException(AndroidX.Media3.Transformer.ExportException? exportException) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetFileSizeBytes(long fileSizeBytes) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetHeight(int height) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetOptimizationResult(int optimizationResult) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetSampleRate(int sampleRate) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetVideoEncoderName(string? videoEncoderName) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetVideoFrameCount(int videoFrameCount) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetVideoMimeType(string? videoMimeType) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.Builder.SetWidth(int width) -> AndroidX.Media3.Transformer.ExportResult.Builder?
AndroidX.Media3.Transformer.ExportResult.ChannelCount.get -> int
AndroidX.Media3.Transformer.ExportResult.ChannelCount.set -> void
AndroidX.Media3.Transformer.ExportResult.ColorInfo.get -> AndroidX.Media3.Common.ColorInfo?
AndroidX.Media3.Transformer.ExportResult.ColorInfo.set -> void
AndroidX.Media3.Transformer.ExportResult.DurationMs.get -> long
AndroidX.Media3.Transformer.ExportResult.DurationMs.set -> void
AndroidX.Media3.Transformer.ExportResult.ExportException.get -> AndroidX.Media3.Transformer.ExportException?
AndroidX.Media3.Transformer.ExportResult.ExportException.set -> void
AndroidX.Media3.Transformer.ExportResult.FileSizeBytes.get -> long
AndroidX.Media3.Transformer.ExportResult.FileSizeBytes.set -> void
AndroidX.Media3.Transformer.ExportResult.Height.get -> int
AndroidX.Media3.Transformer.ExportResult.Height.set -> void
AndroidX.Media3.Transformer.ExportResult.OptimizationResult.get -> int
AndroidX.Media3.Transformer.ExportResult.OptimizationResult.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.AudioDecoderName.get -> string?
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.AudioDecoderName.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.AudioFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.AudioFormat.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.DurationUs.get -> long
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.DurationUs.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.MediaItem.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.ProcessedInput(AndroidX.Media3.Common.MediaItem? mediaItem, long durationUs, AndroidX.Media3.Common.Format? audioFormat, AndroidX.Media3.Common.Format? videoFormat, string? audioDecoderName, string? videoDecoderName) -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.VideoDecoderName.get -> string?
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.VideoDecoderName.set -> void
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.VideoFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.ExportResult.ProcessedInput.VideoFormat.set -> void
AndroidX.Media3.Transformer.ExportResult.SampleRate.get -> int
AndroidX.Media3.Transformer.ExportResult.SampleRate.set -> void
AndroidX.Media3.Transformer.ExportResult.VideoConversionProcess.get -> int
AndroidX.Media3.Transformer.ExportResult.VideoConversionProcess.set -> void
AndroidX.Media3.Transformer.ExportResult.VideoEncoderName.get -> string?
AndroidX.Media3.Transformer.ExportResult.VideoEncoderName.set -> void
AndroidX.Media3.Transformer.ExportResult.VideoFrameCount.get -> int
AndroidX.Media3.Transformer.ExportResult.VideoFrameCount.set -> void
AndroidX.Media3.Transformer.ExportResult.VideoMimeType.get -> string?
AndroidX.Media3.Transformer.ExportResult.VideoMimeType.set -> void
AndroidX.Media3.Transformer.ExportResult.Width.get -> int
AndroidX.Media3.Transformer.ExportResult.Width.set -> void
AndroidX.Media3.Transformer.IAssetLoader
AndroidX.Media3.Transformer.IAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? p0) -> int
AndroidX.Media3.Transformer.IAssetLoader.Release() -> void
AndroidX.Media3.Transformer.IAssetLoader.Start() -> void
AndroidX.Media3.Transformer.IAssetLoaderFactory
AndroidX.Media3.Transformer.IAssetLoaderFactory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? p0, Android.OS.Looper? p1, AndroidX.Media3.Transformer.IAssetLoaderListener? p2, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? p3) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.IAssetLoaderListener
AndroidX.Media3.Transformer.IAssetLoaderListener.OnDurationUs(long p0) -> void
AndroidX.Media3.Transformer.IAssetLoaderListener.OnError(AndroidX.Media3.Transformer.ExportException? p0) -> void
AndroidX.Media3.Transformer.IAssetLoaderListener.OnOutputFormat(AndroidX.Media3.Common.Format? p0) -> AndroidX.Media3.Transformer.ISampleConsumer?
AndroidX.Media3.Transformer.IAssetLoaderListener.OnTrackAdded(AndroidX.Media3.Common.Format? p0, int p1) -> bool
AndroidX.Media3.Transformer.IAssetLoaderListener.OnTrackCount(int p0) -> void
AndroidX.Media3.Transformer.IAssetLoaderSupportedOutputTypes
AndroidX.Media3.Transformer.IAudioMixer
AndroidX.Media3.Transformer.IAudioMixer.AddSource(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? p0, long p1) -> int
AndroidX.Media3.Transformer.IAudioMixer.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? p0, int p1, long p2) -> void
AndroidX.Media3.Transformer.IAudioMixer.HasSource(int p0) -> bool
AndroidX.Media3.Transformer.IAudioMixer.IsEnded.get -> bool
AndroidX.Media3.Transformer.IAudioMixer.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Transformer.IAudioMixer.QueueInput(int p0, Java.Nio.ByteBuffer? p1) -> void
AndroidX.Media3.Transformer.IAudioMixer.RemoveSource(int p0) -> void
AndroidX.Media3.Transformer.IAudioMixer.Reset() -> void
AndroidX.Media3.Transformer.IAudioMixer.SetEndTimeUs(long p0) -> void
AndroidX.Media3.Transformer.IAudioMixer.SetSourceVolume(int p0, float p1) -> void
AndroidX.Media3.Transformer.IAudioMixer.SupportsSourceAudioFormat(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? p0) -> bool
AndroidX.Media3.Transformer.IAudioMixerFactory
AndroidX.Media3.Transformer.IAudioMixerFactory.Create() -> AndroidX.Media3.Transformer.IAudioMixer?
AndroidX.Media3.Transformer.ICodec
AndroidX.Media3.Transformer.ICodec.ConfigurationFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.ICodec.InputFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.ICodec.InputSurface.get -> Android.Views.Surface?
AndroidX.Media3.Transformer.ICodec.IsEnded.get -> bool
AndroidX.Media3.Transformer.ICodec.MaxPendingFrameCount.get -> int
AndroidX.Media3.Transformer.ICodec.MaybeDequeueInputBuffer(AndroidX.Media3.Decoder.DecoderInputBuffer? p0) -> bool
AndroidX.Media3.Transformer.ICodec.Name.get -> string?
AndroidX.Media3.Transformer.ICodec.OutputBuffer.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Transformer.ICodec.OutputBufferInfo.get -> Android.Media.MediaCodec.BufferInfo?
AndroidX.Media3.Transformer.ICodec.OutputFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.ICodec.QueueInputBuffer(AndroidX.Media3.Decoder.DecoderInputBuffer? p0) -> void
AndroidX.Media3.Transformer.ICodec.Release() -> void
AndroidX.Media3.Transformer.ICodec.ReleaseOutputBuffer(bool p0) -> void
AndroidX.Media3.Transformer.ICodec.ReleaseOutputBuffer(long p0) -> void
AndroidX.Media3.Transformer.ICodec.SignalEndOfInputStream() -> void
AndroidX.Media3.Transformer.ICodecDecoderFactory
AndroidX.Media3.Transformer.ICodecDecoderFactory.CreateForAudioDecoding(AndroidX.Media3.Common.Format? p0) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.ICodecDecoderFactory.CreateForVideoDecoding(AndroidX.Media3.Common.Format? p0, Android.Views.Surface? p1, bool p2) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.ICodecEncoderFactory
AndroidX.Media3.Transformer.ICodecEncoderFactory.AudioNeedsEncoding() -> bool
AndroidX.Media3.Transformer.ICodecEncoderFactory.CreateForAudioEncoding(AndroidX.Media3.Common.Format? p0) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.ICodecEncoderFactory.CreateForVideoEncoding(AndroidX.Media3.Common.Format? p0) -> AndroidX.Media3.Transformer.ICodec?
AndroidX.Media3.Transformer.ICodecEncoderFactory.VideoNeedsEncoding() -> bool
AndroidX.Media3.Transformer.IEncoderSelector
AndroidX.Media3.Transformer.IEncoderSelector.Default.get -> AndroidX.Media3.Transformer.IEncoderSelector?
AndroidX.Media3.Transformer.IMuxer
AndroidX.Media3.Transformer.IMuxer.AddMetadataEntry(AndroidX.Media3.Common.Metadata.IEntry? p0) -> void
AndroidX.Media3.Transformer.IMuxer.AddTrack(AndroidX.Media3.Common.Format? p0) -> int
AndroidX.Media3.Transformer.IMuxer.Close() -> void
AndroidX.Media3.Transformer.IMuxer.WriteSampleData(int p0, Java.Nio.ByteBuffer? p1, Android.Media.MediaCodec.BufferInfo? p2) -> void
AndroidX.Media3.Transformer.IMuxerFactory
AndroidX.Media3.Transformer.IMuxerFactory.Create(string? p0) -> AndroidX.Media3.Transformer.IMuxer?
AndroidX.Media3.Transformer.ISampleConsumer
AndroidX.Media3.Transformer.ISampleConsumer.InputBuffer.get -> AndroidX.Media3.Decoder.DecoderInputBuffer?
AndroidX.Media3.Transformer.ISampleConsumer.InputSurface.get -> Android.Views.Surface?
AndroidX.Media3.Transformer.ISampleConsumer.PendingVideoFrameCount.get -> int
AndroidX.Media3.Transformer.ISampleConsumer.QueueInputBitmap(Android.Graphics.Bitmap? inputBitmap, AndroidX.Media3.Common.Util.ITimestampIterator? timestampIterator) -> int
AndroidX.Media3.Transformer.ISampleConsumer.QueueInputBuffer() -> bool
AndroidX.Media3.Transformer.ISampleConsumer.QueueInputTexture(int texId, long presentationTimeUs) -> int
AndroidX.Media3.Transformer.ISampleConsumer.RegisterVideoFrame(long presentationTimeUs) -> bool
AndroidX.Media3.Transformer.ISampleConsumer.SetOnInputFrameProcessedListener(AndroidX.Media3.Common.IOnInputFrameProcessedListener? listener) -> void
AndroidX.Media3.Transformer.ISampleConsumer.SetOnInputSurfaceReadyListener(Java.Lang.IRunnable? runnable) -> void
AndroidX.Media3.Transformer.ISampleConsumer.SignalEndOfVideoInput() -> void
AndroidX.Media3.Transformer.ISampleConsumerInputResult
AndroidX.Media3.Transformer.ImageAssetLoader
AndroidX.Media3.Transformer.ImageAssetLoader.Factory
AndroidX.Media3.Transformer.ImageAssetLoader.Factory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, Android.OS.Looper? looper, AndroidX.Media3.Transformer.IAssetLoaderListener? listener, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? compositionSettings) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.ImageAssetLoader.Factory.Factory(Android.Content.Context? context, AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> void
AndroidX.Media3.Transformer.ImageAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.ImageAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.ImageAssetLoader.Release() -> void
AndroidX.Media3.Transformer.ImageAssetLoader.Start() -> void
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.AddMetadataEntry(AndroidX.Media3.Common.Metadata.IEntry? metadataEntry) -> void
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.AddTrack(AndroidX.Media3.Common.Format? format) -> int
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Close() -> void
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory.Create(string? path) -> AndroidX.Media3.Transformer.IMuxer?
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory.Factory() -> void
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory.Factory(long fragmentDurationMs) -> void
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory.SetVideoDurationUs(long videoDurationUs) -> AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory?
AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.WriteSampleData(int trackId, Java.Nio.ByteBuffer? byteBuffer, Android.Media.MediaCodec.BufferInfo? bufferInfo) -> void
AndroidX.Media3.Transformer.InAppMp4Muxer
AndroidX.Media3.Transformer.InAppMp4Muxer.AddMetadataEntry(AndroidX.Media3.Common.Metadata.IEntry? metadataEntry) -> void
AndroidX.Media3.Transformer.InAppMp4Muxer.AddTrack(AndroidX.Media3.Common.Format? format) -> int
AndroidX.Media3.Transformer.InAppMp4Muxer.Close() -> void
AndroidX.Media3.Transformer.InAppMp4Muxer.Factory
AndroidX.Media3.Transformer.InAppMp4Muxer.Factory.Create(string? path) -> AndroidX.Media3.Transformer.IMuxer?
AndroidX.Media3.Transformer.InAppMp4Muxer.Factory.Factory() -> void
AndroidX.Media3.Transformer.InAppMp4Muxer.Factory.Factory(AndroidX.Media3.Transformer.InAppMp4Muxer.IMetadataProvider? metadataProvider) -> void
AndroidX.Media3.Transformer.InAppMp4Muxer.Factory.SetVideoDurationUs(long videoDurationUs) -> AndroidX.Media3.Transformer.InAppMp4Muxer.Factory?
AndroidX.Media3.Transformer.InAppMp4Muxer.IMetadataProvider
AndroidX.Media3.Transformer.InAppMp4Muxer.IMetadataProvider.UpdateMetadataEntries(System.Collections.Generic.ICollection<AndroidX.Media3.Common.Metadata.IEntry!>? p0) -> void
AndroidX.Media3.Transformer.InAppMp4Muxer.WriteSampleData(int trackId, Java.Nio.ByteBuffer? byteBuffer, Android.Media.MediaCodec.BufferInfo? bufferInfo) -> void
AndroidX.Media3.Transformer.JsonUtil
AndroidX.Media3.Transformer.MediaProjectionAssetLoader
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Factory
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Factory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, Android.OS.Looper? looper, AndroidX.Media3.Transformer.IAssetLoaderListener? listener, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? compositionSettings) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Factory.Factory(Android.Media.Projection.MediaProjection? mediaProjection, Android.Graphics.Rect? bounds, int densityDpi) -> void
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Release() -> void
AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Start() -> void
AndroidX.Media3.Transformer.ProgressHolder
AndroidX.Media3.Transformer.ProgressHolder.Progress.get -> int
AndroidX.Media3.Transformer.ProgressHolder.Progress.set -> void
AndroidX.Media3.Transformer.ProgressHolder.ProgressHolder() -> void
AndroidX.Media3.Transformer.RawAssetLoader
AndroidX.Media3.Transformer.RawAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.RawAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.RawAssetLoader.QueueAudioData(Java.Nio.ByteBuffer? audioData, long presentationTimeUs, bool isLast) -> bool
AndroidX.Media3.Transformer.RawAssetLoader.QueueInputTexture(int texId, long presentationTimeUs) -> bool
AndroidX.Media3.Transformer.RawAssetLoader.RawAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, AndroidX.Media3.Transformer.IAssetLoaderListener? assetLoaderListener, AndroidX.Media3.Common.Format? audioFormat, AndroidX.Media3.Common.Format? videoFormat, AndroidX.Media3.Common.IOnInputFrameProcessedListener? frameProcessedListener) -> void
AndroidX.Media3.Transformer.RawAssetLoader.Release() -> void
AndroidX.Media3.Transformer.RawAssetLoader.SignalEndOfVideoInput() -> void
AndroidX.Media3.Transformer.RawAssetLoader.Start() -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader
AndroidX.Media3.Transformer.SurfaceAssetLoader.EditedMediaItem.get -> AndroidX.Media3.Transformer.EditedMediaItem?
AndroidX.Media3.Transformer.SurfaceAssetLoader.Factory
AndroidX.Media3.Transformer.SurfaceAssetLoader.Factory.CreateAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, Android.OS.Looper? looper, AndroidX.Media3.Transformer.IAssetLoaderListener? listener, AndroidX.Media3.Transformer.AssetLoaderCompositionSettings? compositionSettings) -> AndroidX.Media3.Transformer.IAssetLoader?
AndroidX.Media3.Transformer.SurfaceAssetLoader.Factory.Factory(AndroidX.Media3.Transformer.SurfaceAssetLoader.ICallback? callback) -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.SurfaceAssetLoader.ICallback
AndroidX.Media3.Transformer.SurfaceAssetLoader.ICallback.OnSurfaceAssetLoaderCreated(AndroidX.Media3.Transformer.SurfaceAssetLoader? p0) -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.ICallback.OnSurfaceReady(Android.Views.Surface? p0, AndroidX.Media3.Transformer.EditedMediaItem? p1) -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.SurfaceAssetLoader.Release() -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.SetContentFormat(AndroidX.Media3.Common.Format? contentFormat) -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.SignalEndOfInput() -> void
AndroidX.Media3.Transformer.SurfaceAssetLoader.Start() -> void
AndroidX.Media3.Transformer.TextureAssetLoader
AndroidX.Media3.Transformer.TextureAssetLoader.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.TextureAssetLoader.InterfaceConsts
AndroidX.Media3.Transformer.TextureAssetLoader.QueueInputTexture(int texId, long presentationTimeUs) -> bool
AndroidX.Media3.Transformer.TextureAssetLoader.Release() -> void
AndroidX.Media3.Transformer.TextureAssetLoader.SignalEndOfVideoInput() -> void
AndroidX.Media3.Transformer.TextureAssetLoader.Start() -> void
AndroidX.Media3.Transformer.TextureAssetLoader.TextureAssetLoader(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, AndroidX.Media3.Transformer.IAssetLoaderListener? assetLoaderListener, AndroidX.Media3.Common.Format? format, AndroidX.Media3.Common.IOnInputFrameProcessedListener? frameProcessedListener) -> void
AndroidX.Media3.Transformer.TrackAddedEventArgs
AndroidX.Media3.Transformer.TrackAddedEventArgs.Handled.get -> bool
AndroidX.Media3.Transformer.TrackAddedEventArgs.Handled.set -> void
AndroidX.Media3.Transformer.TrackAddedEventArgs.P0.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Transformer.TrackAddedEventArgs.P1.get -> int
AndroidX.Media3.Transformer.TrackAddedEventArgs.TrackAddedEventArgs(bool handled, AndroidX.Media3.Common.Format? p0, int p1) -> void
AndroidX.Media3.Transformer.TrackCountEventArgs
AndroidX.Media3.Transformer.TrackCountEventArgs.P0.get -> int
AndroidX.Media3.Transformer.TrackCountEventArgs.TrackCountEventArgs(int p0) -> void
AndroidX.Media3.Transformer.TransformationRequest
AndroidX.Media3.Transformer.TransformationRequest.AudioMimeType.get -> string?
AndroidX.Media3.Transformer.TransformationRequest.AudioMimeType.set -> void
AndroidX.Media3.Transformer.TransformationRequest.BuildUpon() -> AndroidX.Media3.Transformer.TransformationRequest.Builder?
AndroidX.Media3.Transformer.TransformationRequest.Builder
AndroidX.Media3.Transformer.TransformationRequest.Builder.Build() -> AndroidX.Media3.Transformer.TransformationRequest?
AndroidX.Media3.Transformer.TransformationRequest.Builder.Builder() -> void
AndroidX.Media3.Transformer.TransformationRequest.Builder.SetAudioMimeType(string? audioMimeType) -> AndroidX.Media3.Transformer.TransformationRequest.Builder?
AndroidX.Media3.Transformer.TransformationRequest.Builder.SetHdrMode(int hdrMode) -> AndroidX.Media3.Transformer.TransformationRequest.Builder?
AndroidX.Media3.Transformer.TransformationRequest.Builder.SetVideoMimeType(string? videoMimeType) -> AndroidX.Media3.Transformer.TransformationRequest.Builder?
AndroidX.Media3.Transformer.TransformationRequest.HdrMode.get -> int
AndroidX.Media3.Transformer.TransformationRequest.HdrMode.set -> void
AndroidX.Media3.Transformer.TransformationRequest.OutputHeight.get -> int
AndroidX.Media3.Transformer.TransformationRequest.OutputHeight.set -> void
AndroidX.Media3.Transformer.TransformationRequest.VideoMimeType.get -> string?
AndroidX.Media3.Transformer.TransformationRequest.VideoMimeType.set -> void
AndroidX.Media3.Transformer.Transformer
AndroidX.Media3.Transformer.Transformer.AddListener(AndroidX.Media3.Transformer.Transformer.IListener? listener) -> void
AndroidX.Media3.Transformer.Transformer.ApplicationLooper.get -> Android.OS.Looper?
AndroidX.Media3.Transformer.Transformer.BuildUpon() -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder
AndroidX.Media3.Transformer.Transformer.Builder.AddListener(AndroidX.Media3.Transformer.Transformer.IListener? listener) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.Build() -> AndroidX.Media3.Transformer.Transformer?
AndroidX.Media3.Transformer.Transformer.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Transformer.Transformer.Builder.ExperimentalSetMaxFramesInEncoder(int maxFramesInEncoder) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.ExperimentalSetTrimOptimizationEnabled(bool enabled) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.RemoveAllListeners() -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.RemoveListener(AndroidX.Media3.Transformer.Transformer.IListener? listener) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetAssetLoaderFactory(AndroidX.Media3.Transformer.IAssetLoaderFactory? assetLoaderFactory) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetAudioMimeType(string? audioMimeType) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetAudioMixerFactory(AndroidX.Media3.Transformer.IAudioMixerFactory? audioMixerFactory) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetDebugViewProvider(AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetEncoderFactory(AndroidX.Media3.Transformer.ICodecEncoderFactory? encoderFactory) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetEnsureFileStartsOnVideoFrameEnabled(bool enabled) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetLooper(Android.OS.Looper? looper) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetMaxDelayBetweenMuxerSamplesMs(long maxDelayBetweenMuxerSamplesMs) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetMuxerFactory(AndroidX.Media3.Transformer.IMuxerFactory? muxerFactory) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetPortraitEncodingEnabled(bool enabled) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetUsePlatformDiagnostics(bool usePlatformDiagnostics) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetVideoFrameProcessorFactory(AndroidX.Media3.Common.IVideoFrameProcessorFactory? videoFrameProcessorFactory) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Builder.SetVideoMimeType(string? videoMimeType) -> AndroidX.Media3.Transformer.Transformer.Builder?
AndroidX.Media3.Transformer.Transformer.Cancel() -> void
AndroidX.Media3.Transformer.Transformer.CompletedEventArgs
AndroidX.Media3.Transformer.Transformer.CompletedEventArgs.CompletedEventArgs(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.ExportResult? exportResult) -> void
AndroidX.Media3.Transformer.Transformer.CompletedEventArgs.Composition.get -> AndroidX.Media3.Transformer.Composition?
AndroidX.Media3.Transformer.Transformer.CompletedEventArgs.ExportResult.get -> AndroidX.Media3.Transformer.ExportResult?
AndroidX.Media3.Transformer.Transformer.ErrorEventArgs
AndroidX.Media3.Transformer.Transformer.ErrorEventArgs.Composition.get -> AndroidX.Media3.Transformer.Composition?
AndroidX.Media3.Transformer.Transformer.ErrorEventArgs.ErrorEventArgs(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.ExportResult? exportResult, AndroidX.Media3.Transformer.ExportException? exportException) -> void
AndroidX.Media3.Transformer.Transformer.ErrorEventArgs.ExportException.get -> AndroidX.Media3.Transformer.ExportException?
AndroidX.Media3.Transformer.Transformer.ErrorEventArgs.ExportResult.get -> AndroidX.Media3.Transformer.ExportResult?
AndroidX.Media3.Transformer.Transformer.FallbackAppliedEventArgs
AndroidX.Media3.Transformer.Transformer.FallbackAppliedEventArgs.Composition.get -> AndroidX.Media3.Transformer.Composition?
AndroidX.Media3.Transformer.Transformer.FallbackAppliedEventArgs.FallbackAppliedEventArgs(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.TransformationRequest? originalTransformationRequest, AndroidX.Media3.Transformer.TransformationRequest? fallbackTransformationRequest) -> void
AndroidX.Media3.Transformer.Transformer.FallbackAppliedEventArgs.FallbackTransformationRequest.get -> AndroidX.Media3.Transformer.TransformationRequest?
AndroidX.Media3.Transformer.Transformer.FallbackAppliedEventArgs.OriginalTransformationRequest.get -> AndroidX.Media3.Transformer.TransformationRequest?
AndroidX.Media3.Transformer.Transformer.GetProgress(AndroidX.Media3.Transformer.ProgressHolder? progressHolder) -> int
AndroidX.Media3.Transformer.Transformer.IListener
AndroidX.Media3.Transformer.Transformer.IListener.OnCompleted(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.ExportResult? exportResult) -> void
AndroidX.Media3.Transformer.Transformer.IListener.OnError(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.ExportResult? exportResult, AndroidX.Media3.Transformer.ExportException? exportException) -> void
AndroidX.Media3.Transformer.Transformer.IListener.OnFallbackApplied(AndroidX.Media3.Transformer.Composition? composition, AndroidX.Media3.Transformer.TransformationRequest? originalTransformationRequest, AndroidX.Media3.Transformer.TransformationRequest? fallbackTransformationRequest) -> void
AndroidX.Media3.Transformer.Transformer.IProgressState
AndroidX.Media3.Transformer.Transformer.RemoveAllListeners() -> void
AndroidX.Media3.Transformer.Transformer.RemoveListener(AndroidX.Media3.Transformer.Transformer.IListener? listener) -> void
AndroidX.Media3.Transformer.Transformer.Resume(AndroidX.Media3.Transformer.Composition? composition, string? outputFilePath, string? oldFilePath) -> void
AndroidX.Media3.Transformer.Transformer.Start(AndroidX.Media3.Common.MediaItem? mediaItem, string? path) -> void
AndroidX.Media3.Transformer.Transformer.Start(AndroidX.Media3.Transformer.Composition? composition, string? path) -> void
AndroidX.Media3.Transformer.Transformer.Start(AndroidX.Media3.Transformer.EditedMediaItem? editedMediaItem, string? path) -> void
AndroidX.Media3.Transformer.TransformerUtil
AndroidX.Media3.Transformer.VideoEncoderSettings
AndroidX.Media3.Transformer.VideoEncoderSettings.Bitrate.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.Bitrate.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.BitrateMode.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.BitrateMode.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.BuildUpon() -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.Build() -> AndroidX.Media3.Transformer.VideoEncoderSettings?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.Builder() -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.ExperimentalSetEnableHighQualityTargeting(bool enableHighQualityTargeting) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetBitrate(int bitrate) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetBitrateMode(int bitrateMode) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetEncoderPerformanceParameters(int operatingRate, int priority) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetEncodingProfileLevel(int encodingProfile, int encodingLevel) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetRepeatPreviousFrameIntervalUs(long repeatPreviousFrameIntervalUs) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.SetiFrameIntervalSeconds(float iFrameIntervalSeconds) -> AndroidX.Media3.Transformer.VideoEncoderSettings.Builder?
AndroidX.Media3.Transformer.VideoEncoderSettings.EnableHighQualityTargeting.get -> bool
AndroidX.Media3.Transformer.VideoEncoderSettings.EnableHighQualityTargeting.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.IBitrateMode
AndroidX.Media3.Transformer.VideoEncoderSettings.IFrameIntervalSeconds.get -> float
AndroidX.Media3.Transformer.VideoEncoderSettings.IFrameIntervalSeconds.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.Level.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.Level.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.OperatingRate.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.OperatingRate.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.Priority.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.Priority.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.Profile.get -> int
AndroidX.Media3.Transformer.VideoEncoderSettings.Profile.set -> void
AndroidX.Media3.Transformer.VideoEncoderSettings.RepeatPreviousFrameIntervalUs.get -> long
AndroidX.Media3.Transformer.VideoEncoderSettings.RepeatPreviousFrameIntervalUs.set -> void
const AndroidX.Media3.Transformer.AudioEncoderSettings.NoValue = -1 -> int
const AndroidX.Media3.Transformer.Composition.HdrModeExperimentalForceInterpretHdrAsSdr = 3 -> int
const AndroidX.Media3.Transformer.Composition.HdrModeKeepHdr = 0 -> int
const AndroidX.Media3.Transformer.Composition.HdrModeToneMapHdrToSdrUsingMediacodec = 1 -> int
const AndroidX.Media3.Transformer.Composition.HdrModeToneMapHdrToSdrUsingOpenGl = 2 -> int
const AndroidX.Media3.Transformer.DefaultCodec.DefaultPcmEncoding = 2 -> int
const AndroidX.Media3.Transformer.EncoderUtil.LevelUnset = -1 -> int
const AndroidX.Media3.Transformer.ExoPlayerAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.ExoPlayerAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeAudioProcessingFailed = 6001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeDecoderInitFailed = 3001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeDecodingFailed = 3002 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeDecodingFormatUnsupported = 3003 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeEncoderInitFailed = 4001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeEncodingFailed = 4002 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeEncodingFormatUnsupported = 4003 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeFailedRuntimeCheck = 1001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoBadHttpStatus = 2004 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoCleartextNotPermitted = 2007 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoFileNotFound = 2005 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoInvalidHttpContentType = 2003 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoNetworkConnectionFailed = 2001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoNetworkConnectionTimeout = 2002 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoNoPermission = 2006 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoReadPositionOutOfRange = 2008 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeIoUnspecified = 2000 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeMuxingAppend = 7003 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeMuxingFailed = 7001 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeMuxingTimeout = 7002 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeUnspecified = 1000 -> int
const AndroidX.Media3.Transformer.ExportException.ErrorCodeVideoFrameProcessingFailed = 5001 -> int
const AndroidX.Media3.Transformer.ExportResult.ConversionProcessNa = 0 -> int
const AndroidX.Media3.Transformer.ExportResult.ConversionProcessTranscoded = 1 -> int
const AndroidX.Media3.Transformer.ExportResult.ConversionProcessTransmuxed = 2 -> int
const AndroidX.Media3.Transformer.ExportResult.ConversionProcessTransmuxedAndTranscoded = 3 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationAbandonedKeyframePlacementOptimalForTrim = 2 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationAbandonedOther = 4 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationAbandonedTrimAndTranscodingTransformationRequested = 3 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationFailedExtractionFailed = 5 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationFailedFormatMismatch = 6 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationNone = 0 -> int
const AndroidX.Media3.Transformer.ExportResult.OptimizationSucceeded = 1 -> int
const AndroidX.Media3.Transformer.ImageAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.ImageAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.MuxerName = "androidx.media3:media3-muxer:1.7.1" -> string!
const AndroidX.Media3.Transformer.InAppMp4Muxer.MuxerName = "androidx.media3:media3-muxer:1.7.1" -> string!
const AndroidX.Media3.Transformer.MediaProjectionAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.MediaProjectionAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.RawAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.RawAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.SurfaceAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.SurfaceAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.SurfaceAssetLoader.MediaItemUriScheme = "transformer_surface_asset" -> string!
const AndroidX.Media3.Transformer.TextureAssetLoader.InterfaceConsts.SupportedOutputTypeDecoded = 2 -> int
const AndroidX.Media3.Transformer.TextureAssetLoader.InterfaceConsts.SupportedOutputTypeEncoded = 1 -> int
const AndroidX.Media3.Transformer.Transformer.ProgressStateAvailable = 2 -> int
const AndroidX.Media3.Transformer.Transformer.ProgressStateNotStarted = 0 -> int
const AndroidX.Media3.Transformer.Transformer.ProgressStateUnavailable = 3 -> int
const AndroidX.Media3.Transformer.Transformer.ProgressStateWaitingForAvailability = 1 -> int
const AndroidX.Media3.Transformer.VideoEncoderSettings.DefaultIFrameIntervalSeconds = 1 -> float
const AndroidX.Media3.Transformer.VideoEncoderSettings.NoValue = -1 -> int
const AndroidX.Media3.Transformer.VideoEncoderSettings.RateUnset = -2 -> int
override AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.ThresholdClass.get -> nint
override AndroidX.Media3.Transformer.AssetLoaderCompositionSettings.ThresholdType.get -> System.Type!
override AndroidX.Media3.Transformer.AudioEncoderSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.AudioEncoderSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.Composition.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.Composition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.CompositionPlayer.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.CompositionPlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultAssetLoaderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultAudioMixer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultAudioMixer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultCodec.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultDecoderFactory.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultDecoderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultEncoderFactory.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultEncoderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultMuxer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.DefaultMuxer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.EditedMediaItem.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.EditedMediaItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.EditedMediaItemSequence.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.EditedMediaItemSequence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.Effects.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.EncoderUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExoPlayerAssetLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExoPlayerAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExperimentalAnalyzerModeFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Configuration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExperimentalFrameExtractor.Frame.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExperimentalFrameExtractor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExportException.CodecInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExportException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExportResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExportResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ExportResult.ProcessedInput.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ImageAssetLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ImageAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.InAppFragmentedMp4Muxer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.InAppMp4Muxer.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.InAppMp4Muxer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.JsonUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.MediaProjectionAssetLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.MediaProjectionAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.ProgressHolder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.RawAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.SurfaceAssetLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.SurfaceAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.TextureAssetLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.TransformationRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.TransformationRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.Transformer.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.Transformer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.TransformerUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.VideoEncoderSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Transformer.VideoEncoderSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media3.Transformer.AudioEncoderSettings.Default.get -> AndroidX.Media3.Transformer.AudioEncoderSettings?
static AndroidX.Media3.Transformer.DefaultMuxer.MuxerName.get -> string?
static AndroidX.Media3.Transformer.Effects.CreateExperimentalSpeedChangingEffect(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider) -> Android.Util.Pair?
static AndroidX.Media3.Transformer.Effects.Empty.get -> AndroidX.Media3.Transformer.Effects?
static AndroidX.Media3.Transformer.EncoderUtil.ClearCachedEncoders() -> void
static AndroidX.Media3.Transformer.EncoderUtil.FindHighestSupportedEncodingLevel(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int profile) -> int
static AndroidX.Media3.Transformer.EncoderUtil.GetClosestSupportedSampleRate(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int requestedSampleRate) -> int
static AndroidX.Media3.Transformer.EncoderUtil.GetMaxSupportedInstances(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType) -> int
static AndroidX.Media3.Transformer.EncoderUtil.GetSupportedBitrateRange(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType) -> Android.Util.Range?
static AndroidX.Media3.Transformer.EncoderUtil.GetSupportedHeights(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int width) -> Android.Util.Range?
static AndroidX.Media3.Transformer.EncoderUtil.GetSupportedResolution(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int width, int height) -> Android.Util.Size?
static AndroidX.Media3.Transformer.EncoderUtil.GetSupportedResolutionRanges(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType) -> Android.Util.Pair?
static AndroidX.Media3.Transformer.EncoderUtil.IsBitrateModeSupported(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int bitrateMode) -> bool
static AndroidX.Media3.Transformer.EncoderUtil.IsFeatureSupported(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, string? featureName) -> bool
static AndroidX.Media3.Transformer.EncoderUtil.IsHardwareAccelerated(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType) -> bool
static AndroidX.Media3.Transformer.EncoderUtil.IsHdrEditingSupported(Android.Media.MediaCodecInfo? mediaCodecInfo, string? mimeType, AndroidX.Media3.Common.ColorInfo? colorInfo) -> bool
static AndroidX.Media3.Transformer.EncoderUtil.IsSizeSupported(Android.Media.MediaCodecInfo? encoderInfo, string? mimeType, int width, int height) -> bool
static AndroidX.Media3.Transformer.ExperimentalAnalyzerModeFactory.BuildAnalyzer(Android.Content.Context? context) -> AndroidX.Media3.Transformer.Transformer?
static AndroidX.Media3.Transformer.ExperimentalAnalyzerModeFactory.BuildAnalyzer(Android.Content.Context? context, AndroidX.Media3.Transformer.Transformer? transformer) -> AndroidX.Media3.Transformer.Transformer?
static AndroidX.Media3.Transformer.ExportException.CreateForAssetLoader(Java.Lang.Throwable? cause, int errorCode) -> AndroidX.Media3.Transformer.ExportException?
static AndroidX.Media3.Transformer.ExportException.CreateForAudioProcessing(AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException? exception, string? details) -> AndroidX.Media3.Transformer.ExportException?
static AndroidX.Media3.Transformer.ExportException.CreateForCodec(Java.Lang.Throwable? cause, int errorCode, AndroidX.Media3.Transformer.ExportException.CodecInfo? codecInfo) -> AndroidX.Media3.Transformer.ExportException?
static AndroidX.Media3.Transformer.ExportException.CreateForUnexpected(Java.Lang.Exception? cause) -> AndroidX.Media3.Transformer.ExportException?
static AndroidX.Media3.Transformer.ExportException.GetErrorCodeName(int errorCode) -> string?
static AndroidX.Media3.Transformer.JsonUtil.DeviceDetailsAsJsonObject.get -> Org.Json.JSONObject?
static AndroidX.Media3.Transformer.JsonUtil.ExceptionAsJsonObject(Java.Lang.Exception? exception) -> Org.Json.JSONObject?
static AndroidX.Media3.Transformer.JsonUtil.ExportResultAsJsonObject(AndroidX.Media3.Transformer.ExportResult? exportResult) -> Org.Json.JSONObject?
static AndroidX.Media3.Transformer.Transformer.DefaultMaxDelayBetweenMuxerSamplesMs.get -> long
static AndroidX.Media3.Transformer.TransformerUtil.GetDecoderOutputColor(AndroidX.Media3.Common.ColorInfo? decoderInputColor, bool isMediaCodecToneMappingRequested) -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Transformer.TransformerUtil.GetImageMimeType(Android.Content.Context? context, AndroidX.Media3.Common.MediaItem? mediaItem) -> string?
static AndroidX.Media3.Transformer.TransformerUtil.GetMediaCodecFlags(int flags) -> int
static AndroidX.Media3.Transformer.TransformerUtil.GetOutputMimeTypeAndHdrModeAfterFallback(int hdrMode, string? requestedOutputMimeType, AndroidX.Media3.Common.ColorInfo? colorInfo) -> Android.Util.Pair?
static AndroidX.Media3.Transformer.TransformerUtil.GetProcessedTrackType(string? mimeType) -> int
static AndroidX.Media3.Transformer.TransformerUtil.GetValidColor(AndroidX.Media3.Common.ColorInfo? colorInfo) -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Transformer.TransformerUtil.IsImage(Android.Content.Context? context, AndroidX.Media3.Common.MediaItem? mediaItem) -> bool
static AndroidX.Media3.Transformer.VideoEncoderSettings.Default.get -> AndroidX.Media3.Transformer.VideoEncoderSettings?
virtual AndroidX.Media3.Transformer.AssetLoaderOnOutputFormatHandler.Invoke(AndroidX.Media3.Common.Format? p0) -> AndroidX.Media3.Transformer.ISampleConsumer?
