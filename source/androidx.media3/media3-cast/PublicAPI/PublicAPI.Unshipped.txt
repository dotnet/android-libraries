#nullable enable
AndroidX.Media3.Cast.CastPlayer
AndroidX.Media3.Cast.CastPlayer.CastPlayer(Android.Content.Context? context, Android.Gms.Cast.Framework.CastContext? castContext, AndroidX.Media3.Cast.IMediaItemConverter? mediaItemConverter, long seekBackIncrementMs, long seekForwardIncrementMs, long maxSeekToPreviousPositionMs) -> void
AndroidX.Media3.Cast.CastPlayer.CastPlayer(Android.Gms.Cast.Framework.CastContext? castContext) -> void
AndroidX.Media3.Cast.CastPlayer.CastPlayer(Android.Gms.Cast.Framework.CastContext? castContext, AndroidX.Media3.Cast.IMediaItemConverter? mediaItemConverter) -> void
AndroidX.Media3.Cast.CastPlayer.CastPlayer(Android.Gms.Cast.Framework.CastContext? castContext, AndroidX.Media3.Cast.IMediaItemConverter? mediaItemConverter, long seekBackIncrementMs, long seekForwardIncrementMs) -> void
AndroidX.Media3.Cast.CastPlayer.CastSessionAvailable -> System.EventHandler!
AndroidX.Media3.Cast.CastPlayer.CastSessionUnavailable -> System.EventHandler!
AndroidX.Media3.Cast.CastPlayer.GetItem(int periodId) -> Android.Gms.Cast.MediaQueueItem?
AndroidX.Media3.Cast.CastPlayer.IsCastSessionAvailable.get -> bool
AndroidX.Media3.Cast.CastPlayer.MediaMetadataInternal.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Cast.CastPlayer.SetSessionAvailabilityListener(AndroidX.Media3.Cast.ISessionAvailabilityListener? listener) -> void
AndroidX.Media3.Cast.DefaultCastOptionsProvider
AndroidX.Media3.Cast.DefaultCastOptionsProvider.DefaultCastOptionsProvider() -> void
AndroidX.Media3.Cast.DefaultCastOptionsProvider.GetAdditionalSessionProviders(Android.Content.Context? context) -> System.Collections.Generic.IList<Android.Gms.Cast.Framework.SessionProvider!>?
AndroidX.Media3.Cast.DefaultCastOptionsProvider.GetCastOptions(Android.Content.Context? context) -> Android.Gms.Cast.Framework.CastOptions?
AndroidX.Media3.Cast.DefaultMediaItemConverter
AndroidX.Media3.Cast.DefaultMediaItemConverter.DefaultMediaItemConverter() -> void
AndroidX.Media3.Cast.DefaultMediaItemConverter.ToMediaItem(Android.Gms.Cast.MediaQueueItem? mediaQueueItem) -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Cast.DefaultMediaItemConverter.ToMediaQueueItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> Android.Gms.Cast.MediaQueueItem?
AndroidX.Media3.Cast.IMediaItemConverter
AndroidX.Media3.Cast.IMediaItemConverter.ToMediaItem(Android.Gms.Cast.MediaQueueItem? p0) -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Cast.IMediaItemConverter.ToMediaQueueItem(AndroidX.Media3.Common.MediaItem? p0) -> Android.Gms.Cast.MediaQueueItem?
AndroidX.Media3.Cast.ISessionAvailabilityListener
AndroidX.Media3.Cast.ISessionAvailabilityListener.OnCastSessionAvailable() -> void
AndroidX.Media3.Cast.ISessionAvailabilityListener.OnCastSessionUnavailable() -> void
const AndroidX.Media3.Cast.CastPlayer.MaxSpeedSupported = 2 -> float
const AndroidX.Media3.Cast.CastPlayer.MinSpeedSupported = 0.5 -> float
const AndroidX.Media3.Cast.DefaultCastOptionsProvider.AppIdDefaultReceiverWithDrm = "A12D4273" -> string!
override AndroidX.Media3.Cast.CastPlayer.AddListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
override AndroidX.Media3.Cast.CastPlayer.AddMediaItems(int index, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
override AndroidX.Media3.Cast.CastPlayer.ApplicationLooper.get -> Android.OS.Looper?
override AndroidX.Media3.Cast.CastPlayer.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
override AndroidX.Media3.Cast.CastPlayer.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
override AndroidX.Media3.Cast.CastPlayer.BufferedPosition.get -> long
override AndroidX.Media3.Cast.CastPlayer.ClearVideoSurface() -> void
override AndroidX.Media3.Cast.CastPlayer.ClearVideoSurface(Android.Views.Surface? surface) -> void
override AndroidX.Media3.Cast.CastPlayer.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
override AndroidX.Media3.Cast.CastPlayer.ClearVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
override AndroidX.Media3.Cast.CastPlayer.ClearVideoTextureView(Android.Views.TextureView? textureView) -> void
override AndroidX.Media3.Cast.CastPlayer.ContentBufferedPosition.get -> long
override AndroidX.Media3.Cast.CastPlayer.ContentPosition.get -> long
override AndroidX.Media3.Cast.CastPlayer.CurrentAdGroupIndex.get -> int
override AndroidX.Media3.Cast.CastPlayer.CurrentAdIndexInAdGroup.get -> int
override AndroidX.Media3.Cast.CastPlayer.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
override AndroidX.Media3.Cast.CastPlayer.CurrentMediaItemIndex.get -> int
override AndroidX.Media3.Cast.CastPlayer.CurrentPeriodIndex.get -> int
override AndroidX.Media3.Cast.CastPlayer.CurrentPosition.get -> long
override AndroidX.Media3.Cast.CastPlayer.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
override AndroidX.Media3.Cast.CastPlayer.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
override AndroidX.Media3.Cast.CastPlayer.DecreaseDeviceVolume() -> void
override AndroidX.Media3.Cast.CastPlayer.DecreaseDeviceVolume(int flags) -> void
override AndroidX.Media3.Cast.CastPlayer.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
override AndroidX.Media3.Cast.CastPlayer.DeviceMuted.get -> bool
override AndroidX.Media3.Cast.CastPlayer.DeviceMuted.set -> void
override AndroidX.Media3.Cast.CastPlayer.DeviceVolume.get -> int
override AndroidX.Media3.Cast.CastPlayer.DeviceVolume.set -> void
override AndroidX.Media3.Cast.CastPlayer.Duration.get -> long
override AndroidX.Media3.Cast.CastPlayer.IncreaseDeviceVolume() -> void
override AndroidX.Media3.Cast.CastPlayer.IncreaseDeviceVolume(int flags) -> void
override AndroidX.Media3.Cast.CastPlayer.IsLoading.get -> bool
override AndroidX.Media3.Cast.CastPlayer.IsPlayingAd.get -> bool
override AndroidX.Media3.Cast.CastPlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Cast.CastPlayer.MaxSeekToPreviousPosition.get -> long
override AndroidX.Media3.Cast.CastPlayer.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
override AndroidX.Media3.Cast.CastPlayer.MoveMediaItems(int fromIndex, int toIndex, int newIndex) -> void
override AndroidX.Media3.Cast.CastPlayer.PlayWhenReady.get -> bool
override AndroidX.Media3.Cast.CastPlayer.PlayWhenReady.set -> void
override AndroidX.Media3.Cast.CastPlayer.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
override AndroidX.Media3.Cast.CastPlayer.PlaybackParameters.set -> void
override AndroidX.Media3.Cast.CastPlayer.PlaybackState.get -> int
override AndroidX.Media3.Cast.CastPlayer.PlaybackSuppressionReason.get -> int
override AndroidX.Media3.Cast.CastPlayer.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
override AndroidX.Media3.Cast.CastPlayer.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
override AndroidX.Media3.Cast.CastPlayer.PlaylistMetadata.set -> void
override AndroidX.Media3.Cast.CastPlayer.Prepare() -> void
override AndroidX.Media3.Cast.CastPlayer.Release() -> void
override AndroidX.Media3.Cast.CastPlayer.RemoveListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
override AndroidX.Media3.Cast.CastPlayer.RemoveMediaItems(int fromIndex, int toIndex) -> void
override AndroidX.Media3.Cast.CastPlayer.RepeatMode.get -> int
override AndroidX.Media3.Cast.CastPlayer.RepeatMode.set -> void
override AndroidX.Media3.Cast.CastPlayer.ReplaceMediaItems(int fromIndex, int toIndex, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
override AndroidX.Media3.Cast.CastPlayer.SeekBackIncrement.get -> long
override AndroidX.Media3.Cast.CastPlayer.SeekForwardIncrement.get -> long
override AndroidX.Media3.Cast.CastPlayer.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes, bool handleAudioFocus) -> void
override AndroidX.Media3.Cast.CastPlayer.SetDeviceMuted(bool muted, int flags) -> void
override AndroidX.Media3.Cast.CastPlayer.SetDeviceVolume(int volume, int flags) -> void
override AndroidX.Media3.Cast.CastPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, bool resetPosition) -> void
override AndroidX.Media3.Cast.CastPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> void
override AndroidX.Media3.Cast.CastPlayer.SetVideoSurface(Android.Views.Surface? surface) -> void
override AndroidX.Media3.Cast.CastPlayer.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
override AndroidX.Media3.Cast.CastPlayer.SetVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
override AndroidX.Media3.Cast.CastPlayer.SetVideoTextureView(Android.Views.TextureView? textureView) -> void
override AndroidX.Media3.Cast.CastPlayer.ShuffleModeEnabled.get -> bool
override AndroidX.Media3.Cast.CastPlayer.ShuffleModeEnabled.set -> void
override AndroidX.Media3.Cast.CastPlayer.Stop() -> void
override AndroidX.Media3.Cast.CastPlayer.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
override AndroidX.Media3.Cast.CastPlayer.TotalBufferedDuration.get -> long
override AndroidX.Media3.Cast.CastPlayer.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
override AndroidX.Media3.Cast.CastPlayer.TrackSelectionParameters.set -> void
override AndroidX.Media3.Cast.CastPlayer.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
override AndroidX.Media3.Cast.CastPlayer.Volume.get -> float
override AndroidX.Media3.Cast.CastPlayer.Volume.set -> void
override AndroidX.Media3.Cast.DefaultCastOptionsProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Cast.DefaultMediaItemConverter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media3.Cast.CastPlayer.DeviceInfoRemoteEmpty.get -> AndroidX.Media3.Common.DeviceInfo?
