#nullable enable
AndroidX.Media3.Common.AdOverlayInfo
AndroidX.Media3.Common.AdOverlayInfo.AdOverlayInfo(Android.Views.View? view, int purpose) -> void
AndroidX.Media3.Common.AdOverlayInfo.AdOverlayInfo(Android.Views.View? view, int purpose, string? detailedReason) -> void
AndroidX.Media3.Common.AdOverlayInfo.Builder
AndroidX.Media3.Common.AdOverlayInfo.Builder.Build() -> AndroidX.Media3.Common.AdOverlayInfo?
AndroidX.Media3.Common.AdOverlayInfo.Builder.Builder(Android.Views.View? view, int purpose) -> void
AndroidX.Media3.Common.AdOverlayInfo.Builder.SetDetailedReason(string? detailedReason) -> AndroidX.Media3.Common.AdOverlayInfo.Builder?
AndroidX.Media3.Common.AdOverlayInfo.IPurpose
AndroidX.Media3.Common.AdOverlayInfo.Purpose.get -> int
AndroidX.Media3.Common.AdOverlayInfo.Purpose.set -> void
AndroidX.Media3.Common.AdOverlayInfo.ReasonDetail.get -> string?
AndroidX.Media3.Common.AdOverlayInfo.ReasonDetail.set -> void
AndroidX.Media3.Common.AdOverlayInfo.View.get -> Android.Views.View?
AndroidX.Media3.Common.AdOverlayInfo.View.set -> void
AndroidX.Media3.Common.AdPlaybackState
AndroidX.Media3.Common.AdPlaybackState.AdGroup
AndroidX.Media3.Common.AdPlaybackState.AdGroup.AdGroup(long timeUs) -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.ContentResumeOffsetUs.get -> long
AndroidX.Media3.Common.AdPlaybackState.AdGroup.ContentResumeOffsetUs.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Count.get -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Count.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.DurationsUs.get -> System.Collections.Generic.IList<long>?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.DurationsUs.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.FirstAdIndexToPlay.get -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroup.GetIndexOfAdId(string? adId) -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroup.GetNextAdIndexToPlay(int lastPlayedAdIndex) -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroup.HasUnplayedAds.get -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Ids.get -> System.Collections.Generic.IList<string!>?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Ids.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.InvokeIsLivePostrollPlaceholder(bool isServerSideInserted) -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.IsLivePostrollPlaceholder.get -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.IsPlaceholder.get -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.IsPlaceholder.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.IsServerSideInserted.get -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.IsServerSideInserted.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.MediaItems.get -> System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.MediaItems.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.OriginalCount.get -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroup.OriginalCount.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.ShouldPlayAdGroup() -> bool
AndroidX.Media3.Common.AdPlaybackState.AdGroup.States.get -> System.Collections.Generic.IList<int>?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.States.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.TimeUs.get -> long
AndroidX.Media3.Common.AdPlaybackState.AdGroup.TimeUs.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Uris.get -> System.Collections.Generic.IList<Android.Net.Uri!>?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.Uris.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdCount(int count) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdDurationsUs(long[]? durationsUs) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdId(string? adId, int index) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, int index) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdState(int state, int index) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAdUri(Android.Net.Uri? uri, int index) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAllAdsReset() -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithAllAdsSkipped() -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithContentResumeOffsetUs(long contentResumeOffsetUs) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithIsServerSideInserted(bool isServerSideInserted) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithLastAdRemoved() -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithOriginalAdCount(int originalCount) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroup.WithTimeUs(long timeUs) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.AdGroupCount.get -> int
AndroidX.Media3.Common.AdPlaybackState.AdGroupCount.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdPlaybackState(Java.Lang.Object? adsId, params long[]? adGroupTimesUs) -> void
AndroidX.Media3.Common.AdPlaybackState.AdResumePositionUs.get -> long
AndroidX.Media3.Common.AdPlaybackState.AdResumePositionUs.set -> void
AndroidX.Media3.Common.AdPlaybackState.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.Common.AdPlaybackState.AdsId.set -> void
AndroidX.Media3.Common.AdPlaybackState.ContentDurationUs.get -> long
AndroidX.Media3.Common.AdPlaybackState.ContentDurationUs.set -> void
AndroidX.Media3.Common.AdPlaybackState.EndsWithLivePostrollPlaceHolder() -> bool
AndroidX.Media3.Common.AdPlaybackState.EndsWithLivePostrollPlaceHolder(bool isServerSideInserted) -> bool
AndroidX.Media3.Common.AdPlaybackState.GetAdGroup(int adGroupIndex) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
AndroidX.Media3.Common.AdPlaybackState.GetAdGroupIndexAfterPositionUs(long positionUs, long periodDurationUs) -> int
AndroidX.Media3.Common.AdPlaybackState.GetAdGroupIndexForPositionUs(long positionUs, long periodDurationUs) -> int
AndroidX.Media3.Common.AdPlaybackState.GetAdIndexOfAdId(int adGroupIndex, string? adId) -> int
AndroidX.Media3.Common.AdPlaybackState.IAdState
AndroidX.Media3.Common.AdPlaybackState.IsAdInErrorState(int adGroupIndex, int adIndexInAdGroup) -> bool
AndroidX.Media3.Common.AdPlaybackState.IsLivePostrollPlaceholder(int adGroupIndex) -> bool
AndroidX.Media3.Common.AdPlaybackState.IsLivePostrollPlaceholder(int adGroupIndex, bool isServerSideInserted) -> bool
AndroidX.Media3.Common.AdPlaybackState.RemovedAdGroupCount.get -> int
AndroidX.Media3.Common.AdPlaybackState.RemovedAdGroupCount.set -> void
AndroidX.Media3.Common.AdPlaybackState.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.AdPlaybackState.WithAdCount(int adGroupIndex, int adCount) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdDurationsUs(int adGroupIndex, params long[]? adDurationsUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdDurationsUs(long[]![]? adDurationUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdGroupTimeUs(int adGroupIndex, long adGroupTimeUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdId(int adGroupIndex, int adIndexInAdGroup, string? adId) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdLoadError(int adGroupIndex, int adIndexInAdGroup) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdResumePositionUs(long adResumePositionUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAdsId(Java.Lang.Object? adsId) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAvailableAd(int adGroupIndex, int adIndexInAdGroup) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAvailableAdMediaItem(int adGroupIndex, int adIndexInAdGroup, AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithAvailableAdUri(int adGroupIndex, int adIndexInAdGroup, Android.Net.Uri? uri) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithContentDurationUs(long contentDurationUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithContentResumeOffsetUs(int adGroupIndex, long contentResumeOffsetUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithIsServerSideInserted(int adGroupIndex, bool isServerSideInserted) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithLastAdRemoved(int adGroupIndex) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithLivePostrollPlaceholderAppended() -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithLivePostrollPlaceholderAppended(bool isServerSideInserted) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithNewAdGroup(int adGroupIndex, long adGroupTimeUs) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithOriginalAdCount(int adGroupIndex, int originalAdCount) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithPlayedAd(int adGroupIndex, int adIndexInAdGroup) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithRemovedAdGroupCount(int removedAdGroupCount) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithResetAdGroup(int adGroupIndex) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithSkippedAd(int adGroupIndex, int adIndexInAdGroup) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.AdPlaybackState.WithSkippedAdGroup(int adGroupIndex) -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.BuildUpon() -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.Build() -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.Builder(int focusGain) -> void
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? attributes) -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.SetFocusGain(int focusGain) -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.SetOnAudioFocusChangeListener(Android.Media.AudioManager.IOnAudioFocusChangeListener? listener) -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.SetOnAudioFocusChangeListener(Android.Media.AudioManager.IOnAudioFocusChangeListener? listener, Android.OS.Handler? handler) -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.SetWillPauseWhenDucked(bool pauseOnDuck) -> AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.FocusChangeHandler.get -> Android.OS.Handler?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.FocusGain.get -> int
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.OnAudioFocusChangeListener.get -> Android.Media.AudioManager.IOnAudioFocusChangeListener?
AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.WillPauseWhenDucked() -> bool
AndroidX.Media3.Common.Audio.AudioManagerCompat
AndroidX.Media3.Common.Audio.AudioManagerCompat.IAudioFocusGain
AndroidX.Media3.Common.Audio.AudioMixingUtil
AndroidX.Media3.Common.Audio.AudioProcessingPipeline
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.Flush() -> void
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.IsEnded.get -> bool
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.IsOperational.get -> bool
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.OutputAudioFormat.get -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.QueueEndOfStream() -> void
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.QueueInput(Java.Nio.ByteBuffer? inputBuffer) -> void
AndroidX.Media3.Common.Audio.AudioProcessingPipeline.Reset() -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.AudioProcessorAudioFormat(AndroidX.Media3.Common.Format? format) -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.AudioProcessorAudioFormat(int sampleRate, int channelCount, int encoding) -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.BytesPerFrame.get -> int
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.BytesPerFrame.set -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.ChannelCount.get -> int
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.ChannelCount.set -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.Encoding.get -> int
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.Encoding.set -> void
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.SampleRate.get -> int
AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.SampleRate.set -> void
AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException
AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException.AudioProcessorUnhandledAudioFormatException(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> void
AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException.AudioProcessorUnhandledAudioFormatException(string? message, AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? audioFormat) -> void
AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException.InputAudioFormat.get -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException.InputAudioFormat.set -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor
AndroidX.Media3.Common.Audio.BaseAudioProcessor.BaseAudioProcessor() -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.BaseAudioProcessor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.BaseAudioProcessor.Flush() -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.HasPendingOutput.get -> bool
AndroidX.Media3.Common.Audio.BaseAudioProcessor.InputAudioFormat.get -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.BaseAudioProcessor.InputAudioFormat.set -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.InterfaceConsts
AndroidX.Media3.Common.Audio.BaseAudioProcessor.OutputAudioFormat.get -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.BaseAudioProcessor.OutputAudioFormat.set -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.QueueEndOfStream() -> void
AndroidX.Media3.Common.Audio.BaseAudioProcessor.ReplaceOutputBuffer(int size) -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.BaseAudioProcessor.Reset() -> void
AndroidX.Media3.Common.Audio.ChannelMixingAudioProcessor
AndroidX.Media3.Common.Audio.ChannelMixingAudioProcessor.ChannelMixingAudioProcessor() -> void
AndroidX.Media3.Common.Audio.ChannelMixingAudioProcessor.PutChannelMixingMatrix(AndroidX.Media3.Common.Audio.ChannelMixingMatrix? matrix) -> void
AndroidX.Media3.Common.Audio.ChannelMixingMatrix
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.ChannelMixingMatrix(int inputChannelCount, int outputChannelCount, float[]? coefficients) -> void
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.GetMixingCoefficient(int inputChannel, int outputChannel) -> float
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.InputChannelCount.get -> int
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.IsDiagonal.get -> bool
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.IsIdentity.get -> bool
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.IsSquare.get -> bool
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.IsZero.get -> bool
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.OutputChannelCount.get -> int
AndroidX.Media3.Common.Audio.ChannelMixingMatrix.ScaleBy(float scale) -> AndroidX.Media3.Common.Audio.ChannelMixingMatrix?
AndroidX.Media3.Common.Audio.IAudioProcessor
AndroidX.Media3.Common.Audio.IAudioProcessor.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? p0) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.IAudioProcessor.EmptyBuffer.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.IAudioProcessor.Flush() -> void
AndroidX.Media3.Common.Audio.IAudioProcessor.GetDurationAfterProcessorApplied(long durationUs) -> long
AndroidX.Media3.Common.Audio.IAudioProcessor.IsActive.get -> bool
AndroidX.Media3.Common.Audio.IAudioProcessor.IsEnded.get -> bool
AndroidX.Media3.Common.Audio.IAudioProcessor.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.IAudioProcessor.QueueEndOfStream() -> void
AndroidX.Media3.Common.Audio.IAudioProcessor.QueueInput(Java.Nio.ByteBuffer? p0) -> void
AndroidX.Media3.Common.Audio.IAudioProcessor.Reset() -> void
AndroidX.Media3.Common.Audio.IAudioProcessorChain
AndroidX.Media3.Common.Audio.IAudioProcessorChain.ApplyPlaybackParameters(AndroidX.Media3.Common.PlaybackParameters? p0) -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.Audio.IAudioProcessorChain.ApplySkipSilenceEnabled(bool p0) -> bool
AndroidX.Media3.Common.Audio.IAudioProcessorChain.GetAudioProcessors() -> AndroidX.Media3.Common.Audio.IAudioProcessor![]?
AndroidX.Media3.Common.Audio.IAudioProcessorChain.GetMediaDuration(long p0) -> long
AndroidX.Media3.Common.Audio.IAudioProcessorChain.SkippedOutputFrameCount.get -> long
AndroidX.Media3.Common.Audio.ISpeedProvider
AndroidX.Media3.Common.Audio.ISpeedProvider.GetNextSpeedChangeTimeUs(long p0) -> long
AndroidX.Media3.Common.Audio.ISpeedProvider.GetSpeed(long p0) -> float
AndroidX.Media3.Common.Audio.SonicAudioProcessor
AndroidX.Media3.Common.Audio.SonicAudioProcessor.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.SonicAudioProcessor.Flush() -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.GetDurationAfterProcessorApplied(long durationUs) -> long
AndroidX.Media3.Common.Audio.SonicAudioProcessor.GetMediaDuration(long playoutDuration) -> long
AndroidX.Media3.Common.Audio.SonicAudioProcessor.GetPlayoutDuration(long mediaDuration) -> long
AndroidX.Media3.Common.Audio.SonicAudioProcessor.InterfaceConsts
AndroidX.Media3.Common.Audio.SonicAudioProcessor.IsActive.get -> bool
AndroidX.Media3.Common.Audio.SonicAudioProcessor.IsEnded.get -> bool
AndroidX.Media3.Common.Audio.SonicAudioProcessor.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.SonicAudioProcessor.ProcessedInputBytes.get -> long
AndroidX.Media3.Common.Audio.SonicAudioProcessor.QueueEndOfStream() -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.QueueInput(Java.Nio.ByteBuffer? inputBuffer) -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.Reset() -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.SetOutputSampleRateHz(int sampleRateHz) -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.SetPitch(float pitch) -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.SetSpeed(float speed) -> void
AndroidX.Media3.Common.Audio.SonicAudioProcessor.SonicAudioProcessor() -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.Configure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.Flush() -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.GetDurationAfterProcessorApplied(long durationUs) -> long
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.GetMediaDurationUs(long playoutDurationUs) -> long
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.GetSpeedAdjustedTimeAsync(long inputTimeUs, AndroidX.Media3.Common.Util.ITimestampConsumer? callback) -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.InterfaceConsts
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.IsActive.get -> bool
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.IsEnded.get -> bool
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.Output.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.QueueEndOfStream() -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.QueueInput(Java.Nio.ByteBuffer? inputBuffer) -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.Reset() -> void
AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.SpeedChangingAudioProcessor(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider) -> void
AndroidX.Media3.Common.Audio.ToInt16PcmAudioProcessor
AndroidX.Media3.Common.Audio.ToInt16PcmAudioProcessor.OnConfigure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
AndroidX.Media3.Common.Audio.ToInt16PcmAudioProcessor.ToInt16PcmAudioProcessor() -> void
AndroidX.Media3.Common.AudioAttributes
AndroidX.Media3.Common.AudioAttributes.AllowedCapturePolicy.get -> int
AndroidX.Media3.Common.AudioAttributes.AllowedCapturePolicy.set -> void
AndroidX.Media3.Common.AudioAttributes.AudioAttributesV21
AndroidX.Media3.Common.AudioAttributes.AudioAttributesV21.AudioAttributes.get -> Android.Media.AudioAttributes?
AndroidX.Media3.Common.AudioAttributes.AudioAttributesV21.AudioAttributes.set -> void
AndroidX.Media3.Common.AudioAttributes.Builder
AndroidX.Media3.Common.AudioAttributes.Builder.Build() -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Common.AudioAttributes.Builder.Builder() -> void
AndroidX.Media3.Common.AudioAttributes.Builder.SetAllowedCapturePolicy(int allowedCapturePolicy) -> AndroidX.Media3.Common.AudioAttributes.Builder?
AndroidX.Media3.Common.AudioAttributes.Builder.SetContentType(int contentType) -> AndroidX.Media3.Common.AudioAttributes.Builder?
AndroidX.Media3.Common.AudioAttributes.Builder.SetFlags(int flags) -> AndroidX.Media3.Common.AudioAttributes.Builder?
AndroidX.Media3.Common.AudioAttributes.Builder.SetSpatializationBehavior(int spatializationBehavior) -> AndroidX.Media3.Common.AudioAttributes.Builder?
AndroidX.Media3.Common.AudioAttributes.Builder.SetUsage(int usage) -> AndroidX.Media3.Common.AudioAttributes.Builder?
AndroidX.Media3.Common.AudioAttributes.ContentType.get -> int
AndroidX.Media3.Common.AudioAttributes.ContentType.set -> void
AndroidX.Media3.Common.AudioAttributes.Flags.get -> int
AndroidX.Media3.Common.AudioAttributes.Flags.set -> void
AndroidX.Media3.Common.AudioAttributes.GetAudioAttributesV21() -> AndroidX.Media3.Common.AudioAttributes.AudioAttributesV21?
AndroidX.Media3.Common.AudioAttributes.SpatializationBehavior.get -> int
AndroidX.Media3.Common.AudioAttributes.SpatializationBehavior.set -> void
AndroidX.Media3.Common.AudioAttributes.StreamType.get -> int
AndroidX.Media3.Common.AudioAttributes.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.AudioAttributes.Usage.get -> int
AndroidX.Media3.Common.AudioAttributes.Usage.set -> void
AndroidX.Media3.Common.AudioAttributesChangedEventArgs
AndroidX.Media3.Common.AudioAttributesChangedEventArgs.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Common.AudioAttributesChangedEventArgs.AudioAttributesChangedEventArgs(AndroidX.Media3.Common.AudioAttributes? audioAttributes) -> void
AndroidX.Media3.Common.AudioSessionIdChangedEventArgs
AndroidX.Media3.Common.AudioSessionIdChangedEventArgs.AudioSessionId.get -> int
AndroidX.Media3.Common.AudioSessionIdChangedEventArgs.AudioSessionIdChangedEventArgs(int audioSessionId) -> void
AndroidX.Media3.Common.AuxEffectInfo
AndroidX.Media3.Common.AuxEffectInfo.AuxEffectInfo(int effectId, float sendLevel) -> void
AndroidX.Media3.Common.AuxEffectInfo.EffectId.get -> int
AndroidX.Media3.Common.AuxEffectInfo.EffectId.set -> void
AndroidX.Media3.Common.AuxEffectInfo.SendLevel.get -> float
AndroidX.Media3.Common.AuxEffectInfo.SendLevel.set -> void
AndroidX.Media3.Common.AvailableCommandsChangedEventArgs
AndroidX.Media3.Common.AvailableCommandsChangedEventArgs.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Common.AvailableCommandsChangedEventArgs.AvailableCommandsChangedEventArgs(AndroidX.Media3.Common.PlayerCommands? availableCommands) -> void
AndroidX.Media3.Common.BasePlayer
AndroidX.Media3.Common.BasePlayer.AddMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Common.BasePlayer.AddMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Common.BasePlayer.AddMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Common.BasePlayer.BasePlayer() -> void
AndroidX.Media3.Common.BasePlayer.BasePlayer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.BasePlayer.BufferedPercentage.get -> int
AndroidX.Media3.Common.BasePlayer.CanAdvertiseSession() -> bool
AndroidX.Media3.Common.BasePlayer.ClearMediaItems() -> void
AndroidX.Media3.Common.BasePlayer.ContentDuration.get -> long
AndroidX.Media3.Common.BasePlayer.CurrentLiveOffset.get -> long
AndroidX.Media3.Common.BasePlayer.CurrentManifest.get -> Java.Lang.Object?
AndroidX.Media3.Common.BasePlayer.CurrentMediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.BasePlayer.CurrentWindowIndex.get -> int
AndroidX.Media3.Common.BasePlayer.GetMediaItemAt(int index) -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.BasePlayer.HasNext.get -> bool
AndroidX.Media3.Common.BasePlayer.HasNextMediaItem.get -> bool
AndroidX.Media3.Common.BasePlayer.HasNextWindow.get -> bool
AndroidX.Media3.Common.BasePlayer.HasPreviousMediaItem.get -> bool
AndroidX.Media3.Common.BasePlayer.InterfaceConsts
AndroidX.Media3.Common.BasePlayer.IsCommandAvailable(int command) -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentMediaItemDynamic.get -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentMediaItemLive.get -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentMediaItemSeekable.get -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentWindowDynamic.get -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentWindowLive.get -> bool
AndroidX.Media3.Common.BasePlayer.IsCurrentWindowSeekable.get -> bool
AndroidX.Media3.Common.BasePlayer.IsPlaying.get -> bool
AndroidX.Media3.Common.BasePlayer.MediaItemCount.get -> int
AndroidX.Media3.Common.BasePlayer.MoveMediaItem(int currentIndex, int newIndex) -> void
AndroidX.Media3.Common.BasePlayer.Next() -> void
AndroidX.Media3.Common.BasePlayer.NextMediaItemIndex.get -> int
AndroidX.Media3.Common.BasePlayer.NextWindowIndex.get -> int
AndroidX.Media3.Common.BasePlayer.Pause() -> void
AndroidX.Media3.Common.BasePlayer.Play() -> void
AndroidX.Media3.Common.BasePlayer.PreviousMediaItemIndex.get -> int
AndroidX.Media3.Common.BasePlayer.PreviousWindowIndex.get -> int
AndroidX.Media3.Common.BasePlayer.RemoveMediaItem(int index) -> void
AndroidX.Media3.Common.BasePlayer.ReplaceMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Common.BasePlayer.SeekBack() -> void
AndroidX.Media3.Common.BasePlayer.SeekForward() -> void
AndroidX.Media3.Common.BasePlayer.SeekTo(int mediaItemIndex, long positionMs) -> void
AndroidX.Media3.Common.BasePlayer.SeekTo(long positionMs) -> void
AndroidX.Media3.Common.BasePlayer.SeekToDefaultPosition() -> void
AndroidX.Media3.Common.BasePlayer.SeekToDefaultPosition(int mediaItemIndex) -> void
AndroidX.Media3.Common.BasePlayer.SeekToNext() -> void
AndroidX.Media3.Common.BasePlayer.SeekToNextMediaItem() -> void
AndroidX.Media3.Common.BasePlayer.SeekToNextWindow() -> void
AndroidX.Media3.Common.BasePlayer.SeekToPrevious() -> void
AndroidX.Media3.Common.BasePlayer.SeekToPreviousMediaItem() -> void
AndroidX.Media3.Common.BasePlayer.SeekToPreviousWindow() -> void
AndroidX.Media3.Common.BasePlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Common.BasePlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, bool resetPosition) -> void
AndroidX.Media3.Common.BasePlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, long startPositionMs) -> void
AndroidX.Media3.Common.BasePlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Common.BasePlayer.SetPlaybackSpeed(float speed) -> void
AndroidX.Media3.Common.BasePlayer.Window.get -> AndroidX.Media3.Common.Timeline.Window?
AndroidX.Media3.Common.BasePlayer.Window.set -> void
AndroidX.Media3.Common.BundleListRetriever
AndroidX.Media3.Common.BundleListRetriever.BundleListRetriever(System.Collections.Generic.IList<Android.OS.Bundle!>? list) -> void
AndroidX.Media3.Common.C
AndroidX.Media3.Common.C.IAudioAllowedCapturePolicy
AndroidX.Media3.Common.C.IAudioContentType
AndroidX.Media3.Common.C.IAudioFlags
AndroidX.Media3.Common.C.IAudioUsage
AndroidX.Media3.Common.C.IAuxiliaryTrackType
AndroidX.Media3.Common.C.IBufferFlags
AndroidX.Media3.Common.C.IColorRange
AndroidX.Media3.Common.C.IColorSpace
AndroidX.Media3.Common.C.IColorTransfer
AndroidX.Media3.Common.C.IContentType
AndroidX.Media3.Common.C.ICryptoMode
AndroidX.Media3.Common.C.ICryptoType
AndroidX.Media3.Common.C.IDataType
AndroidX.Media3.Common.C.IEncoding
AndroidX.Media3.Common.C.IFirstFrameState
AndroidX.Media3.Common.C.IFormatSupport
AndroidX.Media3.Common.C.INetworkType
AndroidX.Media3.Common.C.IPcmEncoding
AndroidX.Media3.Common.C.IPriority
AndroidX.Media3.Common.C.IProjection
AndroidX.Media3.Common.C.IRoleFlags
AndroidX.Media3.Common.C.ISelectionFlags
AndroidX.Media3.Common.C.ISelectionReason
AndroidX.Media3.Common.C.ISpatializationBehavior
AndroidX.Media3.Common.C.IStereoMode
AndroidX.Media3.Common.C.IStreamType
AndroidX.Media3.Common.C.ITextureMinFilter
AndroidX.Media3.Common.C.ITrackType
AndroidX.Media3.Common.C.IVideoChangeFrameRateStrategy
AndroidX.Media3.Common.C.IVideoCodecFlags
AndroidX.Media3.Common.C.IVideoOutputMode
AndroidX.Media3.Common.C.IVideoScalingMode
AndroidX.Media3.Common.C.IVolumeFlags
AndroidX.Media3.Common.C.IWakeMode
AndroidX.Media3.Common.ColorInfo
AndroidX.Media3.Common.ColorInfo.BuildUpon() -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder
AndroidX.Media3.Common.ColorInfo.Builder.Build() -> AndroidX.Media3.Common.ColorInfo?
AndroidX.Media3.Common.ColorInfo.Builder.Builder() -> void
AndroidX.Media3.Common.ColorInfo.Builder.SetChromaBitdepth(int chromaBitdepth) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder.SetColorRange(int colorRange) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder.SetColorSpace(int colorSpace) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder.SetColorTransfer(int colorTransfer) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder.SetHdrStaticInfo(byte[]? hdrStaticInfo) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.Builder.SetLumaBitdepth(int lumaBitdepth) -> AndroidX.Media3.Common.ColorInfo.Builder?
AndroidX.Media3.Common.ColorInfo.ChromaBitdepth.get -> int
AndroidX.Media3.Common.ColorInfo.ChromaBitdepth.set -> void
AndroidX.Media3.Common.ColorInfo.ColorRange.get -> int
AndroidX.Media3.Common.ColorInfo.ColorRange.set -> void
AndroidX.Media3.Common.ColorInfo.ColorSpace.get -> int
AndroidX.Media3.Common.ColorInfo.ColorSpace.set -> void
AndroidX.Media3.Common.ColorInfo.ColorTransfer.get -> int
AndroidX.Media3.Common.ColorInfo.ColorTransfer.set -> void
AndroidX.Media3.Common.ColorInfo.HdrStaticInfo.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.Common.ColorInfo.HdrStaticInfo.set -> void
AndroidX.Media3.Common.ColorInfo.IsBitdepthValid.get -> bool
AndroidX.Media3.Common.ColorInfo.IsDataSpaceValid.get -> bool
AndroidX.Media3.Common.ColorInfo.IsValid.get -> bool
AndroidX.Media3.Common.ColorInfo.LumaBitdepth.get -> int
AndroidX.Media3.Common.ColorInfo.LumaBitdepth.set -> void
AndroidX.Media3.Common.ColorInfo.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.ColorInfo.ToLogString() -> string?
AndroidX.Media3.Common.CuesDeprecatedEventArgs
AndroidX.Media3.Common.CuesDeprecatedEventArgs.Cues.get -> System.Collections.Generic.IList<AndroidX.Media3.Common.Text.Cue!>?
AndroidX.Media3.Common.CuesDeprecatedEventArgs.CuesDeprecatedEventArgs(System.Collections.Generic.IList<AndroidX.Media3.Common.Text.Cue!>? cues) -> void
AndroidX.Media3.Common.CuesEventArgs
AndroidX.Media3.Common.CuesEventArgs.CueGroup.get -> AndroidX.Media3.Common.Text.CueGroup?
AndroidX.Media3.Common.CuesEventArgs.CuesEventArgs(AndroidX.Media3.Common.Text.CueGroup? cueGroup) -> void
AndroidX.Media3.Common.DeviceInfo
AndroidX.Media3.Common.DeviceInfo.Builder
AndroidX.Media3.Common.DeviceInfo.Builder.Build() -> AndroidX.Media3.Common.DeviceInfo?
AndroidX.Media3.Common.DeviceInfo.Builder.Builder(int playbackType) -> void
AndroidX.Media3.Common.DeviceInfo.Builder.SetMaxVolume(int maxVolume) -> AndroidX.Media3.Common.DeviceInfo.Builder?
AndroidX.Media3.Common.DeviceInfo.Builder.SetMinVolume(int minVolume) -> AndroidX.Media3.Common.DeviceInfo.Builder?
AndroidX.Media3.Common.DeviceInfo.Builder.SetRoutingControllerId(string? routingControllerId) -> AndroidX.Media3.Common.DeviceInfo.Builder?
AndroidX.Media3.Common.DeviceInfo.DeviceInfo(int playbackType, int minVolume, int maxVolume) -> void
AndroidX.Media3.Common.DeviceInfo.IPlaybackType
AndroidX.Media3.Common.DeviceInfo.MaxVolume.get -> int
AndroidX.Media3.Common.DeviceInfo.MaxVolume.set -> void
AndroidX.Media3.Common.DeviceInfo.MinVolume.get -> int
AndroidX.Media3.Common.DeviceInfo.MinVolume.set -> void
AndroidX.Media3.Common.DeviceInfo.PlaybackType.get -> int
AndroidX.Media3.Common.DeviceInfo.PlaybackType.set -> void
AndroidX.Media3.Common.DeviceInfo.RoutingControllerId.get -> string?
AndroidX.Media3.Common.DeviceInfo.RoutingControllerId.set -> void
AndroidX.Media3.Common.DeviceInfo.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.DeviceInfoChangedEventArgs
AndroidX.Media3.Common.DeviceInfoChangedEventArgs.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
AndroidX.Media3.Common.DeviceInfoChangedEventArgs.DeviceInfoChangedEventArgs(AndroidX.Media3.Common.DeviceInfo? deviceInfo) -> void
AndroidX.Media3.Common.DeviceVolumeChangedEventArgs
AndroidX.Media3.Common.DeviceVolumeChangedEventArgs.DeviceVolumeChangedEventArgs(int volume, bool muted) -> void
AndroidX.Media3.Common.DeviceVolumeChangedEventArgs.Muted.get -> bool
AndroidX.Media3.Common.DeviceVolumeChangedEventArgs.Volume.get -> int
AndroidX.Media3.Common.DrmInitData
AndroidX.Media3.Common.DrmInitData.Compare(Java.Lang.Object? first, Java.Lang.Object? second) -> int
AndroidX.Media3.Common.DrmInitData.CopyWithSchemeType(string? schemeType) -> AndroidX.Media3.Common.DrmInitData?
AndroidX.Media3.Common.DrmInitData.DescribeContents() -> int
AndroidX.Media3.Common.DrmInitData.DrmInitData(System.Collections.Generic.IList<AndroidX.Media3.Common.DrmInitData.SchemeData!>? schemeDatas) -> void
AndroidX.Media3.Common.DrmInitData.DrmInitData(params AndroidX.Media3.Common.DrmInitData.SchemeData![]? schemeDatas) -> void
AndroidX.Media3.Common.DrmInitData.DrmInitData(string? schemeType, System.Collections.Generic.IList<AndroidX.Media3.Common.DrmInitData.SchemeData!>? schemeDatas) -> void
AndroidX.Media3.Common.DrmInitData.DrmInitData(string? schemeType, params AndroidX.Media3.Common.DrmInitData.SchemeData![]? schemeDatas) -> void
AndroidX.Media3.Common.DrmInitData.Get(int index) -> AndroidX.Media3.Common.DrmInitData.SchemeData?
AndroidX.Media3.Common.DrmInitData.Merge(AndroidX.Media3.Common.DrmInitData? drmInitData) -> AndroidX.Media3.Common.DrmInitData?
AndroidX.Media3.Common.DrmInitData.SchemeData
AndroidX.Media3.Common.DrmInitData.SchemeData.CanReplace(AndroidX.Media3.Common.DrmInitData.SchemeData? other) -> bool
AndroidX.Media3.Common.DrmInitData.SchemeData.CopyWithData(byte[]? data) -> AndroidX.Media3.Common.DrmInitData.SchemeData?
AndroidX.Media3.Common.DrmInitData.SchemeData.Data.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.Common.DrmInitData.SchemeData.Data.set -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.DescribeContents() -> int
AndroidX.Media3.Common.DrmInitData.SchemeData.HasData.get -> bool
AndroidX.Media3.Common.DrmInitData.SchemeData.LicenseServerUrl.get -> string?
AndroidX.Media3.Common.DrmInitData.SchemeData.LicenseServerUrl.set -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.Matches(Java.Util.UUID? schemeUuid) -> bool
AndroidX.Media3.Common.DrmInitData.SchemeData.MimeType.get -> string?
AndroidX.Media3.Common.DrmInitData.SchemeData.MimeType.set -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.SchemeData(Java.Util.UUID? uuid, string? licenseServerUrl, string? mimeType, byte[]? data) -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.SchemeData(Java.Util.UUID? uuid, string? mimeType, byte[]? data) -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.Uuid.get -> Java.Util.UUID?
AndroidX.Media3.Common.DrmInitData.SchemeData.Uuid.set -> void
AndroidX.Media3.Common.DrmInitData.SchemeData.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Common.DrmInitData.SchemeDataCount.get -> int
AndroidX.Media3.Common.DrmInitData.SchemeDataCount.set -> void
AndroidX.Media3.Common.DrmInitData.SchemeType.get -> string?
AndroidX.Media3.Common.DrmInitData.SchemeType.set -> void
AndroidX.Media3.Common.DrmInitData.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Common.EndedEventArgs
AndroidX.Media3.Common.EndedEventArgs.EndedEventArgs(long finalFramePresentationTimeUs) -> void
AndroidX.Media3.Common.EndedEventArgs.FinalFramePresentationTimeUs.get -> long
AndroidX.Media3.Common.ErrorEventArgs
AndroidX.Media3.Common.ErrorEventArgs.ErrorEventArgs(AndroidX.Media3.Common.VideoFrameProcessingException? exception) -> void
AndroidX.Media3.Common.ErrorEventArgs.Exception.get -> AndroidX.Media3.Common.VideoFrameProcessingException?
AndroidX.Media3.Common.EventsEventArgs
AndroidX.Media3.Common.EventsEventArgs.Events.get -> AndroidX.Media3.Common.PlayerEvents?
AndroidX.Media3.Common.EventsEventArgs.EventsEventArgs(AndroidX.Media3.Common.IPlayer? player, AndroidX.Media3.Common.PlayerEvents? events) -> void
AndroidX.Media3.Common.EventsEventArgs.Player.get -> AndroidX.Media3.Common.IPlayer?
AndroidX.Media3.Common.FileTypes
AndroidX.Media3.Common.FileTypes.IType
AndroidX.Media3.Common.FlagSet
AndroidX.Media3.Common.FlagSet.Builder
AndroidX.Media3.Common.FlagSet.Builder.Add(int flag) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.AddAll(AndroidX.Media3.Common.FlagSet? flags) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.AddAll(params int[]? flags) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.AddIf(int flag, bool condition) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.Build() -> AndroidX.Media3.Common.FlagSet?
AndroidX.Media3.Common.FlagSet.Builder.Builder() -> void
AndroidX.Media3.Common.FlagSet.Builder.Remove(int flag) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.RemoveAll(params int[]? flags) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Builder.RemoveIf(int flag, bool condition) -> AndroidX.Media3.Common.FlagSet.Builder?
AndroidX.Media3.Common.FlagSet.Contains(int flag) -> bool
AndroidX.Media3.Common.FlagSet.ContainsAny(params int[]? flags) -> bool
AndroidX.Media3.Common.FlagSet.Get(int index) -> int
AndroidX.Media3.Common.FlagSet.Size() -> int
AndroidX.Media3.Common.Format
AndroidX.Media3.Common.Format.AccessibilityChannel.get -> int
AndroidX.Media3.Common.Format.AccessibilityChannel.set -> void
AndroidX.Media3.Common.Format.AuxiliaryTrackType.get -> int
AndroidX.Media3.Common.Format.AuxiliaryTrackType.set -> void
AndroidX.Media3.Common.Format.AverageBitrate.get -> int
AndroidX.Media3.Common.Format.AverageBitrate.set -> void
AndroidX.Media3.Common.Format.Bitrate.get -> int
AndroidX.Media3.Common.Format.Bitrate.set -> void
AndroidX.Media3.Common.Format.BuildUpon() -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder
AndroidX.Media3.Common.Format.Builder.Build() -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.Format.Builder.Builder() -> void
AndroidX.Media3.Common.Format.Builder.SetAccessibilityChannel(int accessibilityChannel) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetAuxiliaryTrackType(int auxiliaryTrackType) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetAverageBitrate(int averageBitrate) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetChannelCount(int channelCount) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetCodecs(string? codecs) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetColorInfo(AndroidX.Media3.Common.ColorInfo? colorInfo) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetContainerMimeType(string? containerMimeType) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetCryptoType(int cryptoType) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetCueReplacementBehavior(int cueReplacementBehavior) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetCustomData(Java.Lang.Object? customData) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetDrmInitData(AndroidX.Media3.Common.DrmInitData? drmInitData) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetEncoderDelay(int encoderDelay) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetEncoderPadding(int encoderPadding) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetFrameRate(float frameRate) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetHasPrerollSamples(bool hasPrerollSamples) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetHeight(int height) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetId(int id) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetId(string? id) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetInitializationData(System.Collections.Generic.IList<byte[]!>? initializationData) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetLabel(string? label) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetLabels(System.Collections.Generic.IList<AndroidX.Media3.Common.Label!>? labels) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetLanguage(string? language) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetMaxInputSize(int maxInputSize) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetMaxNumReorderSamples(int maxNumReorderSamples) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetMaxSubLayers(int maxSubLayers) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetMetadata(AndroidX.Media3.Common.Metadata? metadata) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetPcmEncoding(int pcmEncoding) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetPeakBitrate(int peakBitrate) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetPixelWidthHeightRatio(float pixelWidthHeightRatio) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetProjectionData(byte[]? projectionData) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetRoleFlags(int roleFlags) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetRotationDegrees(int rotationDegrees) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetSampleMimeType(string? sampleMimeType) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetSampleRate(int sampleRate) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetSelectionFlags(int selectionFlags) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetStereoMode(int stereoMode) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetSubsampleOffsetUs(long subsampleOffsetUs) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetTileCountHorizontal(int tileCountHorizontal) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetTileCountVertical(int tileCountVertical) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.Builder.SetWidth(int width) -> AndroidX.Media3.Common.Format.Builder?
AndroidX.Media3.Common.Format.ChannelCount.get -> int
AndroidX.Media3.Common.Format.ChannelCount.set -> void
AndroidX.Media3.Common.Format.Codecs.get -> string?
AndroidX.Media3.Common.Format.Codecs.set -> void
AndroidX.Media3.Common.Format.ColorInfo.get -> AndroidX.Media3.Common.ColorInfo?
AndroidX.Media3.Common.Format.ColorInfo.set -> void
AndroidX.Media3.Common.Format.ContainerMimeType.get -> string?
AndroidX.Media3.Common.Format.ContainerMimeType.set -> void
AndroidX.Media3.Common.Format.CopyWithCryptoType(int cryptoType) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.Format.CryptoType.get -> int
AndroidX.Media3.Common.Format.CryptoType.set -> void
AndroidX.Media3.Common.Format.CueReplacementBehavior.get -> int
AndroidX.Media3.Common.Format.CueReplacementBehavior.set -> void
AndroidX.Media3.Common.Format.CustomData.get -> Java.Lang.Object?
AndroidX.Media3.Common.Format.CustomData.set -> void
AndroidX.Media3.Common.Format.DrmInitData.get -> AndroidX.Media3.Common.DrmInitData?
AndroidX.Media3.Common.Format.DrmInitData.set -> void
AndroidX.Media3.Common.Format.EncoderDelay.get -> int
AndroidX.Media3.Common.Format.EncoderDelay.set -> void
AndroidX.Media3.Common.Format.EncoderPadding.get -> int
AndroidX.Media3.Common.Format.EncoderPadding.set -> void
AndroidX.Media3.Common.Format.FrameRate.get -> float
AndroidX.Media3.Common.Format.FrameRate.set -> void
AndroidX.Media3.Common.Format.HasPrerollSamples.get -> bool
AndroidX.Media3.Common.Format.HasPrerollSamples.set -> void
AndroidX.Media3.Common.Format.Height.get -> int
AndroidX.Media3.Common.Format.Height.set -> void
AndroidX.Media3.Common.Format.ICueReplacementBehavior
AndroidX.Media3.Common.Format.Id.get -> string?
AndroidX.Media3.Common.Format.Id.set -> void
AndroidX.Media3.Common.Format.InitializationData.get -> System.Collections.IList?
AndroidX.Media3.Common.Format.InitializationData.set -> void
AndroidX.Media3.Common.Format.InitializationDataEquals(AndroidX.Media3.Common.Format? other) -> bool
AndroidX.Media3.Common.Format.Label.get -> string?
AndroidX.Media3.Common.Format.Label.set -> void
AndroidX.Media3.Common.Format.Labels.get -> System.Collections.IList?
AndroidX.Media3.Common.Format.Labels.set -> void
AndroidX.Media3.Common.Format.Language.get -> string?
AndroidX.Media3.Common.Format.Language.set -> void
AndroidX.Media3.Common.Format.MaxInputSize.get -> int
AndroidX.Media3.Common.Format.MaxInputSize.set -> void
AndroidX.Media3.Common.Format.MaxNumReorderSamples.get -> int
AndroidX.Media3.Common.Format.MaxNumReorderSamples.set -> void
AndroidX.Media3.Common.Format.MaxSubLayers.get -> int
AndroidX.Media3.Common.Format.MaxSubLayers.set -> void
AndroidX.Media3.Common.Format.Metadata.get -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.Format.Metadata.set -> void
AndroidX.Media3.Common.Format.PcmEncoding.get -> int
AndroidX.Media3.Common.Format.PcmEncoding.set -> void
AndroidX.Media3.Common.Format.PeakBitrate.get -> int
AndroidX.Media3.Common.Format.PeakBitrate.set -> void
AndroidX.Media3.Common.Format.PixelCount.get -> int
AndroidX.Media3.Common.Format.PixelWidthHeightRatio.get -> float
AndroidX.Media3.Common.Format.PixelWidthHeightRatio.set -> void
AndroidX.Media3.Common.Format.ProjectionData.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.Common.Format.ProjectionData.set -> void
AndroidX.Media3.Common.Format.RoleFlags.get -> int
AndroidX.Media3.Common.Format.RoleFlags.set -> void
AndroidX.Media3.Common.Format.RotationDegrees.get -> int
AndroidX.Media3.Common.Format.RotationDegrees.set -> void
AndroidX.Media3.Common.Format.SampleMimeType.get -> string?
AndroidX.Media3.Common.Format.SampleMimeType.set -> void
AndroidX.Media3.Common.Format.SampleRate.get -> int
AndroidX.Media3.Common.Format.SampleRate.set -> void
AndroidX.Media3.Common.Format.SelectionFlags.get -> int
AndroidX.Media3.Common.Format.SelectionFlags.set -> void
AndroidX.Media3.Common.Format.StereoMode.get -> int
AndroidX.Media3.Common.Format.StereoMode.set -> void
AndroidX.Media3.Common.Format.SubsampleOffsetUs.get -> long
AndroidX.Media3.Common.Format.SubsampleOffsetUs.set -> void
AndroidX.Media3.Common.Format.TileCountHorizontal.get -> int
AndroidX.Media3.Common.Format.TileCountHorizontal.set -> void
AndroidX.Media3.Common.Format.TileCountVertical.get -> int
AndroidX.Media3.Common.Format.TileCountVertical.set -> void
AndroidX.Media3.Common.Format.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Format.Width.get -> int
AndroidX.Media3.Common.Format.Width.set -> void
AndroidX.Media3.Common.Format.WithManifestFormatInfo(AndroidX.Media3.Common.Format? manifestFormat) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.ForwardingPlayer
AndroidX.Media3.Common.ForwardingPlayer.ForwardingPlayer(AndroidX.Media3.Common.IPlayer? player) -> void
AndroidX.Media3.Common.ForwardingPlayer.ForwardingPlayer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts
AndroidX.Media3.Common.ForwardingSimpleBasePlayer
AndroidX.Media3.Common.ForwardingSimpleBasePlayer.ForwardingSimpleBasePlayer(AndroidX.Media3.Common.IPlayer? player) -> void
AndroidX.Media3.Common.ForwardingSimpleBasePlayer.ForwardingSimpleBasePlayer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.ForwardingSimpleBasePlayer.Player.get -> AndroidX.Media3.Common.IPlayer?
AndroidX.Media3.Common.FrameInfo
AndroidX.Media3.Common.FrameInfo.Format.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.FrameInfo.Format.set -> void
AndroidX.Media3.Common.FrameInfo.FrameInfo(AndroidX.Media3.Common.Format? format, long offsetToAddUs) -> void
AndroidX.Media3.Common.FrameInfo.FrameInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.FrameInfo.OffsetToAddUs.get -> long
AndroidX.Media3.Common.FrameInfo.OffsetToAddUs.set -> void
AndroidX.Media3.Common.GlTextureInfo
AndroidX.Media3.Common.GlTextureInfo.FboId.get -> int
AndroidX.Media3.Common.GlTextureInfo.FboId.set -> void
AndroidX.Media3.Common.GlTextureInfo.GlTextureInfo(int texId, int fboId, int rboId, int width, int height) -> void
AndroidX.Media3.Common.GlTextureInfo.Height.get -> int
AndroidX.Media3.Common.GlTextureInfo.Height.set -> void
AndroidX.Media3.Common.GlTextureInfo.RboId.get -> int
AndroidX.Media3.Common.GlTextureInfo.RboId.set -> void
AndroidX.Media3.Common.GlTextureInfo.Release() -> void
AndroidX.Media3.Common.GlTextureInfo.TexId.get -> int
AndroidX.Media3.Common.GlTextureInfo.TexId.set -> void
AndroidX.Media3.Common.GlTextureInfo.Width.get -> int
AndroidX.Media3.Common.GlTextureInfo.Width.set -> void
AndroidX.Media3.Common.HeartRating
AndroidX.Media3.Common.HeartRating.HeartRating() -> void
AndroidX.Media3.Common.HeartRating.HeartRating(bool isHeart) -> void
AndroidX.Media3.Common.HeartRating.IsHeart.get -> bool
AndroidX.Media3.Common.IAdViewProvider
AndroidX.Media3.Common.IAdViewProvider.AdOverlayInfos.get -> System.Collections.Generic.IList<AndroidX.Media3.Common.AdOverlayInfo!>?
AndroidX.Media3.Common.IAdViewProvider.AdViewGroup.get -> Android.Views.ViewGroup?
AndroidX.Media3.Common.IDataReader
AndroidX.Media3.Common.IDataReader.Read(byte[]? p0, int p1, int p2) -> int
AndroidX.Media3.Common.IDebugViewProvider
AndroidX.Media3.Common.IDebugViewProvider.GetDebugPreviewSurfaceView(int p0, int p1) -> Android.Views.SurfaceView?
AndroidX.Media3.Common.IDebugViewProvider.None.get -> AndroidX.Media3.Common.IDebugViewProvider?
AndroidX.Media3.Common.IEffect
AndroidX.Media3.Common.IEffect.GetDurationAfterEffectApplied(long durationUs) -> long
AndroidX.Media3.Common.IErrorMessageProvider
AndroidX.Media3.Common.IErrorMessageProvider.GetErrorMessage(Java.Lang.Object? p0) -> Android.Util.Pair?
AndroidX.Media3.Common.IGlObjectsProvider
AndroidX.Media3.Common.IGlObjectsProvider.CreateBuffersForTexture(int p0, int p1, int p2) -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Common.IGlObjectsProvider.CreateEglContext(Android.Opengl.EGLDisplay? p0, int p1, int[]? p2) -> Android.Opengl.EGLContext?
AndroidX.Media3.Common.IGlObjectsProvider.CreateEglSurface(Android.Opengl.EGLDisplay? p0, Java.Lang.Object? p1, int p2, bool p3) -> Android.Opengl.EGLSurface?
AndroidX.Media3.Common.IGlObjectsProvider.CreateFocusedPlaceholderEglSurface(Android.Opengl.EGLContext? p0, Android.Opengl.EGLDisplay? p1) -> Android.Opengl.EGLSurface?
AndroidX.Media3.Common.IGlObjectsProvider.Release(Android.Opengl.EGLDisplay? p0) -> void
AndroidX.Media3.Common.IOnInputFrameProcessedListener
AndroidX.Media3.Common.IOnInputFrameProcessedListener.OnInputFrameProcessed(int p0, long p1) -> void
AndroidX.Media3.Common.IOverlaySettings
AndroidX.Media3.Common.IOverlaySettings.AlphaScale.get -> float
AndroidX.Media3.Common.IOverlaySettings.BackgroundFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Common.IOverlaySettings.DefaultBackgroundFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Common.IOverlaySettings.DefaultOverlayFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Common.IOverlaySettings.DefaultScale.get -> Android.Util.Pair?
AndroidX.Media3.Common.IOverlaySettings.HdrLuminanceMultiplier.get -> float
AndroidX.Media3.Common.IOverlaySettings.OverlayFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Common.IOverlaySettings.RotationDegrees.get -> float
AndroidX.Media3.Common.IOverlaySettings.Scale.get -> Android.Util.Pair?
AndroidX.Media3.Common.IPlayer
AndroidX.Media3.Common.IPlayer.AddListener(AndroidX.Media3.Common.IPlayerListener? p0) -> void
AndroidX.Media3.Common.IPlayer.AddMediaItem(AndroidX.Media3.Common.MediaItem? p0) -> void
AndroidX.Media3.Common.IPlayer.AddMediaItem(int p0, AndroidX.Media3.Common.MediaItem? p1) -> void
AndroidX.Media3.Common.IPlayer.AddMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0) -> void
AndroidX.Media3.Common.IPlayer.AddMediaItems(int p0, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p1) -> void
AndroidX.Media3.Common.IPlayer.ApplicationLooper.get -> Android.OS.Looper?
AndroidX.Media3.Common.IPlayer.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Common.IPlayer.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Common.IPlayer.BufferedPercentage.get -> int
AndroidX.Media3.Common.IPlayer.BufferedPosition.get -> long
AndroidX.Media3.Common.IPlayer.CanAdvertiseSession() -> bool
AndroidX.Media3.Common.IPlayer.ClearMediaItems() -> void
AndroidX.Media3.Common.IPlayer.ClearVideoSurface() -> void
AndroidX.Media3.Common.IPlayer.ClearVideoSurface(Android.Views.Surface? p0) -> void
AndroidX.Media3.Common.IPlayer.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? p0) -> void
AndroidX.Media3.Common.IPlayer.ClearVideoSurfaceView(Android.Views.SurfaceView? p0) -> void
AndroidX.Media3.Common.IPlayer.ClearVideoTextureView(Android.Views.TextureView? p0) -> void
AndroidX.Media3.Common.IPlayer.ContentBufferedPosition.get -> long
AndroidX.Media3.Common.IPlayer.ContentDuration.get -> long
AndroidX.Media3.Common.IPlayer.ContentPosition.get -> long
AndroidX.Media3.Common.IPlayer.CurrentAdGroupIndex.get -> int
AndroidX.Media3.Common.IPlayer.CurrentAdIndexInAdGroup.get -> int
AndroidX.Media3.Common.IPlayer.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
AndroidX.Media3.Common.IPlayer.CurrentLiveOffset.get -> long
AndroidX.Media3.Common.IPlayer.CurrentManifest.get -> Java.Lang.Object?
AndroidX.Media3.Common.IPlayer.CurrentMediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.IPlayer.CurrentMediaItemIndex.get -> int
AndroidX.Media3.Common.IPlayer.CurrentPeriodIndex.get -> int
AndroidX.Media3.Common.IPlayer.CurrentPosition.get -> long
AndroidX.Media3.Common.IPlayer.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Common.IPlayer.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
AndroidX.Media3.Common.IPlayer.CurrentWindowIndex.get -> int
AndroidX.Media3.Common.IPlayer.DecreaseDeviceVolume() -> void
AndroidX.Media3.Common.IPlayer.DecreaseDeviceVolume(int p0) -> void
AndroidX.Media3.Common.IPlayer.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
AndroidX.Media3.Common.IPlayer.DeviceMuted.get -> bool
AndroidX.Media3.Common.IPlayer.DeviceMuted.set -> void
AndroidX.Media3.Common.IPlayer.DeviceVolume.get -> int
AndroidX.Media3.Common.IPlayer.DeviceVolume.set -> void
AndroidX.Media3.Common.IPlayer.Duration.get -> long
AndroidX.Media3.Common.IPlayer.GetMediaItemAt(int p0) -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.IPlayer.HasNext.get -> bool
AndroidX.Media3.Common.IPlayer.HasNextMediaItem.get -> bool
AndroidX.Media3.Common.IPlayer.HasNextWindow.get -> bool
AndroidX.Media3.Common.IPlayer.HasPreviousMediaItem.get -> bool
AndroidX.Media3.Common.IPlayer.IncreaseDeviceVolume() -> void
AndroidX.Media3.Common.IPlayer.IncreaseDeviceVolume(int p0) -> void
AndroidX.Media3.Common.IPlayer.IsCommandAvailable(int p0) -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentMediaItemDynamic.get -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentMediaItemLive.get -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentMediaItemSeekable.get -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentWindowDynamic.get -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentWindowLive.get -> bool
AndroidX.Media3.Common.IPlayer.IsCurrentWindowSeekable.get -> bool
AndroidX.Media3.Common.IPlayer.IsLoading.get -> bool
AndroidX.Media3.Common.IPlayer.IsPlaying.get -> bool
AndroidX.Media3.Common.IPlayer.IsPlayingAd.get -> bool
AndroidX.Media3.Common.IPlayer.MaxSeekToPreviousPosition.get -> long
AndroidX.Media3.Common.IPlayer.MediaItemCount.get -> int
AndroidX.Media3.Common.IPlayer.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.IPlayer.MoveMediaItem(int p0, int p1) -> void
AndroidX.Media3.Common.IPlayer.MoveMediaItems(int p0, int p1, int p2) -> void
AndroidX.Media3.Common.IPlayer.Next() -> void
AndroidX.Media3.Common.IPlayer.NextMediaItemIndex.get -> int
AndroidX.Media3.Common.IPlayer.NextWindowIndex.get -> int
AndroidX.Media3.Common.IPlayer.Pause() -> void
AndroidX.Media3.Common.IPlayer.Play() -> void
AndroidX.Media3.Common.IPlayer.PlayWhenReady.get -> bool
AndroidX.Media3.Common.IPlayer.PlayWhenReady.set -> void
AndroidX.Media3.Common.IPlayer.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.IPlayer.PlaybackParameters.set -> void
AndroidX.Media3.Common.IPlayer.PlaybackState.get -> int
AndroidX.Media3.Common.IPlayer.PlaybackSuppressionReason.get -> int
AndroidX.Media3.Common.IPlayer.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
AndroidX.Media3.Common.IPlayer.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.IPlayer.PlaylistMetadata.set -> void
AndroidX.Media3.Common.IPlayer.Prepare() -> void
AndroidX.Media3.Common.IPlayer.PreviousMediaItemIndex.get -> int
AndroidX.Media3.Common.IPlayer.PreviousWindowIndex.get -> int
AndroidX.Media3.Common.IPlayer.Release() -> void
AndroidX.Media3.Common.IPlayer.RemoveListener(AndroidX.Media3.Common.IPlayerListener? p0) -> void
AndroidX.Media3.Common.IPlayer.RemoveMediaItem(int p0) -> void
AndroidX.Media3.Common.IPlayer.RemoveMediaItems(int p0, int p1) -> void
AndroidX.Media3.Common.IPlayer.RepeatMode.get -> int
AndroidX.Media3.Common.IPlayer.RepeatMode.set -> void
AndroidX.Media3.Common.IPlayer.ReplaceMediaItem(int p0, AndroidX.Media3.Common.MediaItem? p1) -> void
AndroidX.Media3.Common.IPlayer.ReplaceMediaItems(int p0, int p1, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p2) -> void
AndroidX.Media3.Common.IPlayer.SeekBack() -> void
AndroidX.Media3.Common.IPlayer.SeekBackIncrement.get -> long
AndroidX.Media3.Common.IPlayer.SeekForward() -> void
AndroidX.Media3.Common.IPlayer.SeekForwardIncrement.get -> long
AndroidX.Media3.Common.IPlayer.SeekTo(int p0, long p1) -> void
AndroidX.Media3.Common.IPlayer.SeekTo(long p0) -> void
AndroidX.Media3.Common.IPlayer.SeekToDefaultPosition() -> void
AndroidX.Media3.Common.IPlayer.SeekToDefaultPosition(int p0) -> void
AndroidX.Media3.Common.IPlayer.SeekToNext() -> void
AndroidX.Media3.Common.IPlayer.SeekToNextMediaItem() -> void
AndroidX.Media3.Common.IPlayer.SeekToNextWindow() -> void
AndroidX.Media3.Common.IPlayer.SeekToPrevious() -> void
AndroidX.Media3.Common.IPlayer.SeekToPreviousMediaItem() -> void
AndroidX.Media3.Common.IPlayer.SeekToPreviousWindow() -> void
AndroidX.Media3.Common.IPlayer.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? p0, bool p1) -> void
AndroidX.Media3.Common.IPlayer.SetDeviceMuted(bool p0, int p1) -> void
AndroidX.Media3.Common.IPlayer.SetDeviceVolume(int p0, int p1) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? p0) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? p0, bool p1) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? p0, long p1) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0, bool p1) -> void
AndroidX.Media3.Common.IPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0, int p1, long p2) -> void
AndroidX.Media3.Common.IPlayer.SetPlaybackSpeed(float p0) -> void
AndroidX.Media3.Common.IPlayer.SetVideoSurface(Android.Views.Surface? p0) -> void
AndroidX.Media3.Common.IPlayer.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? p0) -> void
AndroidX.Media3.Common.IPlayer.SetVideoSurfaceView(Android.Views.SurfaceView? p0) -> void
AndroidX.Media3.Common.IPlayer.SetVideoTextureView(Android.Views.TextureView? p0) -> void
AndroidX.Media3.Common.IPlayer.ShuffleModeEnabled.get -> bool
AndroidX.Media3.Common.IPlayer.ShuffleModeEnabled.set -> void
AndroidX.Media3.Common.IPlayer.Stop() -> void
AndroidX.Media3.Common.IPlayer.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Common.IPlayer.TotalBufferedDuration.get -> long
AndroidX.Media3.Common.IPlayer.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
AndroidX.Media3.Common.IPlayer.TrackSelectionParameters.set -> void
AndroidX.Media3.Common.IPlayer.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
AndroidX.Media3.Common.IPlayer.Volume.get -> float
AndroidX.Media3.Common.IPlayer.Volume.set -> void
AndroidX.Media3.Common.IPlayerCommand
AndroidX.Media3.Common.IPlayerDiscontinuityReason
AndroidX.Media3.Common.IPlayerEvent
AndroidX.Media3.Common.IPlayerListener
AndroidX.Media3.Common.IPlayerListener.OnAudioAttributesChanged(AndroidX.Media3.Common.AudioAttributes? audioAttributes) -> void
AndroidX.Media3.Common.IPlayerListener.OnAudioSessionIdChanged(int audioSessionId) -> void
AndroidX.Media3.Common.IPlayerListener.OnAvailableCommandsChanged(AndroidX.Media3.Common.PlayerCommands? availableCommands) -> void
AndroidX.Media3.Common.IPlayerListener.OnCues(AndroidX.Media3.Common.Text.CueGroup? cueGroup) -> void
AndroidX.Media3.Common.IPlayerListener.OnCuesDeprecated(System.Collections.Generic.IList<AndroidX.Media3.Common.Text.Cue!>? cues) -> void
AndroidX.Media3.Common.IPlayerListener.OnDeviceInfoChanged(AndroidX.Media3.Common.DeviceInfo? deviceInfo) -> void
AndroidX.Media3.Common.IPlayerListener.OnDeviceVolumeChanged(int volume, bool muted) -> void
AndroidX.Media3.Common.IPlayerListener.OnEvents(AndroidX.Media3.Common.IPlayer? player, AndroidX.Media3.Common.PlayerEvents? events) -> void
AndroidX.Media3.Common.IPlayerListener.OnIsLoadingChanged(bool isLoading) -> void
AndroidX.Media3.Common.IPlayerListener.OnIsPlayingChanged(bool isPlaying) -> void
AndroidX.Media3.Common.IPlayerListener.OnLoadingChanged(bool isLoading) -> void
AndroidX.Media3.Common.IPlayerListener.OnMaxSeekToPreviousPositionChanged(long maxSeekToPreviousPositionMs) -> void
AndroidX.Media3.Common.IPlayerListener.OnMediaItemTransition(AndroidX.Media3.Common.MediaItem? mediaItem, int reason) -> void
AndroidX.Media3.Common.IPlayerListener.OnMediaMetadataChanged(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> void
AndroidX.Media3.Common.IPlayerListener.OnMetadata(AndroidX.Media3.Common.Metadata? metadata) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlayWhenReadyChanged(bool playWhenReady, int reason) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlaybackParametersChanged(AndroidX.Media3.Common.PlaybackParameters? playbackParameters) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlaybackStateChanged(int playbackState) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlaybackSuppressionReasonChanged(int playbackSuppressionReason) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlayerError(AndroidX.Media3.Common.PlaybackException? error) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlayerErrorChanged(AndroidX.Media3.Common.PlaybackException? error) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlayerStateChanged(bool playWhenReady, int playbackState) -> void
AndroidX.Media3.Common.IPlayerListener.OnPlaylistMetadataChanged(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> void
AndroidX.Media3.Common.IPlayerListener.OnPositionDiscontinuity(AndroidX.Media3.Common.PlayerPositionInfo? oldPosition, AndroidX.Media3.Common.PlayerPositionInfo? newPosition, int reason) -> void
AndroidX.Media3.Common.IPlayerListener.OnRenderedFirstFrame() -> void
AndroidX.Media3.Common.IPlayerListener.OnRepeatModeChanged(int repeatMode) -> void
AndroidX.Media3.Common.IPlayerListener.OnSeekBackIncrementChanged(long seekBackIncrementMs) -> void
AndroidX.Media3.Common.IPlayerListener.OnSeekForwardIncrementChanged(long seekForwardIncrementMs) -> void
AndroidX.Media3.Common.IPlayerListener.OnShuffleModeEnabledChanged(bool shuffleModeEnabled) -> void
AndroidX.Media3.Common.IPlayerListener.OnSkipSilenceEnabledChanged(bool skipSilenceEnabled) -> void
AndroidX.Media3.Common.IPlayerListener.OnSurfaceSizeChanged(int width, int height) -> void
AndroidX.Media3.Common.IPlayerListener.OnTimelineChanged(AndroidX.Media3.Common.Timeline? timeline, int reason) -> void
AndroidX.Media3.Common.IPlayerListener.OnTrackSelectionParametersChanged(AndroidX.Media3.Common.TrackSelectionParameters? parameters) -> void
AndroidX.Media3.Common.IPlayerListener.OnTracksChanged(AndroidX.Media3.Common.Tracks? tracks) -> void
AndroidX.Media3.Common.IPlayerListener.OnVideoSizeChanged(AndroidX.Media3.Common.VideoSize? videoSize) -> void
AndroidX.Media3.Common.IPlayerListener.OnVolumeChanged(float volume) -> void
AndroidX.Media3.Common.IPlayerMediaItemTransitionReason
AndroidX.Media3.Common.IPlayerPlayWhenReadyChangeReason
AndroidX.Media3.Common.IPlayerPlaybackSuppressionReason
AndroidX.Media3.Common.IPlayerRepeatMode
AndroidX.Media3.Common.IPlayerState
AndroidX.Media3.Common.IPlayerTimelineChangeReason
AndroidX.Media3.Common.IPreviewingVideoGraph
AndroidX.Media3.Common.IPreviewingVideoGraph.RenderOutputFrame(long p0) -> void
AndroidX.Media3.Common.IPreviewingVideoGraphFactory
AndroidX.Media3.Common.IPreviewingVideoGraphFactory.Create(Android.Content.Context? p0, AndroidX.Media3.Common.ColorInfo? p1, AndroidX.Media3.Common.IDebugViewProvider? p2, AndroidX.Media3.Common.IVideoGraphListener? p3, Java.Util.Concurrent.IExecutor? p4, AndroidX.Media3.Common.IVideoCompositorSettings? p5, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? p6, long p7) -> AndroidX.Media3.Common.IPreviewingVideoGraph?
AndroidX.Media3.Common.IPreviewingVideoGraphFactory.SupportsMultipleInputs() -> bool
AndroidX.Media3.Common.IVideoCompositorSettings
AndroidX.Media3.Common.IVideoCompositorSettings.Default.get -> AndroidX.Media3.Common.IVideoCompositorSettings?
AndroidX.Media3.Common.IVideoCompositorSettings.GetOutputSize(System.Collections.Generic.IList<AndroidX.Media3.Common.Util.Size!>? p0) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Common.IVideoCompositorSettings.GetOverlaySettings(int p0, long p1) -> AndroidX.Media3.Common.IOverlaySettings?
AndroidX.Media3.Common.IVideoFrameProcessor
AndroidX.Media3.Common.IVideoFrameProcessor.Flush() -> void
AndroidX.Media3.Common.IVideoFrameProcessor.InputSurface.get -> Android.Views.Surface?
AndroidX.Media3.Common.IVideoFrameProcessor.PendingInputFrameCount.get -> int
AndroidX.Media3.Common.IVideoFrameProcessor.QueueInputBitmap(Android.Graphics.Bitmap? p0, AndroidX.Media3.Common.Util.ITimestampIterator? p1) -> bool
AndroidX.Media3.Common.IVideoFrameProcessor.QueueInputTexture(int p0, long p1) -> bool
AndroidX.Media3.Common.IVideoFrameProcessor.RegisterInputFrame() -> bool
AndroidX.Media3.Common.IVideoFrameProcessor.RegisterInputStream(int p0, AndroidX.Media3.Common.Format? p1, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? p2, long p3) -> void
AndroidX.Media3.Common.IVideoFrameProcessor.Release() -> void
AndroidX.Media3.Common.IVideoFrameProcessor.RenderOutputFrame(long p0) -> void
AndroidX.Media3.Common.IVideoFrameProcessor.SetOnInputFrameProcessedListener(AndroidX.Media3.Common.IOnInputFrameProcessedListener? p0) -> void
AndroidX.Media3.Common.IVideoFrameProcessor.SetOnInputSurfaceReadyListener(Java.Lang.IRunnable? p0) -> void
AndroidX.Media3.Common.IVideoFrameProcessor.SetOutputSurfaceInfo(AndroidX.Media3.Common.SurfaceInfo? p0) -> void
AndroidX.Media3.Common.IVideoFrameProcessor.SignalEndOfInput() -> void
AndroidX.Media3.Common.IVideoFrameProcessorFactory
AndroidX.Media3.Common.IVideoFrameProcessorFactory.Create(Android.Content.Context? p0, AndroidX.Media3.Common.IDebugViewProvider? p1, AndroidX.Media3.Common.ColorInfo? p2, bool p3, Java.Util.Concurrent.IExecutor? p4, AndroidX.Media3.Common.IVideoFrameProcessorListener? p5) -> AndroidX.Media3.Common.IVideoFrameProcessor?
AndroidX.Media3.Common.IVideoFrameProcessorInputType
AndroidX.Media3.Common.IVideoFrameProcessorListener
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnEnded() -> void
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnError(AndroidX.Media3.Common.VideoFrameProcessingException? exception) -> void
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnInputStreamRegistered(int inputType, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects) -> void
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnOutputFrameAvailableForRendering(long presentationTimeUs) -> void
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnOutputFrameRateChanged(float frameRate) -> void
AndroidX.Media3.Common.IVideoFrameProcessorListener.OnOutputSizeChanged(int width, int height) -> void
AndroidX.Media3.Common.IVideoGraph
AndroidX.Media3.Common.IVideoGraph.GetProcessor(int p0) -> AndroidX.Media3.Common.IVideoFrameProcessor?
AndroidX.Media3.Common.IVideoGraph.HasProducedFrameWithTimestampZero.get -> bool
AndroidX.Media3.Common.IVideoGraph.Initialize() -> void
AndroidX.Media3.Common.IVideoGraph.RegisterInput(int p0) -> void
AndroidX.Media3.Common.IVideoGraph.Release() -> void
AndroidX.Media3.Common.IVideoGraph.SetOutputSurfaceInfo(AndroidX.Media3.Common.SurfaceInfo? p0) -> void
AndroidX.Media3.Common.IVideoGraphListener
AndroidX.Media3.Common.IVideoGraphListener.OnEnded(long finalFramePresentationTimeUs) -> void
AndroidX.Media3.Common.IVideoGraphListener.OnError(AndroidX.Media3.Common.VideoFrameProcessingException? exc) -> void
AndroidX.Media3.Common.IVideoGraphListener.OnOutputFrameAvailableForRendering(long frame) -> void
AndroidX.Media3.Common.IVideoGraphListener.OnOutputSizeChanged(int size1, int size2) -> void
AndroidX.Media3.Common.IllegalSeekPositionException
AndroidX.Media3.Common.IllegalSeekPositionException.IllegalSeekPositionException(AndroidX.Media3.Common.Timeline? timeline, int windowIndex, long positionMs) -> void
AndroidX.Media3.Common.IllegalSeekPositionException.PositionMs.get -> long
AndroidX.Media3.Common.IllegalSeekPositionException.PositionMs.set -> void
AndroidX.Media3.Common.IllegalSeekPositionException.Timeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Common.IllegalSeekPositionException.Timeline.set -> void
AndroidX.Media3.Common.IllegalSeekPositionException.WindowIndex.get -> int
AndroidX.Media3.Common.IllegalSeekPositionException.WindowIndex.set -> void
AndroidX.Media3.Common.InputFrameProcessedEventArgs
AndroidX.Media3.Common.InputFrameProcessedEventArgs.InputFrameProcessedEventArgs(int p0, long p1) -> void
AndroidX.Media3.Common.InputFrameProcessedEventArgs.P0.get -> int
AndroidX.Media3.Common.InputFrameProcessedEventArgs.P1.get -> long
AndroidX.Media3.Common.InputStreamRegisteredEventArgs
AndroidX.Media3.Common.InputStreamRegisteredEventArgs.Effects.get -> System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>?
AndroidX.Media3.Common.InputStreamRegisteredEventArgs.Format.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.InputStreamRegisteredEventArgs.InputStreamRegisteredEventArgs(int inputType, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects) -> void
AndroidX.Media3.Common.InputStreamRegisteredEventArgs.InputType.get -> int
AndroidX.Media3.Common.IsLoadingChangedEventArgs
AndroidX.Media3.Common.IsLoadingChangedEventArgs.IsLoading.get -> bool
AndroidX.Media3.Common.IsLoadingChangedEventArgs.IsLoadingChangedEventArgs(bool isLoading) -> void
AndroidX.Media3.Common.IsPlayingChangedEventArgs
AndroidX.Media3.Common.IsPlayingChangedEventArgs.IsPlaying.get -> bool
AndroidX.Media3.Common.IsPlayingChangedEventArgs.IsPlayingChangedEventArgs(bool isPlaying) -> void
AndroidX.Media3.Common.Label
AndroidX.Media3.Common.Label.Label(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Label.Label(string? language, string? value) -> void
AndroidX.Media3.Common.Label.Language.get -> string?
AndroidX.Media3.Common.Label.Language.set -> void
AndroidX.Media3.Common.Label.Value.get -> string?
AndroidX.Media3.Common.Label.Value.set -> void
AndroidX.Media3.Common.LoadingChangedEventArgs
AndroidX.Media3.Common.LoadingChangedEventArgs.IsLoading.get -> bool
AndroidX.Media3.Common.LoadingChangedEventArgs.LoadingChangedEventArgs(bool isLoading) -> void
AndroidX.Media3.Common.MaxSeekToPreviousPositionChangedEventArgs
AndroidX.Media3.Common.MaxSeekToPreviousPositionChangedEventArgs.MaxSeekToPreviousPositionChangedEventArgs(long maxSeekToPreviousPositionMs) -> void
AndroidX.Media3.Common.MaxSeekToPreviousPositionChangedEventArgs.MaxSeekToPreviousPositionMs.get -> long
AndroidX.Media3.Common.MediaItem
AndroidX.Media3.Common.MediaItem.AdsConfiguration
AndroidX.Media3.Common.MediaItem.AdsConfiguration.AdTagUri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.AdTagUri.set -> void
AndroidX.Media3.Common.MediaItem.AdsConfiguration.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.AdsId.set -> void
AndroidX.Media3.Common.MediaItem.AdsConfiguration.BuildUpon() -> AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder
AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder.Build() -> AndroidX.Media3.Common.MediaItem.AdsConfiguration?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder.Builder(Android.Net.Uri? adTagUri) -> void
AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder.SetAdTagUri(Android.Net.Uri? adTagUri) -> AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder.SetAdsId(Java.Lang.Object? adsId) -> AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.AdsConfiguration.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.BuildUpon() -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder
AndroidX.Media3.Common.MediaItem.Builder.Build() -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.MediaItem.Builder.Builder() -> void
AndroidX.Media3.Common.MediaItem.Builder.SetAdTagUri(Android.Net.Uri? adTagUri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetAdTagUri(Android.Net.Uri? adTagUri, Java.Lang.Object? adsId) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetAdTagUri(string? adTagUri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetAdsConfiguration(AndroidX.Media3.Common.MediaItem.AdsConfiguration? adsConfiguration) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClipEndPositionMs(long endPositionMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClipRelativeToDefaultPosition(bool relativeToDefaultPosition) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClipRelativeToLiveWindow(bool relativeToLiveWindow) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClipStartPositionMs(long startPositionMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClipStartsAtKeyFrame(bool startsAtKeyFrame) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetClippingConfiguration(AndroidX.Media3.Common.MediaItem.ClippingConfiguration? clippingConfiguration) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetCustomCacheKey(string? customCacheKey) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmConfiguration(AndroidX.Media3.Common.MediaItem.DrmConfiguration? drmConfiguration) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmForceDefaultLicenseUri(bool forceDefaultLicenseUri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmKeySetId(byte[]? keySetId) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmLicenseRequestHeaders(System.Collections.Generic.IDictionary<string!, string!>? licenseRequestHeaders) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmLicenseUri(Android.Net.Uri? licenseUri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmLicenseUri(string? licenseUri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmMultiSession(bool multiSession) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmPlayClearContentWithoutKey(bool playClearContentWithoutKey) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmSessionForClearPeriods(bool sessionForClearPeriods) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmSessionForClearTypes(System.Collections.Generic.IList<Java.Lang.Integer!>? sessionForClearTypes) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetDrmUuid(Java.Util.UUID? uuid) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetImageDurationMs(long imageDurationMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveConfiguration(AndroidX.Media3.Common.MediaItem.LiveConfiguration? liveConfiguration) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveMaxOffsetMs(long liveMaxOffsetMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveMaxPlaybackSpeed(float maxPlaybackSpeed) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveMinOffsetMs(long liveMinOffsetMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveMinPlaybackSpeed(float minPlaybackSpeed) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetLiveTargetOffsetMs(long liveTargetOffsetMs) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetMediaId(string? mediaId) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetMediaMetadata(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetMimeType(string? mimeType) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetRequestMetadata(AndroidX.Media3.Common.MediaItem.RequestMetadata? requestMetadata) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetStreamKeys(System.Collections.Generic.IList<AndroidX.Media3.Common.StreamKey!>? streamKeys) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetSubtitleConfigurations(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem.SubtitleConfiguration!>? subtitleConfigurations) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetSubtitles(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem.Subtitle!>? subtitles) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetTag(Java.Lang.Object? tag) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetUri(Android.Net.Uri? uri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.Builder.SetUri(string? uri) -> AndroidX.Media3.Common.MediaItem.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.Build() -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.BuildClippingProperties() -> AndroidX.Media3.Common.MediaItem.ClippingProperties?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.Builder() -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetEndPositionMs(long endPositionMs) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetEndPositionUs(long endPositionUs) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetRelativeToDefaultPosition(bool relativeToDefaultPosition) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetRelativeToLiveWindow(bool relativeToLiveWindow) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetStartPositionMs(long startPositionMs) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetStartPositionUs(long startPositionUs) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.SetStartsAtKeyFrame(bool startsAtKeyFrame) -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.ClippingConfiguration(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.EndPositionMs.get -> long
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.EndPositionMs.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.EndPositionUs.get -> long
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.EndPositionUs.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.RelativeToDefaultPosition.get -> bool
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.RelativeToDefaultPosition.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.RelativeToLiveWindow.get -> bool
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.RelativeToLiveWindow.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartPositionMs.get -> long
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartPositionMs.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartPositionUs.get -> long
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartPositionUs.set -> void
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartsAtKeyFrame.get -> bool
AndroidX.Media3.Common.MediaItem.ClippingConfiguration.StartsAtKeyFrame.set -> void
AndroidX.Media3.Common.MediaItem.ClippingProperties
AndroidX.Media3.Common.MediaItem.DrmConfiguration
AndroidX.Media3.Common.MediaItem.DrmConfiguration.BuildUpon() -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.Build() -> AndroidX.Media3.Common.MediaItem.DrmConfiguration?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.Builder(Java.Util.UUID? scheme) -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.ForceSessionsForAudioAndVideoTracks(bool forceSessionsForAudioAndVideoTracks) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetForceDefaultLicenseUri(bool forceDefaultLicenseUri) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetForceSessionsForAudioAndVideoTracks(bool forceSessionsForAudioAndVideoTracks) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetForcedSessionTrackTypes(System.Collections.Generic.IList<Java.Lang.Integer!>? forcedSessionTrackTypes) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetKeySetId(byte[]? keySetId) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetLicenseRequestHeaders(System.Collections.Generic.IDictionary<string!, string!>? licenseRequestHeaders) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetLicenseUri(Android.Net.Uri? licenseUri) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetLicenseUri(string? licenseUri) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetMultiSession(bool multiSession) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetPlayClearContentWithoutKey(bool playClearContentWithoutKey) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.SetScheme(Java.Util.UUID? scheme) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.ForceDefaultLicenseUri.get -> bool
AndroidX.Media3.Common.MediaItem.DrmConfiguration.ForceDefaultLicenseUri.set -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.GetKeySetId() -> byte[]?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.LicenseUri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.LicenseUri.set -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.MultiSession.get -> bool
AndroidX.Media3.Common.MediaItem.DrmConfiguration.MultiSession.set -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.PlayClearContentWithoutKey.get -> bool
AndroidX.Media3.Common.MediaItem.DrmConfiguration.PlayClearContentWithoutKey.set -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Scheme.get -> Java.Util.UUID?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Scheme.set -> void
AndroidX.Media3.Common.MediaItem.DrmConfiguration.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Uuid.get -> Java.Util.UUID?
AndroidX.Media3.Common.MediaItem.DrmConfiguration.Uuid.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration
AndroidX.Media3.Common.MediaItem.LiveConfiguration.BuildUpon() -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.Build() -> AndroidX.Media3.Common.MediaItem.LiveConfiguration?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.Builder() -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.SetMaxOffsetMs(long maxOffsetMs) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.SetMaxPlaybackSpeed(float maxPlaybackSpeed) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.SetMinOffsetMs(long minOffsetMs) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.SetMinPlaybackSpeed(float minPlaybackSpeed) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.SetTargetOffsetMs(long targetOffsetMs) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.LiveConfiguration.LiveConfiguration(long targetOffsetMs, long minOffsetMs, long maxOffsetMs, float minPlaybackSpeed, float maxPlaybackSpeed) -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MaxOffsetMs.get -> long
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MaxOffsetMs.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MaxPlaybackSpeed.get -> float
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MaxPlaybackSpeed.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MinOffsetMs.get -> long
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MinOffsetMs.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MinPlaybackSpeed.get -> float
AndroidX.Media3.Common.MediaItem.LiveConfiguration.MinPlaybackSpeed.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.TargetOffsetMs.get -> long
AndroidX.Media3.Common.MediaItem.LiveConfiguration.TargetOffsetMs.set -> void
AndroidX.Media3.Common.MediaItem.LiveConfiguration.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.LocalConfiguration
AndroidX.Media3.Common.MediaItem.LocalConfiguration.AdsConfiguration.get -> AndroidX.Media3.Common.MediaItem.AdsConfiguration?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.AdsConfiguration.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.CustomCacheKey.get -> string?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.CustomCacheKey.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.DrmConfiguration.get -> AndroidX.Media3.Common.MediaItem.DrmConfiguration?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.DrmConfiguration.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.ImageDurationMs.get -> long
AndroidX.Media3.Common.MediaItem.LocalConfiguration.ImageDurationMs.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.MimeType.get -> string?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.MimeType.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.StreamKeys.get -> System.Collections.IList?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.StreamKeys.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Subtitles.get -> System.Collections.IList?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Subtitles.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Tag.get -> Java.Lang.Object?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Tag.set -> void
AndroidX.Media3.Common.MediaItem.LocalConfiguration.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Uri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaItem.LocalConfiguration.Uri.set -> void
AndroidX.Media3.Common.MediaItem.MediaId.get -> string?
AndroidX.Media3.Common.MediaItem.MediaId.set -> void
AndroidX.Media3.Common.MediaItem.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.MediaItem.MediaMetadata.set -> void
AndroidX.Media3.Common.MediaItem.PlaybackProperties.get -> AndroidX.Media3.Common.MediaItem.LocalConfiguration?
AndroidX.Media3.Common.MediaItem.PlaybackProperties.set -> void
AndroidX.Media3.Common.MediaItem.RequestMetadata
AndroidX.Media3.Common.MediaItem.RequestMetadata.BuildUpon() -> AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.Build() -> AndroidX.Media3.Common.MediaItem.RequestMetadata?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.Builder() -> void
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.SetMediaUri(Android.Net.Uri? mediaUri) -> AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.SetSearchQuery(string? searchQuery) -> AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.RequestMetadata.Extras.set -> void
AndroidX.Media3.Common.MediaItem.RequestMetadata.MediaUri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaItem.RequestMetadata.MediaUri.set -> void
AndroidX.Media3.Common.MediaItem.RequestMetadata.SearchQuery.get -> string?
AndroidX.Media3.Common.MediaItem.RequestMetadata.SearchQuery.set -> void
AndroidX.Media3.Common.MediaItem.RequestMetadata.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.Subtitle
AndroidX.Media3.Common.MediaItem.Subtitle.Subtitle(Android.Net.Uri? uri, string? mimeType, string? language) -> void
AndroidX.Media3.Common.MediaItem.Subtitle.Subtitle(Android.Net.Uri? uri, string? mimeType, string? language, int selectionFlags) -> void
AndroidX.Media3.Common.MediaItem.Subtitle.Subtitle(Android.Net.Uri? uri, string? mimeType, string? language, int selectionFlags, int roleFlags, string? label) -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.Build() -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.Builder(Android.Net.Uri? uri) -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetId(string? id) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetLabel(string? label) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetLanguage(string? language) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetMimeType(string? mimeType) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetRoleFlags(int roleFlags) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetSelectionFlags(int selectionFlags) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.SetUri(Android.Net.Uri? uri) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Id.get -> string?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Id.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Label.get -> string?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Label.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Language.get -> string?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Language.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.MimeType.get -> string?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.MimeType.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.RoleFlags.get -> int
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.RoleFlags.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.SelectionFlags.get -> int
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.SelectionFlags.set -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.SubtitleConfiguration(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Uri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Uri.set -> void
AndroidX.Media3.Common.MediaItem.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItem.ToBundleIncludeLocalConfiguration() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaItemTransitionEventArgs
AndroidX.Media3.Common.MediaItemTransitionEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.MediaItemTransitionEventArgs.MediaItemTransitionEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, int reason) -> void
AndroidX.Media3.Common.MediaItemTransitionEventArgs.Reason.get -> int
AndroidX.Media3.Common.MediaLibraryInfo
AndroidX.Media3.Common.MediaMetadata
AndroidX.Media3.Common.MediaMetadata.AlbumArtist.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.AlbumArtist.set -> void
AndroidX.Media3.Common.MediaMetadata.AlbumTitle.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.AlbumTitle.set -> void
AndroidX.Media3.Common.MediaMetadata.Artist.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Artist.set -> void
AndroidX.Media3.Common.MediaMetadata.ArtworkData.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.Common.MediaMetadata.ArtworkData.set -> void
AndroidX.Media3.Common.MediaMetadata.ArtworkDataType.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.ArtworkDataType.set -> void
AndroidX.Media3.Common.MediaMetadata.ArtworkUri.get -> Android.Net.Uri?
AndroidX.Media3.Common.MediaMetadata.ArtworkUri.set -> void
AndroidX.Media3.Common.MediaMetadata.BuildUpon() -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder
AndroidX.Media3.Common.MediaMetadata.Builder.Build() -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.MediaMetadata.Builder.Builder() -> void
AndroidX.Media3.Common.MediaMetadata.Builder.MaybeSetArtworkData(byte[]? artworkData, int artworkDataType) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.Populate(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.PopulateFromMetadata(AndroidX.Media3.Common.Metadata? metadata) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.PopulateFromMetadata(System.Collections.Generic.IList<AndroidX.Media3.Common.Metadata!>? metadataList) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetAlbumArtist(Java.Lang.ICharSequence? albumArtist) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetAlbumArtist(string? albumArtist) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetAlbumTitle(Java.Lang.ICharSequence? albumTitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetAlbumTitle(string? albumTitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetArtist(Java.Lang.ICharSequence? artist) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetArtist(string? artist) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetArtworkData(byte[]? artworkData) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetArtworkData(byte[]? artworkData, Java.Lang.Integer? artworkDataType) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetArtworkUri(Android.Net.Uri? artworkUri) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetCompilation(Java.Lang.ICharSequence? compilation) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetCompilation(string? compilation) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetComposer(Java.Lang.ICharSequence? composer) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetComposer(string? composer) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetConductor(Java.Lang.ICharSequence? conductor) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetConductor(string? conductor) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDescription(Java.Lang.ICharSequence? description) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDescription(string? description) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDiscNumber(Java.Lang.Integer? discNumber) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDisplayTitle(Java.Lang.ICharSequence? displayTitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDisplayTitle(string? displayTitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetDurationMs(Java.Lang.Long? durationMs) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetFolderType(Java.Lang.Integer? folderType) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetGenre(Java.Lang.ICharSequence? genre) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetGenre(string? genre) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetIsBrowsable(Java.Lang.Boolean? isBrowsable) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetIsPlayable(Java.Lang.Boolean? isPlayable) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetMediaType(Java.Lang.Integer? mediaType) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetOverallRating(AndroidX.Media3.Common.Rating? overallRating) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetRecordingDay(Java.Lang.Integer? recordingDay) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetRecordingMonth(Java.Lang.Integer? recordingMonth) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetRecordingYear(Java.Lang.Integer? recordingYear) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetReleaseDay(Java.Lang.Integer? releaseDay) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetReleaseMonth(Java.Lang.Integer? releaseMonth) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetReleaseYear(Java.Lang.Integer? releaseYear) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetStation(Java.Lang.ICharSequence? station) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetStation(string? station) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetSubtitle(Java.Lang.ICharSequence? subtitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetSubtitle(string? subtitle) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetSupportedCommands(System.Collections.Generic.IList<string!>? supportedCommands) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetTitle(Java.Lang.ICharSequence? title) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetTitle(string? title) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetTotalDiscCount(Java.Lang.Integer? totalDiscCount) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetTotalTrackCount(Java.Lang.Integer? totalTrackCount) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetTrackNumber(Java.Lang.Integer? trackNumber) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetUserRating(AndroidX.Media3.Common.Rating? userRating) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetWriter(Java.Lang.ICharSequence? writer) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetWriter(string? writer) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Builder.SetYear(Java.Lang.Integer? year) -> AndroidX.Media3.Common.MediaMetadata.Builder?
AndroidX.Media3.Common.MediaMetadata.Compilation.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Compilation.set -> void
AndroidX.Media3.Common.MediaMetadata.Composer.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Composer.set -> void
AndroidX.Media3.Common.MediaMetadata.Conductor.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Conductor.set -> void
AndroidX.Media3.Common.MediaMetadata.Description.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Description.set -> void
AndroidX.Media3.Common.MediaMetadata.DiscNumber.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.DiscNumber.set -> void
AndroidX.Media3.Common.MediaMetadata.DisplayTitle.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.DisplayTitle.set -> void
AndroidX.Media3.Common.MediaMetadata.DurationMs.get -> Java.Lang.Long?
AndroidX.Media3.Common.MediaMetadata.DurationMs.set -> void
AndroidX.Media3.Common.MediaMetadata.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaMetadata.Extras.set -> void
AndroidX.Media3.Common.MediaMetadata.FolderType.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.FolderType.set -> void
AndroidX.Media3.Common.MediaMetadata.Genre.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Genre.set -> void
AndroidX.Media3.Common.MediaMetadata.IFolderType
AndroidX.Media3.Common.MediaMetadata.IMediaType
AndroidX.Media3.Common.MediaMetadata.IPictureType
AndroidX.Media3.Common.MediaMetadata.IsBrowsable.get -> Java.Lang.Boolean?
AndroidX.Media3.Common.MediaMetadata.IsBrowsable.set -> void
AndroidX.Media3.Common.MediaMetadata.IsPlayable.get -> Java.Lang.Boolean?
AndroidX.Media3.Common.MediaMetadata.IsPlayable.set -> void
AndroidX.Media3.Common.MediaMetadata.MediaType.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.MediaType.set -> void
AndroidX.Media3.Common.MediaMetadata.OverallRating.get -> AndroidX.Media3.Common.Rating?
AndroidX.Media3.Common.MediaMetadata.OverallRating.set -> void
AndroidX.Media3.Common.MediaMetadata.RecordingDay.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.RecordingDay.set -> void
AndroidX.Media3.Common.MediaMetadata.RecordingMonth.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.RecordingMonth.set -> void
AndroidX.Media3.Common.MediaMetadata.RecordingYear.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.RecordingYear.set -> void
AndroidX.Media3.Common.MediaMetadata.ReleaseDay.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.ReleaseDay.set -> void
AndroidX.Media3.Common.MediaMetadata.ReleaseMonth.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.ReleaseMonth.set -> void
AndroidX.Media3.Common.MediaMetadata.ReleaseYear.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.ReleaseYear.set -> void
AndroidX.Media3.Common.MediaMetadata.Station.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Station.set -> void
AndroidX.Media3.Common.MediaMetadata.Subtitle.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Subtitle.set -> void
AndroidX.Media3.Common.MediaMetadata.Title.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Title.set -> void
AndroidX.Media3.Common.MediaMetadata.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.MediaMetadata.TotalDiscCount.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.TotalDiscCount.set -> void
AndroidX.Media3.Common.MediaMetadata.TotalTrackCount.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.TotalTrackCount.set -> void
AndroidX.Media3.Common.MediaMetadata.TrackNumber.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.TrackNumber.set -> void
AndroidX.Media3.Common.MediaMetadata.UserRating.get -> AndroidX.Media3.Common.Rating?
AndroidX.Media3.Common.MediaMetadata.UserRating.set -> void
AndroidX.Media3.Common.MediaMetadata.Writer.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.MediaMetadata.Writer.set -> void
AndroidX.Media3.Common.MediaMetadata.Year.get -> Java.Lang.Integer?
AndroidX.Media3.Common.MediaMetadata.Year.set -> void
AndroidX.Media3.Common.MediaMetadataChangedEventArgs
AndroidX.Media3.Common.MediaMetadataChangedEventArgs.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.MediaMetadataChangedEventArgs.MediaMetadataChangedEventArgs(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> void
AndroidX.Media3.Common.Metadata
AndroidX.Media3.Common.Metadata.CopyWithAppendedEntries(params AndroidX.Media3.Common.Metadata.IEntry![]? entriesToAppend) -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.Metadata.CopyWithAppendedEntriesFrom(AndroidX.Media3.Common.Metadata? other) -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.Metadata.CopyWithPresentationTimeUs(long presentationTimeUs) -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.Metadata.Get(int index) -> AndroidX.Media3.Common.Metadata.IEntry?
AndroidX.Media3.Common.Metadata.IEntry
AndroidX.Media3.Common.Metadata.IEntry.GetWrappedMetadataBytes() -> byte[]?
AndroidX.Media3.Common.Metadata.IEntry.PopulateMediaMetadata(AndroidX.Media3.Common.MediaMetadata.Builder? builder) -> void
AndroidX.Media3.Common.Metadata.IEntry.WrappedMetadataFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.Metadata.Length() -> int
AndroidX.Media3.Common.Metadata.Metadata(System.Collections.Generic.IList<AndroidX.Media3.Common.Metadata.IEntry!>? entries) -> void
AndroidX.Media3.Common.Metadata.Metadata(long presentationTimeUs, System.Collections.Generic.IList<AndroidX.Media3.Common.Metadata.IEntry!>? entries) -> void
AndroidX.Media3.Common.Metadata.Metadata(long presentationTimeUs, params AndroidX.Media3.Common.Metadata.IEntry![]? entries) -> void
AndroidX.Media3.Common.Metadata.Metadata(params AndroidX.Media3.Common.Metadata.IEntry![]? entries) -> void
AndroidX.Media3.Common.Metadata.PresentationTimeUs.get -> long
AndroidX.Media3.Common.Metadata.PresentationTimeUs.set -> void
AndroidX.Media3.Common.MetadataEventArgs
AndroidX.Media3.Common.MetadataEventArgs.Metadata.get -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.MetadataEventArgs.MetadataEventArgs(AndroidX.Media3.Common.Metadata? metadata) -> void
AndroidX.Media3.Common.MimeTypes
AndroidX.Media3.Common.OutputFrameAvailableForRenderingEventArgs
AndroidX.Media3.Common.OutputFrameAvailableForRenderingEventArgs.OutputFrameAvailableForRenderingEventArgs(long presentationTimeUs) -> void
AndroidX.Media3.Common.OutputFrameAvailableForRenderingEventArgs.PresentationTimeUs.get -> long
AndroidX.Media3.Common.OutputFrameRateChangedEventArgs
AndroidX.Media3.Common.OutputFrameRateChangedEventArgs.FrameRate.get -> float
AndroidX.Media3.Common.OutputFrameRateChangedEventArgs.OutputFrameRateChangedEventArgs(float frameRate) -> void
AndroidX.Media3.Common.OutputSizeChangedEventArgs
AndroidX.Media3.Common.OutputSizeChangedEventArgs.Height.get -> int
AndroidX.Media3.Common.OutputSizeChangedEventArgs.OutputSizeChangedEventArgs(int width, int height) -> void
AndroidX.Media3.Common.OutputSizeChangedEventArgs.Width.get -> int
AndroidX.Media3.Common.ParserException
AndroidX.Media3.Common.ParserException.ContentIsMalformed.get -> bool
AndroidX.Media3.Common.ParserException.ContentIsMalformed.set -> void
AndroidX.Media3.Common.ParserException.DataType.get -> int
AndroidX.Media3.Common.ParserException.DataType.set -> void
AndroidX.Media3.Common.ParserException.ParserException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.ParserException.ParserException(string? message, Java.Lang.Throwable? cause, bool contentIsMalformed, int dataType) -> void
AndroidX.Media3.Common.PercentageRating
AndroidX.Media3.Common.PercentageRating.Percent.get -> float
AndroidX.Media3.Common.PercentageRating.PercentageRating() -> void
AndroidX.Media3.Common.PercentageRating.PercentageRating(float percent) -> void
AndroidX.Media3.Common.PlayWhenReadyChangedEventArgs
AndroidX.Media3.Common.PlayWhenReadyChangedEventArgs.PlayWhenReady.get -> bool
AndroidX.Media3.Common.PlayWhenReadyChangedEventArgs.PlayWhenReadyChangedEventArgs(bool playWhenReady, int reason) -> void
AndroidX.Media3.Common.PlayWhenReadyChangedEventArgs.Reason.get -> int
AndroidX.Media3.Common.PlaybackException
AndroidX.Media3.Common.PlaybackException.ErrorCode.get -> int
AndroidX.Media3.Common.PlaybackException.ErrorCode.set -> void
AndroidX.Media3.Common.PlaybackException.ErrorCodeName.get -> string?
AndroidX.Media3.Common.PlaybackException.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Common.PlaybackException.Extras.set -> void
AndroidX.Media3.Common.PlaybackException.IErrorCode
AndroidX.Media3.Common.PlaybackException.PlaybackException(Android.OS.Bundle? bundle) -> void
AndroidX.Media3.Common.PlaybackException.PlaybackException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.PlaybackException.PlaybackException(string? message, Java.Lang.Throwable? cause, int errorCode) -> void
AndroidX.Media3.Common.PlaybackException.PlaybackException(string? message, Java.Lang.Throwable? cause, int errorCode, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Common.PlaybackException.PlaybackException(string? message, Java.Lang.Throwable? cause, int errorCode, Android.OS.Bundle? extras, long timestampMs) -> void
AndroidX.Media3.Common.PlaybackException.TimestampMs.get -> long
AndroidX.Media3.Common.PlaybackException.TimestampMs.set -> void
AndroidX.Media3.Common.PlaybackParameters
AndroidX.Media3.Common.PlaybackParameters.GetMediaTimeUsForPlayoutTimeMs(long timeMs) -> long
AndroidX.Media3.Common.PlaybackParameters.Pitch.get -> float
AndroidX.Media3.Common.PlaybackParameters.Pitch.set -> void
AndroidX.Media3.Common.PlaybackParameters.PlaybackParameters(float speed) -> void
AndroidX.Media3.Common.PlaybackParameters.PlaybackParameters(float speed, float pitch) -> void
AndroidX.Media3.Common.PlaybackParameters.Speed.get -> float
AndroidX.Media3.Common.PlaybackParameters.Speed.set -> void
AndroidX.Media3.Common.PlaybackParameters.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.PlaybackParameters.WithPitch(float pitch) -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.PlaybackParameters.WithSpeed(float speed) -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.PlaybackParametersChangedEventArgs
AndroidX.Media3.Common.PlaybackParametersChangedEventArgs.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.PlaybackParametersChangedEventArgs.PlaybackParametersChangedEventArgs(AndroidX.Media3.Common.PlaybackParameters? playbackParameters) -> void
AndroidX.Media3.Common.PlaybackStateChangedEventArgs
AndroidX.Media3.Common.PlaybackStateChangedEventArgs.PlaybackState.get -> int
AndroidX.Media3.Common.PlaybackStateChangedEventArgs.PlaybackStateChangedEventArgs(int playbackState) -> void
AndroidX.Media3.Common.PlaybackSuppressionReasonChangedEventArgs
AndroidX.Media3.Common.PlaybackSuppressionReasonChangedEventArgs.PlaybackSuppressionReason.get -> int
AndroidX.Media3.Common.PlaybackSuppressionReasonChangedEventArgs.PlaybackSuppressionReasonChangedEventArgs(int playbackSuppressionReason) -> void
AndroidX.Media3.Common.PlayerCommands
AndroidX.Media3.Common.PlayerCommands.BuildUpon() -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder
AndroidX.Media3.Common.PlayerCommands.Builder.Add(int command) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.AddAll(AndroidX.Media3.Common.PlayerCommands? commands) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.AddAll(params int[]? commands) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.AddAllCommands() -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.AddIf(int command, bool condition) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.Build() -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Common.PlayerCommands.Builder.Builder() -> void
AndroidX.Media3.Common.PlayerCommands.Builder.Remove(int command) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.RemoveAll(params int[]? commands) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Builder.RemoveIf(int command, bool condition) -> AndroidX.Media3.Common.PlayerCommands.Builder?
AndroidX.Media3.Common.PlayerCommands.Contains(int command) -> bool
AndroidX.Media3.Common.PlayerCommands.ContainsAny(params int[]? commands) -> bool
AndroidX.Media3.Common.PlayerCommands.Get(int index) -> int
AndroidX.Media3.Common.PlayerCommands.Size() -> int
AndroidX.Media3.Common.PlayerCommands.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.PlayerErrorChangedEventArgs
AndroidX.Media3.Common.PlayerErrorChangedEventArgs.Error.get -> AndroidX.Media3.Common.PlaybackException?
AndroidX.Media3.Common.PlayerErrorChangedEventArgs.PlayerErrorChangedEventArgs(AndroidX.Media3.Common.PlaybackException? error) -> void
AndroidX.Media3.Common.PlayerErrorEventArgs
AndroidX.Media3.Common.PlayerErrorEventArgs.Error.get -> AndroidX.Media3.Common.PlaybackException?
AndroidX.Media3.Common.PlayerErrorEventArgs.PlayerErrorEventArgs(AndroidX.Media3.Common.PlaybackException? error) -> void
AndroidX.Media3.Common.PlayerEvents
AndroidX.Media3.Common.PlayerEvents.Contains(int e) -> bool
AndroidX.Media3.Common.PlayerEvents.ContainsAny(params int[]? events) -> bool
AndroidX.Media3.Common.PlayerEvents.Get(int index) -> int
AndroidX.Media3.Common.PlayerEvents.PlayerEvents(AndroidX.Media3.Common.FlagSet? flags) -> void
AndroidX.Media3.Common.PlayerEvents.Size() -> int
AndroidX.Media3.Common.PlayerPositionInfo
AndroidX.Media3.Common.PlayerPositionInfo.AdGroupIndex.get -> int
AndroidX.Media3.Common.PlayerPositionInfo.AdGroupIndex.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.AdIndexInAdGroup.get -> int
AndroidX.Media3.Common.PlayerPositionInfo.AdIndexInAdGroup.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.ContentPositionMs.get -> long
AndroidX.Media3.Common.PlayerPositionInfo.ContentPositionMs.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.EqualsForBundling(AndroidX.Media3.Common.PlayerPositionInfo? other) -> bool
AndroidX.Media3.Common.PlayerPositionInfo.FilterByAvailableCommands(bool canAccessCurrentMediaItem, bool canAccessTimeline) -> AndroidX.Media3.Common.PlayerPositionInfo?
AndroidX.Media3.Common.PlayerPositionInfo.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.PlayerPositionInfo.MediaItem.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.MediaItemIndex.get -> int
AndroidX.Media3.Common.PlayerPositionInfo.MediaItemIndex.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.PeriodIndex.get -> int
AndroidX.Media3.Common.PlayerPositionInfo.PeriodIndex.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.PeriodUid.get -> Java.Lang.Object?
AndroidX.Media3.Common.PlayerPositionInfo.PeriodUid.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.PlayerPositionInfo(Java.Lang.Object? windowUid, int mediaItemIndex, AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? periodUid, int periodIndex, long positionMs, long contentPositionMs, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.Common.PlayerPositionInfo.PlayerPositionInfo(Java.Lang.Object? windowUid, int mediaItemIndex, Java.Lang.Object? periodUid, int periodIndex, long positionMs, long contentPositionMs, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.Common.PlayerPositionInfo.PositionMs.get -> long
AndroidX.Media3.Common.PlayerPositionInfo.PositionMs.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.PlayerPositionInfo.ToBundle(int controllerInterfaceVersion) -> Android.OS.Bundle?
AndroidX.Media3.Common.PlayerPositionInfo.WindowIndex.get -> int
AndroidX.Media3.Common.PlayerPositionInfo.WindowIndex.set -> void
AndroidX.Media3.Common.PlayerPositionInfo.WindowUid.get -> Java.Lang.Object?
AndroidX.Media3.Common.PlayerPositionInfo.WindowUid.set -> void
AndroidX.Media3.Common.PlayerStateChangedEventArgs
AndroidX.Media3.Common.PlayerStateChangedEventArgs.PlayWhenReady.get -> bool
AndroidX.Media3.Common.PlayerStateChangedEventArgs.PlaybackState.get -> int
AndroidX.Media3.Common.PlayerStateChangedEventArgs.PlayerStateChangedEventArgs(bool playWhenReady, int playbackState) -> void
AndroidX.Media3.Common.PlaylistMetadataChangedEventArgs
AndroidX.Media3.Common.PlaylistMetadataChangedEventArgs.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.PlaylistMetadataChangedEventArgs.PlaylistMetadataChangedEventArgs(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> void
AndroidX.Media3.Common.PositionDiscontinuityEventArgs
AndroidX.Media3.Common.PositionDiscontinuityEventArgs.NewPosition.get -> AndroidX.Media3.Common.PlayerPositionInfo?
AndroidX.Media3.Common.PositionDiscontinuityEventArgs.OldPosition.get -> AndroidX.Media3.Common.PlayerPositionInfo?
AndroidX.Media3.Common.PositionDiscontinuityEventArgs.PositionDiscontinuityEventArgs(AndroidX.Media3.Common.PlayerPositionInfo? oldPosition, AndroidX.Media3.Common.PlayerPositionInfo? newPosition, int reason) -> void
AndroidX.Media3.Common.PositionDiscontinuityEventArgs.Reason.get -> int
AndroidX.Media3.Common.PriorityTaskManager
AndroidX.Media3.Common.PriorityTaskManager.Add(int priority) -> void
AndroidX.Media3.Common.PriorityTaskManager.PriorityTaskManager() -> void
AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException
AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException.PriorityTooLowException(int priority, int highestPriority) -> void
AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException.PriorityTooLowException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.PriorityTaskManager.Proceed(int priority) -> void
AndroidX.Media3.Common.PriorityTaskManager.ProceedNonBlocking(int priority) -> bool
AndroidX.Media3.Common.PriorityTaskManager.ProceedOrThrow(int priority) -> void
AndroidX.Media3.Common.PriorityTaskManager.Remove(int priority) -> void
AndroidX.Media3.Common.Rating
AndroidX.Media3.Common.Rating.Rating(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.RepeatModeChangedEventArgs
AndroidX.Media3.Common.RepeatModeChangedEventArgs.RepeatMode.get -> int
AndroidX.Media3.Common.RepeatModeChangedEventArgs.RepeatModeChangedEventArgs(int repeatMode) -> void
AndroidX.Media3.Common.SeekBackIncrementChangedEventArgs
AndroidX.Media3.Common.SeekBackIncrementChangedEventArgs.SeekBackIncrementChangedEventArgs(long seekBackIncrementMs) -> void
AndroidX.Media3.Common.SeekBackIncrementChangedEventArgs.SeekBackIncrementMs.get -> long
AndroidX.Media3.Common.SeekForwardIncrementChangedEventArgs
AndroidX.Media3.Common.SeekForwardIncrementChangedEventArgs.SeekForwardIncrementChangedEventArgs(long seekForwardIncrementMs) -> void
AndroidX.Media3.Common.SeekForwardIncrementChangedEventArgs.SeekForwardIncrementMs.get -> long
AndroidX.Media3.Common.ShuffleModeEnabledChangedEventArgs
AndroidX.Media3.Common.ShuffleModeEnabledChangedEventArgs.ShuffleModeEnabled.get -> bool
AndroidX.Media3.Common.ShuffleModeEnabledChangedEventArgs.ShuffleModeEnabledChangedEventArgs(bool shuffleModeEnabled) -> void
AndroidX.Media3.Common.SimpleBasePlayer
AndroidX.Media3.Common.SimpleBasePlayer.Builder
AndroidX.Media3.Common.SimpleBasePlayer.Builder.Build() -> Java.Lang.Object?
AndroidX.Media3.Common.SimpleBasePlayer.Builder.Builder(Java.Lang.Object? uid) -> void
AndroidX.Media3.Common.SimpleBasePlayer.Builder.SetAdPlaybackState(AndroidX.Media3.Common.AdPlaybackState? adPlaybackState) -> AndroidX.Media3.Common.SimpleBasePlayer.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.Builder.SetDurationUs(long durationUs) -> AndroidX.Media3.Common.SimpleBasePlayer.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.Builder.SetIsPlaceholder(bool isPlaceholder) -> AndroidX.Media3.Common.SimpleBasePlayer.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.Builder.SetUid(Java.Lang.Object? uid) -> AndroidX.Media3.Common.SimpleBasePlayer.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.InvalidateState() -> void
AndroidX.Media3.Common.SimpleBasePlayer.LivePositionSupplier
AndroidX.Media3.Common.SimpleBasePlayer.LivePositionSupplier.Disconnect(long finalValue) -> void
AndroidX.Media3.Common.SimpleBasePlayer.LivePositionSupplier.Get() -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.BuildUpon() -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.Build() -> Java.Lang.Object?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.Builder(Java.Lang.Object? uid) -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetDefaultPositionUs(long defaultPositionUs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetDurationUs(long durationUs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetElapsedRealtimeEpochOffsetMs(long elapsedRealtimeEpochOffsetMs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetIsDynamic(bool isDynamic) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetIsPlaceholder(bool isPlaceholder) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetIsSeekable(bool isSeekable) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetLiveConfiguration(AndroidX.Media3.Common.MediaItem.LiveConfiguration? liveConfiguration) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetManifest(Java.Lang.Object? manifest) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetMediaMetadata(AndroidX.Media3.Common.MediaMetadata? mediaMetadata) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetPositionInFirstPeriodUs(long positionInFirstPeriodUs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetPresentationStartTimeMs(long presentationStartTimeMs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetTracks(AndroidX.Media3.Common.Tracks? tracks) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetUid(Java.Lang.Object? uid) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.SetWindowStartTimeMs(long windowStartTimeMs) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.DefaultPositionUs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.DefaultPositionUs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.DurationUs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.DurationUs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.ElapsedRealtimeEpochOffsetMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.ElapsedRealtimeEpochOffsetMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsDynamic.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsDynamic.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsPlaceholder.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsPlaceholder.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsSeekable.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.IsSeekable.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.LiveConfiguration.get -> AndroidX.Media3.Common.MediaItem.LiveConfiguration?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.LiveConfiguration.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Manifest.get -> Java.Lang.Object?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Manifest.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.MediaItem.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.MediaMetadata.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.PositionInFirstPeriodUs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.PositionInFirstPeriodUs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.PresentationStartTimeMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.PresentationStartTimeMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Tracks.get -> AndroidX.Media3.Common.Tracks?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Tracks.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Uid.get -> Java.Lang.Object?
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Uid.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.WindowStartTimeMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.WindowStartTimeMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.SimpleBasePlayer(Android.OS.Looper? applicationLooper) -> void
AndroidX.Media3.Common.SimpleBasePlayer.SimpleBasePlayer(Android.OS.Looper? applicationLooper, AndroidX.Media3.Common.Util.IClock? clock) -> void
AndroidX.Media3.Common.SimpleBasePlayer.SimpleBasePlayer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.SimpleBasePlayer.State
AndroidX.Media3.Common.SimpleBasePlayer.State.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Common.SimpleBasePlayer.State.AudioAttributes.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Common.SimpleBasePlayer.State.AvailableCommands.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.BuildUpon() -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.Build() -> AndroidX.Media3.Common.SimpleBasePlayer.State?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.Builder() -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.ClearPositionDiscontinuity() -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetAdPositionMs(long positionMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetAvailableCommands(AndroidX.Media3.Common.PlayerCommands? availableCommands) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetContentPositionMs(long positionMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetCurrentAd(int adGroupIndex, int adIndexInAdGroup) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetCurrentCues(AndroidX.Media3.Common.Text.CueGroup? currentCues) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetCurrentMediaItemIndex(int currentMediaItemIndex) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetDeviceInfo(AndroidX.Media3.Common.DeviceInfo? deviceInfo) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetDeviceVolume(int deviceVolume) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetIsDeviceMuted(bool isDeviceMuted) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetIsLoading(bool isLoading) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetMaxSeekToPreviousPositionMs(long maxSeekToPreviousPositionMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetNewlyRenderedFirstFrame(bool newlyRenderedFirstFrame) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlayWhenReady(bool playWhenReady, int playWhenReadyChangeReason) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaybackParameters(AndroidX.Media3.Common.PlaybackParameters? playbackParameters) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaybackState(int playbackState) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaybackSuppressionReason(int playbackSuppressionReason) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlayerError(AndroidX.Media3.Common.PlaybackException? playerError) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaylist(AndroidX.Media3.Common.Timeline? timeline, AndroidX.Media3.Common.Tracks? currentTracks, AndroidX.Media3.Common.MediaMetadata? currentMetadata) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaylist(System.Collections.Generic.IList<AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData!>? playlist) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPlaylistMetadata(AndroidX.Media3.Common.MediaMetadata? playlistMetadata) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetPositionDiscontinuity(int positionDiscontinuityReason, long discontinuityPositionMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetRepeatMode(int repeatMode) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetSeekBackIncrementMs(long seekBackIncrementMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetSeekForwardIncrementMs(long seekForwardIncrementMs) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetShuffleModeEnabled(bool shuffleModeEnabled) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetSurfaceSize(AndroidX.Media3.Common.Util.Size? surfaceSize) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetTimedMetadata(AndroidX.Media3.Common.Metadata? timedMetadata) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetTrackSelectionParameters(AndroidX.Media3.Common.TrackSelectionParameters? trackSelectionParameters) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetVideoSize(AndroidX.Media3.Common.VideoSize? videoSize) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.SetVolume(float volume) -> AndroidX.Media3.Common.SimpleBasePlayer.State.Builder?
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentAdGroupIndex.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentAdGroupIndex.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentAdIndexInAdGroup.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentAdIndexInAdGroup.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentCues.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentMediaItemIndex.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentMediaItemIndex.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentMetadata.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
AndroidX.Media3.Common.SimpleBasePlayer.State.CurrentTracks.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
AndroidX.Media3.Common.SimpleBasePlayer.State.DeviceInfo.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.DeviceVolume.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.DeviceVolume.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.DiscontinuityPositionMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.State.DiscontinuityPositionMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.HasPositionDiscontinuity.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.HasPositionDiscontinuity.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.IsDeviceMuted.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.IsDeviceMuted.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.IsLoading.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.IsLoading.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.MaxSeekToPreviousPositionMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.State.MaxSeekToPreviousPositionMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.NewlyRenderedFirstFrame.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.NewlyRenderedFirstFrame.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayWhenReady.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayWhenReady.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayWhenReadyChangeReason.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayWhenReadyChangeReason.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackParameters.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackState.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackState.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackSuppressionReason.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaybackSuppressionReason.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
AndroidX.Media3.Common.SimpleBasePlayer.State.PlayerError.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Common.SimpleBasePlayer.State.PlaylistMetadata.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.PositionDiscontinuityReason.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.PositionDiscontinuityReason.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.RepeatMode.get -> int
AndroidX.Media3.Common.SimpleBasePlayer.State.RepeatMode.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.SeekBackIncrementMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.State.SeekBackIncrementMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.SeekForwardIncrementMs.get -> long
AndroidX.Media3.Common.SimpleBasePlayer.State.SeekForwardIncrementMs.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.ShuffleModeEnabled.get -> bool
AndroidX.Media3.Common.SimpleBasePlayer.State.ShuffleModeEnabled.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Common.SimpleBasePlayer.State.SurfaceSize.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.TimedMetadata.get -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.Common.SimpleBasePlayer.State.TimedMetadata.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.Timeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Common.SimpleBasePlayer.State.Timeline.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
AndroidX.Media3.Common.SimpleBasePlayer.State.TrackSelectionParameters.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
AndroidX.Media3.Common.SimpleBasePlayer.State.VideoSize.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.State.Volume.get -> float
AndroidX.Media3.Common.SimpleBasePlayer.State.Volume.set -> void
AndroidX.Media3.Common.SimpleBasePlayer.VerifyApplicationThread() -> void
AndroidX.Media3.Common.SkipSilenceEnabledChangedEventArgs
AndroidX.Media3.Common.SkipSilenceEnabledChangedEventArgs.SkipSilenceEnabled.get -> bool
AndroidX.Media3.Common.SkipSilenceEnabledChangedEventArgs.SkipSilenceEnabledChangedEventArgs(bool skipSilenceEnabled) -> void
AndroidX.Media3.Common.StarRating
AndroidX.Media3.Common.StarRating.GetStarRating() -> float
AndroidX.Media3.Common.StarRating.MaxStars.get -> int
AndroidX.Media3.Common.StarRating.StarRating(int maxStars) -> void
AndroidX.Media3.Common.StarRating.StarRating(int maxStars, float starRating) -> void
AndroidX.Media3.Common.StreamKey
AndroidX.Media3.Common.StreamKey.CompareTo(Java.Lang.Object? o) -> int
AndroidX.Media3.Common.StreamKey.DescribeContents() -> int
AndroidX.Media3.Common.StreamKey.GroupIndex.get -> int
AndroidX.Media3.Common.StreamKey.GroupIndex.set -> void
AndroidX.Media3.Common.StreamKey.PeriodIndex.get -> int
AndroidX.Media3.Common.StreamKey.PeriodIndex.set -> void
AndroidX.Media3.Common.StreamKey.StreamIndex.get -> int
AndroidX.Media3.Common.StreamKey.StreamIndex.set -> void
AndroidX.Media3.Common.StreamKey.StreamKey(int groupIndex, int streamIndex) -> void
AndroidX.Media3.Common.StreamKey.StreamKey(int periodIndex, int groupIndex, int streamIndex) -> void
AndroidX.Media3.Common.StreamKey.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.StreamKey.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Common.SurfaceInfo
AndroidX.Media3.Common.SurfaceInfo.Height.get -> int
AndroidX.Media3.Common.SurfaceInfo.Height.set -> void
AndroidX.Media3.Common.SurfaceInfo.IsEncoderInputSurface.get -> bool
AndroidX.Media3.Common.SurfaceInfo.IsEncoderInputSurface.set -> void
AndroidX.Media3.Common.SurfaceInfo.OrientationDegrees.get -> int
AndroidX.Media3.Common.SurfaceInfo.OrientationDegrees.set -> void
AndroidX.Media3.Common.SurfaceInfo.Surface.get -> Android.Views.Surface?
AndroidX.Media3.Common.SurfaceInfo.Surface.set -> void
AndroidX.Media3.Common.SurfaceInfo.SurfaceInfo(Android.Views.Surface? surface, int width, int height) -> void
AndroidX.Media3.Common.SurfaceInfo.SurfaceInfo(Android.Views.Surface? surface, int width, int height, int orientationDegrees) -> void
AndroidX.Media3.Common.SurfaceInfo.SurfaceInfo(Android.Views.Surface? surface, int width, int height, int orientationDegrees, bool isEncoderInputSurface) -> void
AndroidX.Media3.Common.SurfaceInfo.Width.get -> int
AndroidX.Media3.Common.SurfaceInfo.Width.set -> void
AndroidX.Media3.Common.SurfaceSizeChangedEventArgs
AndroidX.Media3.Common.SurfaceSizeChangedEventArgs.Height.get -> int
AndroidX.Media3.Common.SurfaceSizeChangedEventArgs.SurfaceSizeChangedEventArgs(int width, int height) -> void
AndroidX.Media3.Common.SurfaceSizeChangedEventArgs.Width.get -> int
AndroidX.Media3.Common.Text.Cue
AndroidX.Media3.Common.Text.Cue.Bitmap.get -> Android.Graphics.Bitmap?
AndroidX.Media3.Common.Text.Cue.Bitmap.set -> void
AndroidX.Media3.Common.Text.Cue.BitmapHeight.get -> float
AndroidX.Media3.Common.Text.Cue.BitmapHeight.set -> void
AndroidX.Media3.Common.Text.Cue.BuildUpon() -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder
AndroidX.Media3.Common.Text.Cue.Builder.Bitmap.get -> Android.Graphics.Bitmap?
AndroidX.Media3.Common.Text.Cue.Builder.BitmapHeight.get -> float
AndroidX.Media3.Common.Text.Cue.Builder.Build() -> AndroidX.Media3.Common.Text.Cue?
AndroidX.Media3.Common.Text.Cue.Builder.Builder() -> void
AndroidX.Media3.Common.Text.Cue.Builder.ClearWindowColor() -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.IsWindowColorSet.get -> bool
AndroidX.Media3.Common.Text.Cue.Builder.Line.get -> float
AndroidX.Media3.Common.Text.Cue.Builder.LineAnchor.get -> int
AndroidX.Media3.Common.Text.Cue.Builder.LineType.get -> int
AndroidX.Media3.Common.Text.Cue.Builder.Position.get -> float
AndroidX.Media3.Common.Text.Cue.Builder.PositionAnchor.get -> int
AndroidX.Media3.Common.Text.Cue.Builder.SetBitmap(Android.Graphics.Bitmap? bitmap) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetBitmapHeight(float bitmapHeight) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetLine(float line, int lineType) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetLineAnchor(int lineAnchor) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetMultiRowAlignment(Android.Text.Layout.Alignment? multiRowAlignment) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetPosition(float position) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetPositionAnchor(int positionAnchor) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetShearDegrees(float shearDegrees) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetSize(float size) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetText(Java.Lang.ICharSequence? text) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetText(string? text) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetTextAlignment(Android.Text.Layout.Alignment? textAlignment) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetTextSize(float textSize, int textSizeType) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetVerticalType(int verticalType) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.SetWindowColor(int windowColor) -> AndroidX.Media3.Common.Text.Cue.Builder?
AndroidX.Media3.Common.Text.Cue.Builder.Size.get -> float
AndroidX.Media3.Common.Text.Cue.Builder.Text.get -> string?
AndroidX.Media3.Common.Text.Cue.Builder.TextAlignment.get -> Android.Text.Layout.Alignment?
AndroidX.Media3.Common.Text.Cue.Builder.TextFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.Text.Cue.Builder.TextSize.get -> float
AndroidX.Media3.Common.Text.Cue.Builder.TextSizeType.get -> int
AndroidX.Media3.Common.Text.Cue.Builder.VerticalType.get -> int
AndroidX.Media3.Common.Text.Cue.Builder.WindowColor.get -> int
AndroidX.Media3.Common.Text.Cue.IAnchorType
AndroidX.Media3.Common.Text.Cue.ILineType
AndroidX.Media3.Common.Text.Cue.ITextSizeType
AndroidX.Media3.Common.Text.Cue.IVerticalType
AndroidX.Media3.Common.Text.Cue.Line.get -> float
AndroidX.Media3.Common.Text.Cue.Line.set -> void
AndroidX.Media3.Common.Text.Cue.LineAnchor.get -> int
AndroidX.Media3.Common.Text.Cue.LineAnchor.set -> void
AndroidX.Media3.Common.Text.Cue.LineType.get -> int
AndroidX.Media3.Common.Text.Cue.LineType.set -> void
AndroidX.Media3.Common.Text.Cue.MultiRowAlignment.get -> Android.Text.Layout.Alignment?
AndroidX.Media3.Common.Text.Cue.MultiRowAlignment.set -> void
AndroidX.Media3.Common.Text.Cue.Position.get -> float
AndroidX.Media3.Common.Text.Cue.Position.set -> void
AndroidX.Media3.Common.Text.Cue.PositionAnchor.get -> int
AndroidX.Media3.Common.Text.Cue.PositionAnchor.set -> void
AndroidX.Media3.Common.Text.Cue.ShearDegrees.get -> float
AndroidX.Media3.Common.Text.Cue.ShearDegrees.set -> void
AndroidX.Media3.Common.Text.Cue.Size.get -> float
AndroidX.Media3.Common.Text.Cue.Size.set -> void
AndroidX.Media3.Common.Text.Cue.Text.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Common.Text.Cue.Text.set -> void
AndroidX.Media3.Common.Text.Cue.TextAlignment.get -> Android.Text.Layout.Alignment?
AndroidX.Media3.Common.Text.Cue.TextAlignment.set -> void
AndroidX.Media3.Common.Text.Cue.TextSize.get -> float
AndroidX.Media3.Common.Text.Cue.TextSize.set -> void
AndroidX.Media3.Common.Text.Cue.TextSizeType.get -> int
AndroidX.Media3.Common.Text.Cue.TextSizeType.set -> void
AndroidX.Media3.Common.Text.Cue.ToBinderBasedBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.Cue.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.Cue.ToSerializableBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.Cue.VerticalType.get -> int
AndroidX.Media3.Common.Text.Cue.VerticalType.set -> void
AndroidX.Media3.Common.Text.Cue.WindowColor.get -> int
AndroidX.Media3.Common.Text.Cue.WindowColor.set -> void
AndroidX.Media3.Common.Text.Cue.WindowColorSet.get -> bool
AndroidX.Media3.Common.Text.Cue.WindowColorSet.set -> void
AndroidX.Media3.Common.Text.CueGroup
AndroidX.Media3.Common.Text.CueGroup.CueGroup(System.Collections.Generic.IList<AndroidX.Media3.Common.Text.Cue!>? cues, long presentationTimeUs) -> void
AndroidX.Media3.Common.Text.CueGroup.PresentationTimeUs.get -> long
AndroidX.Media3.Common.Text.CueGroup.PresentationTimeUs.set -> void
AndroidX.Media3.Common.Text.CueGroup.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.HorizontalTextInVerticalContextSpan
AndroidX.Media3.Common.Text.HorizontalTextInVerticalContextSpan.HorizontalTextInVerticalContextSpan() -> void
AndroidX.Media3.Common.Text.ILanguageFeatureSpan
AndroidX.Media3.Common.Text.RubySpan
AndroidX.Media3.Common.Text.RubySpan.Position.get -> int
AndroidX.Media3.Common.Text.RubySpan.Position.set -> void
AndroidX.Media3.Common.Text.RubySpan.RubySpan(string? rubyText, int position) -> void
AndroidX.Media3.Common.Text.RubySpan.RubyText.get -> string?
AndroidX.Media3.Common.Text.RubySpan.RubyText.set -> void
AndroidX.Media3.Common.Text.RubySpan.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.SpanUtil
AndroidX.Media3.Common.Text.TextAnnotation
AndroidX.Media3.Common.Text.TextAnnotation.IPosition
AndroidX.Media3.Common.Text.TextEmphasisSpan
AndroidX.Media3.Common.Text.TextEmphasisSpan.IMarkFill
AndroidX.Media3.Common.Text.TextEmphasisSpan.IMarkShape
AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkFill.get -> int
AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkFill.set -> void
AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShape.get -> int
AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShape.set -> void
AndroidX.Media3.Common.Text.TextEmphasisSpan.Position.get -> int
AndroidX.Media3.Common.Text.TextEmphasisSpan.Position.set -> void
AndroidX.Media3.Common.Text.TextEmphasisSpan.TextEmphasisSpan(int shape, int fill, int position) -> void
AndroidX.Media3.Common.Text.TextEmphasisSpan.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.VoiceSpan
AndroidX.Media3.Common.Text.VoiceSpan.Name.get -> string?
AndroidX.Media3.Common.Text.VoiceSpan.Name.set -> void
AndroidX.Media3.Common.Text.VoiceSpan.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Text.VoiceSpan.VoiceSpan(string? name) -> void
AndroidX.Media3.Common.ThumbRating
AndroidX.Media3.Common.ThumbRating.IsThumbsUp.get -> bool
AndroidX.Media3.Common.ThumbRating.ThumbRating() -> void
AndroidX.Media3.Common.ThumbRating.ThumbRating(bool isThumbsUp) -> void
AndroidX.Media3.Common.Timeline
AndroidX.Media3.Common.Timeline.CopyWithSingleWindow(int windowIndex) -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Common.Timeline.GetNextPeriodIndex(int periodIndex, AndroidX.Media3.Common.Timeline.Period? period, AndroidX.Media3.Common.Timeline.Window? window, int repeatMode, bool shuffleModeEnabled) -> int
AndroidX.Media3.Common.Timeline.GetPeriod(int periodIndex, AndroidX.Media3.Common.Timeline.Period? period) -> AndroidX.Media3.Common.Timeline.Period?
AndroidX.Media3.Common.Timeline.GetPeriodPosition(AndroidX.Media3.Common.Timeline.Window? window, AndroidX.Media3.Common.Timeline.Period? period, int windowIndex, long windowPositionUs) -> Android.Util.Pair?
AndroidX.Media3.Common.Timeline.GetPeriodPosition(AndroidX.Media3.Common.Timeline.Window? window, AndroidX.Media3.Common.Timeline.Period? period, int windowIndex, long windowPositionUs, long defaultPositionProjectionUs) -> Android.Util.Pair?
AndroidX.Media3.Common.Timeline.GetPeriodPositionUs(AndroidX.Media3.Common.Timeline.Window? window, AndroidX.Media3.Common.Timeline.Period? period, int windowIndex, long windowPositionUs) -> Android.Util.Pair?
AndroidX.Media3.Common.Timeline.GetPeriodPositionUs(AndroidX.Media3.Common.Timeline.Window? window, AndroidX.Media3.Common.Timeline.Period? period, int windowIndex, long windowPositionUs, long defaultPositionProjectionUs) -> Android.Util.Pair?
AndroidX.Media3.Common.Timeline.GetWindow(int windowIndex, AndroidX.Media3.Common.Timeline.Window? window) -> AndroidX.Media3.Common.Timeline.Window?
AndroidX.Media3.Common.Timeline.IsEmpty.get -> bool
AndroidX.Media3.Common.Timeline.IsLastPeriod(int periodIndex, AndroidX.Media3.Common.Timeline.Period? period, AndroidX.Media3.Common.Timeline.Window? window, int repeatMode, bool shuffleModeEnabled) -> bool
AndroidX.Media3.Common.Timeline.Period
AndroidX.Media3.Common.Timeline.Period.AdGroupCount.get -> int
AndroidX.Media3.Common.Timeline.Period.AdPlaybackState.get -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.Common.Timeline.Period.AdPlaybackState.set -> void
AndroidX.Media3.Common.Timeline.Period.AdResumePositionUs.get -> long
AndroidX.Media3.Common.Timeline.Period.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Period.DurationMs.get -> long
AndroidX.Media3.Common.Timeline.Period.DurationUs.get -> long
AndroidX.Media3.Common.Timeline.Period.GetAdCountInAdGroup(int adGroupIndex) -> int
AndroidX.Media3.Common.Timeline.Period.GetAdDurationUs(int adGroupIndex, int adIndexInAdGroup) -> long
AndroidX.Media3.Common.Timeline.Period.GetAdGroupIndexAfterPositionUs(long positionUs) -> int
AndroidX.Media3.Common.Timeline.Period.GetAdGroupIndexForPositionUs(long positionUs) -> int
AndroidX.Media3.Common.Timeline.Period.GetAdGroupTimeUs(int adGroupIndex) -> long
AndroidX.Media3.Common.Timeline.Period.GetAdState(int adGroupIndex, int adIndexInAdGroup) -> int
AndroidX.Media3.Common.Timeline.Period.GetContentResumeOffsetUs(int adGroupIndex) -> long
AndroidX.Media3.Common.Timeline.Period.GetFirstAdIndexToPlay(int adGroupIndex) -> int
AndroidX.Media3.Common.Timeline.Period.GetNextAdIndexToPlay(int adGroupIndex, int lastPlayedAdIndex) -> int
AndroidX.Media3.Common.Timeline.Period.HasPlayedAdGroup(int adGroupIndex) -> bool
AndroidX.Media3.Common.Timeline.Period.Id.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Period.Id.set -> void
AndroidX.Media3.Common.Timeline.Period.IsLivePostrollPlaceholder(int adGroupIndex) -> bool
AndroidX.Media3.Common.Timeline.Period.IsPlaceholder.get -> bool
AndroidX.Media3.Common.Timeline.Period.IsPlaceholder.set -> void
AndroidX.Media3.Common.Timeline.Period.IsServerSideInsertedAdGroup(int adGroupIndex) -> bool
AndroidX.Media3.Common.Timeline.Period.Period() -> void
AndroidX.Media3.Common.Timeline.Period.PositionInWindowMs.get -> long
AndroidX.Media3.Common.Timeline.Period.PositionInWindowUs.get -> long
AndroidX.Media3.Common.Timeline.Period.RemovedAdGroupCount.get -> int
AndroidX.Media3.Common.Timeline.Period.Set(Java.Lang.Object? id, Java.Lang.Object? uid, int windowIndex, long durationUs, long positionInWindowUs) -> AndroidX.Media3.Common.Timeline.Period?
AndroidX.Media3.Common.Timeline.Period.Set(Java.Lang.Object? id, Java.Lang.Object? uid, int windowIndex, long durationUs, long positionInWindowUs, AndroidX.Media3.Common.AdPlaybackState? adPlaybackState, bool isPlaceholder) -> AndroidX.Media3.Common.Timeline.Period?
AndroidX.Media3.Common.Timeline.Period.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Timeline.Period.Uid.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Period.Uid.set -> void
AndroidX.Media3.Common.Timeline.Period.WindowIndex.get -> int
AndroidX.Media3.Common.Timeline.Period.WindowIndex.set -> void
AndroidX.Media3.Common.Timeline.RemotableTimeline
AndroidX.Media3.Common.Timeline.Timeline() -> void
AndroidX.Media3.Common.Timeline.Timeline(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Timeline.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Timeline.Window
AndroidX.Media3.Common.Timeline.Window.CurrentUnixTimeMs.get -> long
AndroidX.Media3.Common.Timeline.Window.DefaultPositionMs.get -> long
AndroidX.Media3.Common.Timeline.Window.DefaultPositionUs.get -> long
AndroidX.Media3.Common.Timeline.Window.DurationMs.get -> long
AndroidX.Media3.Common.Timeline.Window.DurationUs.get -> long
AndroidX.Media3.Common.Timeline.Window.ElapsedRealtimeEpochOffsetMs.get -> long
AndroidX.Media3.Common.Timeline.Window.ElapsedRealtimeEpochOffsetMs.set -> void
AndroidX.Media3.Common.Timeline.Window.FirstPeriodIndex.get -> int
AndroidX.Media3.Common.Timeline.Window.FirstPeriodIndex.set -> void
AndroidX.Media3.Common.Timeline.Window.IsDynamic.get -> bool
AndroidX.Media3.Common.Timeline.Window.IsDynamic.set -> void
AndroidX.Media3.Common.Timeline.Window.IsLive.get -> bool
AndroidX.Media3.Common.Timeline.Window.IsPlaceholder.get -> bool
AndroidX.Media3.Common.Timeline.Window.IsPlaceholder.set -> void
AndroidX.Media3.Common.Timeline.Window.IsSeekable.get -> bool
AndroidX.Media3.Common.Timeline.Window.IsSeekable.set -> void
AndroidX.Media3.Common.Timeline.Window.LastPeriodIndex.get -> int
AndroidX.Media3.Common.Timeline.Window.LastPeriodIndex.set -> void
AndroidX.Media3.Common.Timeline.Window.LiveConfiguration.get -> AndroidX.Media3.Common.MediaItem.LiveConfiguration?
AndroidX.Media3.Common.Timeline.Window.LiveConfiguration.set -> void
AndroidX.Media3.Common.Timeline.Window.Manifest.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Window.Manifest.set -> void
AndroidX.Media3.Common.Timeline.Window.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Common.Timeline.Window.MediaItem.set -> void
AndroidX.Media3.Common.Timeline.Window.PositionInFirstPeriodMs.get -> long
AndroidX.Media3.Common.Timeline.Window.PositionInFirstPeriodUs.get -> long
AndroidX.Media3.Common.Timeline.Window.PresentationStartTimeMs.get -> long
AndroidX.Media3.Common.Timeline.Window.PresentationStartTimeMs.set -> void
AndroidX.Media3.Common.Timeline.Window.Set(Java.Lang.Object? uid, AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? manifest, long presentationStartTimeMs, long windowStartTimeMs, long elapsedRealtimeEpochOffsetMs, bool isSeekable, bool isDynamic, AndroidX.Media3.Common.MediaItem.LiveConfiguration? liveConfiguration, long defaultPositionUs, long durationUs, int firstPeriodIndex, int lastPeriodIndex, long positionInFirstPeriodUs) -> AndroidX.Media3.Common.Timeline.Window?
AndroidX.Media3.Common.Timeline.Window.Tag.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Window.Tag.set -> void
AndroidX.Media3.Common.Timeline.Window.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Timeline.Window.Uid.get -> Java.Lang.Object?
AndroidX.Media3.Common.Timeline.Window.Uid.set -> void
AndroidX.Media3.Common.Timeline.Window.Window() -> void
AndroidX.Media3.Common.Timeline.Window.WindowStartTimeMs.get -> long
AndroidX.Media3.Common.Timeline.Window.WindowStartTimeMs.set -> void
AndroidX.Media3.Common.TimelineChangedEventArgs
AndroidX.Media3.Common.TimelineChangedEventArgs.Reason.get -> int
AndroidX.Media3.Common.TimelineChangedEventArgs.Timeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Common.TimelineChangedEventArgs.TimelineChangedEventArgs(AndroidX.Media3.Common.Timeline? timeline, int reason) -> void
AndroidX.Media3.Common.TrackGroup
AndroidX.Media3.Common.TrackGroup.CopyWithId(string? id) -> AndroidX.Media3.Common.TrackGroup?
AndroidX.Media3.Common.TrackGroup.GetFormat(int index) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.TrackGroup.Id.get -> string?
AndroidX.Media3.Common.TrackGroup.Id.set -> void
AndroidX.Media3.Common.TrackGroup.IndexOf(AndroidX.Media3.Common.Format? format) -> int
AndroidX.Media3.Common.TrackGroup.Length.get -> int
AndroidX.Media3.Common.TrackGroup.Length.set -> void
AndroidX.Media3.Common.TrackGroup.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.TrackGroup.TrackGroup(params AndroidX.Media3.Common.Format![]? formats) -> void
AndroidX.Media3.Common.TrackGroup.TrackGroup(string? id, params AndroidX.Media3.Common.Format![]? formats) -> void
AndroidX.Media3.Common.TrackGroup.Type.get -> int
AndroidX.Media3.Common.TrackGroup.Type.set -> void
AndroidX.Media3.Common.TrackSelectionOverride
AndroidX.Media3.Common.TrackSelectionOverride.MediaTrackGroup.get -> AndroidX.Media3.Common.TrackGroup?
AndroidX.Media3.Common.TrackSelectionOverride.MediaTrackGroup.set -> void
AndroidX.Media3.Common.TrackSelectionOverride.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.TrackSelectionOverride.TrackSelectionOverride(AndroidX.Media3.Common.TrackGroup? mediaTrackGroup, System.Collections.Generic.IList<Java.Lang.Integer!>? trackIndices) -> void
AndroidX.Media3.Common.TrackSelectionOverride.TrackSelectionOverride(AndroidX.Media3.Common.TrackGroup? mediaTrackGroup, int trackIndex) -> void
AndroidX.Media3.Common.TrackSelectionOverride.Type.get -> int
AndroidX.Media3.Common.TrackSelectionParameters
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.AudioOffloadMode.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.AudioOffloadMode.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.BuildUpon() -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder?
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.Build() -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences?
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.Builder() -> void
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.SetAudioOffloadMode(int audioOffloadMode) -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder?
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.SetIsGaplessSupportRequired(bool isGaplessSupportRequired) -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder?
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.SetIsSpeedChangeSupportRequired(bool isSpeedChangeSupportRequired) -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder?
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.IAudioOffloadMode
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.IsGaplessSupportRequired.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.IsGaplessSupportRequired.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.IsSpeedChangeSupportRequired.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.IsSpeedChangeSupportRequired.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.TrackSelectionParameters.Builder
AndroidX.Media3.Common.TrackSelectionParameters.Builder.Builder() -> void
AndroidX.Media3.Common.TrackSelectionParameters.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Common.TrackSelectionParameters.Builder.Builder(Android.OS.Bundle? bundle) -> void
AndroidX.Media3.Common.TrackSelectionParameters.Builder.Builder(AndroidX.Media3.Common.TrackSelectionParameters? initialValues) -> void
AndroidX.Media3.Common.TrackSelectionParameters.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.TrackSelectionParameters.ForceHighestSupportedBitrate.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.ForceHighestSupportedBitrate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.ForceLowestBitrate.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.ForceLowestBitrate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.IgnoredTextSelectionFlags.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.IgnoredTextSelectionFlags.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.IsPrioritizeImageOverVideoEnabled.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.IsPrioritizeImageOverVideoEnabled.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.IsViewportSizeLimitedByPhysicalDisplaySize.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.IsViewportSizeLimitedByPhysicalDisplaySize.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxAudioBitrate.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxAudioBitrate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxAudioChannelCount.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxAudioChannelCount.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoBitrate.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoBitrate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoFrameRate.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoFrameRate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoHeight.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoHeight.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoWidth.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MaxVideoWidth.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoBitrate.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoBitrate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoFrameRate.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoFrameRate.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoHeight.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoHeight.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoWidth.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.MinVideoWidth.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.PreferredAudioRoleFlags.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.PreferredAudioRoleFlags.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.PreferredTextRoleFlags.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.PreferredTextRoleFlags.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.PreferredVideoRoleFlags.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.PreferredVideoRoleFlags.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.SelectUndeterminedTextLanguage.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.SelectUndeterminedTextLanguage.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.TrackSelectionParameters(AndroidX.Media3.Common.TrackSelectionParameters.Builder? builder) -> void
AndroidX.Media3.Common.TrackSelectionParameters.TrackSelectionParameters(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.TrackSelectionParameters.UsePreferredTextLanguagesAndRoleFlagsFromCaptioningManager.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.UsePreferredTextLanguagesAndRoleFlagsFromCaptioningManager.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.ViewportHeight.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.ViewportHeight.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.ViewportOrientationMayChange.get -> bool
AndroidX.Media3.Common.TrackSelectionParameters.ViewportOrientationMayChange.set -> void
AndroidX.Media3.Common.TrackSelectionParameters.ViewportWidth.get -> int
AndroidX.Media3.Common.TrackSelectionParameters.ViewportWidth.set -> void
AndroidX.Media3.Common.TrackSelectionParametersChangedEventArgs
AndroidX.Media3.Common.TrackSelectionParametersChangedEventArgs.Parameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
AndroidX.Media3.Common.TrackSelectionParametersChangedEventArgs.TrackSelectionParametersChangedEventArgs(AndroidX.Media3.Common.TrackSelectionParameters? parameters) -> void
AndroidX.Media3.Common.Tracks
AndroidX.Media3.Common.Tracks.ContainsType(int trackType) -> bool
AndroidX.Media3.Common.Tracks.Group
AndroidX.Media3.Common.Tracks.Group.CopyWithId(string? groupId) -> AndroidX.Media3.Common.Tracks.Group?
AndroidX.Media3.Common.Tracks.Group.GetTrackFormat(int trackIndex) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.Common.Tracks.Group.GetTrackSupport(int trackIndex) -> int
AndroidX.Media3.Common.Tracks.Group.Group(AndroidX.Media3.Common.TrackGroup? mediaTrackGroup, bool adaptiveSupported, int[]? trackSupport, bool[]? trackSelected) -> void
AndroidX.Media3.Common.Tracks.Group.InvokeIsSupported(bool allowExceedsCapabilities) -> bool
AndroidX.Media3.Common.Tracks.Group.IsAdaptiveSupported.get -> bool
AndroidX.Media3.Common.Tracks.Group.IsSelected.get -> bool
AndroidX.Media3.Common.Tracks.Group.IsSupported.get -> bool
AndroidX.Media3.Common.Tracks.Group.IsTrackSelected(int trackIndex) -> bool
AndroidX.Media3.Common.Tracks.Group.IsTrackSupported(int trackIndex) -> bool
AndroidX.Media3.Common.Tracks.Group.IsTrackSupported(int trackIndex, bool allowExceedsCapabilities) -> bool
AndroidX.Media3.Common.Tracks.Group.Length.get -> int
AndroidX.Media3.Common.Tracks.Group.Length.set -> void
AndroidX.Media3.Common.Tracks.Group.MediaTrackGroup.get -> AndroidX.Media3.Common.TrackGroup?
AndroidX.Media3.Common.Tracks.Group.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Tracks.Group.Type.get -> int
AndroidX.Media3.Common.Tracks.IsEmpty.get -> bool
AndroidX.Media3.Common.Tracks.IsTypeSelected(int trackType) -> bool
AndroidX.Media3.Common.Tracks.IsTypeSupported(int trackType) -> bool
AndroidX.Media3.Common.Tracks.IsTypeSupported(int trackType, bool allowExceedsCapabilities) -> bool
AndroidX.Media3.Common.Tracks.IsTypeSupportedOrEmpty(int trackType) -> bool
AndroidX.Media3.Common.Tracks.IsTypeSupportedOrEmpty(int trackType, bool allowExceedsCapabilities) -> bool
AndroidX.Media3.Common.Tracks.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.Tracks.Tracks(System.Collections.Generic.IList<AndroidX.Media3.Common.Tracks.Group!>? groups) -> void
AndroidX.Media3.Common.TracksChangedEventArgs
AndroidX.Media3.Common.TracksChangedEventArgs.Tracks.get -> AndroidX.Media3.Common.Tracks?
AndroidX.Media3.Common.TracksChangedEventArgs.TracksChangedEventArgs(AndroidX.Media3.Common.Tracks? tracks) -> void
AndroidX.Media3.Common.Util.Assertions
AndroidX.Media3.Common.Util.AtomicFile
AndroidX.Media3.Common.Util.AtomicFile.AtomicFile(Java.IO.File? baseName) -> void
AndroidX.Media3.Common.Util.AtomicFile.Delete() -> void
AndroidX.Media3.Common.Util.AtomicFile.EndWrite(System.IO.Stream? str) -> void
AndroidX.Media3.Common.Util.AtomicFile.Exists() -> bool
AndroidX.Media3.Common.Util.AtomicFile.OpenRead() -> System.IO.Stream?
AndroidX.Media3.Common.Util.AtomicFile.StartWrite() -> System.IO.Stream?
AndroidX.Media3.Common.Util.BackgroundExecutor
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.BackgroundThreadStateHandler(Java.Lang.Object? initialState, Android.OS.Looper? backgroundLooper, Android.OS.Looper? foregroundLooper, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.IStateChangeListener? onStateChanged) -> void
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.Get() -> Java.Lang.Object?
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.IStateChangeListener
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.IStateChangeListener.OnStateChanged(Java.Lang.Object? p0, Java.Lang.Object? p1) -> void
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.RunInBackground(Java.Lang.IRunnable? runnable) -> void
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.SetStateInBackground(Java.Lang.Object? newState) -> void
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.StateChangeEventArgs
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.StateChangeEventArgs.P0.get -> Java.Lang.Object?
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.StateChangeEventArgs.P1.get -> Java.Lang.Object?
AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.StateChangeEventArgs.StateChangeEventArgs(Java.Lang.Object? p0, Java.Lang.Object? p1) -> void
AndroidX.Media3.Common.Util.BundleCollectionUtil
AndroidX.Media3.Common.Util.CodecSpecificDataUtil
AndroidX.Media3.Common.Util.ColorParser
AndroidX.Media3.Common.Util.ConditionVariable
AndroidX.Media3.Common.Util.ConditionVariable.ConditionVariable() -> void
AndroidX.Media3.Common.Util.ConditionVariable.ConditionVariable(AndroidX.Media3.Common.Util.IClock? clock) -> void
AndroidX.Media3.Common.Util.ConditionVariable.ConditionVariable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.ConstantRateTimestampIterator(long durationUs, float frameRate) -> void
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.ConstantRateTimestampIterator(long startPositionUs, long endPositionUs, float frameRate) -> void
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.CopyOf() -> AndroidX.Media3.Common.Util.ITimestampIterator?
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.HasNext.get -> bool
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.LastTimestampUs.get -> long
AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.Next() -> long
AndroidX.Media3.Common.Util.CopyOnWriteMultiset
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.Add(Java.Lang.Object? element) -> void
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.CopyOnWriteMultiset() -> void
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.Count(Java.Lang.Object? element) -> int
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.ElementSet() -> System.Collections.ICollection?
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.Iterator() -> Java.Util.IIterator?
AndroidX.Media3.Common.Util.CopyOnWriteMultiset.Remove(Java.Lang.Object? element) -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture
AndroidX.Media3.Common.Util.EGLSurfaceTexture.EGLSurfaceTexture(Android.OS.Handler? handler) -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.EGLSurfaceTexture(Android.OS.Handler? handler, AndroidX.Media3.Common.Util.EGLSurfaceTexture.ITextureImageListener? callback) -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.ISecureMode
AndroidX.Media3.Common.Util.EGLSurfaceTexture.ITextureImageListener
AndroidX.Media3.Common.Util.EGLSurfaceTexture.ITextureImageListener.OnFrameAvailable() -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.Init(int secureMode) -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.OnFrameAvailable(Android.Graphics.SurfaceTexture? surfaceTexture) -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.Release() -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.Run() -> void
AndroidX.Media3.Common.Util.EGLSurfaceTexture.SurfaceTexture.get -> Android.Graphics.SurfaceTexture?
AndroidX.Media3.Common.Util.GlProgram
AndroidX.Media3.Common.Util.GlProgram.BindAttributesAndUniforms() -> void
AndroidX.Media3.Common.Util.GlProgram.Delete() -> void
AndroidX.Media3.Common.Util.GlProgram.GetAttributeArrayLocationAndEnable(string? attributeName) -> int
AndroidX.Media3.Common.Util.GlProgram.GetUniformLocation(string? uniformName) -> int
AndroidX.Media3.Common.Util.GlProgram.GlProgram(Android.Content.Context? context, string? vertexShaderFilePath, string? fragmentShaderFilePath) -> void
AndroidX.Media3.Common.Util.GlProgram.GlProgram(string? vertexShaderGlsl, string? fragmentShaderGlsl) -> void
AndroidX.Media3.Common.Util.GlProgram.SetBufferAttribute(string? name, float[]? values, int size) -> void
AndroidX.Media3.Common.Util.GlProgram.SetExternalTexturesRequireNearestSampling(bool externalTexturesRequireNearestSampling) -> void
AndroidX.Media3.Common.Util.GlProgram.SetFloatUniform(string? name, float value) -> void
AndroidX.Media3.Common.Util.GlProgram.SetFloatsUniform(string? name, float[]? value) -> void
AndroidX.Media3.Common.Util.GlProgram.SetFloatsUniformIfPresent(string? name, float[]? value) -> void
AndroidX.Media3.Common.Util.GlProgram.SetIntUniform(string? name, int value) -> void
AndroidX.Media3.Common.Util.GlProgram.SetIntsUniform(string? name, int[]? value) -> void
AndroidX.Media3.Common.Util.GlProgram.SetSamplerTexIdUniform(string? name, int texId, int texUnitIndex) -> void
AndroidX.Media3.Common.Util.GlProgram.SetSamplerTexIdUniform(string? name, int texId, int texUnitIndex, int texMinFilter) -> void
AndroidX.Media3.Common.Util.GlProgram.Use() -> void
AndroidX.Media3.Common.Util.GlRect
AndroidX.Media3.Common.Util.GlRect.Bottom.get -> int
AndroidX.Media3.Common.Util.GlRect.Bottom.set -> void
AndroidX.Media3.Common.Util.GlRect.GlRect(int left, int bottom, int right, int top) -> void
AndroidX.Media3.Common.Util.GlRect.GlRect(int width, int height) -> void
AndroidX.Media3.Common.Util.GlRect.Left.get -> int
AndroidX.Media3.Common.Util.GlRect.Left.set -> void
AndroidX.Media3.Common.Util.GlRect.Right.get -> int
AndroidX.Media3.Common.Util.GlRect.Right.set -> void
AndroidX.Media3.Common.Util.GlRect.Top.get -> int
AndroidX.Media3.Common.Util.GlRect.Top.set -> void
AndroidX.Media3.Common.Util.GlUtil
AndroidX.Media3.Common.Util.GlUtil.GlException
AndroidX.Media3.Common.Util.GlUtil.GlException.GlException(string? message) -> void
AndroidX.Media3.Common.Util.IBitmapLoader
AndroidX.Media3.Common.Util.IBitmapLoader.DecodeBitmap(byte[]? p0) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Common.Util.IBitmapLoader.LoadBitmap(Android.Net.Uri? p0) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Common.Util.IBitmapLoader.LoadBitmapFromMetadata(AndroidX.Media3.Common.MediaMetadata? metadata) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Common.Util.IBitmapLoader.SupportsMimeType(string? p0) -> bool
AndroidX.Media3.Common.Util.IClock
AndroidX.Media3.Common.Util.IClock.CreateHandler(Android.OS.Looper? p0, Android.OS.Handler.ICallback? p1) -> AndroidX.Media3.Common.Util.IHandlerWrapper?
AndroidX.Media3.Common.Util.IClock.CurrentTimeMillis() -> long
AndroidX.Media3.Common.Util.IClock.Default.get -> AndroidX.Media3.Common.Util.IClock?
AndroidX.Media3.Common.Util.IClock.ElapsedRealtime() -> long
AndroidX.Media3.Common.Util.IClock.NanoTime() -> long
AndroidX.Media3.Common.Util.IClock.OnThreadBlocked() -> void
AndroidX.Media3.Common.Util.IClock.UptimeMillis() -> long
AndroidX.Media3.Common.Util.IConsumer
AndroidX.Media3.Common.Util.IConsumer.Accept(Java.Lang.Object? p0) -> void
AndroidX.Media3.Common.Util.IHandlerWrapper
AndroidX.Media3.Common.Util.IHandlerWrapper.HasMessages(int p0) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.Looper.get -> Android.OS.Looper?
AndroidX.Media3.Common.Util.IHandlerWrapper.ObtainMessage(int p0) -> AndroidX.Media3.Common.Util.IHandlerWrapperMessage?
AndroidX.Media3.Common.Util.IHandlerWrapper.ObtainMessage(int p0, Java.Lang.Object? p1) -> AndroidX.Media3.Common.Util.IHandlerWrapperMessage?
AndroidX.Media3.Common.Util.IHandlerWrapper.ObtainMessage(int p0, int p1, int p2) -> AndroidX.Media3.Common.Util.IHandlerWrapperMessage?
AndroidX.Media3.Common.Util.IHandlerWrapper.ObtainMessage(int p0, int p1, int p2, Java.Lang.Object? p3) -> AndroidX.Media3.Common.Util.IHandlerWrapperMessage?
AndroidX.Media3.Common.Util.IHandlerWrapper.Post(Java.Lang.IRunnable? p0) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.PostAtFrontOfQueue(Java.Lang.IRunnable? p0) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.PostDelayed(Java.Lang.IRunnable? p0, long p1) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.RemoveCallbacksAndMessages(Java.Lang.Object? p0) -> void
AndroidX.Media3.Common.Util.IHandlerWrapper.RemoveMessages(int p0) -> void
AndroidX.Media3.Common.Util.IHandlerWrapper.SendEmptyMessage(int p0) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.SendEmptyMessageAtTime(int p0, long p1) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.SendEmptyMessageDelayed(int p0, int p1) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapper.SendMessageAtFrontOfQueue(AndroidX.Media3.Common.Util.IHandlerWrapperMessage? p0) -> bool
AndroidX.Media3.Common.Util.IHandlerWrapperMessage
AndroidX.Media3.Common.Util.IHandlerWrapperMessage.SendToTarget() -> void
AndroidX.Media3.Common.Util.IHandlerWrapperMessage.Target.get -> AndroidX.Media3.Common.Util.IHandlerWrapper?
AndroidX.Media3.Common.Util.INonNullApi
AndroidX.Media3.Common.Util.INullableType
AndroidX.Media3.Common.Util.ITimestampConsumer
AndroidX.Media3.Common.Util.ITimestampConsumer.OnTimestamp(long p0) -> void
AndroidX.Media3.Common.Util.ITimestampIterator
AndroidX.Media3.Common.Util.ITimestampIterator.CopyOf() -> AndroidX.Media3.Common.Util.ITimestampIterator?
AndroidX.Media3.Common.Util.ITimestampIterator.HasNext.get -> bool
AndroidX.Media3.Common.Util.ITimestampIterator.LastTimestampUs.get -> long
AndroidX.Media3.Common.Util.ITimestampIterator.Next() -> long
AndroidX.Media3.Common.Util.IUnknownNull
AndroidX.Media3.Common.Util.IUnstableApi
AndroidX.Media3.Common.Util.LibraryLoader
AndroidX.Media3.Common.Util.LibraryLoader.LibraryLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Util.LibraryLoader.LibraryLoader(params string![]? libraries) -> void
AndroidX.Media3.Common.Util.ListenerSet
AndroidX.Media3.Common.Util.ListenerSet.Add(Java.Lang.Object? listener) -> void
AndroidX.Media3.Common.Util.ListenerSet.Clear() -> void
AndroidX.Media3.Common.Util.ListenerSet.Copy(Android.OS.Looper? looper, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.Common.Util.ListenerSet.IIterationFinishedEvent? iterationFinishedEvent) -> AndroidX.Media3.Common.Util.ListenerSet?
AndroidX.Media3.Common.Util.ListenerSet.Copy(Android.OS.Looper? looper, AndroidX.Media3.Common.Util.ListenerSet.IIterationFinishedEvent? iterationFinishedEvent) -> AndroidX.Media3.Common.Util.ListenerSet?
AndroidX.Media3.Common.Util.ListenerSet.FlushEvents() -> void
AndroidX.Media3.Common.Util.ListenerSet.IEvent
AndroidX.Media3.Common.Util.ListenerSet.IEvent.Invoke(Java.Lang.Object? p0) -> void
AndroidX.Media3.Common.Util.ListenerSet.IIterationFinishedEvent
AndroidX.Media3.Common.Util.ListenerSet.IIterationFinishedEvent.Invoke(Java.Lang.Object? p0, AndroidX.Media3.Common.FlagSet? p1) -> void
AndroidX.Media3.Common.Util.ListenerSet.ListenerSet(Android.OS.Looper? looper, AndroidX.Media3.Common.Util.IClock? clock, AndroidX.Media3.Common.Util.ListenerSet.IIterationFinishedEvent? iterationFinishedEvent) -> void
AndroidX.Media3.Common.Util.ListenerSet.QueueEvent(int eventFlag, AndroidX.Media3.Common.Util.ListenerSet.IEvent? e) -> void
AndroidX.Media3.Common.Util.ListenerSet.Release() -> void
AndroidX.Media3.Common.Util.ListenerSet.Remove(Java.Lang.Object? listener) -> void
AndroidX.Media3.Common.Util.ListenerSet.SendEvent(int eventFlag, AndroidX.Media3.Common.Util.ListenerSet.IEvent? e) -> void
AndroidX.Media3.Common.Util.ListenerSet.SetThrowsWhenUsingWrongThread(bool throwsWhenUsingWrongThread) -> void
AndroidX.Media3.Common.Util.ListenerSet.Size() -> int
AndroidX.Media3.Common.Util.Log
AndroidX.Media3.Common.Util.Log.ILogLevel
AndroidX.Media3.Common.Util.Log.ILogger
AndroidX.Media3.Common.Util.Log.ILogger.D(string? p0, string? p1, Java.Lang.Throwable? p2) -> void
AndroidX.Media3.Common.Util.Log.ILogger.Default.get -> AndroidX.Media3.Common.Util.Log.ILogger?
AndroidX.Media3.Common.Util.Log.ILogger.E(string? p0, string? p1, Java.Lang.Throwable? p2) -> void
AndroidX.Media3.Common.Util.Log.ILogger.I(string? p0, string? p1, Java.Lang.Throwable? p2) -> void
AndroidX.Media3.Common.Util.Log.ILogger.W(string? p0, string? p1, Java.Lang.Throwable? p2) -> void
AndroidX.Media3.Common.Util.LongArray
AndroidX.Media3.Common.Util.LongArray.Add(long value) -> void
AndroidX.Media3.Common.Util.LongArray.AddAll(long[]? values) -> void
AndroidX.Media3.Common.Util.LongArray.Get(int index) -> long
AndroidX.Media3.Common.Util.LongArray.LongArray() -> void
AndroidX.Media3.Common.Util.LongArray.LongArray(int initialCapacity) -> void
AndroidX.Media3.Common.Util.LongArray.Size() -> int
AndroidX.Media3.Common.Util.LongArray.ToArray() -> long[]?
AndroidX.Media3.Common.Util.LongArrayQueue
AndroidX.Media3.Common.Util.LongArrayQueue.Add(long value) -> void
AndroidX.Media3.Common.Util.LongArrayQueue.Clear() -> void
AndroidX.Media3.Common.Util.LongArrayQueue.Element() -> long
AndroidX.Media3.Common.Util.LongArrayQueue.IsEmpty.get -> bool
AndroidX.Media3.Common.Util.LongArrayQueue.LongArrayQueue() -> void
AndroidX.Media3.Common.Util.LongArrayQueue.LongArrayQueue(int minCapacity) -> void
AndroidX.Media3.Common.Util.LongArrayQueue.Remove() -> long
AndroidX.Media3.Common.Util.LongArrayQueue.Size() -> int
AndroidX.Media3.Common.Util.MediaFormatUtil
AndroidX.Media3.Common.Util.NetworkTypeObserver
AndroidX.Media3.Common.Util.NetworkTypeObserver.EventArgs
AndroidX.Media3.Common.Util.NetworkTypeObserver.EventArgs.EventArgs(int p0) -> void
AndroidX.Media3.Common.Util.NetworkTypeObserver.EventArgs.P0.get -> int
AndroidX.Media3.Common.Util.NetworkTypeObserver.IListener
AndroidX.Media3.Common.Util.NetworkTypeObserver.IListener.OnNetworkTypeChanged(int p0) -> void
AndroidX.Media3.Common.Util.NetworkTypeObserver.NetworkType.get -> int
AndroidX.Media3.Common.Util.NetworkTypeObserver.Register(AndroidX.Media3.Common.Util.NetworkTypeObserver.IListener? listener) -> void
AndroidX.Media3.Common.Util.NetworkTypeObserver.Register(AndroidX.Media3.Common.Util.NetworkTypeObserver.IListener? listener, Java.Util.Concurrent.IExecutor? executor) -> void
AndroidX.Media3.Common.Util.NonNullApiAttribute
AndroidX.Media3.Common.Util.NonNullApiAttribute.NonNullApiAttribute() -> void
AndroidX.Media3.Common.Util.NotificationUtil
AndroidX.Media3.Common.Util.NotificationUtil.IImportance
AndroidX.Media3.Common.Util.NullableTypeAttribute
AndroidX.Media3.Common.Util.NullableTypeAttribute.NullableTypeAttribute() -> void
AndroidX.Media3.Common.Util.ParsableBitArray
AndroidX.Media3.Common.Util.ParsableBitArray.BitsLeft() -> int
AndroidX.Media3.Common.Util.ParsableBitArray.ByteAlign() -> void
AndroidX.Media3.Common.Util.ParsableBitArray.BytePosition.get -> int
AndroidX.Media3.Common.Util.ParsableBitArray.Data.get -> System.Collections.Generic.IList<byte>?
AndroidX.Media3.Common.Util.ParsableBitArray.Data.set -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ParsableBitArray() -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ParsableBitArray(byte[]? data) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ParsableBitArray(byte[]? data, int limit) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.Position.get -> int
AndroidX.Media3.Common.Util.ParsableBitArray.Position.set -> void
AndroidX.Media3.Common.Util.ParsableBitArray.PutInt(int value, int numBits) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBit() -> bool
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBits(byte[]? buffer, int offset, int numBits) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBits(int numBits) -> int
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBitsToLong(int numBits) -> long
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBytes(byte[]? buffer, int offset, int length) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBytesAsString(int length) -> string?
AndroidX.Media3.Common.Util.ParsableBitArray.ReadBytesAsString(int length, Java.Nio.Charset.Charset? charset) -> string?
AndroidX.Media3.Common.Util.ParsableBitArray.Reset(AndroidX.Media3.Common.Util.ParsableByteArray? parsableByteArray) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.Reset(byte[]? data) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.Reset(byte[]? data, int limit) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.SkipBit() -> void
AndroidX.Media3.Common.Util.ParsableBitArray.SkipBits(int numBits) -> void
AndroidX.Media3.Common.Util.ParsableBitArray.SkipBytes(int length) -> void
AndroidX.Media3.Common.Util.ParsableByteArray
AndroidX.Media3.Common.Util.ParsableByteArray.BytesLeft() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.Capacity() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.EnsureCapacity(int requiredCapacity) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.GetData() -> byte[]?
AndroidX.Media3.Common.Util.ParsableByteArray.Limit() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ParsableByteArray() -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ParsableByteArray(byte[]? data) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ParsableByteArray(byte[]? data, int limit) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ParsableByteArray(int limit) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.PeekChar() -> char
AndroidX.Media3.Common.Util.ParsableByteArray.PeekChar(Java.Nio.Charset.Charset? charset) -> char
AndroidX.Media3.Common.Util.ParsableByteArray.PeekUnsignedByte() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.Position.get -> int
AndroidX.Media3.Common.Util.ParsableByteArray.Position.set -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ReadBytes(AndroidX.Media3.Common.Util.ParsableBitArray? bitArray, int length) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ReadBytes(Java.Nio.ByteBuffer? buffer, int length) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ReadBytes(byte[]? buffer, int offset, int length) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.ReadDelimiterTerminatedString(char delimiter) -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadDouble() -> double
AndroidX.Media3.Common.Util.ParsableByteArray.ReadFloat() -> float
AndroidX.Media3.Common.Util.ParsableByteArray.ReadInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadInt24() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLine() -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLine(Java.Nio.Charset.Charset? charset) -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianInt24() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianLong() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianShort() -> short
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianUnsignedInt() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianUnsignedInt24() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianUnsignedIntToInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLittleEndianUnsignedShort() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadLong() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadNullTerminatedString() -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadNullTerminatedString(int length) -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadShort() -> short
AndroidX.Media3.Common.Util.ParsableByteArray.ReadString(int length) -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadString(int length, Java.Nio.Charset.Charset? charset) -> string?
AndroidX.Media3.Common.Util.ParsableByteArray.ReadSynchSafeInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedByte() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedFixedPoint1616() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedInt() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedInt24() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedIntToInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedLeb128ToInt() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedLeb128ToLong() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedLongToLong() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUnsignedShort() -> int
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUtf8EncodedLong() -> long
AndroidX.Media3.Common.Util.ParsableByteArray.ReadUtfCharsetFromBom() -> Java.Nio.Charset.Charset?
AndroidX.Media3.Common.Util.ParsableByteArray.Reset(byte[]? data) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.Reset(byte[]? data, int limit) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.Reset(int limit) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.SetLimit(int limit) -> void
AndroidX.Media3.Common.Util.ParsableByteArray.SkipBytes(int bytes) -> void
AndroidX.Media3.Common.Util.RepeatModeUtil
AndroidX.Media3.Common.Util.RepeatModeUtil.IRepeatToggleModes
AndroidX.Media3.Common.Util.RunnableFutureTask
AndroidX.Media3.Common.Util.RunnableFutureTask.BlockUntilFinished() -> void
AndroidX.Media3.Common.Util.RunnableFutureTask.BlockUntilStarted() -> void
AndroidX.Media3.Common.Util.RunnableFutureTask.Cancel(bool interruptIfRunning) -> bool
AndroidX.Media3.Common.Util.RunnableFutureTask.Get() -> Java.Lang.Object?
AndroidX.Media3.Common.Util.RunnableFutureTask.Get(long timeout, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
AndroidX.Media3.Common.Util.RunnableFutureTask.IsCancelled.get -> bool
AndroidX.Media3.Common.Util.RunnableFutureTask.IsDone.get -> bool
AndroidX.Media3.Common.Util.RunnableFutureTask.Run() -> void
AndroidX.Media3.Common.Util.RunnableFutureTask.RunnableFutureTask() -> void
AndroidX.Media3.Common.Util.RunnableFutureTask.RunnableFutureTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Util.Size
AndroidX.Media3.Common.Util.Size.Height.get -> int
AndroidX.Media3.Common.Util.Size.Size(int width, int height) -> void
AndroidX.Media3.Common.Util.Size.Width.get -> int
AndroidX.Media3.Common.Util.SpeedProviderUtil
AndroidX.Media3.Common.Util.SpeedProviderUtil.SpeedProviderUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Util.SystemClock
AndroidX.Media3.Common.Util.SystemClock.InterfaceConsts
AndroidX.Media3.Common.Util.SystemClock.SystemClock() -> void
AndroidX.Media3.Common.Util.SystemClock.SystemClock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Common.Util.TimedValueQueue
AndroidX.Media3.Common.Util.TimedValueQueue.Add(long timestamp, Java.Lang.Object? value) -> void
AndroidX.Media3.Common.Util.TimedValueQueue.Clear() -> void
AndroidX.Media3.Common.Util.TimedValueQueue.Poll(long timestamp) -> Java.Lang.Object?
AndroidX.Media3.Common.Util.TimedValueQueue.PollFirst() -> Java.Lang.Object?
AndroidX.Media3.Common.Util.TimedValueQueue.PollFloor(long timestamp) -> Java.Lang.Object?
AndroidX.Media3.Common.Util.TimedValueQueue.Size() -> int
AndroidX.Media3.Common.Util.TimedValueQueue.TimedValueQueue() -> void
AndroidX.Media3.Common.Util.TimedValueQueue.TimedValueQueue(int initialBufferSize) -> void
AndroidX.Media3.Common.Util.TimestampAdjuster
AndroidX.Media3.Common.Util.TimestampAdjuster.AdjustSampleTimestamp(long timeUs) -> long
AndroidX.Media3.Common.Util.TimestampAdjuster.AdjustTsTimestamp(long pts90Khz) -> long
AndroidX.Media3.Common.Util.TimestampAdjuster.AdjustTsTimestampGreaterThanPreviousTimestamp(long pts90Khz) -> long
AndroidX.Media3.Common.Util.TimestampAdjuster.FirstSampleTimestampUs.get -> long
AndroidX.Media3.Common.Util.TimestampAdjuster.IsInitialized.get -> bool
AndroidX.Media3.Common.Util.TimestampAdjuster.LastAdjustedTimestampUs.get -> long
AndroidX.Media3.Common.Util.TimestampAdjuster.Reset(long firstSampleTimestampUs) -> void
AndroidX.Media3.Common.Util.TimestampAdjuster.SharedInitializeOrWait(bool canInitialize, long nextSampleTimestampUs, long timeoutMs) -> void
AndroidX.Media3.Common.Util.TimestampAdjuster.TimestampAdjuster(long firstSampleTimestampUs) -> void
AndroidX.Media3.Common.Util.TimestampAdjuster.TimestampOffsetUs.get -> long
AndroidX.Media3.Common.Util.TraceUtil
AndroidX.Media3.Common.Util.UnknownNullAttribute
AndroidX.Media3.Common.Util.UnknownNullAttribute.UnknownNullAttribute() -> void
AndroidX.Media3.Common.Util.UnstableApiAttribute
AndroidX.Media3.Common.Util.UnstableApiAttribute.UnstableApiAttribute() -> void
AndroidX.Media3.Common.Util.UriUtil
AndroidX.Media3.Common.Util.Util
AndroidX.Media3.Common.Util.XmlPullParserUtil
AndroidX.Media3.Common.VideoFrameProcessingException
AndroidX.Media3.Common.VideoFrameProcessingException.PresentationTimeUs.get -> long
AndroidX.Media3.Common.VideoFrameProcessingException.PresentationTimeUs.set -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(Java.Lang.Throwable? cause) -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(Java.Lang.Throwable? cause, long presentationTimeUs) -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(string? message) -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(string? message, Java.Lang.Throwable? cause) -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(string? message, Java.Lang.Throwable? cause, long presentationTimeUs) -> void
AndroidX.Media3.Common.VideoFrameProcessingException.VideoFrameProcessingException(string? message, long presentationTimeUs) -> void
AndroidX.Media3.Common.VideoGraphListenerErrorEventArgs
AndroidX.Media3.Common.VideoGraphListenerErrorEventArgs.Exc.get -> AndroidX.Media3.Common.VideoFrameProcessingException?
AndroidX.Media3.Common.VideoGraphListenerErrorEventArgs.VideoGraphListenerErrorEventArgs(AndroidX.Media3.Common.VideoFrameProcessingException? exc) -> void
AndroidX.Media3.Common.VideoGraphListenerOutputFrameAvailableForRenderingEventArgs
AndroidX.Media3.Common.VideoGraphListenerOutputFrameAvailableForRenderingEventArgs.Frame.get -> long
AndroidX.Media3.Common.VideoGraphListenerOutputFrameAvailableForRenderingEventArgs.VideoGraphListenerOutputFrameAvailableForRenderingEventArgs(long frame) -> void
AndroidX.Media3.Common.VideoGraphListenerOutputSizeChangedEventArgs
AndroidX.Media3.Common.VideoGraphListenerOutputSizeChangedEventArgs.Size1.get -> int
AndroidX.Media3.Common.VideoGraphListenerOutputSizeChangedEventArgs.Size2.get -> int
AndroidX.Media3.Common.VideoGraphListenerOutputSizeChangedEventArgs.VideoGraphListenerOutputSizeChangedEventArgs(int size1, int size2) -> void
AndroidX.Media3.Common.VideoSize
AndroidX.Media3.Common.VideoSize.Height.get -> int
AndroidX.Media3.Common.VideoSize.Height.set -> void
AndroidX.Media3.Common.VideoSize.PixelWidthHeightRatio.get -> float
AndroidX.Media3.Common.VideoSize.PixelWidthHeightRatio.set -> void
AndroidX.Media3.Common.VideoSize.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Common.VideoSize.UnappliedRotationDegrees.get -> int
AndroidX.Media3.Common.VideoSize.UnappliedRotationDegrees.set -> void
AndroidX.Media3.Common.VideoSize.VideoSize(int width, int height) -> void
AndroidX.Media3.Common.VideoSize.VideoSize(int width, int height, float pixelWidthHeightRatio) -> void
AndroidX.Media3.Common.VideoSize.VideoSize(int width, int height, int unappliedRotationDegrees, float pixelWidthHeightRatio) -> void
AndroidX.Media3.Common.VideoSize.Width.get -> int
AndroidX.Media3.Common.VideoSize.Width.set -> void
AndroidX.Media3.Common.VideoSizeChangedEventArgs
AndroidX.Media3.Common.VideoSizeChangedEventArgs.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
AndroidX.Media3.Common.VideoSizeChangedEventArgs.VideoSizeChangedEventArgs(AndroidX.Media3.Common.VideoSize? videoSize) -> void
AndroidX.Media3.Common.VolumeChangedEventArgs
AndroidX.Media3.Common.VolumeChangedEventArgs.Volume.get -> float
AndroidX.Media3.Common.VolumeChangedEventArgs.VolumeChangedEventArgs(float volume) -> void
abstract AndroidX.Media3.Common.Audio.BaseAudioProcessor.QueueInput(Java.Nio.ByteBuffer? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.AddListener(AndroidX.Media3.Common.IPlayerListener? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.AddMediaItems(int p0, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.ApplicationLooper.get -> Android.OS.Looper?
abstract AndroidX.Media3.Common.BasePlayer.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
abstract AndroidX.Media3.Common.BasePlayer.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
abstract AndroidX.Media3.Common.BasePlayer.BufferedPosition.get -> long
abstract AndroidX.Media3.Common.BasePlayer.ClearVideoSurface() -> void
abstract AndroidX.Media3.Common.BasePlayer.ClearVideoSurface(Android.Views.Surface? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.ClearVideoSurfaceView(Android.Views.SurfaceView? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.ClearVideoTextureView(Android.Views.TextureView? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.ContentBufferedPosition.get -> long
abstract AndroidX.Media3.Common.BasePlayer.ContentPosition.get -> long
abstract AndroidX.Media3.Common.BasePlayer.CurrentAdGroupIndex.get -> int
abstract AndroidX.Media3.Common.BasePlayer.CurrentAdIndexInAdGroup.get -> int
abstract AndroidX.Media3.Common.BasePlayer.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
abstract AndroidX.Media3.Common.BasePlayer.CurrentMediaItemIndex.get -> int
abstract AndroidX.Media3.Common.BasePlayer.CurrentPeriodIndex.get -> int
abstract AndroidX.Media3.Common.BasePlayer.CurrentPosition.get -> long
abstract AndroidX.Media3.Common.BasePlayer.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
abstract AndroidX.Media3.Common.BasePlayer.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
abstract AndroidX.Media3.Common.BasePlayer.DecreaseDeviceVolume() -> void
abstract AndroidX.Media3.Common.BasePlayer.DecreaseDeviceVolume(int p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
abstract AndroidX.Media3.Common.BasePlayer.DeviceMuted.get -> bool
abstract AndroidX.Media3.Common.BasePlayer.DeviceMuted.set -> void
abstract AndroidX.Media3.Common.BasePlayer.DeviceVolume.get -> int
abstract AndroidX.Media3.Common.BasePlayer.DeviceVolume.set -> void
abstract AndroidX.Media3.Common.BasePlayer.Duration.get -> long
abstract AndroidX.Media3.Common.BasePlayer.IncreaseDeviceVolume() -> void
abstract AndroidX.Media3.Common.BasePlayer.IncreaseDeviceVolume(int p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.IsLoading.get -> bool
abstract AndroidX.Media3.Common.BasePlayer.IsPlayingAd.get -> bool
abstract AndroidX.Media3.Common.BasePlayer.MaxSeekToPreviousPosition.get -> long
abstract AndroidX.Media3.Common.BasePlayer.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
abstract AndroidX.Media3.Common.BasePlayer.MoveMediaItems(int p0, int p1, int p2) -> void
abstract AndroidX.Media3.Common.BasePlayer.PlayWhenReady.get -> bool
abstract AndroidX.Media3.Common.BasePlayer.PlayWhenReady.set -> void
abstract AndroidX.Media3.Common.BasePlayer.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
abstract AndroidX.Media3.Common.BasePlayer.PlaybackParameters.set -> void
abstract AndroidX.Media3.Common.BasePlayer.PlaybackState.get -> int
abstract AndroidX.Media3.Common.BasePlayer.PlaybackSuppressionReason.get -> int
abstract AndroidX.Media3.Common.BasePlayer.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
abstract AndroidX.Media3.Common.BasePlayer.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
abstract AndroidX.Media3.Common.BasePlayer.PlaylistMetadata.set -> void
abstract AndroidX.Media3.Common.BasePlayer.Prepare() -> void
abstract AndroidX.Media3.Common.BasePlayer.Release() -> void
abstract AndroidX.Media3.Common.BasePlayer.RemoveListener(AndroidX.Media3.Common.IPlayerListener? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.RemoveMediaItems(int p0, int p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.RepeatMode.get -> int
abstract AndroidX.Media3.Common.BasePlayer.RepeatMode.set -> void
abstract AndroidX.Media3.Common.BasePlayer.ReplaceMediaItems(int p0, int p1, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p2) -> void
abstract AndroidX.Media3.Common.BasePlayer.SeekBackIncrement.get -> long
abstract AndroidX.Media3.Common.BasePlayer.SeekForwardIncrement.get -> long
abstract AndroidX.Media3.Common.BasePlayer.SeekTo(int p0, long p1, int p2, bool p3) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? p0, bool p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetDeviceMuted(bool p0, int p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetDeviceVolume(int p0, int p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0, bool p1) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? p0, int p1, long p2) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetVideoSurface(Android.Views.Surface? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetVideoSurfaceView(Android.Views.SurfaceView? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.SetVideoTextureView(Android.Views.TextureView? p0) -> void
abstract AndroidX.Media3.Common.BasePlayer.ShuffleModeEnabled.get -> bool
abstract AndroidX.Media3.Common.BasePlayer.ShuffleModeEnabled.set -> void
abstract AndroidX.Media3.Common.BasePlayer.Stop() -> void
abstract AndroidX.Media3.Common.BasePlayer.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
abstract AndroidX.Media3.Common.BasePlayer.TotalBufferedDuration.get -> long
abstract AndroidX.Media3.Common.BasePlayer.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
abstract AndroidX.Media3.Common.BasePlayer.TrackSelectionParameters.set -> void
abstract AndroidX.Media3.Common.BasePlayer.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
abstract AndroidX.Media3.Common.BasePlayer.Volume.get -> float
abstract AndroidX.Media3.Common.BasePlayer.Volume.set -> void
abstract AndroidX.Media3.Common.Rating.IsRated.get -> bool
abstract AndroidX.Media3.Common.Rating.ToBundle() -> Android.OS.Bundle?
abstract AndroidX.Media3.Common.SimpleBasePlayer.GetState() -> AndroidX.Media3.Common.SimpleBasePlayer.State?
abstract AndroidX.Media3.Common.Timeline.GetIndexOfPeriod(Java.Lang.Object? p0) -> int
abstract AndroidX.Media3.Common.Timeline.GetPeriod(int p0, AndroidX.Media3.Common.Timeline.Period? p1, bool p2) -> AndroidX.Media3.Common.Timeline.Period?
abstract AndroidX.Media3.Common.Timeline.GetUidOfPeriod(int p0) -> Java.Lang.Object?
abstract AndroidX.Media3.Common.Timeline.GetWindow(int p0, AndroidX.Media3.Common.Timeline.Window? p1, long p2) -> AndroidX.Media3.Common.Timeline.Window?
abstract AndroidX.Media3.Common.Timeline.PeriodCount.get -> int
abstract AndroidX.Media3.Common.Timeline.WindowCount.get -> int
abstract AndroidX.Media3.Common.Util.LibraryLoader.LoadLibrary(string? p0) -> void
abstract AndroidX.Media3.Common.Util.RunnableFutureTask.DoWork() -> Java.Lang.Object?
const AndroidX.Media3.Common.AdOverlayInfo.PurposeCloseAd = 2 -> int
const AndroidX.Media3.Common.AdOverlayInfo.PurposeControls = 1 -> int
const AndroidX.Media3.Common.AdOverlayInfo.PurposeNotVisible = 4 -> int
const AndroidX.Media3.Common.AdOverlayInfo.PurposeOther = 3 -> int
const AndroidX.Media3.Common.AdPlaybackState.AdStateAvailable = 1 -> int
const AndroidX.Media3.Common.AdPlaybackState.AdStateError = 4 -> int
const AndroidX.Media3.Common.AdPlaybackState.AdStatePlayed = 3 -> int
const AndroidX.Media3.Common.AdPlaybackState.AdStateSkipped = 2 -> int
const AndroidX.Media3.Common.AdPlaybackState.AdStateUnavailable = 0 -> int
const AndroidX.Media3.Common.Audio.AudioManagerCompat.AudiofocusGain = 1 -> int
const AndroidX.Media3.Common.Audio.AudioManagerCompat.AudiofocusGainTransient = 2 -> int
const AndroidX.Media3.Common.Audio.AudioManagerCompat.AudiofocusGainTransientExclusive = 4 -> int
const AndroidX.Media3.Common.Audio.AudioManagerCompat.AudiofocusGainTransientMayDuck = 3 -> int
const AndroidX.Media3.Common.Audio.AudioManagerCompat.AudiofocusNone = 0 -> int
const AndroidX.Media3.Common.Audio.SonicAudioProcessor.SampleRateNoChange = -1 -> int
const AndroidX.Media3.Common.AuxEffectInfo.NoAuxEffectId = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandAdjustDeviceVolume = 26 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandAdjustDeviceVolumeWithFlags = 34 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandChangeMediaItems = 20 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetAudioAttributes = 21 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetCurrentMediaItem = 16 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetDeviceVolume = 23 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetMediaItemsMetadata = 18 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetMetadata = 18 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetText = 28 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetTimeline = 17 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetTracks = 30 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandGetVolume = 22 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandInvalid = -1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandPlayPause = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandPrepare = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandRelease = 32 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekBack = 11 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekForward = 12 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekInCurrentMediaItem = 5 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekInCurrentWindow = 5 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToDefaultPosition = 4 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToMediaItem = 10 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToNext = 9 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToNextMediaItem = 8 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToNextWindow = 8 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToPrevious = 7 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToPreviousMediaItem = 6 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToPreviousWindow = 6 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSeekToWindow = 10 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetAudioAttributes = 35 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetDeviceVolume = 25 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetDeviceVolumeWithFlags = 33 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetMediaItem = 31 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetMediaItemsMetadata = 19 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetPlaylistMetadata = 19 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetRepeatMode = 15 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetShuffleMode = 14 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetSpeedAndPitch = 13 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetTrackSelectionParameters = 29 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetVideoSurface = 27 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandSetVolume = 24 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.CommandStop = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonAutoTransition = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonInternal = 5 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonRemove = 4 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonSeek = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonSeekAdjustment = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonSilenceSkip = 6 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.DiscontinuityReasonSkip = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventAudioAttributesChanged = 20 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventAudioSessionId = 21 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventAvailableCommandsChanged = 13 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventCues = 27 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventDeviceInfoChanged = 29 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventDeviceVolumeChanged = 30 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventIsLoadingChanged = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventIsPlayingChanged = 7 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventMaxSeekToPreviousPositionChanged = 18 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventMediaItemTransition = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventMediaMetadataChanged = 14 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventMetadata = 28 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlayWhenReadyChanged = 5 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlaybackParametersChanged = 12 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlaybackStateChanged = 4 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlaybackSuppressionReasonChanged = 6 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlayerError = 10 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPlaylistMetadataChanged = 15 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventPositionDiscontinuity = 11 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventRenderedFirstFrame = 26 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventRepeatModeChanged = 8 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventSeekBackIncrementChanged = 16 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventSeekForwardIncrementChanged = 17 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventShuffleModeEnabledChanged = 9 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventSkipSilenceEnabledChanged = 23 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventSurfaceSizeChanged = 24 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventTimelineChanged = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventTrackSelectionParametersChanged = 19 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventTracksChanged = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventVideoSizeChanged = 25 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.EventVolumeChanged = 22 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.MediaItemTransitionReasonAuto = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.MediaItemTransitionReasonPlaylistChanged = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.MediaItemTransitionReasonRepeat = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.MediaItemTransitionReasonSeek = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioBecomingNoisy = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioFocusLoss = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonEndOfMediaItem = 5 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonRemote = 4 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonSuppressedTooLong = 6 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonUserRequest = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonNone = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonTransientAudioFocusLoss = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonUnsuitableAudioOutput = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonUnsuitableAudioRoute = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.RepeatModeAll = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.RepeatModeOff = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.RepeatModeOne = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.StateBuffering = 2 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.StateEnded = 4 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.StateIdle = 1 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.StateReady = 3 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.TimelineChangeReasonPlaylistChanged = 0 -> int
const AndroidX.Media3.Common.BasePlayer.InterfaceConsts.TimelineChangeReasonSourceUpdate = 1 -> int
const AndroidX.Media3.Common.C.AllowCaptureByAll = 1 -> int
const AndroidX.Media3.Common.C.AllowCaptureByNone = 3 -> int
const AndroidX.Media3.Common.C.AllowCaptureBySystem = 2 -> int
const AndroidX.Media3.Common.C.AudioContentTypeMovie = 3 -> int
const AndroidX.Media3.Common.C.AudioContentTypeMusic = 2 -> int
const AndroidX.Media3.Common.C.AudioContentTypeSonification = 4 -> int
const AndroidX.Media3.Common.C.AudioContentTypeSpeech = 1 -> int
const AndroidX.Media3.Common.C.AudioContentTypeUnknown = 0 -> int
const AndroidX.Media3.Common.C.AudioSessionIdUnset = 0 -> int
const AndroidX.Media3.Common.C.AuxiliaryTrackTypeDepthInverse = 3 -> int
const AndroidX.Media3.Common.C.AuxiliaryTrackTypeDepthLinear = 2 -> int
const AndroidX.Media3.Common.C.AuxiliaryTrackTypeDepthMetadata = 4 -> int
const AndroidX.Media3.Common.C.AuxiliaryTrackTypeOriginal = 1 -> int
const AndroidX.Media3.Common.C.AuxiliaryTrackTypeUndefined = 0 -> int
const AndroidX.Media3.Common.C.BitsPerByte = 8 -> int
const AndroidX.Media3.Common.C.BufferFlagEncrypted = 1073741824 -> int
const AndroidX.Media3.Common.C.BufferFlagEndOfStream = 4 -> int
const AndroidX.Media3.Common.C.BufferFlagFirstSample = 134217728 -> int
const AndroidX.Media3.Common.C.BufferFlagHasSupplementalData = 268435456 -> int
const AndroidX.Media3.Common.C.BufferFlagKeyFrame = 1 -> int
const AndroidX.Media3.Common.C.BufferFlagLastSample = 536870912 -> int
const AndroidX.Media3.Common.C.BufferFlagNotDependedOn = 67108864 -> int
const AndroidX.Media3.Common.C.BytesPerFloat = 4 -> int
const AndroidX.Media3.Common.C.CENCTYPECbc1 = "cbc1" -> string!
const AndroidX.Media3.Common.C.CENCTYPECbcs = "cbcs" -> string!
const AndroidX.Media3.Common.C.CENCTYPECenc = "cenc" -> string!
const AndroidX.Media3.Common.C.CENCTYPECens = "cens" -> string!
const AndroidX.Media3.Common.C.ColorRangeFull = 1 -> int
const AndroidX.Media3.Common.C.ColorRangeLimited = 2 -> int
const AndroidX.Media3.Common.C.ColorSpaceBt2020 = 6 -> int
const AndroidX.Media3.Common.C.ColorSpaceBt601 = 2 -> int
const AndroidX.Media3.Common.C.ColorSpaceBt709 = 1 -> int
const AndroidX.Media3.Common.C.ColorTransferGamma22 = 10 -> int
const AndroidX.Media3.Common.C.ColorTransferHlg = 7 -> int
const AndroidX.Media3.Common.C.ColorTransferLinear = 1 -> int
const AndroidX.Media3.Common.C.ColorTransferSdr = 3 -> int
const AndroidX.Media3.Common.C.ColorTransferSrgb = 2 -> int
const AndroidX.Media3.Common.C.ColorTransferSt2084 = 6 -> int
const AndroidX.Media3.Common.C.ContentTypeDash = 0 -> int
const AndroidX.Media3.Common.C.ContentTypeHls = 2 -> int
const AndroidX.Media3.Common.C.ContentTypeMovie = 3 -> int
const AndroidX.Media3.Common.C.ContentTypeMusic = 2 -> int
const AndroidX.Media3.Common.C.ContentTypeOther = 4 -> int
const AndroidX.Media3.Common.C.ContentTypeRtsp = 3 -> int
const AndroidX.Media3.Common.C.ContentTypeSonification = 4 -> int
const AndroidX.Media3.Common.C.ContentTypeSpeech = 1 -> int
const AndroidX.Media3.Common.C.ContentTypeSs = 1 -> int
const AndroidX.Media3.Common.C.ContentTypeUnknown = 0 -> int
const AndroidX.Media3.Common.C.CryptoModeAesCbc = 2 -> int
const AndroidX.Media3.Common.C.CryptoModeAesCtr = 1 -> int
const AndroidX.Media3.Common.C.CryptoModeUnencrypted = 0 -> int
const AndroidX.Media3.Common.C.CryptoTypeCustomBase = 10000 -> int
const AndroidX.Media3.Common.C.CryptoTypeFramework = 2 -> int
const AndroidX.Media3.Common.C.CryptoTypeNone = 0 -> int
const AndroidX.Media3.Common.C.CryptoTypeUnsupported = 1 -> int
const AndroidX.Media3.Common.C.DataTypeAd = 6 -> int
const AndroidX.Media3.Common.C.DataTypeCustomBase = 10000 -> int
const AndroidX.Media3.Common.C.DataTypeDrm = 3 -> int
const AndroidX.Media3.Common.C.DataTypeManifest = 4 -> int
const AndroidX.Media3.Common.C.DataTypeMedia = 1 -> int
const AndroidX.Media3.Common.C.DataTypeMediaInitialization = 2 -> int
const AndroidX.Media3.Common.C.DataTypeMediaProgressiveLive = 7 -> int
const AndroidX.Media3.Common.C.DataTypeTimeSynchronization = 5 -> int
const AndroidX.Media3.Common.C.DataTypeUnknown = 0 -> int
const AndroidX.Media3.Common.C.DefaultBufferSegmentSize = 65536 -> int
const AndroidX.Media3.Common.C.DefaultMaxSeekToPreviousPositionMs = 3000 -> long
const AndroidX.Media3.Common.C.DefaultSeekBackIncrementMs = 5000 -> long
const AndroidX.Media3.Common.C.DefaultSeekForwardIncrementMs = 15000 -> long
const AndroidX.Media3.Common.C.EncodingAacEld = 15 -> int
const AndroidX.Media3.Common.C.EncodingAacErBsac = 1073741824 -> int
const AndroidX.Media3.Common.C.EncodingAacHeV1 = 11 -> int
const AndroidX.Media3.Common.C.EncodingAacHeV2 = 12 -> int
const AndroidX.Media3.Common.C.EncodingAacLc = 10 -> int
const AndroidX.Media3.Common.C.EncodingAacXhe = 16 -> int
const AndroidX.Media3.Common.C.EncodingAc3 = 5 -> int
const AndroidX.Media3.Common.C.EncodingAc4 = 17 -> int
const AndroidX.Media3.Common.C.EncodingDolbyTruehd = 14 -> int
const AndroidX.Media3.Common.C.EncodingDts = 7 -> int
const AndroidX.Media3.Common.C.EncodingDtsHd = 8 -> int
const AndroidX.Media3.Common.C.EncodingDtsUhdP2 = 30 -> int
const AndroidX.Media3.Common.C.EncodingEAc3 = 6 -> int
const AndroidX.Media3.Common.C.EncodingEAc3Joc = 18 -> int
const AndroidX.Media3.Common.C.EncodingInvalid = 0 -> int
const AndroidX.Media3.Common.C.EncodingMp3 = 9 -> int
const AndroidX.Media3.Common.C.EncodingOpus = 20 -> int
const AndroidX.Media3.Common.C.EncodingPcm16bit = 2 -> int
const AndroidX.Media3.Common.C.EncodingPcm16bitBigEndian = 268435456 -> int
const AndroidX.Media3.Common.C.EncodingPcm24bit = 21 -> int
const AndroidX.Media3.Common.C.EncodingPcm24bitBigEndian = 1342177280 -> int
const AndroidX.Media3.Common.C.EncodingPcm32bit = 22 -> int
const AndroidX.Media3.Common.C.EncodingPcm32bitBigEndian = 1610612736 -> int
const AndroidX.Media3.Common.C.EncodingPcm8bit = 3 -> int
const AndroidX.Media3.Common.C.EncodingPcmFloat = 4 -> int
const AndroidX.Media3.Common.C.FirstFrameNotRendered = 1 -> int
const AndroidX.Media3.Common.C.FirstFrameNotRenderedAfterStreamChange = 2 -> int
const AndroidX.Media3.Common.C.FirstFrameNotRenderedOnlyAllowedIfStarted = 0 -> int
const AndroidX.Media3.Common.C.FirstFrameRendered = 3 -> int
const AndroidX.Media3.Common.C.FlagAudibilityEnforced = 1 -> int
const AndroidX.Media3.Common.C.FormatExceedsCapabilities = 3 -> int
const AndroidX.Media3.Common.C.FormatHandled = 4 -> int
const AndroidX.Media3.Common.C.FormatUnsupportedDrm = 2 -> int
const AndroidX.Media3.Common.C.FormatUnsupportedSubtype = 1 -> int
const AndroidX.Media3.Common.C.FormatUnsupportedType = 0 -> int
const AndroidX.Media3.Common.C.IndexUnset = -1 -> int
const AndroidX.Media3.Common.C.LanguageUndetermined = "und" -> string!
const AndroidX.Media3.Common.C.LengthUnset = -1 -> int
const AndroidX.Media3.Common.C.MediaCodecPriorityNonRealtime = 1 -> int
const AndroidX.Media3.Common.C.MediaCodecPriorityRealtime = 0 -> int
const AndroidX.Media3.Common.C.MicrosPerSecond = 1000000 -> long
const AndroidX.Media3.Common.C.MillisPerSecond = 1000 -> long
const AndroidX.Media3.Common.C.NanosPerSecond = 1000000000 -> long
const AndroidX.Media3.Common.C.NetworkType2g = 3 -> int
const AndroidX.Media3.Common.C.NetworkType3g = 4 -> int
const AndroidX.Media3.Common.C.NetworkType4g = 5 -> int
const AndroidX.Media3.Common.C.NetworkType5gNsa = 10 -> int
const AndroidX.Media3.Common.C.NetworkType5gSa = 9 -> int
const AndroidX.Media3.Common.C.NetworkTypeCellularUnknown = 6 -> int
const AndroidX.Media3.Common.C.NetworkTypeEthernet = 7 -> int
const AndroidX.Media3.Common.C.NetworkTypeOffline = 1 -> int
const AndroidX.Media3.Common.C.NetworkTypeOther = 8 -> int
const AndroidX.Media3.Common.C.NetworkTypeUnknown = 0 -> int
const AndroidX.Media3.Common.C.NetworkTypeWifi = 2 -> int
const AndroidX.Media3.Common.C.PercentageUnset = -1 -> int
const AndroidX.Media3.Common.C.PositionUnset = -1 -> int
const AndroidX.Media3.Common.C.PriorityDownload = -4000 -> int
const AndroidX.Media3.Common.C.PriorityMax = 0 -> int
const AndroidX.Media3.Common.C.PriorityPlayback = -1000 -> int
const AndroidX.Media3.Common.C.PriorityPlaybackPreload = -3000 -> int
const AndroidX.Media3.Common.C.PriorityProcessingBackground = -4000 -> int
const AndroidX.Media3.Common.C.PriorityProcessingForeground = -2000 -> int
const AndroidX.Media3.Common.C.ProjectionCubemap = 2 -> int
const AndroidX.Media3.Common.C.ProjectionEquirectangular = 1 -> int
const AndroidX.Media3.Common.C.ProjectionMesh = 3 -> int
const AndroidX.Media3.Common.C.ProjectionRectangular = 0 -> int
const AndroidX.Media3.Common.C.RateUnset = -3.4028235E+38 -> float
const AndroidX.Media3.Common.C.RateUnsetInt = -2147483647 -> int
const AndroidX.Media3.Common.C.ResultBufferRead = -4 -> int
const AndroidX.Media3.Common.C.ResultEndOfInput = -1 -> int
const AndroidX.Media3.Common.C.ResultFormatRead = -5 -> int
const AndroidX.Media3.Common.C.ResultMaxLengthExceeded = -2 -> int
const AndroidX.Media3.Common.C.ResultNothingRead = -3 -> int
const AndroidX.Media3.Common.C.RoleFlagAlternate = 2 -> int
const AndroidX.Media3.Common.C.RoleFlagAuxiliary = 32768 -> int
const AndroidX.Media3.Common.C.RoleFlagCaption = 64 -> int
const AndroidX.Media3.Common.C.RoleFlagCommentary = 8 -> int
const AndroidX.Media3.Common.C.RoleFlagDescribesMusicAndSound = 1024 -> int
const AndroidX.Media3.Common.C.RoleFlagDescribesVideo = 512 -> int
const AndroidX.Media3.Common.C.RoleFlagDub = 16 -> int
const AndroidX.Media3.Common.C.RoleFlagEasyToRead = 8192 -> int
const AndroidX.Media3.Common.C.RoleFlagEmergency = 32 -> int
const AndroidX.Media3.Common.C.RoleFlagEnhancedDialogIntelligibility = 2048 -> int
const AndroidX.Media3.Common.C.RoleFlagMain = 1 -> int
const AndroidX.Media3.Common.C.RoleFlagSign = 256 -> int
const AndroidX.Media3.Common.C.RoleFlagSubtitle = 128 -> int
const AndroidX.Media3.Common.C.RoleFlagSupplementary = 4 -> int
const AndroidX.Media3.Common.C.RoleFlagTranscribesDialog = 4096 -> int
const AndroidX.Media3.Common.C.RoleFlagTrickPlay = 16384 -> int
const AndroidX.Media3.Common.C.SansSerifName = "sans-serif" -> string!
const AndroidX.Media3.Common.C.SelectionFlagAutoselect = 4 -> int
const AndroidX.Media3.Common.C.SelectionFlagDefault = 1 -> int
const AndroidX.Media3.Common.C.SelectionFlagForced = 2 -> int
const AndroidX.Media3.Common.C.SelectionReasonAdaptive = 3 -> int
const AndroidX.Media3.Common.C.SelectionReasonCustomBase = 10000 -> int
const AndroidX.Media3.Common.C.SelectionReasonInitial = 1 -> int
const AndroidX.Media3.Common.C.SelectionReasonManual = 2 -> int
const AndroidX.Media3.Common.C.SelectionReasonTrickPlay = 4 -> int
const AndroidX.Media3.Common.C.SelectionReasonUnknown = 0 -> int
const AndroidX.Media3.Common.C.SerifName = "serif" -> string!
const AndroidX.Media3.Common.C.SpatializationBehaviorAuto = 0 -> int
const AndroidX.Media3.Common.C.SpatializationBehaviorNever = 1 -> int
const AndroidX.Media3.Common.C.SsaiScheme = "ssai" -> string!
const AndroidX.Media3.Common.C.StereoModeInterleavedLeftPrimary = 4 -> int
const AndroidX.Media3.Common.C.StereoModeInterleavedRightPrimary = 5 -> int
const AndroidX.Media3.Common.C.StereoModeLeftRight = 2 -> int
const AndroidX.Media3.Common.C.StereoModeMono = 0 -> int
const AndroidX.Media3.Common.C.StereoModeStereoMesh = 3 -> int
const AndroidX.Media3.Common.C.StereoModeTopBottom = 1 -> int
const AndroidX.Media3.Common.C.StreamTypeAccessibility = 10 -> int
const AndroidX.Media3.Common.C.StreamTypeAlarm = 4 -> int
const AndroidX.Media3.Common.C.StreamTypeDefault = 3 -> int
const AndroidX.Media3.Common.C.StreamTypeDtmf = 8 -> int
const AndroidX.Media3.Common.C.StreamTypeMusic = 3 -> int
const AndroidX.Media3.Common.C.StreamTypeNotification = 5 -> int
const AndroidX.Media3.Common.C.StreamTypeRing = 2 -> int
const AndroidX.Media3.Common.C.StreamTypeSystem = 1 -> int
const AndroidX.Media3.Common.C.StreamTypeVoiceCall = 0 -> int
const AndroidX.Media3.Common.C.TextureMinFilterLinear = 9729 -> int
const AndroidX.Media3.Common.C.TextureMinFilterLinearMipmapLinear = 9987 -> int
const AndroidX.Media3.Common.C.TimeEndOfSource = -9223372036854775808 -> long
const AndroidX.Media3.Common.C.TimeUnset = -9223372036854775807 -> long
const AndroidX.Media3.Common.C.TrackTypeAudio = 1 -> int
const AndroidX.Media3.Common.C.TrackTypeCameraMotion = 6 -> int
const AndroidX.Media3.Common.C.TrackTypeCustomBase = 10000 -> int
const AndroidX.Media3.Common.C.TrackTypeDefault = 0 -> int
const AndroidX.Media3.Common.C.TrackTypeImage = 4 -> int
const AndroidX.Media3.Common.C.TrackTypeMetadata = 5 -> int
const AndroidX.Media3.Common.C.TrackTypeNone = -2 -> int
const AndroidX.Media3.Common.C.TrackTypeText = 3 -> int
const AndroidX.Media3.Common.C.TrackTypeUnknown = -1 -> int
const AndroidX.Media3.Common.C.TrackTypeVideo = 2 -> int
const AndroidX.Media3.Common.C.TypeDash = 0 -> int
const AndroidX.Media3.Common.C.TypeHls = 2 -> int
const AndroidX.Media3.Common.C.TypeOther = 4 -> int
const AndroidX.Media3.Common.C.TypeRtsp = 3 -> int
const AndroidX.Media3.Common.C.TypeSs = 1 -> int
const AndroidX.Media3.Common.C.UsageAlarm = 4 -> int
const AndroidX.Media3.Common.C.UsageAssistanceAccessibility = 11 -> int
const AndroidX.Media3.Common.C.UsageAssistanceNavigationGuidance = 12 -> int
const AndroidX.Media3.Common.C.UsageAssistanceSonification = 13 -> int
const AndroidX.Media3.Common.C.UsageAssistant = 16 -> int
const AndroidX.Media3.Common.C.UsageGame = 14 -> int
const AndroidX.Media3.Common.C.UsageMedia = 1 -> int
const AndroidX.Media3.Common.C.UsageNotification = 5 -> int
const AndroidX.Media3.Common.C.UsageNotificationCommunicationDelayed = 9 -> int
const AndroidX.Media3.Common.C.UsageNotificationCommunicationInstant = 8 -> int
const AndroidX.Media3.Common.C.UsageNotificationCommunicationRequest = 7 -> int
const AndroidX.Media3.Common.C.UsageNotificationEvent = 10 -> int
const AndroidX.Media3.Common.C.UsageNotificationRingtone = 6 -> int
const AndroidX.Media3.Common.C.UsageUnknown = 0 -> int
const AndroidX.Media3.Common.C.UsageVoiceCommunication = 2 -> int
const AndroidX.Media3.Common.C.UsageVoiceCommunicationSignalling = 3 -> int
const AndroidX.Media3.Common.C.VideoChangeFrameRateStrategyOff = -2147483648 -> int
const AndroidX.Media3.Common.C.VideoChangeFrameRateStrategyOnlyIfSeamless = 0 -> int
const AndroidX.Media3.Common.C.VideoCodecFlagH264 = 1 -> int
const AndroidX.Media3.Common.C.VideoCodecFlagH265 = 2 -> int
const AndroidX.Media3.Common.C.VideoOutputModeNone = -1 -> int
const AndroidX.Media3.Common.C.VideoOutputModeSurfaceYuv = 1 -> int
const AndroidX.Media3.Common.C.VideoOutputModeYuv = 0 -> int
const AndroidX.Media3.Common.C.VideoScalingModeDefault = 1 -> int
const AndroidX.Media3.Common.C.VideoScalingModeScaleToFit = 1 -> int
const AndroidX.Media3.Common.C.VideoScalingModeScaleToFitWithCropping = 2 -> int
const AndroidX.Media3.Common.C.VolumeFlagAllowRingerModes = 2 -> int
const AndroidX.Media3.Common.C.VolumeFlagPlaySound = 4 -> int
const AndroidX.Media3.Common.C.VolumeFlagRemoveSoundAndVibrate = 8 -> int
const AndroidX.Media3.Common.C.VolumeFlagShowUi = 1 -> int
const AndroidX.Media3.Common.C.VolumeFlagVibrate = 16 -> int
const AndroidX.Media3.Common.C.WakeModeLocal = 1 -> int
const AndroidX.Media3.Common.C.WakeModeNetwork = 2 -> int
const AndroidX.Media3.Common.C.WakeModeNone = 0 -> int
const AndroidX.Media3.Common.DeviceInfo.PlaybackTypeLocal = 0 -> int
const AndroidX.Media3.Common.DeviceInfo.PlaybackTypeRemote = 1 -> int
const AndroidX.Media3.Common.FileTypes.Ac3 = 0 -> int
const AndroidX.Media3.Common.FileTypes.Ac4 = 1 -> int
const AndroidX.Media3.Common.FileTypes.Adts = 2 -> int
const AndroidX.Media3.Common.FileTypes.Amr = 3 -> int
const AndroidX.Media3.Common.FileTypes.Avi = 16 -> int
const AndroidX.Media3.Common.FileTypes.Avif = 21 -> int
const AndroidX.Media3.Common.FileTypes.Bmp = 19 -> int
const AndroidX.Media3.Common.FileTypes.Flac = 4 -> int
const AndroidX.Media3.Common.FileTypes.Flv = 5 -> int
const AndroidX.Media3.Common.FileTypes.Heif = 20 -> int
const AndroidX.Media3.Common.FileTypes.Jpeg = 14 -> int
const AndroidX.Media3.Common.FileTypes.Matroska = 6 -> int
const AndroidX.Media3.Common.FileTypes.Midi = 15 -> int
const AndroidX.Media3.Common.FileTypes.Mp3 = 7 -> int
const AndroidX.Media3.Common.FileTypes.Mp4 = 8 -> int
const AndroidX.Media3.Common.FileTypes.Ogg = 9 -> int
const AndroidX.Media3.Common.FileTypes.Png = 17 -> int
const AndroidX.Media3.Common.FileTypes.Ps = 10 -> int
const AndroidX.Media3.Common.FileTypes.Ts = 11 -> int
const AndroidX.Media3.Common.FileTypes.Unknown = -1 -> int
const AndroidX.Media3.Common.FileTypes.Wav = 12 -> int
const AndroidX.Media3.Common.FileTypes.Webp = 18 -> int
const AndroidX.Media3.Common.FileTypes.Webvtt = 13 -> int
const AndroidX.Media3.Common.Format.CueReplacementBehaviorMerge = 1 -> int
const AndroidX.Media3.Common.Format.CueReplacementBehaviorReplace = 2 -> int
const AndroidX.Media3.Common.Format.NoValue = -1 -> int
const AndroidX.Media3.Common.Format.OffsetSampleRelative = 9223372036854775807 -> long
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandAdjustDeviceVolume = 26 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandAdjustDeviceVolumeWithFlags = 34 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandChangeMediaItems = 20 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetAudioAttributes = 21 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetCurrentMediaItem = 16 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetDeviceVolume = 23 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetMediaItemsMetadata = 18 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetMetadata = 18 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetText = 28 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetTimeline = 17 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetTracks = 30 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandGetVolume = 22 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandInvalid = -1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandPlayPause = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandPrepare = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandRelease = 32 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekBack = 11 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekForward = 12 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekInCurrentMediaItem = 5 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekInCurrentWindow = 5 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToDefaultPosition = 4 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToMediaItem = 10 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToNext = 9 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToNextMediaItem = 8 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToNextWindow = 8 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToPrevious = 7 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToPreviousMediaItem = 6 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToPreviousWindow = 6 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSeekToWindow = 10 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetAudioAttributes = 35 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetDeviceVolume = 25 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetDeviceVolumeWithFlags = 33 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetMediaItem = 31 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetMediaItemsMetadata = 19 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetPlaylistMetadata = 19 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetRepeatMode = 15 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetShuffleMode = 14 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetSpeedAndPitch = 13 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetTrackSelectionParameters = 29 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetVideoSurface = 27 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandSetVolume = 24 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.CommandStop = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonAutoTransition = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonInternal = 5 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonRemove = 4 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSeek = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSeekAdjustment = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSilenceSkip = 6 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSkip = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventAudioAttributesChanged = 20 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventAudioSessionId = 21 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventAvailableCommandsChanged = 13 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventCues = 27 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventDeviceInfoChanged = 29 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventDeviceVolumeChanged = 30 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventIsLoadingChanged = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventIsPlayingChanged = 7 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventMaxSeekToPreviousPositionChanged = 18 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventMediaItemTransition = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventMediaMetadataChanged = 14 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventMetadata = 28 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlayWhenReadyChanged = 5 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlaybackParametersChanged = 12 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlaybackStateChanged = 4 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlaybackSuppressionReasonChanged = 6 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlayerError = 10 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPlaylistMetadataChanged = 15 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventPositionDiscontinuity = 11 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventRenderedFirstFrame = 26 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventRepeatModeChanged = 8 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventSeekBackIncrementChanged = 16 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventSeekForwardIncrementChanged = 17 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventShuffleModeEnabledChanged = 9 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventSkipSilenceEnabledChanged = 23 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventSurfaceSizeChanged = 24 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventTimelineChanged = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventTrackSelectionParametersChanged = 19 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventTracksChanged = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventVideoSizeChanged = 25 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.EventVolumeChanged = 22 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonAuto = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonPlaylistChanged = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonRepeat = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonSeek = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioBecomingNoisy = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioFocusLoss = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonEndOfMediaItem = 5 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonRemote = 4 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonSuppressedTooLong = 6 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonUserRequest = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonNone = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonTransientAudioFocusLoss = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonUnsuitableAudioOutput = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonUnsuitableAudioRoute = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.RepeatModeAll = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.RepeatModeOff = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.RepeatModeOne = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.StateBuffering = 2 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.StateEnded = 4 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.StateIdle = 1 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.StateReady = 3 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.TimelineChangeReasonPlaylistChanged = 0 -> int
const AndroidX.Media3.Common.ForwardingPlayer.InterfaceConsts.TimelineChangeReasonSourceUpdate = 1 -> int
const AndroidX.Media3.Common.MediaItem.DefaultMediaId = "" -> string!
const AndroidX.Media3.Common.MediaLibraryInfo.AssertionsEnabled = true -> bool
const AndroidX.Media3.Common.MediaLibraryInfo.Tag = "AndroidXMedia3" -> string!
const AndroidX.Media3.Common.MediaLibraryInfo.TraceEnabled = true -> bool
const AndroidX.Media3.Common.MediaLibraryInfo.Version = "1.7.1" -> string!
const AndroidX.Media3.Common.MediaLibraryInfo.VersionInt = 1007001300 -> int
const AndroidX.Media3.Common.MediaLibraryInfo.VersionSlashy = "AndroidXMedia3/1.7.1" -> string!
const AndroidX.Media3.Common.MediaMetadata.FolderTypeAlbums = 2 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeArtists = 3 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeGenres = 4 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeMixed = 0 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeNone = -1 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypePlaylists = 5 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeTitles = 1 -> int
const AndroidX.Media3.Common.MediaMetadata.FolderTypeYears = 6 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeAlbum = 10 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeArtist = 11 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeAudioBook = 15 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeAudioBookChapter = 2 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderAlbums = 21 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderArtists = 22 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderAudioBooks = 26 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderGenres = 23 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderMixed = 20 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderMovies = 35 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderNews = 32 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderPlaylists = 24 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderPodcasts = 27 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderRadioStations = 31 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderTrailers = 34 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderTvChannels = 28 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderTvSeries = 29 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderTvShows = 30 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderVideos = 33 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeFolderYears = 25 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeGenre = 12 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeMixed = 0 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeMovie = 8 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeMusic = 1 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeNews = 5 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypePlaylist = 13 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypePodcast = 16 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypePodcastEpisode = 3 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeRadioStation = 4 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeTrailer = 7 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeTvChannel = 17 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeTvSeason = 19 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeTvSeries = 18 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeTvShow = 9 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeVideo = 6 -> int
const AndroidX.Media3.Common.MediaMetadata.MediaTypeYear = 14 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeABrightColoredFish = 17 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeArtistPerformer = 8 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeBackCover = 4 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeBandArtistLogo = 19 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeBandOrchestra = 10 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeComposer = 11 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeConductor = 9 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeDuringPerformance = 15 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeDuringRecording = 14 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeFileIcon = 1 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeFileIconOther = 2 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeFrontCover = 3 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeIllustration = 18 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeLeadArtistPerformer = 7 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeLeafletPage = 5 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeLyricist = 12 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeMedia = 6 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeMovieVideoScreenCapture = 16 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeOther = 0 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypePublisherStudioLogo = 20 -> int
const AndroidX.Media3.Common.MediaMetadata.PictureTypeRecordingLocation = 13 -> int
const AndroidX.Media3.Common.MimeTypes.ApplicationAit = "application/vnd.dvb.ait" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationCameraMotion = "application/x-camera-motion" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationCea608 = "application/cea-608" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationCea708 = "application/cea-708" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationDepthMetadata = "application/x-depth-metadata" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationDvbsubs = "application/dvbsubs" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationEmsg = "application/x-emsg" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationExif = "application/x-exif" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationExternallyLoadedImage = "application/x-image-uri" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationIcy = "application/x-icy" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationId3 = "application/id3" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationM3u8 = "application/x-mpegURL" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMatroska = "application/x-matroska" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMedia3Cues = "application/x-media3-cues" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMp4 = "application/mp4" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMp4cea608 = "application/x-mp4-cea-608" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMp4vtt = "application/x-mp4-vtt" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationMpd = "application/dash+xml" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationPgs = "application/pgs" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationRawcc = "application/x-rawcc" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationRtsp = "application/x-rtsp" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationScte35 = "application/x-scte35" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationSdp = "application/sdp" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationSs = "application/vnd.ms-sstr+xml" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationSubrip = "application/x-subrip" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationTtml = "application/ttml+xml" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationTx3g = "application/x-quicktime-tx3g" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationVobsub = "application/vobsub" -> string!
const AndroidX.Media3.Common.MimeTypes.ApplicationWebm = "application/webm" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAac = "audio/mp4a-latm" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAc3 = "audio/ac3" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAc4 = "audio/ac4" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAlac = "audio/alac" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAlaw = "audio/g711-alaw" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAmr = "audio/amr" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAmrNb = "audio/3gpp" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioAmrWb = "audio/amr-wb" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioDts = "audio/vnd.dts" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioDtsExpress = "audio/vnd.dts.hd;profile=lbr" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioDtsHd = "audio/vnd.dts.hd" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioDtsX = "audio/vnd.dts.uhd;profile=p2" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioEAc3 = "audio/eac3" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioEAc3Joc = "audio/eac3-joc" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioExoplayerMidi = "audio/x-exoplayer-midi" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioFlac = "audio/flac" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioIamf = "audio/iamf" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMatroska = "audio/x-matroska" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMidi = "audio/midi" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMlaw = "audio/g711-mlaw" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMp4 = "audio/mp4" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMpeg = "audio/mpeg" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMpegL1 = "audio/mpeg-L1" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMpegL2 = "audio/mpeg-L2" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMpeghMha1 = "audio/mha1" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMpeghMhm1 = "audio/mhm1" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioMsgsm = "audio/gsm" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioOgg = "audio/ogg" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioOpus = "audio/opus" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioRaw = "audio/raw" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioTruehd = "audio/true-hd" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioUnknown = "audio/x-unknown" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioVorbis = "audio/vorbis" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioWav = "audio/wav" -> string!
const AndroidX.Media3.Common.MimeTypes.AudioWebm = "audio/webm" -> string!
const AndroidX.Media3.Common.MimeTypes.BaseTypeApplication = "application" -> string!
const AndroidX.Media3.Common.MimeTypes.BaseTypeAudio = "audio" -> string!
const AndroidX.Media3.Common.MimeTypes.BaseTypeImage = "image" -> string!
const AndroidX.Media3.Common.MimeTypes.BaseTypeText = "text" -> string!
const AndroidX.Media3.Common.MimeTypes.BaseTypeVideo = "video" -> string!
const AndroidX.Media3.Common.MimeTypes.CodecEAc3Joc = "ec+3" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageAvif = "image/avif" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageBmp = "image/bmp" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageHeic = "image/heic" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageHeif = "image/heif" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageJpeg = "image/jpeg" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageJpegR = "image/jpeg_r" -> string!
const AndroidX.Media3.Common.MimeTypes.ImagePng = "image/png" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageRaw = "image/raw" -> string!
const AndroidX.Media3.Common.MimeTypes.ImageWebp = "image/webp" -> string!
const AndroidX.Media3.Common.MimeTypes.TextSsa = "text/x-ssa" -> string!
const AndroidX.Media3.Common.MimeTypes.TextUnknown = "text/x-unknown" -> string!
const AndroidX.Media3.Common.MimeTypes.TextVtt = "text/vtt" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoApv = "video/apv" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoAv1 = "video/av01" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoAvi = "video/x-msvideo" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoDivx = "video/divx" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoDolbyVision = "video/dolby-vision" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoFlv = "video/x-flv" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoH263 = "video/3gpp" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoH264 = "video/avc" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoH265 = "video/hevc" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMatroska = "video/x-matroska" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMjpeg = "video/mjpeg" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMp2t = "video/mp2t" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMp4 = "video/mp4" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMp42 = "video/mp42" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMp43 = "video/mp43" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMp4v = "video/mp4v-es" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMpeg = "video/mpeg" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMpeg2 = "video/mpeg2" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoMvHevc = "video/mv-hevc" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoOgg = "video/ogg" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoPs = "video/mp2p" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoRaw = "video/raw" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoUnknown = "video/x-unknown" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoVc1 = "video/wvc1" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoVp8 = "video/x-vnd.on2.vp8" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoVp9 = "video/x-vnd.on2.vp9" -> string!
const AndroidX.Media3.Common.MimeTypes.VideoWebm = "video/webm" -> string!
const AndroidX.Media3.Common.PlaybackException.CustomErrorCodeBase = 1000000 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeAudioTrackInitFailed = 5001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeAudioTrackOffloadInitFailed = 5004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeAudioTrackOffloadWriteFailed = 5003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeAudioTrackWriteFailed = 5002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeAuthenticationExpired = -102 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeBadValue = -3 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeBehindLiveWindow = 1002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeConcurrentStreamLimit = -104 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeContentAlreadyPlaying = -110 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecoderInitFailed = 4001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecoderQueryFailed = 4002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecodingFailed = 4003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecodingFormatExceedsCapabilities = 4004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecodingFormatUnsupported = 4005 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDecodingResourcesReclaimed = 4006 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDisconnected = -100 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmContentError = 6003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmDeviceRevoked = 6007 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmDisallowedOperation = 6005 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmLicenseAcquisitionFailed = 6004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmLicenseExpired = 6008 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmProvisioningFailed = 6002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmSchemeUnsupported = 6001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmSystemError = 6006 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeDrmUnspecified = 6000 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeEndOfPlaylist = -109 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeFailedRuntimeCheck = 1004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeInvalidState = -2 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoBadHttpStatus = 2004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoCleartextNotPermitted = 2007 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoFileNotFound = 2005 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoInvalidHttpContentType = 2003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoNetworkConnectionFailed = 2001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoNetworkConnectionTimeout = 2002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoNoPermission = 2006 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoReadPositionOutOfRange = 2008 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeIoUnspecified = 2000 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeNotAvailableInRegion = -106 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeNotSupported = -6 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeParentalControlRestricted = -105 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeParsingContainerMalformed = 3001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeParsingContainerUnsupported = 3003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeParsingManifestMalformed = 3002 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeParsingManifestUnsupported = 3004 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodePermissionDenied = -4 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodePremiumAccountRequired = -103 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeRemoteError = 1001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeSetupRequired = -108 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeSkipLimitReached = -107 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeTimeout = 1003 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeUnspecified = 1000 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeVideoFrameProcessingFailed = 7001 -> int
const AndroidX.Media3.Common.PlaybackException.ErrorCodeVideoFrameProcessorInitFailed = 7000 -> int
const AndroidX.Media3.Common.PlaybackException.FieldCustomIdBase = 1000 -> int
const AndroidX.Media3.Common.Text.Cue.AnchorTypeEnd = 2 -> int
const AndroidX.Media3.Common.Text.Cue.AnchorTypeMiddle = 1 -> int
const AndroidX.Media3.Common.Text.Cue.AnchorTypeStart = 0 -> int
const AndroidX.Media3.Common.Text.Cue.DimenUnset = -3.4028235E+38 -> float
const AndroidX.Media3.Common.Text.Cue.LineTypeFraction = 0 -> int
const AndroidX.Media3.Common.Text.Cue.LineTypeNumber = 1 -> int
const AndroidX.Media3.Common.Text.Cue.TextSizeTypeAbsolute = 2 -> int
const AndroidX.Media3.Common.Text.Cue.TextSizeTypeFractional = 0 -> int
const AndroidX.Media3.Common.Text.Cue.TextSizeTypeFractionalIgnorePadding = 1 -> int
const AndroidX.Media3.Common.Text.Cue.TypeUnset = -2147483648 -> int
const AndroidX.Media3.Common.Text.Cue.VerticalTypeLr = 2 -> int
const AndroidX.Media3.Common.Text.Cue.VerticalTypeRl = 1 -> int
const AndroidX.Media3.Common.Text.TextAnnotation.PositionAfter = 2 -> int
const AndroidX.Media3.Common.Text.TextAnnotation.PositionBefore = 1 -> int
const AndroidX.Media3.Common.Text.TextAnnotation.PositionUnknown = -1 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkFillFilled = 1 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkFillOpen = 2 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkFillUnknown = 0 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShapeCircle = 1 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShapeDot = 2 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShapeNone = 0 -> int
const AndroidX.Media3.Common.Text.TextEmphasisSpan.MarkShapeSesame = 3 -> int
const AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.AudioOffloadModeDisabled = 0 -> int
const AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.AudioOffloadModeEnabled = 1 -> int
const AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.AudioOffloadModeRequired = 2 -> int
const AndroidX.Media3.Common.TrackSelectionParameters.FieldCustomIdBase = 1000 -> int
const AndroidX.Media3.Common.Util.EGLSurfaceTexture.SecureModeNone = 0 -> int
const AndroidX.Media3.Common.Util.EGLSurfaceTexture.SecureModeProtectedPbuffer = 2 -> int
const AndroidX.Media3.Common.Util.EGLSurfaceTexture.SecureModeSurfacelessContext = 1 -> int
const AndroidX.Media3.Common.Util.GlUtil.HomogeneousCoordinateVectorSize = 4 -> int
const AndroidX.Media3.Common.Util.GlUtil.LengthNdc = 2 -> float
const AndroidX.Media3.Common.Util.Log.LogLevelAll = 0 -> int
const AndroidX.Media3.Common.Util.Log.LogLevelError = 3 -> int
const AndroidX.Media3.Common.Util.Log.LogLevelInfo = 1 -> int
const AndroidX.Media3.Common.Util.Log.LogLevelOff = 2147483647 -> int
const AndroidX.Media3.Common.Util.Log.LogLevelWarning = 2 -> int
const AndroidX.Media3.Common.Util.LongArrayQueue.DefaultInitialCapacity = 16 -> int
const AndroidX.Media3.Common.Util.MediaFormatUtil.KeyMaxBitRate = "max-bitrate" -> string!
const AndroidX.Media3.Common.Util.MediaFormatUtil.KeyPcmEncodingExtended = "exo-pcm-encoding-int" -> string!
const AndroidX.Media3.Common.Util.MediaFormatUtil.KeyPixelWidthHeightRatioFloat = "exo-pixel-width-height-ratio-float" -> string!
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceDefault = 3 -> int
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceHigh = 4 -> int
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceLow = 2 -> int
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceMin = 1 -> int
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceNone = 0 -> int
const AndroidX.Media3.Common.Util.NotificationUtil.ImportanceUnspecified = -1000 -> int
const AndroidX.Media3.Common.Util.RepeatModeUtil.RepeatToggleModeAll = 2 -> int
const AndroidX.Media3.Common.Util.RepeatModeUtil.RepeatToggleModeNone = 0 -> int
const AndroidX.Media3.Common.Util.RepeatModeUtil.RepeatToggleModeOne = 1 -> int
const AndroidX.Media3.Common.Util.TimestampAdjuster.ModeNoOffset = 9223372036854775807 -> long
const AndroidX.Media3.Common.Util.TimestampAdjuster.ModeShared = 9223372036854775806 -> long
override AndroidX.Media3.Common.AdOverlayInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AdOverlayInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AdPlaybackState.AdGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AdPlaybackState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioFocusRequestCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioManagerCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioMixingUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioProcessingPipeline.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.AudioProcessorUnhandledAudioFormatException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.BaseAudioProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.BaseAudioProcessor.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Audio.BaseAudioProcessor.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Audio.ChannelMixingAudioProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.ChannelMixingAudioProcessor.QueueInput(Java.Nio.ByteBuffer? inputBuffer) -> void
override AndroidX.Media3.Common.Audio.ChannelMixingMatrix.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.SonicAudioProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.ToInt16PcmAudioProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Audio.ToInt16PcmAudioProcessor.QueueInput(Java.Nio.ByteBuffer? inputBuffer) -> void
override AndroidX.Media3.Common.AudioAttributes.AudioAttributesV21.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AudioAttributes.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AudioAttributes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.AuxEffectInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.BasePlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.BasePlayer.ThresholdClass.get -> nint
override AndroidX.Media3.Common.BasePlayer.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.BundleListRetriever.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.C.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ColorInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ColorInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.DeviceInfo.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.DeviceInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.DrmInitData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.DrmInitData.SchemeData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.FileTypes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.FlagSet.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.FlagSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Format.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Format.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ForwardingPlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ForwardingPlayer.ThresholdClass.get -> nint
override AndroidX.Media3.Common.ForwardingPlayer.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.ForwardingSimpleBasePlayer.GetState() -> AndroidX.Media3.Common.SimpleBasePlayer.State?
override AndroidX.Media3.Common.ForwardingSimpleBasePlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ForwardingSimpleBasePlayer.ThresholdClass.get -> nint
override AndroidX.Media3.Common.ForwardingSimpleBasePlayer.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.FrameInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.FrameInfo.ThresholdClass.get -> nint
override AndroidX.Media3.Common.FrameInfo.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.GlTextureInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.HeartRating.IsRated.get -> bool
override AndroidX.Media3.Common.HeartRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.HeartRating.ToBundle() -> Android.OS.Bundle?
override AndroidX.Media3.Common.IllegalSeekPositionException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Label.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Label.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Label.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.MediaItem.AdsConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.AdsConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.ClippingConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.ClippingConfiguration.ThresholdClass.get -> nint
override AndroidX.Media3.Common.MediaItem.ClippingConfiguration.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.MediaItem.ClippingProperties.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.DrmConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.DrmConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.LiveConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.LiveConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.LocalConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.RequestMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.RequestMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.Subtitle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.ThresholdClass.get -> nint
override AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.MediaLibraryInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MediaMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Metadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.MimeTypes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ParserException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ParserException.ThresholdClass.get -> nint
override AndroidX.Media3.Common.ParserException.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.PercentageRating.IsRated.get -> bool
override AndroidX.Media3.Common.PercentageRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PercentageRating.ToBundle() -> Android.OS.Bundle?
override AndroidX.Media3.Common.PlaybackException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PlaybackException.ThresholdClass.get -> nint
override AndroidX.Media3.Common.PlaybackException.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.PlaybackParameters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PlayerCommands.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PlayerCommands.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PlayerEvents.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PlayerPositionInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PriorityTaskManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException.ThresholdClass.get -> nint
override AndroidX.Media3.Common.PriorityTaskManager.PriorityTooLowException.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Rating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Rating.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Rating.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.SimpleBasePlayer.ApplicationLooper.get -> Android.OS.Looper?
override AndroidX.Media3.Common.SimpleBasePlayer.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
override AndroidX.Media3.Common.SimpleBasePlayer.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
override AndroidX.Media3.Common.SimpleBasePlayer.BufferedPosition.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.ContentBufferedPosition.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.ContentPosition.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentAdGroupIndex.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentAdIndexInAdGroup.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentMediaItemIndex.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentPeriodIndex.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentPosition.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
override AndroidX.Media3.Common.SimpleBasePlayer.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
override AndroidX.Media3.Common.SimpleBasePlayer.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
override AndroidX.Media3.Common.SimpleBasePlayer.DeviceMuted.get -> bool
override AndroidX.Media3.Common.SimpleBasePlayer.DeviceMuted.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.DeviceVolume.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.DeviceVolume.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.Duration.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.IsLoading.get -> bool
override AndroidX.Media3.Common.SimpleBasePlayer.IsPlayingAd.get -> bool
override AndroidX.Media3.Common.SimpleBasePlayer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.LivePositionSupplier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.MaxSeekToPreviousPosition.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
override AndroidX.Media3.Common.SimpleBasePlayer.PlayWhenReady.get -> bool
override AndroidX.Media3.Common.SimpleBasePlayer.PlayWhenReady.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
override AndroidX.Media3.Common.SimpleBasePlayer.PlaybackParameters.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.PlaybackState.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.PlaybackSuppressionReason.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
override AndroidX.Media3.Common.SimpleBasePlayer.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
override AndroidX.Media3.Common.SimpleBasePlayer.PlaylistMetadata.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.RepeatMode.get -> int
override AndroidX.Media3.Common.SimpleBasePlayer.RepeatMode.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.SeekBackIncrement.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.SeekForwardIncrement.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.ShuffleModeEnabled.get -> bool
override AndroidX.Media3.Common.SimpleBasePlayer.ShuffleModeEnabled.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.State.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.State.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SimpleBasePlayer.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
override AndroidX.Media3.Common.SimpleBasePlayer.ThresholdClass.get -> nint
override AndroidX.Media3.Common.SimpleBasePlayer.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.SimpleBasePlayer.TotalBufferedDuration.get -> long
override AndroidX.Media3.Common.SimpleBasePlayer.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
override AndroidX.Media3.Common.SimpleBasePlayer.TrackSelectionParameters.set -> void
override AndroidX.Media3.Common.SimpleBasePlayer.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
override AndroidX.Media3.Common.SimpleBasePlayer.Volume.get -> float
override AndroidX.Media3.Common.SimpleBasePlayer.Volume.set -> void
override AndroidX.Media3.Common.StarRating.IsRated.get -> bool
override AndroidX.Media3.Common.StarRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.StarRating.ToBundle() -> Android.OS.Bundle?
override AndroidX.Media3.Common.StreamKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.SurfaceInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.Cue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.Cue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.CueGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.HorizontalTextInVerticalContextSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.RubySpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.SpanUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.TextAnnotation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.TextEmphasisSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Text.VoiceSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ThumbRating.IsRated.get -> bool
override AndroidX.Media3.Common.ThumbRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.ThumbRating.ToBundle() -> Android.OS.Bundle?
override AndroidX.Media3.Common.Timeline.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Timeline.Period.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Timeline.RemotableTimeline.GetIndexOfPeriod(Java.Lang.Object? uid) -> int
override AndroidX.Media3.Common.Timeline.RemotableTimeline.GetPeriod(int periodIndex, AndroidX.Media3.Common.Timeline.Period? period, bool setIds) -> AndroidX.Media3.Common.Timeline.Period?
override AndroidX.Media3.Common.Timeline.RemotableTimeline.GetUidOfPeriod(int periodIndex) -> Java.Lang.Object?
override AndroidX.Media3.Common.Timeline.RemotableTimeline.GetWindow(int windowIndex, AndroidX.Media3.Common.Timeline.Window? window, long defaultPositionProjectionUs) -> AndroidX.Media3.Common.Timeline.Window?
override AndroidX.Media3.Common.Timeline.RemotableTimeline.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Timeline.RemotableTimeline.PeriodCount.get -> int
override AndroidX.Media3.Common.Timeline.RemotableTimeline.WindowCount.get -> int
override AndroidX.Media3.Common.Timeline.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Timeline.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Timeline.Window.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionOverride.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionParameters.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionParameters.Builder.ThresholdClass.get -> nint
override AndroidX.Media3.Common.TrackSelectionParameters.Builder.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.TrackSelectionParameters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.TrackSelectionParameters.ThresholdClass.get -> nint
override AndroidX.Media3.Common.TrackSelectionParameters.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Tracks.Group.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Tracks.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.Assertions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.AtomicFile.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.BackgroundExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.BackgroundThreadStateHandler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.BundleCollectionUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.CodecSpecificDataUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.ColorParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.ConditionVariable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.ConditionVariable.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Util.ConditionVariable.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Util.ConstantRateTimestampIterator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.CopyOnWriteMultiset.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.EGLSurfaceTexture.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.GlProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.GlRect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.GlUtil.GlException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.GlUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.LibraryLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.LibraryLoader.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Util.LibraryLoader.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Util.ListenerSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.Log.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.LongArray.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.LongArrayQueue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.MediaFormatUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.NetworkTypeObserver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.NotificationUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.ParsableBitArray.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.ParsableByteArray.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.RepeatModeUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.RunnableFutureTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.RunnableFutureTask.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Util.RunnableFutureTask.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Util.Size.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.SpeedProviderUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.SpeedProviderUtil.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Util.SpeedProviderUtil.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Util.SystemClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.SystemClock.ThresholdClass.get -> nint
override AndroidX.Media3.Common.Util.SystemClock.ThresholdType.get -> System.Type!
override AndroidX.Media3.Common.Util.TimedValueQueue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.TimestampAdjuster.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.TraceUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.UriUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.Util.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.Util.XmlPullParserUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.VideoFrameProcessingException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Common.VideoSize.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed AndroidX.Media3.Common.SimpleBasePlayer.AddListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.AddMediaItems(int index, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ClearVideoSurface() -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ClearVideoSurface(Android.Views.Surface? surface) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ClearVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ClearVideoTextureView(Android.Views.TextureView? textureView) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.DecreaseDeviceVolume() -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.DecreaseDeviceVolume(int flags) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.IncreaseDeviceVolume() -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.IncreaseDeviceVolume(int flags) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.MoveMediaItems(int fromIndex, int toIndex, int newIndex) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.Prepare() -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.Release() -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.RemoveListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.RemoveMediaItems(int fromIndex, int toIndex) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.ReplaceMediaItems(int fromIndex, int toIndex, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SeekTo(int mediaItemIndex, long positionMs, int seekCommand, bool isRepeatingCurrentItem) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes, bool handleAudioFocus) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetDeviceMuted(bool muted, int flags) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetDeviceVolume(int volume, int flags) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, bool resetPosition) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetVideoSurface(Android.Views.Surface? surface) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.SetVideoTextureView(Android.Views.TextureView? textureView) -> void
override sealed AndroidX.Media3.Common.SimpleBasePlayer.Stop() -> void
static AndroidX.Media3.Common.AdPlaybackState.AdGroup.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.AdPlaybackState.AdGroup?
static AndroidX.Media3.Common.AdPlaybackState.FromAdPlaybackState(Java.Lang.Object? adsId, AndroidX.Media3.Common.AdPlaybackState? adPlaybackState) -> AndroidX.Media3.Common.AdPlaybackState?
static AndroidX.Media3.Common.AdPlaybackState.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.AdPlaybackState?
static AndroidX.Media3.Common.AdPlaybackState.None.get -> AndroidX.Media3.Common.AdPlaybackState?
static AndroidX.Media3.Common.Audio.AudioManagerCompat.AbandonAudioFocusRequest(Android.Media.AudioManager? audioManager, AndroidX.Media3.Common.Audio.AudioFocusRequestCompat? focusRequest) -> int
static AndroidX.Media3.Common.Audio.AudioManagerCompat.GetAudioManager(Android.Content.Context? context) -> Android.Media.AudioManager?
static AndroidX.Media3.Common.Audio.AudioManagerCompat.GetStreamMaxVolume(Android.Media.AudioManager? audioManager, int streamType) -> int
static AndroidX.Media3.Common.Audio.AudioManagerCompat.GetStreamMinVolume(Android.Media.AudioManager? audioManager, int streamType) -> int
static AndroidX.Media3.Common.Audio.AudioManagerCompat.GetStreamVolume(Android.Media.AudioManager? audioManager, int streamType) -> int
static AndroidX.Media3.Common.Audio.AudioManagerCompat.IsStreamMute(Android.Media.AudioManager? audioManager, int streamType) -> bool
static AndroidX.Media3.Common.Audio.AudioManagerCompat.RequestAudioFocus(Android.Media.AudioManager? audioManager, AndroidX.Media3.Common.Audio.AudioFocusRequestCompat? focusRequest) -> int
static AndroidX.Media3.Common.Audio.AudioMixingUtil.CanMix(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? audioFormat) -> bool
static AndroidX.Media3.Common.Audio.AudioMixingUtil.CanMix(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat, AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? outputAudioFormat) -> bool
static AndroidX.Media3.Common.Audio.AudioMixingUtil.Mix(Java.Nio.ByteBuffer? inputBuffer, AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat, Java.Nio.ByteBuffer? mixingBuffer, AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? mixingAudioFormat, AndroidX.Media3.Common.Audio.ChannelMixingMatrix? matrix, int framesToMix, bool accumulate, bool clipFloatOutput) -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat.NotSet.get -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
static AndroidX.Media3.Common.Audio.BaseAudioProcessor.InterfaceConsts.EmptyBuffer.get -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.Audio.ChannelMixingMatrix.Create(int inputChannelCount, int outputChannelCount) -> AndroidX.Media3.Common.Audio.ChannelMixingMatrix?
static AndroidX.Media3.Common.Audio.ChannelMixingMatrix.CreateForConstantPower(int inputChannelCount, int outputChannelCount) -> AndroidX.Media3.Common.Audio.ChannelMixingMatrix?
static AndroidX.Media3.Common.Audio.SonicAudioProcessor.InterfaceConsts.EmptyBuffer.get -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.GetSampleCountAfterProcessorApplied(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider, int inputSampleRateHz, long inputSamples) -> long
static AndroidX.Media3.Common.Audio.SpeedChangingAudioProcessor.InterfaceConsts.EmptyBuffer.get -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.AudioAttributes.Default.get -> AndroidX.Media3.Common.AudioAttributes?
static AndroidX.Media3.Common.AudioAttributes.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.AudioAttributes?
static AndroidX.Media3.Common.C.ClearkeyUuid.get -> Java.Util.UUID?
static AndroidX.Media3.Common.C.CommonPsshUuid.get -> Java.Util.UUID?
static AndroidX.Media3.Common.C.GenerateAudioSessionIdV21(Android.Content.Context? context) -> int
static AndroidX.Media3.Common.C.GetErrorCodeForMediaDrmErrorCode(int mediaDrmErrorCode) -> int
static AndroidX.Media3.Common.C.GetFormatSupportString(int formatSupport) -> string?
static AndroidX.Media3.Common.C.MsToUs(long timeMs) -> long
static AndroidX.Media3.Common.C.PlayreadyUuid.get -> Java.Util.UUID?
static AndroidX.Media3.Common.C.UsToMs(long timeUs) -> long
static AndroidX.Media3.Common.C.UuidNil.get -> Java.Util.UUID?
static AndroidX.Media3.Common.C.WidevineUuid.get -> Java.Util.UUID?
static AndroidX.Media3.Common.ColorInfo.ColorSpaceToIsoColorPrimaries(int colorSpace) -> int
static AndroidX.Media3.Common.ColorInfo.ColorSpaceToIsoMatrixCoefficients(int colorSpace) -> int
static AndroidX.Media3.Common.ColorInfo.ColorTransferToIsoTransferCharacteristics(int colorTransfer) -> int
static AndroidX.Media3.Common.ColorInfo.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Common.ColorInfo.IsEquivalentToAssumedSdrDefault(AndroidX.Media3.Common.ColorInfo? colorInfo) -> bool
static AndroidX.Media3.Common.ColorInfo.IsTransferHdr(AndroidX.Media3.Common.ColorInfo? colorInfo) -> bool
static AndroidX.Media3.Common.ColorInfo.IsoColorPrimariesToColorSpace(int isoColorPrimaries) -> int
static AndroidX.Media3.Common.ColorInfo.IsoTransferCharacteristicsToColorTransfer(int isoTransferCharacteristics) -> int
static AndroidX.Media3.Common.ColorInfo.SdrBt709Limited.get -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Common.ColorInfo.SrgbBt709Full.get -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Common.DeviceInfo.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.DeviceInfo?
static AndroidX.Media3.Common.DeviceInfo.Unknown.get -> AndroidX.Media3.Common.DeviceInfo?
static AndroidX.Media3.Common.DrmInitData.CreateSessionCreationData(AndroidX.Media3.Common.DrmInitData? manifestData, AndroidX.Media3.Common.DrmInitData? mediaData) -> AndroidX.Media3.Common.DrmInitData?
static AndroidX.Media3.Common.DrmInitData.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Common.DrmInitData.SchemeData.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Common.FileTypes.InferFileTypeFromMimeType(string? mimeType) -> int
static AndroidX.Media3.Common.FileTypes.InferFileTypeFromResponseHeaders(System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>? responseHeaders) -> int
static AndroidX.Media3.Common.FileTypes.InferFileTypeFromUri(Android.Net.Uri? uri) -> int
static AndroidX.Media3.Common.Format.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Format?
static AndroidX.Media3.Common.Format.ToLogString(AndroidX.Media3.Common.Format? format) -> string?
static AndroidX.Media3.Common.GlTextureInfo.Unset.get -> AndroidX.Media3.Common.GlTextureInfo?
static AndroidX.Media3.Common.HeartRating.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.HeartRating?
static AndroidX.Media3.Common.Label.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Label?
static AndroidX.Media3.Common.MediaItem.AdsConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.AdsConfiguration?
static AndroidX.Media3.Common.MediaItem.ClippingConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.ClippingProperties?
static AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Unset.get -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration?
static AndroidX.Media3.Common.MediaItem.ClippingProperties.Unset.get -> AndroidX.Media3.Common.MediaItem.ClippingProperties?
static AndroidX.Media3.Common.MediaItem.DrmConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.DrmConfiguration?
static AndroidX.Media3.Common.MediaItem.Empty.get -> AndroidX.Media3.Common.MediaItem?
static AndroidX.Media3.Common.MediaItem.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem?
static AndroidX.Media3.Common.MediaItem.FromUri(Android.Net.Uri? uri) -> AndroidX.Media3.Common.MediaItem?
static AndroidX.Media3.Common.MediaItem.FromUri(string? uri) -> AndroidX.Media3.Common.MediaItem?
static AndroidX.Media3.Common.MediaItem.LiveConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.LiveConfiguration?
static AndroidX.Media3.Common.MediaItem.LiveConfiguration.Unset.get -> AndroidX.Media3.Common.MediaItem.LiveConfiguration?
static AndroidX.Media3.Common.MediaItem.LocalConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.LocalConfiguration?
static AndroidX.Media3.Common.MediaItem.RequestMetadata.Empty.get -> AndroidX.Media3.Common.MediaItem.RequestMetadata?
static AndroidX.Media3.Common.MediaItem.RequestMetadata.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.RequestMetadata?
static AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration?
static AndroidX.Media3.Common.MediaLibraryInfo.RegisterModule(string? name) -> void
static AndroidX.Media3.Common.MediaLibraryInfo.RegisteredModules() -> string?
static AndroidX.Media3.Common.MediaMetadata.Empty.get -> AndroidX.Media3.Common.MediaMetadata?
static AndroidX.Media3.Common.MediaMetadata.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.MediaMetadata?
static AndroidX.Media3.Common.MimeTypes.AllSamplesAreSyncSamples(string? mimeType, string? codec) -> bool
static AndroidX.Media3.Common.MimeTypes.ContainsCodecsCorrespondingToMimeType(string? codecs, string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.GetAudioMediaMimeType(string? codecs) -> string?
static AndroidX.Media3.Common.MimeTypes.GetCodecsCorrespondingToMimeType(string? codecs, string? mimeType) -> string?
static AndroidX.Media3.Common.MimeTypes.GetEncoding(string? mimeType, string? codec) -> int
static AndroidX.Media3.Common.MimeTypes.GetMediaMimeType(string? codec) -> string?
static AndroidX.Media3.Common.MimeTypes.GetMimeTypeFromMp4ObjectType(int objectType) -> string?
static AndroidX.Media3.Common.MimeTypes.GetMp4ObjectTypeFromMimeType(string? sampleMimeType) -> Java.Lang.Byte?
static AndroidX.Media3.Common.MimeTypes.GetTextMediaMimeType(string? codecs) -> string?
static AndroidX.Media3.Common.MimeTypes.GetTrackType(string? mimeType) -> int
static AndroidX.Media3.Common.MimeTypes.GetTrackTypeOfCodec(string? codec) -> int
static AndroidX.Media3.Common.MimeTypes.GetVideoMediaMimeType(string? codecs) -> string?
static AndroidX.Media3.Common.MimeTypes.IsAudio(string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.IsDolbyVisionCodec(string? codecs, string? supplementalCodecs) -> bool
static AndroidX.Media3.Common.MimeTypes.IsImage(string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.IsMatroska(string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.IsText(string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.IsVideo(string? mimeType) -> bool
static AndroidX.Media3.Common.MimeTypes.NormalizeMimeType(string? mimeType) -> string?
static AndroidX.Media3.Common.MimeTypes.RegisterCustomMimeType(string? mimeType, string? codecPrefix, int trackType) -> void
static AndroidX.Media3.Common.ParserException.CreateForMalformedContainer(string? message, Java.Lang.Throwable? cause) -> AndroidX.Media3.Common.ParserException?
static AndroidX.Media3.Common.ParserException.CreateForMalformedDataOfUnknownType(string? message, Java.Lang.Throwable? cause) -> AndroidX.Media3.Common.ParserException?
static AndroidX.Media3.Common.ParserException.CreateForMalformedManifest(string? message, Java.Lang.Throwable? cause) -> AndroidX.Media3.Common.ParserException?
static AndroidX.Media3.Common.ParserException.CreateForManifestWithUnsupportedFeature(string? message, Java.Lang.Throwable? cause) -> AndroidX.Media3.Common.ParserException?
static AndroidX.Media3.Common.ParserException.CreateForUnsupportedContainerFeature(string? message) -> AndroidX.Media3.Common.ParserException?
static AndroidX.Media3.Common.PercentageRating.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.PercentageRating?
static AndroidX.Media3.Common.PlaybackException.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.PlaybackException?
static AndroidX.Media3.Common.PlaybackException.GetErrorCodeName(int errorCode) -> string?
static AndroidX.Media3.Common.PlaybackParameters.Default.get -> AndroidX.Media3.Common.PlaybackParameters?
static AndroidX.Media3.Common.PlaybackParameters.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.PlaybackParameters?
static AndroidX.Media3.Common.PlayerCommands.Empty.get -> AndroidX.Media3.Common.PlayerCommands?
static AndroidX.Media3.Common.PlayerCommands.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.PlayerCommands?
static AndroidX.Media3.Common.PlayerPositionInfo.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.PlayerPositionInfo?
static AndroidX.Media3.Common.Rating.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Rating?
static AndroidX.Media3.Common.StarRating.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.StarRating?
static AndroidX.Media3.Common.StreamKey.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Common.StreamKey.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.StreamKey?
static AndroidX.Media3.Common.Text.Cue.Empty.get -> AndroidX.Media3.Common.Text.Cue?
static AndroidX.Media3.Common.Text.Cue.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Text.Cue?
static AndroidX.Media3.Common.Text.CueGroup.EmptyTimeZero.get -> AndroidX.Media3.Common.Text.CueGroup?
static AndroidX.Media3.Common.Text.CueGroup.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Text.CueGroup?
static AndroidX.Media3.Common.Text.RubySpan.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Text.RubySpan?
static AndroidX.Media3.Common.Text.SpanUtil.AddInheritedRelativeSizeSpan(Android.Text.ISpannable? spannable, float size, int start, int end, int spanFlags) -> void
static AndroidX.Media3.Common.Text.SpanUtil.AddOrReplaceSpan(Android.Text.ISpannable? spannable, Java.Lang.Object? span, int start, int end, int spanFlags) -> void
static AndroidX.Media3.Common.Text.TextEmphasisSpan.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Text.TextEmphasisSpan?
static AndroidX.Media3.Common.Text.VoiceSpan.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Text.VoiceSpan?
static AndroidX.Media3.Common.ThumbRating.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.ThumbRating?
static AndroidX.Media3.Common.Timeline.Empty.get -> AndroidX.Media3.Common.Timeline?
static AndroidX.Media3.Common.Timeline.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Timeline?
static AndroidX.Media3.Common.Timeline.Period.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Timeline.Period?
static AndroidX.Media3.Common.Timeline.Window.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Timeline.Window?
static AndroidX.Media3.Common.Timeline.Window.SingleWindowUid.get -> Java.Lang.Object?
static AndroidX.Media3.Common.TrackGroup.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.TrackGroup?
static AndroidX.Media3.Common.TrackSelectionOverride.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.TrackSelectionOverride?
static AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.Default.get -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences?
static AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences?
static AndroidX.Media3.Common.TrackSelectionParameters.Default.get -> AndroidX.Media3.Common.TrackSelectionParameters?
static AndroidX.Media3.Common.TrackSelectionParameters.DefaultWithoutContext.get -> AndroidX.Media3.Common.TrackSelectionParameters?
static AndroidX.Media3.Common.TrackSelectionParameters.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.TrackSelectionParameters?
static AndroidX.Media3.Common.TrackSelectionParameters.GetDefaults(Android.Content.Context? context) -> AndroidX.Media3.Common.TrackSelectionParameters?
static AndroidX.Media3.Common.Tracks.Empty.get -> AndroidX.Media3.Common.Tracks?
static AndroidX.Media3.Common.Tracks.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Tracks?
static AndroidX.Media3.Common.Tracks.Group.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.Tracks.Group?
static AndroidX.Media3.Common.Util.Assertions.CheckArgument(bool expression) -> void
static AndroidX.Media3.Common.Util.Assertions.CheckArgument(bool expression, Java.Lang.Object? errorMessage) -> void
static AndroidX.Media3.Common.Util.Assertions.CheckIndex(int index, int start, int limit) -> int
static AndroidX.Media3.Common.Util.Assertions.CheckMainThread() -> void
static AndroidX.Media3.Common.Util.Assertions.CheckNotEmpty(string? string) -> string?
static AndroidX.Media3.Common.Util.Assertions.CheckNotEmpty(string? string, Java.Lang.Object? errorMessage) -> string?
static AndroidX.Media3.Common.Util.Assertions.CheckNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static AndroidX.Media3.Common.Util.Assertions.CheckNotNull(Java.Lang.Object? reference, Java.Lang.Object? errorMessage) -> Java.Lang.Object?
static AndroidX.Media3.Common.Util.Assertions.CheckState(bool expression) -> void
static AndroidX.Media3.Common.Util.Assertions.CheckState(bool expression, Java.Lang.Object? errorMessage) -> void
static AndroidX.Media3.Common.Util.Assertions.CheckStateNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static AndroidX.Media3.Common.Util.Assertions.CheckStateNotNull(Java.Lang.Object? reference, Java.Lang.Object? errorMessage) -> Java.Lang.Object?
static AndroidX.Media3.Common.Util.BackgroundExecutor.Get() -> Java.Util.Concurrent.IExecutor?
static AndroidX.Media3.Common.Util.BackgroundExecutor.Set(Java.Util.Concurrent.IExecutor? executor) -> void
static AndroidX.Media3.Common.Util.BundleCollectionUtil.BundleToStringHashMap(Android.OS.Bundle? bundle) -> System.Collections.Generic.IDictionary<string!, string!>?
static AndroidX.Media3.Common.Util.BundleCollectionUtil.EnsureClassLoader(Android.OS.Bundle? bundle) -> void
static AndroidX.Media3.Common.Util.BundleCollectionUtil.GetBundleWithDefault(Android.OS.Bundle? bundle, string? field, Android.OS.Bundle? defaultValue) -> Android.OS.Bundle?
static AndroidX.Media3.Common.Util.BundleCollectionUtil.GetIntegerArrayListWithDefault(Android.OS.Bundle? bundle, string? field, System.Collections.Generic.IList<Java.Lang.Integer!>? defaultValue) -> System.Collections.Generic.IList<Java.Lang.Integer!>?
static AndroidX.Media3.Common.Util.BundleCollectionUtil.StringMapToBundle(System.Collections.Generic.IDictionary<string!, string!>? map) -> Android.OS.Bundle?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.BuildAvcCodecString(int profileIdc, int constraintsFlagsAndReservedZero2Bits, int levelIdc) -> string?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.BuildCea708InitializationData(bool isWideAspectRatio) -> System.Collections.Generic.IList<byte[]!>?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.BuildH263CodecString(int profile, int level) -> string?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.BuildHevcCodecString(int generalProfileSpace, bool generalTierFlag, int generalProfileIdc, int generalProfileCompatibilityFlags, int[]? constraintBytes, int generalLevelIdc) -> string?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.BuildNalUnit(byte[]? data, int offset, int length) -> byte[]?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.GetCodecProfileAndLevel(AndroidX.Media3.Common.Format? format) -> Android.Util.Pair?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.GetHevcProfileAndLevel(string? codec, string![]? parts, AndroidX.Media3.Common.ColorInfo? colorInfo) -> Android.Util.Pair?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.GetVideoResolutionFromMpeg4VideoConfig(byte[]? videoSpecificConfig) -> Android.Util.Pair?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.ParseAlacAudioSpecificConfig(byte[]? audioSpecificConfig) -> Android.Util.Pair?
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.ParseCea708InitializationData(System.Collections.Generic.IList<byte[]!>? initializationData) -> bool
static AndroidX.Media3.Common.Util.CodecSpecificDataUtil.SplitNalUnits(byte[]? data) -> byte[]![]?
static AndroidX.Media3.Common.Util.ColorParser.ParseCssColor(string? colorExpression) -> int
static AndroidX.Media3.Common.Util.ColorParser.ParseTtmlColor(string? colorExpression) -> int
static AndroidX.Media3.Common.Util.GlUtil.AwaitSyncObject(long syncObject) -> void
static AndroidX.Media3.Common.Util.GlUtil.BindTexture(int textureTarget, int texId, int sampleFilter) -> void
static AndroidX.Media3.Common.Util.GlUtil.BlitFrameBuffer(int readFboId, AndroidX.Media3.Common.Util.GlRect? readRect, int drawFboId, AndroidX.Media3.Common.Util.GlRect? drawRect) -> void
static AndroidX.Media3.Common.Util.GlUtil.CheckGlError() -> void
static AndroidX.Media3.Common.Util.GlUtil.CheckGlException(bool expression, string? errorMessage) -> void
static AndroidX.Media3.Common.Util.GlUtil.ClearFocusedBuffers() -> void
static AndroidX.Media3.Common.Util.GlUtil.ContextMajorVersion.get -> long
static AndroidX.Media3.Common.Util.GlUtil.Create4x4IdentityMatrix() -> float[]?
static AndroidX.Media3.Common.Util.GlUtil.CreateBuffer(float[]? data) -> Java.Nio.FloatBuffer?
static AndroidX.Media3.Common.Util.GlUtil.CreateEglContext(Android.Opengl.EGLContext? sharedContext, Android.Opengl.EGLDisplay? eglDisplay, int openGlVersion, int[]? configAttributes) -> Android.Opengl.EGLContext?
static AndroidX.Media3.Common.Util.GlUtil.CreateEglContext(Android.Opengl.EGLDisplay? eglDisplay) -> Android.Opengl.EGLContext?
static AndroidX.Media3.Common.Util.GlUtil.CreateEglSurface(Android.Opengl.EGLDisplay? eglDisplay, Java.Lang.Object? surface, int colorTransfer, bool isEncoderInputSurface) -> Android.Opengl.EGLSurface?
static AndroidX.Media3.Common.Util.GlUtil.CreateExternalTexture() -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateFboForTexture(int texId) -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateFocusedPlaceholderEglSurface(Android.Opengl.EGLContext? eglContext, Android.Opengl.EGLDisplay? eglDisplay) -> Android.Opengl.EGLSurface?
static AndroidX.Media3.Common.Util.GlUtil.CreateGlSyncFence() -> long
static AndroidX.Media3.Common.Util.GlUtil.CreatePixelBufferObject(int size) -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateRgb10A2Texture(int width, int height) -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateTexture(Android.Graphics.Bitmap? bitmap) -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateTexture(int width, int height, bool useHighPrecisionColorComponents) -> int
static AndroidX.Media3.Common.Util.GlUtil.CreateVertexBuffer(System.Collections.Generic.IList<float[]!>? vertexList) -> float[]?
static AndroidX.Media3.Common.Util.GlUtil.CurrentContext.get -> Android.Opengl.EGLContext?
static AndroidX.Media3.Common.Util.GlUtil.DefaultEglDisplay.get -> Android.Opengl.EGLDisplay?
static AndroidX.Media3.Common.Util.GlUtil.DeleteBuffer(int bufferId) -> void
static AndroidX.Media3.Common.Util.GlUtil.DeleteFbo(int fboId) -> void
static AndroidX.Media3.Common.Util.GlUtil.DeleteRbo(int rboId) -> void
static AndroidX.Media3.Common.Util.GlUtil.DeleteSyncObject(long syncObject) -> void
static AndroidX.Media3.Common.Util.GlUtil.DeleteSyncObjectQuietly(long syncObject) -> void
static AndroidX.Media3.Common.Util.GlUtil.DeleteTexture(int textureId) -> void
static AndroidX.Media3.Common.Util.GlUtil.DestroyEglContext(Android.Opengl.EGLDisplay? eglDisplay, Android.Opengl.EGLContext? eglContext) -> void
static AndroidX.Media3.Common.Util.GlUtil.DestroyEglSurface(Android.Opengl.EGLDisplay? eglDisplay, Android.Opengl.EGLSurface? eglSurface) -> void
static AndroidX.Media3.Common.Util.GlUtil.EglConfigAttributesRgba1010102.get -> System.Collections.Generic.IList<int>?
static AndroidX.Media3.Common.Util.GlUtil.EglConfigAttributesRgba8888.get -> System.Collections.Generic.IList<int>?
static AndroidX.Media3.Common.Util.GlUtil.FocusEglSurface(Android.Opengl.EGLDisplay? eglDisplay, Android.Opengl.EGLContext? eglContext, Android.Opengl.EGLSurface? eglSurface, int width, int height) -> void
static AndroidX.Media3.Common.Util.GlUtil.FocusFramebuffer(Android.Opengl.EGLDisplay? eglDisplay, Android.Opengl.EGLContext? eglContext, Android.Opengl.EGLSurface? eglSurface, int framebuffer, int width, int height) -> void
static AndroidX.Media3.Common.Util.GlUtil.FocusFramebufferUsingCurrentContext(int framebuffer, int width, int height) -> void
static AndroidX.Media3.Common.Util.GlUtil.GenerateTexture() -> int
static AndroidX.Media3.Common.Util.GlUtil.GetNormalizedCoordinateBounds() -> float[]?
static AndroidX.Media3.Common.Util.GlUtil.GetTextureCoordinateBounds() -> float[]?
static AndroidX.Media3.Common.Util.GlUtil.IsBt2020HlgExtensionSupported.get -> bool
static AndroidX.Media3.Common.Util.GlUtil.IsBt2020PqExtensionSupported.get -> bool
static AndroidX.Media3.Common.Util.GlUtil.IsProtectedContentExtensionSupported(Android.Content.Context? context) -> bool
static AndroidX.Media3.Common.Util.GlUtil.IsSurfacelessContextExtensionSupported.get -> bool
static AndroidX.Media3.Common.Util.GlUtil.IsYuvTargetExtensionSupported.get -> bool
static AndroidX.Media3.Common.Util.GlUtil.MapPixelBufferObject(int bufferId, int size) -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.Util.GlUtil.SchedulePixelBufferRead(int readFboId, int width, int height, int bufferId) -> void
static AndroidX.Media3.Common.Util.GlUtil.SetTexture(int texId, Android.Graphics.Bitmap? bitmap) -> void
static AndroidX.Media3.Common.Util.GlUtil.SetToIdentity(float[]? matrix) -> void
static AndroidX.Media3.Common.Util.GlUtil.UnmapPixelBufferObject(int bufferId) -> void
static AndroidX.Media3.Common.Util.Log.AppendThrowableString(string? message, Java.Lang.Throwable? throwable) -> string?
static AndroidX.Media3.Common.Util.Log.D(string? tag, string? message) -> void
static AndroidX.Media3.Common.Util.Log.D(string? tag, string? message, Java.Lang.Throwable? throwable) -> void
static AndroidX.Media3.Common.Util.Log.E(string? tag, string? message) -> void
static AndroidX.Media3.Common.Util.Log.E(string? tag, string? message, Java.Lang.Throwable? throwable) -> void
static AndroidX.Media3.Common.Util.Log.GetThrowableString(Java.Lang.Throwable? throwable) -> string?
static AndroidX.Media3.Common.Util.Log.I(string? tag, string? message) -> void
static AndroidX.Media3.Common.Util.Log.I(string? tag, string? message, Java.Lang.Throwable? throwable) -> void
static AndroidX.Media3.Common.Util.Log.LogLevel.get -> int
static AndroidX.Media3.Common.Util.Log.LogLevel.set -> void
static AndroidX.Media3.Common.Util.Log.SetLogStackTraces(bool logStackTraces) -> void
static AndroidX.Media3.Common.Util.Log.SetLogger(AndroidX.Media3.Common.Util.Log.ILogger? logger) -> void
static AndroidX.Media3.Common.Util.Log.W(string? tag, string? message) -> void
static AndroidX.Media3.Common.Util.Log.W(string? tag, string? message, Java.Lang.Throwable? throwable) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.CreateFormatFromMediaFormat(Android.Media.MediaFormat? mediaFormat) -> AndroidX.Media3.Common.Format?
static AndroidX.Media3.Common.Util.MediaFormatUtil.CreateMediaFormatFromFormat(AndroidX.Media3.Common.Format? format) -> Android.Media.MediaFormat?
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetArray(Java.Nio.ByteBuffer? byteBuffer) -> byte[]?
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetColorInfo(Android.Media.MediaFormat? mediaFormat) -> AndroidX.Media3.Common.ColorInfo?
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetFloat(Android.Media.MediaFormat? mediaFormat, string? name, float defaultValue) -> float
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetInteger(Android.Media.MediaFormat? mediaFormat, string? name, int defaultValue) -> int
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetString(Android.Media.MediaFormat? mediaFormat, string? name, string? defaultValue) -> string?
static AndroidX.Media3.Common.Util.MediaFormatUtil.GetTimeLapseFrameRate(Android.Media.MediaFormat? format) -> Java.Lang.Integer?
static AndroidX.Media3.Common.Util.MediaFormatUtil.IsAudioFormat(Android.Media.MediaFormat? mediaFormat) -> bool
static AndroidX.Media3.Common.Util.MediaFormatUtil.IsVideoFormat(Android.Media.MediaFormat? mediaFormat) -> bool
static AndroidX.Media3.Common.Util.MediaFormatUtil.MaybeSetByteBuffer(Android.Media.MediaFormat? format, string? key, byte[]? value) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.MaybeSetColorInfo(Android.Media.MediaFormat? format, AndroidX.Media3.Common.ColorInfo? colorInfo) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.MaybeSetFloat(Android.Media.MediaFormat? format, string? key, float value) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.MaybeSetInteger(Android.Media.MediaFormat? format, string? key, int value) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.MaybeSetString(Android.Media.MediaFormat? format, string? key, string? value) -> void
static AndroidX.Media3.Common.Util.MediaFormatUtil.SetCsdBuffers(Android.Media.MediaFormat? format, System.Collections.Generic.IList<byte[]!>? csdBuffers) -> void
static AndroidX.Media3.Common.Util.NetworkTypeObserver.GetInstance(Android.Content.Context? context) -> AndroidX.Media3.Common.Util.NetworkTypeObserver?
static AndroidX.Media3.Common.Util.NetworkTypeObserver.ResetForTests() -> void
static AndroidX.Media3.Common.Util.NotificationUtil.CreateNotificationChannel(Android.Content.Context? context, string? id, int nameResourceId, int descriptionResourceId, int importance) -> void
static AndroidX.Media3.Common.Util.NotificationUtil.SetNotification(Android.Content.Context? context, int id, Android.App.Notification? notification) -> void
static AndroidX.Media3.Common.Util.RepeatModeUtil.GetNextRepeatMode(int currentMode, int enabledModes) -> int
static AndroidX.Media3.Common.Util.RepeatModeUtil.IsRepeatModeEnabled(int repeatMode, int enabledModes) -> bool
static AndroidX.Media3.Common.Util.Size.Unknown.get -> AndroidX.Media3.Common.Util.Size?
static AndroidX.Media3.Common.Util.Size.Zero.get -> AndroidX.Media3.Common.Util.Size?
static AndroidX.Media3.Common.Util.SpeedProviderUtil.GetDurationAfterSpeedProviderApplied(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider, long durationUs) -> long
static AndroidX.Media3.Common.Util.SpeedProviderUtil.GetNextSpeedChangeSamplePosition(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider, long samplePosition, int sampleRate) -> long
static AndroidX.Media3.Common.Util.SpeedProviderUtil.GetSampleAlignedSpeed(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider, long samplePosition, int sampleRate) -> float
static AndroidX.Media3.Common.Util.SystemClock.InterfaceConsts.Default.get -> AndroidX.Media3.Common.Util.IClock?
static AndroidX.Media3.Common.Util.TimestampAdjuster.PtsToUs(long pts) -> long
static AndroidX.Media3.Common.Util.TimestampAdjuster.UsToNonWrappedPts(long us) -> long
static AndroidX.Media3.Common.Util.TimestampAdjuster.UsToWrappedPts(long us) -> long
static AndroidX.Media3.Common.Util.TraceUtil.BeginSection(string? sectionName) -> void
static AndroidX.Media3.Common.Util.TraceUtil.EndSection() -> void
static AndroidX.Media3.Common.Util.UriUtil.GetRelativePath(Android.Net.Uri? baseUri, Android.Net.Uri? targetUri) -> string?
static AndroidX.Media3.Common.Util.UriUtil.IsAbsolute(string? uri) -> bool
static AndroidX.Media3.Common.Util.UriUtil.RemoveQueryParameter(Android.Net.Uri? uri, string? queryParameterName) -> Android.Net.Uri?
static AndroidX.Media3.Common.Util.UriUtil.Resolve(string? baseUri, string? referenceUri) -> string?
static AndroidX.Media3.Common.Util.UriUtil.ResolveToUri(string? baseUri, string? referenceUri) -> Android.Net.Uri?
static AndroidX.Media3.Common.Util.Util.AddWithOverflowDefault(long x, long y, long overflowResult) -> long
static AndroidX.Media3.Common.Util.Util.AreEqual(Java.Lang.Object? o1, Java.Lang.Object? o2) -> bool
static AndroidX.Media3.Common.Util.Util.BinarySearchCeil(System.Collections.Generic.IList<Java.Lang.IComparable!>? list, Java.Lang.Object? value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchCeil(int[]? array, int value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchCeil(long[]? array, long value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchFloor(AndroidX.Media3.Common.Util.LongArray? longArray, long value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchFloor(System.Collections.Generic.IList<Java.Lang.IComparable!>? list, Java.Lang.Object? value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchFloor(int[]? array, int value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.BinarySearchFloor(long[]? array, long value, bool inclusive, bool stayInBounds) -> int
static AndroidX.Media3.Common.Util.Util.CastNonNull(Java.Lang.Object? value) -> Java.Lang.Object?
static AndroidX.Media3.Common.Util.Util.CastNonNullTypeArray(Java.Lang.Object![]? value) -> Java.Lang.Object![]?
static AndroidX.Media3.Common.Util.Util.CeilDivide(int numerator, int denominator) -> int
static AndroidX.Media3.Common.Util.Util.CeilDivide(long numerator, long denominator) -> long
static AndroidX.Media3.Common.Util.Util.CheckCleartextTrafficPermitted(params AndroidX.Media3.Common.MediaItem![]? mediaItems) -> bool
static AndroidX.Media3.Common.Util.Util.CloseQuietly(Java.IO.ICloseable? closeable) -> void
static AndroidX.Media3.Common.Util.Util.CompareLong(long left, long right) -> int
static AndroidX.Media3.Common.Util.Util.ConstrainValue(float value, float min, float max) -> float
static AndroidX.Media3.Common.Util.Util.ConstrainValue(int value, int min, int max) -> int
static AndroidX.Media3.Common.Util.Util.ConstrainValue(long value, long min, long max) -> long
static AndroidX.Media3.Common.Util.Util.Contains(Android.Util.SparseArray? sparseArray, int key) -> bool
static AndroidX.Media3.Common.Util.Util.Contains(Java.Lang.Object![]? items, Java.Lang.Object? item) -> bool
static AndroidX.Media3.Common.Util.Util.ContentEquals(Android.Util.SparseArray? sparseArray1, Android.Util.SparseArray? sparseArray2) -> bool
static AndroidX.Media3.Common.Util.Util.ContentHashCode(Android.Util.SparseArray? sparseArray) -> int
static AndroidX.Media3.Common.Util.Util.Crc16(byte[]? bytes, int start, int end, int initialValue) -> int
static AndroidX.Media3.Common.Util.Util.Crc32(byte[]? bytes, int start, int end, int initialValue) -> int
static AndroidX.Media3.Common.Util.Util.Crc8(byte[]? bytes, int start, int end, int initialValue) -> int
static AndroidX.Media3.Common.Util.Util.CreateHandler(Android.OS.Looper? looper, Android.OS.Handler.ICallback? callback) -> Android.OS.Handler?
static AndroidX.Media3.Common.Util.Util.CreateHandlerForCurrentLooper() -> Android.OS.Handler?
static AndroidX.Media3.Common.Util.Util.CreateHandlerForCurrentLooper(Android.OS.Handler.ICallback? callback) -> Android.OS.Handler?
static AndroidX.Media3.Common.Util.Util.CreateHandlerForCurrentOrMainLooper() -> Android.OS.Handler?
static AndroidX.Media3.Common.Util.Util.CreateHandlerForCurrentOrMainLooper(Android.OS.Handler.ICallback? callback) -> Android.OS.Handler?
static AndroidX.Media3.Common.Util.Util.CreateReadOnlyByteBuffer(Java.Nio.ByteBuffer? byteBuffer) -> Java.Nio.ByteBuffer?
static AndroidX.Media3.Common.Util.Util.CreateTempDirectory(Android.Content.Context? context, string? prefix) -> Java.IO.File?
static AndroidX.Media3.Common.Util.Util.CreateTempFile(Android.Content.Context? context, string? prefix) -> Java.IO.File?
static AndroidX.Media3.Common.Util.Util.CurrentOrMainLooper.get -> Android.OS.Looper?
static AndroidX.Media3.Common.Util.Util.DefaultDisplayLocale.get -> Java.Util.Locale?
static AndroidX.Media3.Common.Util.Util.Device.get -> string?
static AndroidX.Media3.Common.Util.Util.DeviceDebugInfo.get -> string?
static AndroidX.Media3.Common.Util.Util.DurationUsToSampleCount(long durationUs, int sampleRate) -> long
static AndroidX.Media3.Common.Util.Util.EmptyByteArray.get -> System.Collections.Generic.IList<byte>?
static AndroidX.Media3.Common.Util.Util.EmptyLongArray.get -> System.Collections.Generic.IList<long>?
static AndroidX.Media3.Common.Util.Util.EscapeFileName(string? fileName) -> string?
static AndroidX.Media3.Common.Util.Util.FixSmoothStreamingIsmManifestUri(Android.Net.Uri? uri) -> Android.Net.Uri?
static AndroidX.Media3.Common.Util.Util.FormatInvariant(string? format, params Java.Lang.Object![]? args) -> string?
static AndroidX.Media3.Common.Util.Util.FromUtf8Bytes(byte[]? bytes) -> string?
static AndroidX.Media3.Common.Util.Util.FromUtf8Bytes(byte[]? bytes, int offset, int length) -> string?
static AndroidX.Media3.Common.Util.Util.GenerateAudioSessionIdV21(Android.Content.Context? context) -> int
static AndroidX.Media3.Common.Util.Util.GetAdaptiveMimeTypeForContentType(int contentType) -> string?
static AndroidX.Media3.Common.Util.Util.GetApiLevelThatAudioFormatIntroducedAudioEncoding(int encoding) -> int
static AndroidX.Media3.Common.Util.Util.GetAudioContentTypeForStreamType(int streamType) -> int
static AndroidX.Media3.Common.Util.Util.GetAudioFormat(int sampleRate, int channelConfig, int encoding) -> Android.Media.AudioFormat?
static AndroidX.Media3.Common.Util.Util.GetAudioTrackChannelConfig(int channelCount) -> int
static AndroidX.Media3.Common.Util.Util.GetAudioUsageForStreamType(int streamType) -> int
static AndroidX.Media3.Common.Util.Util.GetAuxiliaryTrackTypeString(int auxiliaryTrackType) -> string?
static AndroidX.Media3.Common.Util.Util.GetAvailableCommands(AndroidX.Media3.Common.IPlayer? player, AndroidX.Media3.Common.PlayerCommands? permanentAvailableCommands) -> AndroidX.Media3.Common.PlayerCommands?
static AndroidX.Media3.Common.Util.Util.GetBigEndianInt(Java.Nio.ByteBuffer? buffer, int index) -> int
static AndroidX.Media3.Common.Util.Util.GetByteDepth(int pcmEncoding) -> int
static AndroidX.Media3.Common.Util.Util.GetBytesFromHexString(string? hexString) -> byte[]?
static AndroidX.Media3.Common.Util.Util.GetCodecCountOfType(string? codecs, int trackType) -> int
static AndroidX.Media3.Common.Util.Util.GetCodecsOfType(string? codecs, int trackType) -> string?
static AndroidX.Media3.Common.Util.Util.GetCodecsWithoutType(string? codecs, int trackType) -> string?
static AndroidX.Media3.Common.Util.Util.GetCountryCode(Android.Content.Context? context) -> string?
static AndroidX.Media3.Common.Util.Util.GetCurrentDisplayModeSize(Android.Content.Context? context) -> Android.Graphics.Point?
static AndroidX.Media3.Common.Util.Util.GetCurrentDisplayModeSize(Android.Content.Context? context, Android.Views.Display? display) -> Android.Graphics.Point?
static AndroidX.Media3.Common.Util.Util.GetDataUriForString(string? mimeType, string? data) -> Android.Net.Uri?
static AndroidX.Media3.Common.Util.Util.GetDrawable(Android.Content.Context? context, Android.Content.Res.Resources? resources, int drawableRes) -> Android.Graphics.Drawables.Drawable?
static AndroidX.Media3.Common.Util.Util.GetDrmUuid(string? drmScheme) -> Java.Util.UUID?
static AndroidX.Media3.Common.Util.Util.GetErrorCodeForMediaDrmErrorCode(int mediaDrmErrorCode) -> int
static AndroidX.Media3.Common.Util.Util.GetErrorCodeFromPlatformDiagnosticsInfo(string? diagnosticsInfo) -> int
static AndroidX.Media3.Common.Util.Util.GetFormatSupportString(int formatSupport) -> string?
static AndroidX.Media3.Common.Util.Util.GetIntegerCodeForString(string? string) -> int
static AndroidX.Media3.Common.Util.Util.GetLocaleLanguageTag(Java.Util.Locale? locale) -> string?
static AndroidX.Media3.Common.Util.Util.GetMaxPendingFramesCountForMediaCodecDecoders(Android.Content.Context? context) -> int
static AndroidX.Media3.Common.Util.Util.GetMediaDurationForPlayoutDuration(long playoutDuration, float speed) -> long
static AndroidX.Media3.Common.Util.Util.GetNowUnixTimeMs(long elapsedRealtimeEpochOffsetMs) -> long
static AndroidX.Media3.Common.Util.Util.GetPcmEncoding(int bitDepth) -> int
static AndroidX.Media3.Common.Util.Util.GetPcmFormat(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? audioFormat) -> AndroidX.Media3.Common.Format?
static AndroidX.Media3.Common.Util.Util.GetPcmFormat(int pcmEncoding, int channels, int sampleRate) -> AndroidX.Media3.Common.Format?
static AndroidX.Media3.Common.Util.Util.GetPcmFrameSize(int pcmEncoding, int channelCount) -> int
static AndroidX.Media3.Common.Util.Util.GetPlayoutDurationForMediaDuration(long mediaDuration, float speed) -> long
static AndroidX.Media3.Common.Util.Util.GetRoleFlagStrings(int roleFlags) -> System.Collections.Generic.IList<string!>?
static AndroidX.Media3.Common.Util.Util.GetSelectionFlagStrings(int selectionFlags) -> System.Collections.Generic.IList<string!>?
static AndroidX.Media3.Common.Util.Util.GetStreamTypeForAudioUsage(int usage) -> int
static AndroidX.Media3.Common.Util.Util.GetStringForTime(Java.Lang.StringBuilder? builder, Java.Util.Formatter? formatter, long timeMs) -> string?
static AndroidX.Media3.Common.Util.Util.GetSystemLanguageCodes() -> string![]?
static AndroidX.Media3.Common.Util.Util.GetTrackTypeString(int trackType) -> string?
static AndroidX.Media3.Common.Util.Util.GetUserAgent(Android.Content.Context? context, string? applicationName) -> string?
static AndroidX.Media3.Common.Util.Util.GetUtf8Bytes(string? value) -> byte[]?
static AndroidX.Media3.Common.Util.Util.Gzip(byte[]? input) -> byte[]?
static AndroidX.Media3.Common.Util.Util.HandlePauseButtonAction(AndroidX.Media3.Common.IPlayer? player) -> bool
static AndroidX.Media3.Common.Util.Util.HandlePlayButtonAction(AndroidX.Media3.Common.IPlayer? player) -> bool
static AndroidX.Media3.Common.Util.Util.HandlePlayPauseButtonAction(AndroidX.Media3.Common.IPlayer? player) -> bool
static AndroidX.Media3.Common.Util.Util.HandlePlayPauseButtonAction(AndroidX.Media3.Common.IPlayer? player, bool playIfSuppressed) -> bool
static AndroidX.Media3.Common.Util.Util.InferContentType(Android.Net.Uri? uri) -> int
static AndroidX.Media3.Common.Util.Util.InferContentType(Android.Net.Uri? uri, string? overrideExtension) -> int
static AndroidX.Media3.Common.Util.Util.InferContentType(string? fileName) -> int
static AndroidX.Media3.Common.Util.Util.InferContentTypeForExtension(string? fileExtension) -> int
static AndroidX.Media3.Common.Util.Util.InferContentTypeForUriAndMimeType(Android.Net.Uri? uri, string? mimeType) -> int
static AndroidX.Media3.Common.Util.Util.Inflate(AndroidX.Media3.Common.Util.ParsableByteArray? input, AndroidX.Media3.Common.Util.ParsableByteArray? output, Java.Util.Zip.Inflater? inflater) -> bool
static AndroidX.Media3.Common.Util.Util.IntToStringMaxRadix(int i) -> string?
static AndroidX.Media3.Common.Util.Util.IsAutomotive(Android.Content.Context? context) -> bool
static AndroidX.Media3.Common.Util.Util.IsBitmapFactorySupportedMimeType(string? mimeType) -> bool
static AndroidX.Media3.Common.Util.Util.IsEncodingHighResolutionPcm(int encoding) -> bool
static AndroidX.Media3.Common.Util.Util.IsEncodingLinearPcm(int encoding) -> bool
static AndroidX.Media3.Common.Util.Util.IsFrameDropAllowedOnSurfaceInput(Android.Content.Context? context) -> bool
static AndroidX.Media3.Common.Util.Util.IsLinebreak(int c) -> bool
static AndroidX.Media3.Common.Util.Util.IsLocalFileUri(Android.Net.Uri? uri) -> bool
static AndroidX.Media3.Common.Util.Util.IsRunningOnEmulator.get -> bool
static AndroidX.Media3.Common.Util.Util.IsTv(Android.Content.Context? context) -> bool
static AndroidX.Media3.Common.Util.Util.IsWear(Android.Content.Context? context) -> bool
static AndroidX.Media3.Common.Util.Util.LinearSearch(int[]? array, int value) -> int
static AndroidX.Media3.Common.Util.Util.LinearSearch(long[]? array, long value) -> int
static AndroidX.Media3.Common.Util.Util.LoadAsset(Android.Content.Context? context, string? assetPath) -> string?
static AndroidX.Media3.Common.Util.Util.Manufacturer.get -> string?
static AndroidX.Media3.Common.Util.Util.MaxValue(Android.Util.SparseLongArray? sparseLongArray) -> long
static AndroidX.Media3.Common.Util.Util.MaybeInflate(AndroidX.Media3.Common.Util.ParsableByteArray? input, AndroidX.Media3.Common.Util.ParsableByteArray? output, Java.Util.Zip.Inflater? inflater) -> bool
static AndroidX.Media3.Common.Util.Util.MaybeRequestReadExternalStoragePermission(Android.App.Activity? activity, params Android.Net.Uri![]? uris) -> bool
static AndroidX.Media3.Common.Util.Util.MaybeRequestReadExternalStoragePermission(Android.App.Activity? activity, params AndroidX.Media3.Common.MediaItem![]? mediaItems) -> bool
static AndroidX.Media3.Common.Util.Util.MaybeRequestReadStoragePermission(Android.App.Activity? activity, params AndroidX.Media3.Common.MediaItem![]? mediaItems) -> bool
static AndroidX.Media3.Common.Util.Util.MinValue(Android.Util.SparseLongArray? sparseLongArray) -> long
static AndroidX.Media3.Common.Util.Util.Model.get -> string?
static AndroidX.Media3.Common.Util.Util.MoveItems(System.Collections.IList? items, int fromIndex, int toIndex, int newFromIndex) -> void
static AndroidX.Media3.Common.Util.Util.MsToUs(long timeMs) -> long
static AndroidX.Media3.Common.Util.Util.NewSingleThreadExecutor(string? threadName) -> Java.Util.Concurrent.IExecutorService?
static AndroidX.Media3.Common.Util.Util.NewSingleThreadScheduledExecutor(string? threadName) -> Java.Util.Concurrent.IScheduledExecutorService?
static AndroidX.Media3.Common.Util.Util.NormalizeLanguageCode(string? language) -> string?
static AndroidX.Media3.Common.Util.Util.NullSafeArrayAppend(Java.Lang.Object![]? original, Java.Lang.Object? newElement) -> Java.Lang.Object![]?
static AndroidX.Media3.Common.Util.Util.NullSafeArrayConcatenation(Java.Lang.Object![]? first, Java.Lang.Object![]? second) -> Java.Lang.Object![]?
static AndroidX.Media3.Common.Util.Util.NullSafeArrayCopy(Java.Lang.Object![]? input, int length) -> Java.Lang.Object![]?
static AndroidX.Media3.Common.Util.Util.NullSafeArrayCopyOfRange(Java.Lang.Object![]? input, int from, int to) -> Java.Lang.Object![]?
static AndroidX.Media3.Common.Util.Util.NullSafeListToArray(System.Collections.IList? list, Java.Lang.Object![]? array) -> void
static AndroidX.Media3.Common.Util.Util.ParseXsDateTime(string? value) -> long
static AndroidX.Media3.Common.Util.Util.ParseXsDuration(string? value) -> long
static AndroidX.Media3.Common.Util.Util.PostOrRun(Android.OS.Handler? handler, Java.Lang.IRunnable? runnable) -> bool
static AndroidX.Media3.Common.Util.Util.PostOrRunWithCompletion(Android.OS.Handler? handler, Java.Lang.IRunnable? runnable, Java.Lang.Object? successValue) -> Google.Common.Util.Concurrent.IListenableFuture?
static AndroidX.Media3.Common.Util.Util.ReadBoolean(Android.OS.Parcel? parcel) -> bool
static AndroidX.Media3.Common.Util.Util.RecursiveDelete(Java.IO.File? fileOrDirectory) -> void
static AndroidX.Media3.Common.Util.Util.RegisterReceiverNotExported(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter) -> Android.Content.Intent?
static AndroidX.Media3.Common.Util.Util.RemoveRange(System.Collections.IList? list, int fromIndex, int toIndex) -> void
static AndroidX.Media3.Common.Util.Util.SampleCountToDurationUs(long sampleCount, int sampleRate) -> long
static AndroidX.Media3.Common.Util.Util.ScaleLargeTimestamp(long timestamp, long multiplier, long divisor) -> long
static AndroidX.Media3.Common.Util.Util.ScaleLargeTimestamps(System.Collections.Generic.IList<Java.Lang.Long!>? timestamps, long multiplier, long divisor) -> long[]?
static AndroidX.Media3.Common.Util.Util.ScaleLargeTimestampsInPlace(long[]? timestamps, long multiplier, long divisor) -> void
static AndroidX.Media3.Common.Util.Util.ScaleLargeValue(long value, long multiplier, long divisor, Java.Math.RoundingMode? roundingMode) -> long
static AndroidX.Media3.Common.Util.Util.ScaleLargeValues(System.Collections.Generic.IList<Java.Lang.Long!>? values, long multiplier, long divisor, Java.Math.RoundingMode? roundingMode) -> long[]?
static AndroidX.Media3.Common.Util.Util.ScaleLargeValuesInPlace(long[]? values, long multiplier, long divisor, Java.Math.RoundingMode? roundingMode) -> void
static AndroidX.Media3.Common.Util.Util.SdkInt.get -> int
static AndroidX.Media3.Common.Util.Util.SetForegroundServiceNotification(Android.App.Service? service, int notificationId, Android.App.Notification? notification, int foregroundServiceType, string? foregroundServiceManifestType) -> void
static AndroidX.Media3.Common.Util.Util.ShouldEnablePlayPauseButton(AndroidX.Media3.Common.IPlayer? player) -> bool
static AndroidX.Media3.Common.Util.Util.ShouldShowPlayButton(AndroidX.Media3.Common.IPlayer? player) -> bool
static AndroidX.Media3.Common.Util.Util.ShouldShowPlayButton(AndroidX.Media3.Common.IPlayer? player, bool playIfSuppressed) -> bool
static AndroidX.Media3.Common.Util.Util.SneakyThrow(Java.Lang.Throwable? t) -> void
static AndroidX.Media3.Common.Util.Util.Split(string? value, string? regex) -> string![]?
static AndroidX.Media3.Common.Util.Util.SplitAtFirst(string? value, string? regex) -> string![]?
static AndroidX.Media3.Common.Util.Util.SplitCodecs(string? codecs) -> string![]?
static AndroidX.Media3.Common.Util.Util.StartForegroundService(Android.Content.Context? context, Android.Content.Intent? intent) -> Android.Content.ComponentName?
static AndroidX.Media3.Common.Util.Util.SubtractWithOverflowDefault(long x, long y, long overflowResult) -> long
static AndroidX.Media3.Common.Util.Util.Sum(params long[]? summands) -> long
static AndroidX.Media3.Common.Util.Util.TableExists(Android.Database.Sqlite.SQLiteDatabase? database, string? tableName) -> bool
static AndroidX.Media3.Common.Util.Util.ToByteArray(System.IO.Stream? inputStream) -> byte[]?
static AndroidX.Media3.Common.Util.Util.ToByteArray(float value) -> byte[]?
static AndroidX.Media3.Common.Util.Util.ToByteArray(params int[]? values) -> byte[]?
static AndroidX.Media3.Common.Util.Util.ToHexString(byte[]? bytes) -> string?
static AndroidX.Media3.Common.Util.Util.ToLong(int mostSignificantBits, int leastSignificantBits) -> long
static AndroidX.Media3.Common.Util.Util.ToUnsignedLong(int x) -> long
static AndroidX.Media3.Common.Util.Util.UnescapeFileName(string? fileName) -> string?
static AndroidX.Media3.Common.Util.Util.UsToMs(long timeUs) -> long
static AndroidX.Media3.Common.Util.Util.WriteBoolean(Android.OS.Parcel? parcel, bool value) -> void
static AndroidX.Media3.Common.Util.XmlPullParserUtil.GetAttributeValue(System.Xml.XmlReader? xpp, string? attributeName) -> string?
static AndroidX.Media3.Common.Util.XmlPullParserUtil.GetAttributeValueIgnorePrefix(System.Xml.XmlReader? xpp, string? attributeName) -> string?
static AndroidX.Media3.Common.Util.XmlPullParserUtil.IsEndTag(System.Xml.XmlReader? xpp) -> bool
static AndroidX.Media3.Common.Util.XmlPullParserUtil.IsEndTag(System.Xml.XmlReader? xpp, string? name) -> bool
static AndroidX.Media3.Common.Util.XmlPullParserUtil.IsStartTag(System.Xml.XmlReader? xpp) -> bool
static AndroidX.Media3.Common.Util.XmlPullParserUtil.IsStartTag(System.Xml.XmlReader? xpp, string? name) -> bool
static AndroidX.Media3.Common.Util.XmlPullParserUtil.IsStartTagIgnorePrefix(System.Xml.XmlReader? xpp, string? name) -> bool
static AndroidX.Media3.Common.VideoFrameProcessingException.From(Java.Lang.Exception? exception) -> AndroidX.Media3.Common.VideoFrameProcessingException?
static AndroidX.Media3.Common.VideoFrameProcessingException.From(Java.Lang.Exception? exception, long presentationTimeUs) -> AndroidX.Media3.Common.VideoFrameProcessingException?
static AndroidX.Media3.Common.VideoSize.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Common.VideoSize?
static AndroidX.Media3.Common.VideoSize.Unknown.get -> AndroidX.Media3.Common.VideoSize?
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.IsActive.get -> bool
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.IsEnded.get -> bool
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.OnConfigure(AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat? inputAudioFormat) -> AndroidX.Media3.Common.Audio.AudioProcessorAudioFormat?
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.OnFlush() -> void
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.OnQueueEndOfStream() -> void
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.OnReset() -> void
virtual AndroidX.Media3.Common.Audio.BaseAudioProcessor.Output.get -> Java.Nio.ByteBuffer?
virtual AndroidX.Media3.Common.ForwardingPlayer.AddListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.AddMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.AddMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.AddMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.AddMediaItems(int index, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ApplicationLooper.get -> Android.OS.Looper?
virtual AndroidX.Media3.Common.ForwardingPlayer.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
virtual AndroidX.Media3.Common.ForwardingPlayer.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
virtual AndroidX.Media3.Common.ForwardingPlayer.BufferedPercentage.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.BufferedPosition.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.CanAdvertiseSession() -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearMediaItems() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearVideoSurface() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearVideoSurface(Android.Views.Surface? surface) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ClearVideoTextureView(Android.Views.TextureView? textureView) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ContentBufferedPosition.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.ContentDuration.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.ContentPosition.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentAdGroupIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentAdIndexInAdGroup.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentLiveOffset.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentManifest.get -> Java.Lang.Object?
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentMediaItem.get -> AndroidX.Media3.Common.MediaItem?
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentMediaItemIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentPeriodIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentPosition.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
virtual AndroidX.Media3.Common.ForwardingPlayer.CurrentWindowIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.DecreaseDeviceVolume() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.DecreaseDeviceVolume(int flags) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
virtual AndroidX.Media3.Common.ForwardingPlayer.DeviceMuted.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.DeviceMuted.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.DeviceVolume.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.DeviceVolume.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.Duration.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.GetMediaItemAt(int index) -> AndroidX.Media3.Common.MediaItem?
virtual AndroidX.Media3.Common.ForwardingPlayer.HasNext.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.HasNextMediaItem.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.HasNextWindow.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.HasPreviousMediaItem.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IncreaseDeviceVolume() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.IncreaseDeviceVolume(int flags) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCommandAvailable(int command) -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentMediaItemDynamic.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentMediaItemLive.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentMediaItemSeekable.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentWindowDynamic.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentWindowLive.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsCurrentWindowSeekable.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsLoading.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsPlaying.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.IsPlayingAd.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.MaxSeekToPreviousPosition.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.MediaItemCount.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
virtual AndroidX.Media3.Common.ForwardingPlayer.MoveMediaItem(int currentIndex, int newIndex) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.MoveMediaItems(int fromIndex, int toIndex, int newIndex) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.Next() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.NextMediaItemIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.NextWindowIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.Pause() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.Play() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.PlayWhenReady.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.PlayWhenReady.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaybackParameters.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaybackState.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaybackSuppressionReason.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
virtual AndroidX.Media3.Common.ForwardingPlayer.PlaylistMetadata.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.Prepare() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.PreviousMediaItemIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.PreviousWindowIndex.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.Release() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.RemoveListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.RemoveMediaItem(int index) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.RemoveMediaItems(int fromIndex, int toIndex) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.RepeatMode.get -> int
virtual AndroidX.Media3.Common.ForwardingPlayer.RepeatMode.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ReplaceMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ReplaceMediaItems(int fromIndex, int toIndex, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekBack() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekBackIncrement.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekForward() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekForwardIncrement.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekTo(int mediaItemIndex, long positionMs) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekTo(long positionMs) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToDefaultPosition() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToDefaultPosition(int mediaItemIndex) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToNext() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToNextMediaItem() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToNextWindow() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToPrevious() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToPreviousMediaItem() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SeekToPreviousWindow() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes, bool handleAudioFocus) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetDeviceMuted(bool muted, int flags) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetDeviceVolume(int volume, int flags) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, bool resetPosition) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, long startPositionMs) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, bool resetPosition) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetPlaybackSpeed(float speed) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetVideoSurface(Android.Views.Surface? surface) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SetVideoTextureView(Android.Views.TextureView? textureView) -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.ShuffleModeEnabled.get -> bool
virtual AndroidX.Media3.Common.ForwardingPlayer.ShuffleModeEnabled.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.Stop() -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
virtual AndroidX.Media3.Common.ForwardingPlayer.TotalBufferedDuration.get -> long
virtual AndroidX.Media3.Common.ForwardingPlayer.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
virtual AndroidX.Media3.Common.ForwardingPlayer.TrackSelectionParameters.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
virtual AndroidX.Media3.Common.ForwardingPlayer.Volume.get -> float
virtual AndroidX.Media3.Common.ForwardingPlayer.Volume.set -> void
virtual AndroidX.Media3.Common.ForwardingPlayer.WrappedPlayer.get -> AndroidX.Media3.Common.IPlayer?
virtual AndroidX.Media3.Common.Label.ToBundle() -> Android.OS.Bundle?
virtual AndroidX.Media3.Common.MediaItem.ClippingConfiguration.BuildUpon() -> AndroidX.Media3.Common.MediaItem.ClippingConfiguration.Builder?
virtual AndroidX.Media3.Common.MediaItem.ClippingConfiguration.ToBundle() -> Android.OS.Bundle?
virtual AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.BuildUpon() -> AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.Builder?
virtual AndroidX.Media3.Common.MediaItem.SubtitleConfiguration.ToBundle() -> Android.OS.Bundle?
virtual AndroidX.Media3.Common.PlaybackException.ErrorInfoEquals(AndroidX.Media3.Common.PlaybackException? other) -> bool
virtual AndroidX.Media3.Common.PlaybackException.ToBundle() -> Android.OS.Bundle?
virtual AndroidX.Media3.Common.SimpleBasePlayer.GetPlaceholderMediaItemData(AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.Common.SimpleBasePlayer.MediaItemData?
virtual AndroidX.Media3.Common.SimpleBasePlayer.GetPlaceholderState(AndroidX.Media3.Common.SimpleBasePlayer.State? suggestedPlaceholderState) -> AndroidX.Media3.Common.SimpleBasePlayer.State?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleAddMediaItems(int index, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleClearVideoOutput(Java.Lang.Object? videoOutput) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleDecreaseDeviceVolume(int flags) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleIncreaseDeviceVolume(int flags) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleMoveMediaItems(int fromIndex, int toIndex, int newIndex) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandlePrepare() -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleRelease() -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleRemoveMediaItems(int fromIndex, int toIndex) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleReplaceMediaItems(int fromIndex, int toIndex, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSeek(int mediaItemIndex, long positionMs, int seekCommand) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes, bool handleAudioFocus) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetDeviceMuted(bool muted, int flags) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetDeviceVolume(int deviceVolume, int flags) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetPlayWhenReady(bool playWhenReady) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetPlaybackParameters(AndroidX.Media3.Common.PlaybackParameters? playbackParameters) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetPlaylistMetadata(AndroidX.Media3.Common.MediaMetadata? playlistMetadata) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetRepeatMode(int repeatMode) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetShuffleModeEnabled(bool shuffleModeEnabled) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetTrackSelectionParameters(AndroidX.Media3.Common.TrackSelectionParameters? trackSelectionParameters) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetVideoOutput(Java.Lang.Object? videoOutput) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleSetVolume(float volume) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.SimpleBasePlayer.HandleStop() -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Common.Timeline.GetFirstWindowIndex(bool shuffleModeEnabled) -> int
virtual AndroidX.Media3.Common.Timeline.GetLastWindowIndex(bool shuffleModeEnabled) -> int
virtual AndroidX.Media3.Common.Timeline.GetNextWindowIndex(int windowIndex, int repeatMode, bool shuffleModeEnabled) -> int
virtual AndroidX.Media3.Common.Timeline.GetPeriodByUid(Java.Lang.Object? periodUid, AndroidX.Media3.Common.Timeline.Period? period) -> AndroidX.Media3.Common.Timeline.Period?
virtual AndroidX.Media3.Common.Timeline.GetPreviousWindowIndex(int windowIndex, int repeatMode, bool shuffleModeEnabled) -> int
virtual AndroidX.Media3.Common.TrackSelectionParameters.BuildUpon() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.AddOverride(AndroidX.Media3.Common.TrackSelectionOverride? override) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.Build() -> AndroidX.Media3.Common.TrackSelectionParameters?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.ClearOverride(AndroidX.Media3.Common.TrackGroup? mediaTrackGroup) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.ClearOverrides() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.ClearOverridesOfType(int trackType) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.ClearVideoSizeConstraints() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.ClearViewportSizeConstraints() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.Set(AndroidX.Media3.Common.TrackSelectionParameters? parameters) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetAudioOffloadPreferences(AndroidX.Media3.Common.TrackSelectionParameters.AudioOffloadPreferences? audioOffloadPreferences) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetDisabledTrackTypes(System.Collections.Generic.ICollection<Java.Lang.Integer!>? disabledTrackTypes) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetForceHighestSupportedBitrate(bool forceHighestSupportedBitrate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetForceLowestBitrate(bool forceLowestBitrate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetIgnoredTextSelectionFlags(int ignoredTextSelectionFlags) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxAudioBitrate(int maxAudioBitrate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxAudioChannelCount(int maxAudioChannelCount) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxVideoBitrate(int maxVideoBitrate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxVideoFrameRate(int maxVideoFrameRate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxVideoSize(int maxVideoWidth, int maxVideoHeight) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMaxVideoSizeSd() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMinVideoBitrate(int minVideoBitrate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMinVideoFrameRate(int minVideoFrameRate) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetMinVideoSize(int minVideoWidth, int minVideoHeight) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetOverrideForType(AndroidX.Media3.Common.TrackSelectionOverride? override) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredAudioLanguage(string? preferredAudioLanguage) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredAudioLanguages(params string![]? preferredAudioLanguages) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredAudioMimeType(string? mimeType) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredAudioMimeTypes(params string![]? mimeTypes) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredAudioRoleFlags(int preferredAudioRoleFlags) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredTextLanguage(string? preferredTextLanguage) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings() -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(Android.Content.Context? context) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredTextLanguages(params string![]? preferredTextLanguages) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredTextRoleFlags(int preferredTextRoleFlags) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredVideoLanguage(string? preferredVideoLanguage) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredVideoLanguages(params string![]? preferredVideoLanguages) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredVideoMimeType(string? mimeType) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredVideoMimeTypes(params string![]? mimeTypes) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPreferredVideoRoleFlags(int preferredVideoRoleFlags) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetPrioritizeImageOverVideoEnabled(bool isPrioritizeImageOverVideoEnabled) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetSelectUndeterminedTextLanguage(bool selectUndeterminedTextLanguage) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetTrackTypeDisabled(int trackType, bool disabled) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetViewportSize(int viewportWidth, int viewportHeight, bool viewportOrientationMayChange) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetViewportSizeToPhysicalDisplaySize(Android.Content.Context? context, bool viewportOrientationMayChange) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.Builder.SetViewportSizeToPhysicalDisplaySize(bool viewportOrientationMayChange) -> AndroidX.Media3.Common.TrackSelectionParameters.Builder?
virtual AndroidX.Media3.Common.TrackSelectionParameters.ToBundle() -> Android.OS.Bundle?
virtual AndroidX.Media3.Common.Util.ConditionVariable.Block() -> void
virtual AndroidX.Media3.Common.Util.ConditionVariable.Block(long timeoutMs) -> bool
virtual AndroidX.Media3.Common.Util.ConditionVariable.BlockUninterruptible() -> void
virtual AndroidX.Media3.Common.Util.ConditionVariable.Close() -> bool
virtual AndroidX.Media3.Common.Util.ConditionVariable.IsOpen.get -> bool
virtual AndroidX.Media3.Common.Util.ConditionVariable.Open() -> bool
virtual AndroidX.Media3.Common.Util.LibraryLoader.IsAvailable.get -> bool
virtual AndroidX.Media3.Common.Util.LibraryLoader.SetLibraries(params string![]? libraries) -> void
virtual AndroidX.Media3.Common.Util.RunnableFutureTask.CancelWork() -> void
virtual AndroidX.Media3.Common.Util.SystemClock.CreateHandler(Android.OS.Looper? looper, Android.OS.Handler.ICallback? callback) -> AndroidX.Media3.Common.Util.IHandlerWrapper?
virtual AndroidX.Media3.Common.Util.SystemClock.CurrentTimeMillis() -> long
virtual AndroidX.Media3.Common.Util.SystemClock.ElapsedRealtime() -> long
virtual AndroidX.Media3.Common.Util.SystemClock.NanoTime() -> long
virtual AndroidX.Media3.Common.Util.SystemClock.OnThreadBlocked() -> void
virtual AndroidX.Media3.Common.Util.SystemClock.UptimeMillis() -> long
