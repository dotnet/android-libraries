#nullable enable
AndroidX.Media3.Session.CacheBitmapLoader
AndroidX.Media3.Session.CacheBitmapLoader.CacheBitmapLoader(AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> void
AndroidX.Media3.Session.CacheBitmapLoader.DecodeBitmap(byte[]? data) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.CacheBitmapLoader.LoadBitmap(Android.Net.Uri? uri) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.CacheBitmapLoader.SupportsMimeType(string? mimeType) -> bool
AndroidX.Media3.Session.CommandButton
AndroidX.Media3.Session.CommandButton.Builder
AndroidX.Media3.Session.CommandButton.Builder.Build() -> AndroidX.Media3.Session.CommandButton?
AndroidX.Media3.Session.CommandButton.Builder.Builder() -> void
AndroidX.Media3.Session.CommandButton.Builder.Builder(int icon) -> void
AndroidX.Media3.Session.CommandButton.Builder.SetCustomIconResId(int resId) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetDisplayName(Java.Lang.ICharSequence? displayName) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetDisplayName(string? displayName) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetEnabled(bool enabled) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetIconResId(int resId) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetIconUri(Android.Net.Uri? uri) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetPlayerCommand(int playerCommand) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetSessionCommand(AndroidX.Media3.Session.SessionCommand? sessionCommand) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.Builder.SetSlots(params int[]? slots) -> AndroidX.Media3.Session.CommandButton.Builder?
AndroidX.Media3.Session.CommandButton.DisplayConstraints
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.Build() -> AndroidX.Media3.Session.CommandButton.DisplayConstraints?
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.Builder() -> void
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.SetAllowCustomCommandsForSlot(int slot, bool allowCustomCommands) -> AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder?
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.SetAllowedPlayerCommandsForSlot(int slot, AndroidX.Media3.Common.PlayerCommands? allowedPlayerCommands) -> AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder?
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.SetAllowedSessionCommandsForSlot(int slot, AndroidX.Media3.Session.SessionCommands? allowedSessionCommands) -> AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder?
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.SetMaxButtonsForSlot(int slot, int maxButtons) -> AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder?
AndroidX.Media3.Session.CommandButton.DisplayConstraints.Resolve(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences, AndroidX.Media3.Common.IPlayer? player) -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.CommandButton.DisplayName.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.CommandButton.DisplayName.set -> void
AndroidX.Media3.Session.CommandButton.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.CommandButton.Extras.set -> void
AndroidX.Media3.Session.CommandButton.IIcon
AndroidX.Media3.Session.CommandButton.ISlot
AndroidX.Media3.Session.CommandButton.Icon.get -> int
AndroidX.Media3.Session.CommandButton.Icon.set -> void
AndroidX.Media3.Session.CommandButton.IconResId.get -> int
AndroidX.Media3.Session.CommandButton.IconResId.set -> void
AndroidX.Media3.Session.CommandButton.IconUri.get -> Android.Net.Uri?
AndroidX.Media3.Session.CommandButton.IconUri.set -> void
AndroidX.Media3.Session.CommandButton.IsEnabled.get -> bool
AndroidX.Media3.Session.CommandButton.IsEnabled.set -> void
AndroidX.Media3.Session.CommandButton.PlayerCommand.get -> int
AndroidX.Media3.Session.CommandButton.PlayerCommand.set -> void
AndroidX.Media3.Session.CommandButton.SessionCommand.get -> AndroidX.Media3.Session.SessionCommand?
AndroidX.Media3.Session.CommandButton.SessionCommand.set -> void
AndroidX.Media3.Session.CommandButton.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.DefaultMediaNotificationProvider
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.Build() -> AndroidX.Media3.Session.DefaultMediaNotificationProvider?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.Builder(Android.Content.Context? context) -> void
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.SetChannelId(string? channelId) -> AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.SetChannelName(int channelNameResourceId) -> AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.SetNotificationId(int notificationId) -> AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.SetNotificationIdProvider(AndroidX.Media3.Session.DefaultMediaNotificationProvider.INotificationIdProvider? notificationIdProvider) -> AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.CreateNotification(AndroidX.Media3.Session.MediaSession? mediaSession, Google.Common.Collect.ImmutableList? mediaButtonPreferences, AndroidX.Media3.Session.MediaNotification.IActionFactory? actionFactory, AndroidX.Media3.Session.MediaNotification.IProviderCallback? onNotificationChangedCallback) -> AndroidX.Media3.Session.MediaNotification?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultMediaNotificationProvider(Android.Content.Context? context) -> void
AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultMediaNotificationProvider(Android.Content.Context? context, AndroidX.Media3.Session.DefaultMediaNotificationProvider.INotificationIdProvider? notificationIdProvider, string? channelId, int channelNameResourceId) -> void
AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultMediaNotificationProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.DefaultMediaNotificationProvider.GetNotificationContentText(AndroidX.Media3.Common.MediaMetadata? metadata) -> string?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.GetNotificationContentTitle(AndroidX.Media3.Common.MediaMetadata? metadata) -> string?
AndroidX.Media3.Session.DefaultMediaNotificationProvider.HandleCustomCommand(AndroidX.Media3.Session.MediaSession? session, string? action, Android.OS.Bundle? extras) -> bool
AndroidX.Media3.Session.DefaultMediaNotificationProvider.INotificationIdProvider
AndroidX.Media3.Session.DefaultMediaNotificationProvider.INotificationIdProvider.GetNotificationId(AndroidX.Media3.Session.MediaSession? p0) -> int
AndroidX.Media3.Session.DefaultMediaNotificationProvider.SetSmallIcon(int smallIconResourceId) -> void
AndroidX.Media3.Session.IBitmapLoader
AndroidX.Media3.Session.IMediaController
AndroidX.Media3.Session.IMediaController.OnAvailableCommandsChangedFromPlayer(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnAvailableCommandsChangedFromSession(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaController.OnChildrenChanged(int p0, string? p1, int p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaController.OnConnected(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnCustomCommand(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaController.OnDisconnected(int p0) -> void
AndroidX.Media3.Session.IMediaController.OnError(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnExtrasChanged(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnLibraryResult(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnPeriodicSessionPositionInfoChanged(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnPlayerInfoChanged(int p0, Android.OS.Bundle? p1, bool p2) -> void
AndroidX.Media3.Session.IMediaController.OnPlayerInfoChangedWithExclusions(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaController.OnRenderedFirstFrame(int p0) -> void
AndroidX.Media3.Session.IMediaController.OnSearchResultChanged(int p0, string? p1, int p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaController.OnSessionActivityChanged(int p0, Android.App.PendingIntent? p1) -> void
AndroidX.Media3.Session.IMediaController.OnSessionResult(int p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.IMediaController.OnSetCustomLayout(int p0, System.Collections.Generic.IList<Android.OS.Bundle!>? p1) -> void
AndroidX.Media3.Session.IMediaController.OnSetMediaButtonPreferences(int p0, System.Collections.Generic.IList<Android.OS.Bundle!>? p1) -> void
AndroidX.Media3.Session.IMediaSession
AndroidX.Media3.Session.IMediaSession.AddMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.AddMediaItemWithIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.AddMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2) -> void
AndroidX.Media3.Session.IMediaSession.AddMediaItemsWithIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.IBinder? p3) -> void
AndroidX.Media3.Session.IMediaSession.ClearMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.Connect(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.DecreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.DecreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.FlushCommandQueue(AndroidX.Media3.Session.IMediaController? p0) -> void
AndroidX.Media3.Session.IMediaSession.GetChildren(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, Android.OS.Bundle? p5) -> void
AndroidX.Media3.Session.IMediaSession.GetItem(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2) -> void
AndroidX.Media3.Session.IMediaSession.GetLibraryRoot(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.GetSearchResult(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, Android.OS.Bundle? p5) -> void
AndroidX.Media3.Session.IMediaSession.IncreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.IncreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.MoveMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media3.Session.IMediaSession.MoveMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3, int p4) -> void
AndroidX.Media3.Session.IMediaSession.OnControllerResult(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.OnCustomCommand(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.Pause(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.Play(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.Prepare(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.Release(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.RemoveMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.RemoveMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media3.Session.IMediaSession.ReplaceMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.ReplaceMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3, Android.OS.IBinder? p4) -> void
AndroidX.Media3.Session.IMediaSession.Search(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.SeekBack(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekForward(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekTo(AndroidX.Media3.Session.IMediaController? p0, int p1, long p2) -> void
AndroidX.Media3.Session.IMediaSession.SeekToDefaultPosition(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekToDefaultPositionWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.SeekToNext(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekToNextMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekToPrevious(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekToPreviousMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.SeekToWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, long p3) -> void
AndroidX.Media3.Session.IMediaSession.SetAudioAttributes(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, bool p3) -> void
AndroidX.Media3.Session.IMediaSession.SetDeviceMuted(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
AndroidX.Media3.Session.IMediaSession.SetDeviceMutedWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2, int p3) -> void
AndroidX.Media3.Session.IMediaSession.SetDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.SetDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItemWithResetPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, bool p3) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItemWithStartPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, long p3) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItemsWithResetPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2, bool p3) -> void
AndroidX.Media3.Session.IMediaSession.SetMediaItemsWithStartIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2, int p3, long p4) -> void
AndroidX.Media3.Session.IMediaSession.SetPlayWhenReady(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
AndroidX.Media3.Session.IMediaSession.SetPlaybackParameters(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetPlaybackSpeed(AndroidX.Media3.Session.IMediaController? p0, int p1, float p2) -> void
AndroidX.Media3.Session.IMediaSession.SetPlaylistMetadata(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetRating(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetRatingWithMediaId(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.SetRepeatMode(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media3.Session.IMediaSession.SetShuffleModeEnabled(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
AndroidX.Media3.Session.IMediaSession.SetTrackSelectionParameters(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetVideoSurface(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.Views.Surface? p2) -> void
AndroidX.Media3.Session.IMediaSession.SetVolume(AndroidX.Media3.Session.IMediaController? p0, int p1, float p2) -> void
AndroidX.Media3.Session.IMediaSession.Stop(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
AndroidX.Media3.Session.IMediaSession.Subscribe(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media3.Session.IMediaSession.Unsubscribe(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2) -> void
AndroidX.Media3.Session.IMediaSessionService
AndroidX.Media3.Session.IMediaSessionService.Connect(AndroidX.Media3.Session.IMediaController? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.AudioAttributesImplBase() -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.AudioAttributesImplBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MContentType.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MContentType.set -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MFlags.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MFlags.set -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MLegacyStream.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MLegacyStream.set -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MUsage.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.MUsage.set -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.Builder() -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.Builder(AndroidX.Media3.Session.Legacy.AudioAttributesCompat? aa) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAttributeContentType
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAttributeUsage
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.AudioAttributes.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.ContentType.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.Flags.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.LegacyStreamType.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.RawLegacyStreamType.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.Usage.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl.VolumeControlStream.get -> int
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder.Build() -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder.SetContentType(int p0) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder.SetFlags(int p0) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder.SetLegacyStreamType(int p0) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder.SetUsage(int p0) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.MImpl.get -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl?
AndroidX.Media3.Session.Legacy.AudioAttributesCompat.MImpl.set -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnCaptioningEnabledChanged(bool p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnEvent(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnExtrasChanged(Android.OS.Bundle? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnMetadataChanged(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnPlaybackStateChanged(AndroidX.Media3.Session.Legacy.PlaybackStateCompat? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnQueueChanged(System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnQueueTitleChanged(Java.Lang.ICharSequence? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnRepeatModeChanged(int p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnSessionDestroyed() -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnSessionReady() -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnShuffleModeChanged(int p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnShuffleModeChangedRemoved(bool p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallback.OnVolumeInfoChanged(AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaControllerCallbackExtensions
AndroidX.Media3.Session.Legacy.IMediaSession
AndroidX.Media3.Session.Legacy.IMediaSession.AddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.AddQueueItemAt(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0, int p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.AdjustVolume(int p0, int p1, string? p2) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.CaptioningEnabled.get -> bool
AndroidX.Media3.Session.Legacy.IMediaSession.CaptioningEnabled.set -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.IMediaSession.FastForward() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Flags.get -> long
AndroidX.Media3.Session.Legacy.IMediaSession.IsTransportControlEnabled.get -> bool
AndroidX.Media3.Session.Legacy.IMediaSession.LaunchPendingIntent.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.Legacy.IMediaSession.Metadata.get -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat?
AndroidX.Media3.Session.Legacy.IMediaSession.Next() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PackageName.get -> string?
AndroidX.Media3.Session.Legacy.IMediaSession.Pause() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Play() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PlayFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PlayFromSearch(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PlayFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PlaybackState.get -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat?
AndroidX.Media3.Session.Legacy.IMediaSession.Prepare() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PrepareFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PrepareFromSearch(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.PrepareFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Previous() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Queue.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>?
AndroidX.Media3.Session.Legacy.IMediaSession.QueueTitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.IMediaSession.Rate(AndroidX.Media3.Session.Legacy.RatingCompat? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.RateWithExtras(AndroidX.Media3.Session.Legacy.RatingCompat? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.RatingType.get -> int
AndroidX.Media3.Session.Legacy.IMediaSession.RegisterCallbackListener(AndroidX.Media3.Session.Legacy.IMediaControllerCallback? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.RemoveQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.RemoveQueueItemAt(int p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.RepeatMode.get -> int
AndroidX.Media3.Session.Legacy.IMediaSession.RepeatMode.set -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Rewind() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.SeekTo(long p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.SendCustomAction(string? p0, Android.OS.Bundle? p1) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.SendMediaButton(Android.Views.KeyEvent? p0) -> bool
AndroidX.Media3.Session.Legacy.IMediaSession.SessionInfo.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.IMediaSession.SetPlaybackSpeed(float p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.SetVolumeTo(int p0, int p1, string? p2) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.ShuffleMode.get -> int
AndroidX.Media3.Session.Legacy.IMediaSession.ShuffleMode.set -> void
AndroidX.Media3.Session.Legacy.IMediaSession.ShuffleModeEnabledRemoved.get -> bool
AndroidX.Media3.Session.Legacy.IMediaSession.ShuffleModeEnabledRemoved.set -> void
AndroidX.Media3.Session.Legacy.IMediaSession.SkipToQueueItem(long p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Stop() -> void
AndroidX.Media3.Session.Legacy.IMediaSession.Tag.get -> string?
AndroidX.Media3.Session.Legacy.IMediaSession.UnregisterCallbackListener(AndroidX.Media3.Session.Legacy.IMediaControllerCallback? p0) -> void
AndroidX.Media3.Session.Legacy.IMediaSession.VolumeAttributes.get -> AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo?
AndroidX.Media3.Session.Legacy.LegacyParcelableUtil
AndroidX.Media3.Session.Legacy.MediaBrowserCompat
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Connect() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.ConnectionCallback() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.ConnectionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.IConnectionCallbackInternal
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.IConnectionCallbackInternal.OnConnected() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.IConnectionCallbackInternal.OnConnectionFailed() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.IConnectionCallbackInternal.OnConnectionSuspended() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.CustomActionCallback() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.CustomActionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Disconnect() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.GetItem(string? mediaId, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback? cb) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.IsConnected.get -> bool
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.ItemCallback() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.ItemCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaBrowserCompat(Android.Content.Context? context, Android.Content.ComponentName? serviceComponent, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback? callback, Android.OS.Bundle? rootHints) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.MediaItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description, int flags) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.MediaItem(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.NotifyChildrenChangedOptions.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Root.get -> string?
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Search(string? query, Android.OS.Bundle? extras, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.SearchCallback() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.SearchCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SendCustomAction(string? action, Android.OS.Bundle? extras, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ServiceComponent.get -> Android.Content.ComponentName?
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SessionToken.get -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Subscribe(string? parentId, Android.OS.Bundle? options, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Subscribe(string? parentId, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.SubscriptionCallback() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.SubscriptionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Unsubscribe(string? parentId) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompat.Unsubscribe(string? parentId, AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils
AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.MediaBrowserCompatUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserProtocol
AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.MediaBrowserProtocol(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.BrowserRoot(string? rootId, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.RootId.get -> string?
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRootHints.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.CurrentBrowserInfo.get -> AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo?
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.MediaBrowserServiceCompat() -> void
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.MediaBrowserServiceCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result
AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.Result(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaButtonReceiver
AndroidX.Media3.Session.Legacy.MediaButtonReceiver.MediaButtonReceiver() -> void
AndroidX.Media3.Session.Legacy.MediaButtonReceiver.MediaButtonReceiver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaConstants
AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub
AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.MediaControllerCallbackStub() -> void
AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.MediaControllerCallbackStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnQueueTitleChanged(string? p0) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat
AndroidX.Media3.Session.Legacy.MediaControllerCompat.AddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.AddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description, int index) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.AdjustVolume(int direction, int flags) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.Callback() -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnQueueTitleChanged(string? title) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.DispatchMediaButtonEvent(Android.Views.KeyEvent? keyEvent) -> bool
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Flags.get -> long
AndroidX.Media3.Session.Legacy.MediaControllerCompat.GetPlaybackInfo() -> AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.GetTransportControls() -> AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.IsCaptioningEnabled.get -> bool
AndroidX.Media3.Session.Legacy.MediaControllerCompat.IsSessionReady.get -> bool
AndroidX.Media3.Session.Legacy.MediaControllerCompat.MediaController.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.MediaControllerCompat(Android.Content.Context? context, AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token? sessionToken) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.MediaControllerCompat(Android.Content.Context? context, AndroidX.Media3.Session.Legacy.MediaSessionCompat? session) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Metadata.get -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PackageName.get -> string?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.AudioAttributes.get -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.AudioStream.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.CurrentVolume.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.MaxVolume.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.PlaybackType.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.VolumeControl.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackState.get -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Queue.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.QueueTitle.get -> string?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.QueueTitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RatingType.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RegisterCallback(AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RegisterCallback(AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback? callback, Android.OS.Handler? handler) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RemoveQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RemoveQueueItemAt(int index) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.RepeatMode.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.SendCommand(string? command, Android.OS.Bundle? params, Android.OS.ResultReceiver? cb) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.Session2Token.get -> AndroidX.VersionedParcelable.IVersionedParcelable?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.SessionActivity.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.SessionInfo.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.SessionToken.get -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
AndroidX.Media3.Session.Legacy.MediaControllerCompat.SetVolumeTo(int value, int flags) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.ShuffleMode.get -> int
AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls
AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.TransportControls(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaControllerCompat.UnregisterCallback(AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback? callback) -> void
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.Build() -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.Builder() -> void
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetDescription(Java.Lang.ICharSequence? description) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetDescription(string? description) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetIconBitmap(Android.Graphics.Bitmap? icon) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetIconUri(Android.Net.Uri? iconUri) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetMediaId(string? mediaId) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetMediaUri(Android.Net.Uri? mediaUri) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetSubtitle(Java.Lang.ICharSequence? subtitle) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetSubtitle(string? subtitle) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetTitle(Java.Lang.ICharSequence? title) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.SetTitle(string? title) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Description.get -> string?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.DescriptionFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.IconBitmap.get -> Android.Graphics.Bitmap?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.IconUri.get -> Android.Net.Uri?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.MediaDescription.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.MediaId.get -> string?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.MediaUri.get -> Android.Net.Uri?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Subtitle.get -> string?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.SubtitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Title.get -> string?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.TitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.MediaMetadataCompat
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.Build() -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.Builder() -> void
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.Builder(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? source) -> void
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.Builder(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? source, int maxBitmapSize) -> void
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutBitmap(string? key, Android.Graphics.Bitmap? value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutLong(string? key, long value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutRating(string? key, AndroidX.Media3.Session.Legacy.RatingCompat? value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutString(string? key, string? value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutText(string? key, Java.Lang.ICharSequence? value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.PutText(string? key, string? value) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Bundle.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.ContainsKey(string? key) -> bool
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Description.get -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetBitmap(string? key) -> Android.Graphics.Bitmap?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetLong(string? key) -> long
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetRating(string? key) -> AndroidX.Media3.Session.Legacy.RatingCompat?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetString(string? key) -> string?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetText(string? key) -> string?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.GetTextFormatted(string? key) -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.KeySet() -> System.Collections.Generic.ICollection<string!>?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MediaMetadata.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Size() -> int
AndroidX.Media3.Session.Legacy.MediaMetadataCompat.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat
AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActiveChange -> System.EventHandler!
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.Callback() -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.CurrentControllerInfo.get -> AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.IOnActiveChangeListener
AndroidX.Media3.Session.Legacy.MediaSessionCompat.IOnActiveChangeListener.OnActiveChanged() -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.IRegistrationCallback
AndroidX.Media3.Session.Legacy.MediaSessionCompat.IRegistrationCallback.OnCallbackRegistered(int p0, int p1) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.IRegistrationCallback.OnCallbackUnregistered(int p0, int p1) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSessionCompat(Android.Content.Context? context, string? tag) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSessionCompat(Android.Content.Context? context, string? tag, Android.Content.ComponentName? mbrComponent, Android.App.PendingIntent? mbrIntent) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSessionCompat(Android.Content.Context? context, string? tag, Android.Content.ComponentName? mbrComponent, Android.App.PendingIntent? mbrIntent, Android.OS.Bundle? sessionInfo) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSessionCompat(Android.Content.Context? context, string? tag, Android.Content.ComponentName? mbrComponent, Android.App.PendingIntent? mbrIntent, Android.OS.Bundle? sessionInfo, AndroidX.VersionedParcelable.IVersionedParcelable? session2Token) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSessionCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.Description.get -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.GetQueueItem() -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.QueueId.get -> long
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.QueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description, long id) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetQueueTitle(string? title) -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.GetToken() -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.Session2Token.get -> AndroidX.VersionedParcelable.IVersionedParcelable?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.Session2Token.set -> void
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.MediaSessionManager
AndroidX.Media3.Session.Legacy.MediaSessionManager.IsTrustedForMediaControl(AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo? userInfo) -> bool
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.PackageName.get -> string?
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.Pid.get -> int
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.RemoteUserInfo(Android.Media.Session.MediaSessionManager.RemoteUserInfo? remoteUserInfo) -> void
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.RemoteUserInfo(string? packageName, int pid, int uid) -> void
AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.Uid.get -> int
AndroidX.Media3.Session.Legacy.MediaSessionStub
AndroidX.Media3.Session.Legacy.MediaSessionStub.MediaSessionStub() -> void
AndroidX.Media3.Session.Legacy.MediaSessionStub.MediaSessionStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.MediaSessionStub.QueueTitle.get -> string?
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.AudioStream.get -> int
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.AudioStream.set -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ControlType.get -> int
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ControlType.set -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.CurrentVolume.get -> int
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.CurrentVolume.set -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.MaxVolume.get -> int
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.MaxVolume.set -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ParcelableVolumeInfo(Android.OS.Parcel? from) -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ParcelableVolumeInfo(int volumeType, int audioStream, int controlType, int maxVolume, int currentVolume) -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ParcelableVolumeInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.VolumeType.get -> int
AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.VolumeType.set -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Actions.get -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActiveQueueItemId.get -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.BufferedPosition.get -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.AddCustomAction(AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction? customAction) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.AddCustomAction(string? action, string? name, int icon) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.Build() -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.Builder() -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.Builder(AndroidX.Media3.Session.Legacy.PlaybackStateCompat? source) -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetActions(long capabilities) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetActiveQueueItemId(long id) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetBufferedPosition(long bufferPosition) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetErrorMessage(Java.Lang.ICharSequence? errorMessage) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetErrorMessage(int errorCode, Java.Lang.ICharSequence? errorMessage) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetErrorMessage(int errorCode, string? errorMessage) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetErrorMessage(string? errorMessage) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetState(int state, long position, float playbackSpeed) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.SetState(int state, long position, float playbackSpeed, long updateTime) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Action.get -> string?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder.Build() -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder.Builder(string? action, Java.Lang.ICharSequence? name, int icon) -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder.Builder(string? action, string? name, int icon) -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.GetCustomAction() -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Icon.get -> int
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Name.get -> string?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.NameFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomActions.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction!>?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCode.get -> int
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorMessage.get -> string?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorMessageFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.GetCurrentPosition(Java.Lang.Long? timeDiff) -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IActions
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IErrorCode
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IMediaKeyAction
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IRepeatMode
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IShuffleMode
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.IState
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.LastPositionUpdateTime.get -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.PlaybackSpeed.get -> float
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.PlaybackState.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Position.get -> long
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.State.get -> int
AndroidX.Media3.Session.Legacy.PlaybackStateCompat.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.RatingCompat
AndroidX.Media3.Session.Legacy.RatingCompat.DescribeContents() -> int
AndroidX.Media3.Session.Legacy.RatingCompat.HasHeart.get -> bool
AndroidX.Media3.Session.Legacy.RatingCompat.IStarStyle
AndroidX.Media3.Session.Legacy.RatingCompat.IStyle
AndroidX.Media3.Session.Legacy.RatingCompat.IsRated.get -> bool
AndroidX.Media3.Session.Legacy.RatingCompat.IsThumbUp.get -> bool
AndroidX.Media3.Session.Legacy.RatingCompat.PercentRating.get -> float
AndroidX.Media3.Session.Legacy.RatingCompat.Rating.get -> Java.Lang.Object?
AndroidX.Media3.Session.Legacy.RatingCompat.RatingStyle.get -> int
AndroidX.Media3.Session.Legacy.RatingCompat.StarRating.get -> float
AndroidX.Media3.Session.Legacy.RatingCompat.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.Callback() -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.Callback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.CurrentVolume.get -> int
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.CurrentVolume.set -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.IControlType
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.MaxVolume.get -> int
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeControl.get -> int
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeControlId.get -> string?
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeProviderCompat(int volumeControl, int maxVolume, int currentVolume) -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeProviderCompat(int volumeControl, int maxVolume, int currentVolume, string? volumeControlId) -> void
AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeProviderCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.LibraryResult
AndroidX.Media3.Session.LibraryResult.CompletionTimeMs.get -> long
AndroidX.Media3.Session.LibraryResult.CompletionTimeMs.set -> void
AndroidX.Media3.Session.LibraryResult.ICode
AndroidX.Media3.Session.LibraryResult.Params.get -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams?
AndroidX.Media3.Session.LibraryResult.Params.set -> void
AndroidX.Media3.Session.LibraryResult.ResultCode.get -> int
AndroidX.Media3.Session.LibraryResult.ResultCode.set -> void
AndroidX.Media3.Session.LibraryResult.SessionError.get -> AndroidX.Media3.Session.SessionError?
AndroidX.Media3.Session.LibraryResult.SessionError.set -> void
AndroidX.Media3.Session.LibraryResult.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.LibraryResult.Value.get -> Java.Lang.Object?
AndroidX.Media3.Session.LibraryResult.Value.set -> void
AndroidX.Media3.Session.MediaBrowser
AndroidX.Media3.Session.MediaBrowser.Builder
AndroidX.Media3.Session.MediaBrowser.Builder.BuildAsync() -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.Builder.Builder(Android.Content.Context? context, AndroidX.Media3.Session.SessionToken? token) -> void
AndroidX.Media3.Session.MediaBrowser.Builder.ExperimentalSetPlatformSessionCallbackAggregationTimeoutMs(long platformSessionCallbackAggregationTimeoutMs) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.Builder.SetApplicationLooper(Android.OS.Looper? looper) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.Builder.SetBitmapLoader(AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.Builder.SetConnectionHints(Android.OS.Bundle? connectionHints) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.Builder.SetListener(AndroidX.Media3.Session.MediaBrowser.IListener? listener) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.Builder.SetMaxCommandsForMediaItems(int maxCommandsForMediaItems) -> AndroidX.Media3.Session.MediaBrowser.Builder?
AndroidX.Media3.Session.MediaBrowser.GetChildren(string? parentId, int page, int pageSize, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.GetItem(string? mediaId) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.GetLibraryRoot(AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.GetSearchResult(string? query, int page, int pageSize, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.IListener
AndroidX.Media3.Session.MediaBrowser.IListener.OnChildrenChanged(AndroidX.Media3.Session.MediaBrowser? browser, string? parentId, int itemCount, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media3.Session.MediaBrowser.IListener.OnSearchResultChanged(AndroidX.Media3.Session.MediaBrowser? browser, string? query, int itemCount, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media3.Session.MediaBrowser.Search(string? query, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.Subscribe(string? parentId, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaBrowser.Unsubscribe(string? parentId) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaButtonReceiver
AndroidX.Media3.Session.MediaButtonReceiver.MediaButtonReceiver() -> void
AndroidX.Media3.Session.MediaButtonReceiver.MediaButtonReceiver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaConstants
AndroidX.Media3.Session.MediaController
AndroidX.Media3.Session.MediaController.AddListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
AndroidX.Media3.Session.MediaController.AddMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Session.MediaController.AddMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Session.MediaController.AddMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Session.MediaController.AddMediaItems(int index, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Session.MediaController.ApplicationLooper.get -> Android.OS.Looper?
AndroidX.Media3.Session.MediaController.AudioAttributes.get -> AndroidX.Media3.Common.AudioAttributes?
AndroidX.Media3.Session.MediaController.AvailableCommands.get -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Session.MediaController.AvailableSessionCommands.get -> AndroidX.Media3.Session.SessionCommands?
AndroidX.Media3.Session.MediaController.AvailableSessionCommandsChangedEventArgs
AndroidX.Media3.Session.MediaController.AvailableSessionCommandsChangedEventArgs.AvailableSessionCommandsChangedEventArgs(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionCommands? commands) -> void
AndroidX.Media3.Session.MediaController.AvailableSessionCommandsChangedEventArgs.Commands.get -> AndroidX.Media3.Session.SessionCommands?
AndroidX.Media3.Session.MediaController.AvailableSessionCommandsChangedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.BufferedPercentage.get -> int
AndroidX.Media3.Session.MediaController.BufferedPosition.get -> long
AndroidX.Media3.Session.MediaController.Builder
AndroidX.Media3.Session.MediaController.Builder.BuildAsync() -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.Builder.Builder(Android.Content.Context? context, AndroidX.Media3.Session.SessionToken? token) -> void
AndroidX.Media3.Session.MediaController.Builder.ExperimentalSetPlatformSessionCallbackAggregationTimeoutMs(long platformSessionCallbackAggregationTimeoutMs) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.Builder.SetApplicationLooper(Android.OS.Looper? looper) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.Builder.SetBitmapLoader(AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.Builder.SetConnectionHints(Android.OS.Bundle? connectionHints) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.Builder.SetListener(AndroidX.Media3.Session.MediaController.IListener? listener) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.Builder.SetMaxCommandsForMediaItems(int maxCommandsForMediaItems) -> AndroidX.Media3.Session.MediaController.Builder?
AndroidX.Media3.Session.MediaController.CanAdvertiseSession() -> bool
AndroidX.Media3.Session.MediaController.ClearMediaItems() -> void
AndroidX.Media3.Session.MediaController.ClearVideoSurface() -> void
AndroidX.Media3.Session.MediaController.ClearVideoSurface(Android.Views.Surface? surface) -> void
AndroidX.Media3.Session.MediaController.ClearVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
AndroidX.Media3.Session.MediaController.ClearVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
AndroidX.Media3.Session.MediaController.ClearVideoTextureView(Android.Views.TextureView? textureView) -> void
AndroidX.Media3.Session.MediaController.ConnectedToken.get -> AndroidX.Media3.Session.SessionToken?
AndroidX.Media3.Session.MediaController.ContentBufferedPosition.get -> long
AndroidX.Media3.Session.MediaController.ContentDuration.get -> long
AndroidX.Media3.Session.MediaController.ContentPosition.get -> long
AndroidX.Media3.Session.MediaController.CurrentAdGroupIndex.get -> int
AndroidX.Media3.Session.MediaController.CurrentAdIndexInAdGroup.get -> int
AndroidX.Media3.Session.MediaController.CurrentCues.get -> AndroidX.Media3.Common.Text.CueGroup?
AndroidX.Media3.Session.MediaController.CurrentLiveOffset.get -> long
AndroidX.Media3.Session.MediaController.CurrentManifest.get -> Java.Lang.Object?
AndroidX.Media3.Session.MediaController.CurrentMediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Session.MediaController.CurrentMediaItemIndex.get -> int
AndroidX.Media3.Session.MediaController.CurrentPeriodIndex.get -> int
AndroidX.Media3.Session.MediaController.CurrentPosition.get -> long
AndroidX.Media3.Session.MediaController.CurrentTimeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.Session.MediaController.CurrentTracks.get -> AndroidX.Media3.Common.Tracks?
AndroidX.Media3.Session.MediaController.CurrentWindowIndex.get -> int
AndroidX.Media3.Session.MediaController.CustomLayout.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaController.CustomLayoutChangedEventArgs
AndroidX.Media3.Session.MediaController.CustomLayoutChangedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.CustomLayoutChangedEventArgs.CustomLayoutChangedEventArgs(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> void
AndroidX.Media3.Session.MediaController.CustomLayoutChangedEventArgs.Layout.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>?
AndroidX.Media3.Session.MediaController.DecreaseDeviceVolume() -> void
AndroidX.Media3.Session.MediaController.DecreaseDeviceVolume(int flags) -> void
AndroidX.Media3.Session.MediaController.DeviceInfo.get -> AndroidX.Media3.Common.DeviceInfo?
AndroidX.Media3.Session.MediaController.DeviceMuted.get -> bool
AndroidX.Media3.Session.MediaController.DeviceMuted.set -> void
AndroidX.Media3.Session.MediaController.DeviceVolume.get -> int
AndroidX.Media3.Session.MediaController.DeviceVolume.set -> void
AndroidX.Media3.Session.MediaController.DisconnectedEventArgs
AndroidX.Media3.Session.MediaController.DisconnectedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.DisconnectedEventArgs.DisconnectedEventArgs(AndroidX.Media3.Session.MediaController? controller) -> void
AndroidX.Media3.Session.MediaController.Duration.get -> long
AndroidX.Media3.Session.MediaController.ErrorEventArgs
AndroidX.Media3.Session.MediaController.ErrorEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.ErrorEventArgs.ErrorEventArgs(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionError? sessionError) -> void
AndroidX.Media3.Session.MediaController.ErrorEventArgs.SessionError.get -> AndroidX.Media3.Session.SessionError?
AndroidX.Media3.Session.MediaController.ExtrasChangedEventArgs
AndroidX.Media3.Session.MediaController.ExtrasChangedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.ExtrasChangedEventArgs.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaController.ExtrasChangedEventArgs.ExtrasChangedEventArgs(AndroidX.Media3.Session.MediaController? controller, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.MediaController.GetCommandButtonsForMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaController.GetMediaItemAt(int index) -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.Session.MediaController.HasNext.get -> bool
AndroidX.Media3.Session.MediaController.HasNextMediaItem.get -> bool
AndroidX.Media3.Session.MediaController.HasNextWindow.get -> bool
AndroidX.Media3.Session.MediaController.HasPreviousMediaItem.get -> bool
AndroidX.Media3.Session.MediaController.IListener
AndroidX.Media3.Session.MediaController.IListener.OnAvailableSessionCommandsChanged(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionCommands? commands) -> void
AndroidX.Media3.Session.MediaController.IListener.OnCustomCommand(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionCommand? command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.IListener.OnCustomLayoutChanged(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> void
AndroidX.Media3.Session.MediaController.IListener.OnDisconnected(AndroidX.Media3.Session.MediaController? controller) -> void
AndroidX.Media3.Session.MediaController.IListener.OnError(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionError? sessionError) -> void
AndroidX.Media3.Session.MediaController.IListener.OnExtrasChanged(AndroidX.Media3.Session.MediaController? controller, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.MediaController.IListener.OnMediaButtonPreferencesChanged(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> void
AndroidX.Media3.Session.MediaController.IListener.OnSessionActivityChanged(AndroidX.Media3.Session.MediaController? controller, Android.App.PendingIntent? sessionActivity) -> void
AndroidX.Media3.Session.MediaController.IListener.OnSetCustomLayout(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.IncreaseDeviceVolume() -> void
AndroidX.Media3.Session.MediaController.IncreaseDeviceVolume(int flags) -> void
AndroidX.Media3.Session.MediaController.IsCommandAvailable(int command) -> bool
AndroidX.Media3.Session.MediaController.IsConnected.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentMediaItemDynamic.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentMediaItemLive.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentMediaItemSeekable.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentWindowDynamic.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentWindowLive.get -> bool
AndroidX.Media3.Session.MediaController.IsCurrentWindowSeekable.get -> bool
AndroidX.Media3.Session.MediaController.IsLoading.get -> bool
AndroidX.Media3.Session.MediaController.IsPlaying.get -> bool
AndroidX.Media3.Session.MediaController.IsPlayingAd.get -> bool
AndroidX.Media3.Session.MediaController.IsSessionCommandAvailable(AndroidX.Media3.Session.SessionCommand? sessionCommand) -> bool
AndroidX.Media3.Session.MediaController.IsSessionCommandAvailable(int sessionCommandCode) -> bool
AndroidX.Media3.Session.MediaController.MaxSeekToPreviousPosition.get -> long
AndroidX.Media3.Session.MediaController.MediaButtonPreferences.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaController.MediaButtonPreferencesChangedEventArgs
AndroidX.Media3.Session.MediaController.MediaButtonPreferencesChangedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.MediaButtonPreferencesChangedEventArgs.MediaButtonPreferences.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>?
AndroidX.Media3.Session.MediaController.MediaButtonPreferencesChangedEventArgs.MediaButtonPreferencesChangedEventArgs(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> void
AndroidX.Media3.Session.MediaController.MediaController(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaController.MediaItemCount.get -> int
AndroidX.Media3.Session.MediaController.MediaMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Session.MediaController.MoveMediaItem(int currentIndex, int newIndex) -> void
AndroidX.Media3.Session.MediaController.MoveMediaItems(int fromIndex, int toIndex, int newIndex) -> void
AndroidX.Media3.Session.MediaController.Next() -> void
AndroidX.Media3.Session.MediaController.NextMediaItemIndex.get -> int
AndroidX.Media3.Session.MediaController.NextWindowIndex.get -> int
AndroidX.Media3.Session.MediaController.OnCustomCommandHandler
AndroidX.Media3.Session.MediaController.OnSetCustomLayoutHandler
AndroidX.Media3.Session.MediaController.Pause() -> void
AndroidX.Media3.Session.MediaController.Play() -> void
AndroidX.Media3.Session.MediaController.PlayWhenReady.get -> bool
AndroidX.Media3.Session.MediaController.PlayWhenReady.set -> void
AndroidX.Media3.Session.MediaController.PlaybackParameters.get -> AndroidX.Media3.Common.PlaybackParameters?
AndroidX.Media3.Session.MediaController.PlaybackParameters.set -> void
AndroidX.Media3.Session.MediaController.PlaybackState.get -> int
AndroidX.Media3.Session.MediaController.PlaybackSuppressionReason.get -> int
AndroidX.Media3.Session.MediaController.PlayerError.get -> AndroidX.Media3.Common.PlaybackException?
AndroidX.Media3.Session.MediaController.PlaylistMetadata.get -> AndroidX.Media3.Common.MediaMetadata?
AndroidX.Media3.Session.MediaController.PlaylistMetadata.set -> void
AndroidX.Media3.Session.MediaController.Prepare() -> void
AndroidX.Media3.Session.MediaController.PreviousMediaItemIndex.get -> int
AndroidX.Media3.Session.MediaController.PreviousWindowIndex.get -> int
AndroidX.Media3.Session.MediaController.Release() -> void
AndroidX.Media3.Session.MediaController.RemoveListener(AndroidX.Media3.Common.IPlayerListener? listener) -> void
AndroidX.Media3.Session.MediaController.RemoveMediaItem(int index) -> void
AndroidX.Media3.Session.MediaController.RemoveMediaItems(int fromIndex, int toIndex) -> void
AndroidX.Media3.Session.MediaController.RepeatMode.get -> int
AndroidX.Media3.Session.MediaController.RepeatMode.set -> void
AndroidX.Media3.Session.MediaController.ReplaceMediaItem(int index, AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Session.MediaController.ReplaceMediaItems(int fromIndex, int toIndex, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Session.MediaController.SeekBack() -> void
AndroidX.Media3.Session.MediaController.SeekBackIncrement.get -> long
AndroidX.Media3.Session.MediaController.SeekForward() -> void
AndroidX.Media3.Session.MediaController.SeekForwardIncrement.get -> long
AndroidX.Media3.Session.MediaController.SeekTo(int mediaItemIndex, long positionMs) -> void
AndroidX.Media3.Session.MediaController.SeekTo(long positionMs) -> void
AndroidX.Media3.Session.MediaController.SeekToDefaultPosition() -> void
AndroidX.Media3.Session.MediaController.SeekToDefaultPosition(int mediaItemIndex) -> void
AndroidX.Media3.Session.MediaController.SeekToNext() -> void
AndroidX.Media3.Session.MediaController.SeekToNextMediaItem() -> void
AndroidX.Media3.Session.MediaController.SeekToNextWindow() -> void
AndroidX.Media3.Session.MediaController.SeekToPrevious() -> void
AndroidX.Media3.Session.MediaController.SeekToPreviousMediaItem() -> void
AndroidX.Media3.Session.MediaController.SeekToPreviousWindow() -> void
AndroidX.Media3.Session.MediaController.SendCustomCommand(AndroidX.Media3.Session.SessionCommand? command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.SendCustomCommand(AndroidX.Media3.Session.SessionCommand? command, AndroidX.Media3.Common.MediaItem? mediaItem, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.SessionActivity.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaController.SessionActivityChangedEventArgs
AndroidX.Media3.Session.MediaController.SessionActivityChangedEventArgs.Controller.get -> AndroidX.Media3.Session.MediaController?
AndroidX.Media3.Session.MediaController.SessionActivityChangedEventArgs.SessionActivity.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaController.SessionActivityChangedEventArgs.SessionActivityChangedEventArgs(AndroidX.Media3.Session.MediaController? controller, Android.App.PendingIntent? sessionActivity) -> void
AndroidX.Media3.Session.MediaController.SessionExtras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaController.SetAudioAttributes(AndroidX.Media3.Common.AudioAttributes? audioAttributes, bool handleAudioFocus) -> void
AndroidX.Media3.Session.MediaController.SetDeviceMuted(bool muted, int flags) -> void
AndroidX.Media3.Session.MediaController.SetDeviceVolume(int volume, int flags) -> void
AndroidX.Media3.Session.MediaController.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.Session.MediaController.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, bool resetPosition) -> void
AndroidX.Media3.Session.MediaController.SetMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem, long startPositionMs) -> void
AndroidX.Media3.Session.MediaController.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> void
AndroidX.Media3.Session.MediaController.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, bool resetPosition) -> void
AndroidX.Media3.Session.MediaController.SetMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> void
AndroidX.Media3.Session.MediaController.SetPlaybackSpeed(float speed) -> void
AndroidX.Media3.Session.MediaController.SetRating(AndroidX.Media3.Common.Rating? rating) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.SetRating(string? mediaId, AndroidX.Media3.Common.Rating? rating) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaController.SetVideoSurface(Android.Views.Surface? surface) -> void
AndroidX.Media3.Session.MediaController.SetVideoSurfaceHolder(Android.Views.ISurfaceHolder? surfaceHolder) -> void
AndroidX.Media3.Session.MediaController.SetVideoSurfaceView(Android.Views.SurfaceView? surfaceView) -> void
AndroidX.Media3.Session.MediaController.SetVideoTextureView(Android.Views.TextureView? textureView) -> void
AndroidX.Media3.Session.MediaController.ShuffleModeEnabled.get -> bool
AndroidX.Media3.Session.MediaController.ShuffleModeEnabled.set -> void
AndroidX.Media3.Session.MediaController.Stop() -> void
AndroidX.Media3.Session.MediaController.SurfaceSize.get -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Session.MediaController.TotalBufferedDuration.get -> long
AndroidX.Media3.Session.MediaController.TrackSelectionParameters.get -> AndroidX.Media3.Common.TrackSelectionParameters?
AndroidX.Media3.Session.MediaController.TrackSelectionParameters.set -> void
AndroidX.Media3.Session.MediaController.VideoSize.get -> AndroidX.Media3.Common.VideoSize?
AndroidX.Media3.Session.MediaController.Volume.get -> float
AndroidX.Media3.Session.MediaController.Volume.set -> void
AndroidX.Media3.Session.MediaControllerDefault
AndroidX.Media3.Session.MediaControllerDefault.InterfaceConsts
AndroidX.Media3.Session.MediaControllerDefault.MediaControllerDefault() -> void
AndroidX.Media3.Session.MediaControllerDefault.MediaControllerDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaControllerStub
AndroidX.Media3.Session.MediaControllerStub.InterfaceConsts
AndroidX.Media3.Session.MediaControllerStub.MediaControllerStub() -> void
AndroidX.Media3.Session.MediaControllerStub.MediaControllerStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaController_Parcel
AndroidX.Media3.Session.MediaController_Parcel.MediaController_Parcel() -> void
AndroidX.Media3.Session.MediaController_Parcel.MediaController_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaLibraryService
AndroidX.Media3.Session.MediaLibraryService.LibraryParams
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.Build() -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.Builder() -> void
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.SetOffline(bool offline) -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.SetRecent(bool recent) -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.SetSuggested(bool suggested) -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Extras.set -> void
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsOffline.get -> bool
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsOffline.set -> void
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsRecent.get -> bool
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsRecent.set -> void
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsSuggested.get -> bool
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.IsSuggested.set -> void
AndroidX.Media3.Session.MediaLibraryService.LibraryParams.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaLibraryService.MediaLibraryService() -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibraryService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.Build() -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.BuildAsMediaSession() -> AndroidX.Media3.Session.MediaSession?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.Builder(Android.Content.Context? context, AndroidX.Media3.Common.IPlayer? player, AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback? callback) -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.Builder(AndroidX.Media3.Session.MediaLibraryService? service, AndroidX.Media3.Common.IPlayer? player, AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback? callback) -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetBitmapLoader(AndroidX.Media3.Common.Util.IBitmapLoader? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetBitmapLoaderAsMediaSessionBuilder(AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetCommandButtonsForMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? commandButtons) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetCommandButtonsForMediaItems(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetCustomLayout(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? customLayout) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetCustomLayout(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetExtras(Android.OS.Bundle? tokenExtras) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetExtrasWithBundleAsBuilder(Android.OS.Bundle? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetId(string? id) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetIdWithIntAsBuilder(string? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetLibraryErrorReplicationMode(int libraryErrorReplicationMode) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetMediaButtonPreferences(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetMediaButtonPreferences(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetPeriodicPositionUpdateEnabled(bool p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetPeriodicPositionUpdateEnabledBuilder(bool isEnabled) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetSessionActivity(Android.App.PendingIntent? pendingIntent) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetSessionActivityAsBuilder(Android.App.PendingIntent? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetSessionExtras(Android.OS.Bundle? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetSessionExtrasBuilder(Android.OS.Bundle? sessionExtras) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetShowPlayButtonIfPlaybackIsSuppressed(bool p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.SetShowPlayButtonIfPlaybackIsSuppressedBuilder(bool showPlayButtonIfPlaybackIsSuppressed) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ClearReplicatedLibraryError() -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.GetSubscribedControllers(string? mediaId) -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnGetChildren(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? parentId, int page, int pageSize, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnGetItem(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? mediaId) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnGetLibraryRoot(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnGetSearchResult(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? query, int page, int pageSize, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnSearch(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? query, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnSubscribe(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? parentId, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.ICallback.OnUnsubscribe(AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? parentId) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.NotifyChildrenChanged(AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? parentId, int itemCount, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.NotifyChildrenChanged(string? parentId, int itemCount, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.NotifySearchResultChanged(AndroidX.Media3.Session.MediaSession.ControllerInfo? browser, string? query, int itemCount, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media3.Session.MediaNotification
AndroidX.Media3.Session.MediaNotification.IActionFactory
AndroidX.Media3.Session.MediaNotification.IActionFactory.CreateCustomAction(AndroidX.Media3.Session.MediaSession? p0, AndroidX.Core.Graphics.Drawable.IconCompat? p1, Java.Lang.ICharSequence? p2, string? p3, Android.OS.Bundle? p4) -> AndroidX.Core.App.NotificationCompat.Action?
AndroidX.Media3.Session.MediaNotification.IActionFactory.CreateCustomActionFromCustomCommandButton(AndroidX.Media3.Session.MediaSession? p0, AndroidX.Media3.Session.CommandButton? p1) -> AndroidX.Core.App.NotificationCompat.Action?
AndroidX.Media3.Session.MediaNotification.IActionFactory.CreateMediaAction(AndroidX.Media3.Session.MediaSession? p0, AndroidX.Core.Graphics.Drawable.IconCompat? p1, Java.Lang.ICharSequence? p2, int p3) -> AndroidX.Core.App.NotificationCompat.Action?
AndroidX.Media3.Session.MediaNotification.IActionFactory.CreateMediaActionPendingIntent(AndroidX.Media3.Session.MediaSession? p0, long p1) -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaNotification.IActionFactory.CreateNotificationDismissalIntent(AndroidX.Media3.Session.MediaSession? mediaSession) -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaNotification.IProvider
AndroidX.Media3.Session.MediaNotification.IProvider.CreateNotification(AndroidX.Media3.Session.MediaSession? mediaSession, Java.Lang.Object? mediaButtonPreferences, AndroidX.Media3.Session.MediaNotification.IActionFactory? actionFactory, AndroidX.Media3.Session.MediaNotification.IProviderCallback? onNotificationChangedCallback) -> AndroidX.Media3.Session.MediaNotification?
AndroidX.Media3.Session.MediaNotification.IProvider.CreateNotification(AndroidX.Media3.Session.MediaSession? p0, Google.Common.Collect.ImmutableList? p1, AndroidX.Media3.Session.MediaNotification.IActionFactory? p2, AndroidX.Media3.Session.MediaNotification.IProviderCallback? p3) -> AndroidX.Media3.Session.MediaNotification?
AndroidX.Media3.Session.MediaNotification.IProvider.HandleCustomCommand(AndroidX.Media3.Session.MediaSession? p0, string? p1, Android.OS.Bundle? p2) -> bool
AndroidX.Media3.Session.MediaNotification.IProviderCallback
AndroidX.Media3.Session.MediaNotification.IProviderCallback.OnNotificationChanged(AndroidX.Media3.Session.MediaNotification? p0) -> void
AndroidX.Media3.Session.MediaNotification.MediaNotification(int notificationId, Android.App.Notification? notification) -> void
AndroidX.Media3.Session.MediaNotification.Notification.get -> Android.App.Notification?
AndroidX.Media3.Session.MediaNotification.Notification.set -> void
AndroidX.Media3.Session.MediaNotification.NotificationId.get -> int
AndroidX.Media3.Session.MediaNotification.NotificationId.set -> void
AndroidX.Media3.Session.MediaNotificationIActionFactoryExtensions
AndroidX.Media3.Session.MediaSession
AndroidX.Media3.Session.MediaSession.BitmapLoader.get -> AndroidX.Media3.Common.Util.IBitmapLoader?
AndroidX.Media3.Session.MediaSession.BroadcastCustomCommand(AndroidX.Media3.Session.SessionCommand? command, Android.OS.Bundle? args) -> void
AndroidX.Media3.Session.MediaSession.Builder
AndroidX.Media3.Session.MediaSession.Builder.Build() -> AndroidX.Media3.Session.MediaSession?
AndroidX.Media3.Session.MediaSession.Builder.Builder(Android.Content.Context? context, AndroidX.Media3.Common.IPlayer? player) -> void
AndroidX.Media3.Session.MediaSession.Builder.SetBitmapLoader(AndroidX.Media3.Common.Util.IBitmapLoader? bitmapLoader) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetBitmapLoaderAsMediaSessionBuilder(AndroidX.Media3.Common.Util.IBitmapLoader? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetCallback(AndroidX.Media3.Session.MediaSession.ICallback? callback) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetCommandButtonsForMediaItems(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? commandButtons) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetCommandButtonsForMediaItems(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetCustomLayout(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? customLayout) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetCustomLayout(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetExtras(Android.OS.Bundle? tokenExtras) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetExtrasWithBundle(Android.OS.Bundle? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetId(string? id) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetIdAsBuilder(string? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetMediaButtonPreferences(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetMediaButtonPreferences(System.Collections.IList? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetPeriodicPositionUpdateEnabled(bool p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetPeriodicPositionUpdateEnabledBuilder(bool isEnabled) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetSessionActivity(Android.App.PendingIntent? pendingIntent) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetSessionActivityWithPendingIntent(Android.App.PendingIntent? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetSessionExtras(Android.OS.Bundle? p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetSessionExtrasBuilder(Android.OS.Bundle? sessionExtras) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.Builder.SetShowPlayButtonIfPlaybackIsSuppressed(bool p0) -> Java.Lang.Object?
AndroidX.Media3.Session.MediaSession.Builder.SetShowPlayButtonIfPlaybackIsSuppressedBuilder(bool showPlayButtonIfPlaybackIsSuppressed) -> AndroidX.Media3.Session.MediaSession.Builder?
AndroidX.Media3.Session.MediaSession.BuilderBase
AndroidX.Media3.Session.MediaSession.BuilderBase.BuilderBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSession.ConnectedControllers.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.MediaSession.ControllerInfo!>?
AndroidX.Media3.Session.MediaSession.ConnectionResult
AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder
AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.AcceptedResultBuilder(AndroidX.Media3.Session.MediaSession? mediaSession) -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.AcceptedResultBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.AvailablePlayerCommands.get -> AndroidX.Media3.Common.PlayerCommands?
AndroidX.Media3.Session.MediaSession.ConnectionResult.AvailablePlayerCommands.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.AvailableSessionCommands.get -> AndroidX.Media3.Session.SessionCommands?
AndroidX.Media3.Session.MediaSession.ConnectionResult.AvailableSessionCommands.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.CustomLayout.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaSession.ConnectionResult.CustomLayout.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.IsAccepted.get -> bool
AndroidX.Media3.Session.MediaSession.ConnectionResult.IsAccepted.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.MediaButtonPreferences.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaSession.ConnectionResult.MediaButtonPreferences.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.SessionActivity.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaSession.ConnectionResult.SessionActivity.set -> void
AndroidX.Media3.Session.MediaSession.ConnectionResult.SessionExtras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaSession.ConnectionResult.SessionExtras.set -> void
AndroidX.Media3.Session.MediaSession.ControllerForCurrentRequest.get -> AndroidX.Media3.Session.MediaSession.ControllerInfo?
AndroidX.Media3.Session.MediaSession.ControllerInfo
AndroidX.Media3.Session.MediaSession.ControllerInfo.ConnectionHints.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaSession.ControllerInfo.ControllerVersion.get -> int
AndroidX.Media3.Session.MediaSession.ControllerInfo.InterfaceVersion.get -> int
AndroidX.Media3.Session.MediaSession.ControllerInfo.IsTrusted.get -> bool
AndroidX.Media3.Session.MediaSession.ControllerInfo.MaxCommandsForMediaItems.get -> int
AndroidX.Media3.Session.MediaSession.ControllerInfo.PackageName.get -> string?
AndroidX.Media3.Session.MediaSession.ControllerInfo.Uid.get -> int
AndroidX.Media3.Session.MediaSession.ICallback
AndroidX.Media3.Session.MediaSession.ICallback.OnAddMediaItems(AndroidX.Media3.Session.MediaSession? mediaSession, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.ICallback.OnConnect(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller) -> AndroidX.Media3.Session.MediaSession.ConnectionResult?
AndroidX.Media3.Session.MediaSession.ICallback.OnCustomCommand(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, AndroidX.Media3.Session.SessionCommand? customCommand, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.ICallback.OnDisconnected(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller) -> void
AndroidX.Media3.Session.MediaSession.ICallback.OnMediaButtonEvent(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo, Android.Content.Intent? intent) -> bool
AndroidX.Media3.Session.MediaSession.ICallback.OnPlaybackResumption(AndroidX.Media3.Session.MediaSession? mediaSession, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.ICallback.OnPlayerCommandRequest(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, int playerCommand) -> int
AndroidX.Media3.Session.MediaSession.ICallback.OnPlayerInteractionFinished(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo, AndroidX.Media3.Common.PlayerCommands? playerCommands) -> void
AndroidX.Media3.Session.MediaSession.ICallback.OnPostConnect(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller) -> void
AndroidX.Media3.Session.MediaSession.ICallback.OnSetMediaItems(AndroidX.Media3.Session.MediaSession? mediaSession, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.ICallback.OnSetRating(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, AndroidX.Media3.Common.Rating? rating) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.ICallback.OnSetRating(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, string? mediaId, AndroidX.Media3.Common.Rating? rating) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.Id.get -> string?
AndroidX.Media3.Session.MediaSession.IsAutoCompanionController(AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo) -> bool
AndroidX.Media3.Session.MediaSession.IsAutomotiveController(AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo) -> bool
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.MediaItems.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.MediaItems.set -> void
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.MediaItemsWithStartPosition(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? mediaItems, int startIndex, long startPositionMs) -> void
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.StartIndex.get -> int
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.StartIndex.set -> void
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.StartPositionMs.get -> long
AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.StartPositionMs.set -> void
AndroidX.Media3.Session.MediaSession.MediaSession(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSession.PlatformToken.get -> Android.Media.Session.MediaSession.Token?
AndroidX.Media3.Session.MediaSession.Player.get -> AndroidX.Media3.Common.IPlayer?
AndroidX.Media3.Session.MediaSession.Player.set -> void
AndroidX.Media3.Session.MediaSession.Release() -> void
AndroidX.Media3.Session.MediaSession.SendCustomCommand(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, AndroidX.Media3.Session.SessionCommand? command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.SendError(AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo, AndroidX.Media3.Session.SessionError? sessionError) -> void
AndroidX.Media3.Session.MediaSession.SendError(AndroidX.Media3.Session.SessionError? sessionError) -> void
AndroidX.Media3.Session.MediaSession.SessionActivity.get -> Android.App.PendingIntent?
AndroidX.Media3.Session.MediaSession.SessionActivity.set -> void
AndroidX.Media3.Session.MediaSession.SessionExtras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.MediaSession.SessionExtras.set -> void
AndroidX.Media3.Session.MediaSession.SetAvailableCommands(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, AndroidX.Media3.Session.SessionCommands? sessionCommands, AndroidX.Media3.Common.PlayerCommands? playerCommands) -> void
AndroidX.Media3.Session.MediaSession.SetCustomLayout(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.SetCustomLayout(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> void
AndroidX.Media3.Session.MediaSession.SetMediaButtonPreferences(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.MediaSession.SetMediaButtonPreferences(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> void
AndroidX.Media3.Session.MediaSession.SetSessionActivity(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, Android.App.PendingIntent? activityPendingIntent) -> void
AndroidX.Media3.Session.MediaSession.SetSessionExtras(AndroidX.Media3.Session.MediaSession.ControllerInfo? controller, Android.OS.Bundle? sessionExtras) -> void
AndroidX.Media3.Session.MediaSession.ShowPlayButtonIfPlaybackIsSuppressed.get -> bool
AndroidX.Media3.Session.MediaSession.Token.get -> AndroidX.Media3.Session.SessionToken?
AndroidX.Media3.Session.MediaSessionDefault
AndroidX.Media3.Session.MediaSessionDefault.InterfaceConsts
AndroidX.Media3.Session.MediaSessionDefault.MediaSessionDefault() -> void
AndroidX.Media3.Session.MediaSessionDefault.MediaSessionDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSessionService
AndroidX.Media3.Session.MediaSessionService.AddSession(AndroidX.Media3.Session.MediaSession? session) -> void
AndroidX.Media3.Session.MediaSessionService.ClearListener() -> void
AndroidX.Media3.Session.MediaSessionService.IListener
AndroidX.Media3.Session.MediaSessionService.IListener.OnForegroundServiceStartNotAllowedException() -> void
AndroidX.Media3.Session.MediaSessionService.IsSessionAdded(AndroidX.Media3.Session.MediaSession? session) -> bool
AndroidX.Media3.Session.MediaSessionService.MediaSessionService() -> void
AndroidX.Media3.Session.MediaSessionService.MediaSessionService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSessionService.RemoveSession(AndroidX.Media3.Session.MediaSession? session) -> void
AndroidX.Media3.Session.MediaSessionService.Sessions.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.MediaSession!>?
AndroidX.Media3.Session.MediaSessionService.SetForegroundServiceTimeoutMs(long foregroundServiceTimeoutMs) -> void
AndroidX.Media3.Session.MediaSessionService.SetListener(AndroidX.Media3.Session.MediaSessionService.IListener? listener) -> void
AndroidX.Media3.Session.MediaSessionService.SetMediaNotificationProvider(AndroidX.Media3.Session.MediaNotification.IProvider? mediaNotificationProvider) -> void
AndroidX.Media3.Session.MediaSessionServiceDefault
AndroidX.Media3.Session.MediaSessionServiceDefault.InterfaceConsts
AndroidX.Media3.Session.MediaSessionServiceDefault.MediaSessionServiceDefault() -> void
AndroidX.Media3.Session.MediaSessionServiceDefault.MediaSessionServiceDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSessionServiceStub
AndroidX.Media3.Session.MediaSessionServiceStub.InterfaceConsts
AndroidX.Media3.Session.MediaSessionServiceStub.MediaSessionServiceStub() -> void
AndroidX.Media3.Session.MediaSessionServiceStub.MediaSessionServiceStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSessionService_Parcel
AndroidX.Media3.Session.MediaSessionService_Parcel.MediaSessionService_Parcel() -> void
AndroidX.Media3.Session.MediaSessionService_Parcel.MediaSessionService_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSessionStub
AndroidX.Media3.Session.MediaSessionStub.InterfaceConsts
AndroidX.Media3.Session.MediaSessionStub.MediaSessionStub() -> void
AndroidX.Media3.Session.MediaSessionStub.MediaSessionStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaSession_Parcel
AndroidX.Media3.Session.MediaSession_Parcel.MediaSession_Parcel() -> void
AndroidX.Media3.Session.MediaSession_Parcel.MediaSession_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaStyleNotificationHelper
AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle
AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle.DecoratedMediaCustomViewStyle(AndroidX.Media3.Session.MediaSession? session) -> void
AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle.DecoratedMediaCustomViewStyle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle
AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.MediaStyle(AndroidX.Media3.Session.MediaSession? session) -> void
AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.MediaStyle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.SetRemotePlaybackInfo(string? deviceName, int iconResource, Android.App.PendingIntent? chipIntent) -> AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle?
AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyleNotificationHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Session.SessionCommand
AndroidX.Media3.Session.SessionCommand.CommandCode.get -> int
AndroidX.Media3.Session.SessionCommand.CommandCode.set -> void
AndroidX.Media3.Session.SessionCommand.CustomAction.get -> string?
AndroidX.Media3.Session.SessionCommand.CustomAction.set -> void
AndroidX.Media3.Session.SessionCommand.CustomExtras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionCommand.CustomExtras.set -> void
AndroidX.Media3.Session.SessionCommand.ICommandCode
AndroidX.Media3.Session.SessionCommand.SessionCommand(int commandCode) -> void
AndroidX.Media3.Session.SessionCommand.SessionCommand(string? action, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.SessionCommand.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionCommands
AndroidX.Media3.Session.SessionCommands.BuildUpon() -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Builder
AndroidX.Media3.Session.SessionCommands.Builder.Add(AndroidX.Media3.Session.SessionCommand? command) -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Builder.Add(int commandCode) -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Builder.AddSessionCommands(System.Collections.Generic.ICollection<AndroidX.Media3.Session.SessionCommand!>? commands) -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Builder.Build() -> AndroidX.Media3.Session.SessionCommands?
AndroidX.Media3.Session.SessionCommands.Builder.Builder() -> void
AndroidX.Media3.Session.SessionCommands.Builder.Remove(AndroidX.Media3.Session.SessionCommand? command) -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Builder.Remove(int commandCode) -> AndroidX.Media3.Session.SessionCommands.Builder?
AndroidX.Media3.Session.SessionCommands.Commands.get -> Google.Common.Collect.ImmutableSet?
AndroidX.Media3.Session.SessionCommands.Commands.set -> void
AndroidX.Media3.Session.SessionCommands.Contains(AndroidX.Media3.Session.SessionCommand? command) -> bool
AndroidX.Media3.Session.SessionCommands.Contains(int commandCode) -> bool
AndroidX.Media3.Session.SessionCommands.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionError
AndroidX.Media3.Session.SessionError.Code.get -> int
AndroidX.Media3.Session.SessionError.Code.set -> void
AndroidX.Media3.Session.SessionError.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionError.Extras.set -> void
AndroidX.Media3.Session.SessionError.ICode
AndroidX.Media3.Session.SessionError.Message.get -> string?
AndroidX.Media3.Session.SessionError.Message.set -> void
AndroidX.Media3.Session.SessionError.SessionError(int code, string? message) -> void
AndroidX.Media3.Session.SessionError.SessionError(int code, string? message, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.SessionError.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionResult
AndroidX.Media3.Session.SessionResult.CompletionTimeMs.get -> long
AndroidX.Media3.Session.SessionResult.CompletionTimeMs.set -> void
AndroidX.Media3.Session.SessionResult.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionResult.Extras.set -> void
AndroidX.Media3.Session.SessionResult.ICode
AndroidX.Media3.Session.SessionResult.ResultCode.get -> int
AndroidX.Media3.Session.SessionResult.ResultCode.set -> void
AndroidX.Media3.Session.SessionResult.SessionError.get -> AndroidX.Media3.Session.SessionError?
AndroidX.Media3.Session.SessionResult.SessionError.set -> void
AndroidX.Media3.Session.SessionResult.SessionResult(AndroidX.Media3.Session.SessionError? sessionError) -> void
AndroidX.Media3.Session.SessionResult.SessionResult(AndroidX.Media3.Session.SessionError? sessionError, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.SessionResult.SessionResult(int resultCode) -> void
AndroidX.Media3.Session.SessionResult.SessionResult(int resultCode, Android.OS.Bundle? extras) -> void
AndroidX.Media3.Session.SessionResult.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionToken
AndroidX.Media3.Session.SessionToken.Extras.get -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionToken.ITokenType
AndroidX.Media3.Session.SessionToken.InterfaceVersion.get -> int
AndroidX.Media3.Session.SessionToken.PackageName.get -> string?
AndroidX.Media3.Session.SessionToken.ServiceName.get -> string?
AndroidX.Media3.Session.SessionToken.SessionToken(Android.Content.Context? context, Android.Content.ComponentName? serviceComponent) -> void
AndroidX.Media3.Session.SessionToken.SessionVersion.get -> int
AndroidX.Media3.Session.SessionToken.ToBundle() -> Android.OS.Bundle?
AndroidX.Media3.Session.SessionToken.Type.get -> int
AndroidX.Media3.Session.SessionToken.Uid.get -> int
AndroidX.Media3.Session.SimpleBitmapLoader
AndroidX.Media3.Session.SimpleBitmapLoader.DecodeBitmap(byte[]? data) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.SimpleBitmapLoader.LoadBitmap(Android.Net.Uri? uri) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Session.SimpleBitmapLoader.SimpleBitmapLoader() -> void
AndroidX.Media3.Session.SimpleBitmapLoader.SimpleBitmapLoader(Java.Util.Concurrent.IExecutorService? executorService) -> void
AndroidX.Media3.Session.SimpleBitmapLoader.SupportsMimeType(string? mimeType) -> bool
abstract AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnGetRoot(string? p0, int p1, Android.OS.Bundle? p2) -> AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot?
abstract AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnLoadChildren(string? p0, AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnCaptioningEnabledChanged(bool p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnEvent(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnExtrasChanged(Android.OS.Bundle? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnMetadataChanged(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnPlaybackStateChanged(AndroidX.Media3.Session.Legacy.PlaybackStateCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnQueueChanged(System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnQueueTitleChanged(Java.Lang.ICharSequence? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnRepeatModeChanged(int p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnSessionDestroyed() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnSessionReady() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnShuffleModeChanged(int p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnShuffleModeChangedRemoved(bool p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnVolumeInfoChanged(AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.FastForward() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.Pause() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.Play() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PlayFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PlayFromSearch(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PlayFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.Prepare() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PrepareFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PrepareFromSearch(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.PrepareFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.Rewind() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SeekTo(long p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SendCustomAction(AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SendCustomAction(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetCaptioningEnabled(bool p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetRating(AndroidX.Media3.Session.Legacy.RatingCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetRating(AndroidX.Media3.Session.Legacy.RatingCompat? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetRepeatMode(int p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetShuffleMode(int p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SkipToNext() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SkipToPrevious() -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SkipToQueueItem(long p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.Stop() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.AddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.AddQueueItemAt(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0, int p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.AdjustVolume(int p0, int p1, string? p2) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.CaptioningEnabled.get -> bool
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.CaptioningEnabled.set -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Extras.get -> Android.OS.Bundle?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.FastForward() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Flags.get -> long
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.IsTransportControlEnabled.get -> bool
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.LaunchPendingIntent.get -> Android.App.PendingIntent?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Metadata.get -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Next() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PackageName.get -> string?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Pause() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Play() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PlayFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PlayFromSearch(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PlayFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PlaybackState.get -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Prepare() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PrepareFromMediaId(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PrepareFromSearch(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.PrepareFromUri(Android.Net.Uri? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Previous() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Queue.get -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.QueueTitleFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Rate(AndroidX.Media3.Session.Legacy.RatingCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RateWithExtras(AndroidX.Media3.Session.Legacy.RatingCompat? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RatingType.get -> int
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RegisterCallbackListener(AndroidX.Media3.Session.Legacy.IMediaControllerCallback? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RemoveQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RemoveQueueItemAt(int p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RepeatMode.get -> int
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.RepeatMode.set -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Rewind() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SeekTo(long p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SendCustomAction(string? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SendMediaButton(Android.Views.KeyEvent? p0) -> bool
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SessionInfo.get -> Android.OS.Bundle?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SetPlaybackSpeed(float p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SetVolumeTo(int p0, int p1, string? p2) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.ShuffleMode.get -> int
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.ShuffleMode.set -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.ShuffleModeEnabledRemoved.get -> bool
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.ShuffleModeEnabledRemoved.set -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.SkipToQueueItem(long p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Stop() -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.Tag.get -> string?
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.UnregisterCallbackListener(AndroidX.Media3.Session.Legacy.IMediaControllerCallback? p0) -> void
abstract AndroidX.Media3.Session.Legacy.MediaSessionStub.VolumeAttributes.get -> AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo?
abstract AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.OnVolumeChanged(AndroidX.Media3.Session.Legacy.VolumeProviderCompat? p0) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnAvailableCommandsChangedFromPlayer(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnAvailableCommandsChangedFromSession(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnChildrenChanged(int p0, string? p1, int p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnConnected(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnCustomCommand(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnDisconnected(int p0) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnError(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnExtrasChanged(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnLibraryResult(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnPeriodicSessionPositionInfoChanged(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnPlayerInfoChanged(int p0, Android.OS.Bundle? p1, bool p2) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnPlayerInfoChangedWithExclusions(int p0, Android.OS.Bundle? p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnRenderedFirstFrame(int p0) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnSearchResultChanged(int p0, string? p1, int p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnSessionActivityChanged(int p0, Android.App.PendingIntent? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnSessionResult(int p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnSetCustomLayout(int p0, System.Collections.Generic.IList<Android.OS.Bundle!>? p1) -> void
abstract AndroidX.Media3.Session.MediaControllerStub.OnSetMediaButtonPreferences(int p0, System.Collections.Generic.IList<Android.OS.Bundle!>? p1) -> void
abstract AndroidX.Media3.Session.MediaLibraryService.OnGetSessionFromMediaLibraryService(AndroidX.Media3.Session.MediaSession.ControllerInfo? p0) -> AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession?
abstract AndroidX.Media3.Session.MediaSessionService.OnGetSession(AndroidX.Media3.Session.MediaSession.ControllerInfo? p0) -> AndroidX.Media3.Session.MediaSession?
abstract AndroidX.Media3.Session.MediaSessionServiceStub.Connect(AndroidX.Media3.Session.IMediaController? p0, Android.OS.Bundle? p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.AddMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.AddMediaItemWithIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.AddMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.AddMediaItemsWithIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.IBinder? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.ClearMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Connect(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.DecreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.DecreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.FlushCommandQueue(AndroidX.Media3.Session.IMediaController? p0) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.GetChildren(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, Android.OS.Bundle? p5) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.GetItem(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.GetLibraryRoot(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.GetSearchResult(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, Android.OS.Bundle? p5) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.IncreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.IncreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.MoveMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.MoveMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3, int p4) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.OnControllerResult(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.OnCustomCommand(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Pause(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Play(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Prepare(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Release(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.RemoveMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.RemoveMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.ReplaceMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.ReplaceMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3, Android.OS.IBinder? p4) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Search(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekBack(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekForward(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekTo(AndroidX.Media3.Session.IMediaController? p0, int p1, long p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToDefaultPosition(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToDefaultPositionWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToNext(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToNextMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToPrevious(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToPreviousMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SeekToWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, long p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetAudioAttributes(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, bool p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetDeviceMuted(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetDeviceMutedWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2, int p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetDeviceVolume(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItem(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItemWithResetPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, bool p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItemWithStartPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2, long p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItems(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItemsWithResetPosition(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2, bool p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetMediaItemsWithStartIndex(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.IBinder? p2, int p3, long p4) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetPlayWhenReady(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetPlaybackParameters(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetPlaybackSpeed(AndroidX.Media3.Session.IMediaController? p0, int p1, float p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetPlaylistMetadata(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetRating(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetRatingWithMediaId(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetRepeatMode(AndroidX.Media3.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetShuffleModeEnabled(AndroidX.Media3.Session.IMediaController? p0, int p1, bool p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetTrackSelectionParameters(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetVideoSurface(AndroidX.Media3.Session.IMediaController? p0, int p1, Android.Views.Surface? p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.SetVolume(AndroidX.Media3.Session.IMediaController? p0, int p1, float p2) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Stop(AndroidX.Media3.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Subscribe(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media3.Session.MediaSessionStub.Unsubscribe(AndroidX.Media3.Session.IMediaController? p0, int p1, string? p2) -> void
const AndroidX.Media3.Session.CommandButton.IconAlbum = 57369 -> int
const AndroidX.Media3.Session.CommandButton.IconArtist = 57370 -> int
const AndroidX.Media3.Session.CommandButton.IconBlock = 57675 -> int
const AndroidX.Media3.Session.CommandButton.IconBookmarkFilled = 1042534 -> int
const AndroidX.Media3.Session.CommandButton.IconBookmarkUnfilled = 59494 -> int
const AndroidX.Media3.Session.CommandButton.IconCheckCircleFilled = 1042540 -> int
const AndroidX.Media3.Session.CommandButton.IconCheckCircleUnfilled = 59500 -> int
const AndroidX.Media3.Session.CommandButton.IconClosedCaptions = 57372 -> int
const AndroidX.Media3.Session.CommandButton.IconClosedCaptionsOff = 61916 -> int
const AndroidX.Media3.Session.CommandButton.IconFastForward = 57375 -> int
const AndroidX.Media3.Session.CommandButton.IconFeed = 57573 -> int
const AndroidX.Media3.Session.CommandButton.IconFlagFilled = 1040723 -> int
const AndroidX.Media3.Session.CommandButton.IconFlagUnfilled = 57683 -> int
const AndroidX.Media3.Session.CommandButton.IconHeartFilled = 1042557 -> int
const AndroidX.Media3.Session.CommandButton.IconHeartUnfilled = 59517 -> int
const AndroidX.Media3.Session.CommandButton.IconMinus = 57691 -> int
const AndroidX.Media3.Session.CommandButton.IconMinusCircleFilled = 1040712 -> int
const AndroidX.Media3.Session.CommandButton.IconMinusCircleUnfilled = 1040713 -> int
const AndroidX.Media3.Session.CommandButton.IconNext = 57412 -> int
const AndroidX.Media3.Session.CommandButton.IconPause = 57396 -> int
const AndroidX.Media3.Session.CommandButton.IconPlay = 57399 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed = 57448 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed05 = 62690 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed08 = 1045730 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed10 = 61389 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed12 = 62689 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed15 = 62688 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed18 = 1045728 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaybackSpeed20 = 62699 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaylistAdd = 57403 -> int
const AndroidX.Media3.Session.CommandButton.IconPlaylistRemove = 60288 -> int
const AndroidX.Media3.Session.CommandButton.IconPlus = 57669 -> int
const AndroidX.Media3.Session.CommandButton.IconPlusCircleFilled = 1040711 -> int
const AndroidX.Media3.Session.CommandButton.IconPlusCircleUnfilled = 57671 -> int
const AndroidX.Media3.Session.CommandButton.IconPrevious = 57413 -> int
const AndroidX.Media3.Session.CommandButton.IconQuality = 58409 -> int
const AndroidX.Media3.Session.CommandButton.IconQueueAdd = 57436 -> int
const AndroidX.Media3.Session.CommandButton.IconQueueNext = 57446 -> int
const AndroidX.Media3.Session.CommandButton.IconQueueRemove = 57447 -> int
const AndroidX.Media3.Session.CommandButton.IconRadio = 58654 -> int
const AndroidX.Media3.Session.CommandButton.IconRepeatAll = 57408 -> int
const AndroidX.Media3.Session.CommandButton.IconRepeatOff = 1040448 -> int
const AndroidX.Media3.Session.CommandButton.IconRepeatOne = 57409 -> int
const AndroidX.Media3.Session.CommandButton.IconRewind = 57376 -> int
const AndroidX.Media3.Session.CommandButton.IconSettings = 59576 -> int
const AndroidX.Media3.Session.CommandButton.IconShare = 59405 -> int
const AndroidX.Media3.Session.CommandButton.IconShuffleOff = 1040452 -> int
const AndroidX.Media3.Session.CommandButton.IconShuffleOn = 57411 -> int
const AndroidX.Media3.Session.CommandButton.IconShuffleStar = 1040451 -> int
const AndroidX.Media3.Session.CommandButton.IconSignal = 61512 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipBack = 57410 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipBack10 = 57433 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipBack15 = 1040473 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipBack30 = 57434 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipBack5 = 57435 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipForward = 63220 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipForward10 = 57430 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipForward15 = 1040470 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipForward30 = 57431 -> int
const AndroidX.Media3.Session.CommandButton.IconSkipForward5 = 57432 -> int
const AndroidX.Media3.Session.CommandButton.IconStarFilled = 1042488 -> int
const AndroidX.Media3.Session.CommandButton.IconStarUnfilled = 59448 -> int
const AndroidX.Media3.Session.CommandButton.IconStop = 57415 -> int
const AndroidX.Media3.Session.CommandButton.IconSubtitles = 57416 -> int
const AndroidX.Media3.Session.CommandButton.IconSubtitlesOff = 61298 -> int
const AndroidX.Media3.Session.CommandButton.IconSync = 58919 -> int
const AndroidX.Media3.Session.CommandButton.IconThumbDownFilled = 1042651 -> int
const AndroidX.Media3.Session.CommandButton.IconThumbDownUnfilled = 59611 -> int
const AndroidX.Media3.Session.CommandButton.IconThumbUpFilled = 1042652 -> int
const AndroidX.Media3.Session.CommandButton.IconThumbUpUnfilled = 59612 -> int
const AndroidX.Media3.Session.CommandButton.IconUndefined = 0 -> int
const AndroidX.Media3.Session.CommandButton.IconVolumeDown = 57421 -> int
const AndroidX.Media3.Session.CommandButton.IconVolumeOff = 57423 -> int
const AndroidX.Media3.Session.CommandButton.IconVolumeUp = 57424 -> int
const AndroidX.Media3.Session.CommandButton.SlotBack = 2 -> int
const AndroidX.Media3.Session.CommandButton.SlotBackSecondary = 4 -> int
const AndroidX.Media3.Session.CommandButton.SlotCentral = 1 -> int
const AndroidX.Media3.Session.CommandButton.SlotForward = 3 -> int
const AndroidX.Media3.Session.CommandButton.SlotForwardSecondary = 5 -> int
const AndroidX.Media3.Session.CommandButton.SlotOverflow = 6 -> int
const AndroidX.Media3.Session.DefaultMediaNotificationProvider.CommandKeyCompactViewIndex = "androidx.media3.session.command.COMPACT_VIEW_INDEX" -> string!
const AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultChannelId = "default_channel_id" -> string!
const AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultNotificationId = 1001 -> int
const AndroidX.Media3.Session.DefaultMediaNotificationProvider.GroupKey = "media3_group_key" -> string!
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentTypeMovie = 3 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentTypeMusic = 2 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentTypeSonification = 4 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentTypeSpeech = 1 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentTypeUnknown = 0 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.FlagAudibilityEnforced = 1 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.FlagHwAvSync = 16 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageAlarm = 4 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageAssistanceAccessibility = 11 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageAssistanceNavigationGuidance = 12 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageAssistanceSonification = 13 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageAssistant = 16 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageGame = 14 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageMedia = 1 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotification = 5 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotificationCommunicationDelayed = 9 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotificationCommunicationInstant = 8 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotificationCommunicationRequest = 7 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotificationEvent = 10 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageNotificationRingtone = 6 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageUnknown = 0 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageVirtualSource = 15 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageVoiceCommunication = 2 -> int
const AndroidX.Media3.Session.Legacy.AudioAttributesCompat.UsageVoiceCommunicationSignalling = 3 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionDownload = "android.support.v4.media.action.DOWNLOAD" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionRemoveDownloadedFile = "android.support.v4.media.action.REMOVE_DOWNLOADED_FILE" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ExtraDownloadProgress = "android.media.browse.extra.DOWNLOAD_PROGRESS" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ExtraMediaId = "android.media.browse.extra.MEDIA_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ExtraPage = "android.media.browse.extra.PAGE" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ExtraPageSize = "android.media.browse.extra.PAGE_SIZE" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.FlagBrowsable = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.FlagPlayable = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgAddSubscription = 3 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgConnect = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgDisconnect = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgGetMediaItem = 5 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgRegisterCallbackMessenger = 6 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgRemoveSubscription = 4 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgSearch = 8 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgSendCustomAction = 9 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientMsgUnregisterCallbackMessenger = 7 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientVersion1 = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ClientVersionCurrent = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataCallbackToken = "data_callback_token" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataCallingPid = "data_calling_pid" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataCallingUid = "data_calling_uid" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataCustomAction = "data_custom_action" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataCustomActionExtras = "data_custom_action_extras" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataMediaItemId = "data_media_item_id" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataMediaItemList = "data_media_item_list" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataMediaSessionToken = "data_media_session_token" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataNotifyChildrenChangedOptions = "data_notify_children_changed_options" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataOptions = "data_options" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataPackageName = "data_package_name" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataResultReceiver = "data_result_receiver" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataRootHints = "data_root_hints" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataSearchExtras = "data_search_extras" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.DataSearchQuery = "data_search_query" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ExtraCallingPid = "extra_calling_pid" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ExtraClientVersion = "extra_client_version" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ExtraMessengerBinder = "extra_messenger" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ExtraServiceVersion = "extra_service_version" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ExtraSessionBinder = "extra_session_binder" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceMsgOnConnect = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceMsgOnConnectFailed = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceMsgOnLoadChildren = 3 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceVersion1 = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceVersion2 = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ServiceVersionCurrent = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.ExtraOffline = "android.service.media.extra.OFFLINE" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.ExtraRecent = "android.service.media.extra.RECENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.ExtraSuggested = "android.service.media.extra.SUGGESTED" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.ExtraSuggestionKeywords = "android.service.media.extra.SUGGESTION_KEYWORDS" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.KeyMediaItem = "media_item" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.KeySearchResults = "search_results" -> string!
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ResultError = -1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ResultOk = 0 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ResultProgressUpdate = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ServiceInterface = "android.media.browse.MediaBrowserService" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserRootHintsKeyCustomBrowserActionLimit = "androidx.media.utils.MediaBrowserCompat.extras.CUSTOM_BROWSER_ACTION_LIMIT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserRootHintsKeyMediaArtSizePixels = "android.media.extras.MEDIA_ART_SIZE_HINT_PIXELS" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserRootHintsKeyRootChildrenLimit = "androidx.media.MediaBrowserCompat.Extras.KEY_ROOT_CHILDREN_LIMIT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserRootHintsKeyRootChildrenSupportedFlags = "androidx.media.MediaBrowserCompat.Extras.KEY_ROOT_CHILDREN_SUPPORTED_FLAGS" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserServiceExtrasKeyApplicationPreferencesUsingCarAppLibraryIntent = "androidx.media.BrowserRoot.Extras.APPLICATION_PREFERENCES_USING_CAR_APP_LIBRARY_INTENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserServiceExtrasKeyCustomBrowserActionRootList = "androidx.media.utils.extras.CUSTOM_BROWSER_ACTION_ROOT_LIST" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserServiceExtrasKeyFavoritesMediaItem = "androidx.media.BrowserRoot.Extras.FAVORITES_MEDIA_ITEM" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.BrowserServiceExtrasKeySearchSupported = "android.media.browse.SEARCH_SUPPORTED" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyCompletionPercentage = "androidx.media.MediaItem.Extras.COMPLETION_PERCENTAGE" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyCompletionStatus = "android.media.extra.PLAYBACK_STATUS" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyContentStyleBrowsable = "android.media.browse.CONTENT_STYLE_BROWSABLE_HINT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyContentStyleGroupTitle = "android.media.browse.CONTENT_STYLE_GROUP_TITLE_HINT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyContentStylePlayable = "android.media.browse.CONTENT_STYLE_PLAYABLE_HINT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyContentStyleSingleItem = "android.media.browse.CONTENT_STYLE_SINGLE_ITEM_HINT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasKeyCustomBrowserActionIdList = "androidx.media.utils.extras.CUSTOM_BROWSER_ACTION_ID_LIST" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueCompletionStatusFullyPlayed = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueCompletionStatusNotPlayed = 0 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueCompletionStatusPartiallyPlayed = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueContentStyleCategoryGridItem = 4 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueContentStyleCategoryListItem = 3 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueContentStyleGridItem = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.DescriptionExtrasValueContentStyleListItem = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionExtras = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_EXTRAS" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionIconUri = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_ICON_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionId = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionLabel = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_LABEL" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionMediaItemId = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_MEDIA_ITEM_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionResultBrowseNode = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_RESULT_BROWSE_NODE" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionResultMessage = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_RESULT_MESSAGE" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionResultRefreshItem = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_RESULT_REFRESH_ITEM" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.ExtrasKeyCustomBrowserActionResultShowPlayingItem = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_RESULT_SHOW_PLAYING_ITEM" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataKeyContentId = "androidx.media.MediaMetadatCompat.METADATA_KEY_CONTENT_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataKeyIsAdvertisement = "android.media.metadata.ADVERTISEMENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataKeyIsExplicit = "android.media.IS_EXPLICIT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataKeyNextEpisodeContentId = "androidx.media.MediaMetadatCompat.METADATA_KEY_NEXT_EPISODE_CONTENT_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataKeySeriesContentId = "androidx.media.MediaMetadatCompat.METADATA_KEY_SERIES_CONTENT_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.MetadataValueAttributePresent = 1 -> long
const AndroidX.Media3.Session.Legacy.MediaConstants.PlaybackStateExtrasKeyErrorResolutionActionIntent = "android.media.extras.ERROR_RESOLUTION_ACTION_INTENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.PlaybackStateExtrasKeyErrorResolutionActionLabel = "android.media.extras.ERROR_RESOLUTION_ACTION_LABEL" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.PlaybackStateExtrasKeyErrorResolutionUsingCarAppLibraryIntent = "androidx.media.PlaybackStateCompat.Extras.ERROR_RESOLUTION_USING_CAR_APP_LIBRARY_INTENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.PlaybackStateExtrasKeyMediaId = "androidx.media.PlaybackStateCompat.Extras.KEY_MEDIA_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.SessionExtrasKeyAccountName = "androidx.media.MediaSessionCompat.Extras.KEY_ACCOUNT_NAME" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.SessionExtrasKeyAccountType = "androidx.media.MediaSessionCompat.Extras.KEY_ACCOUNT_TYPE" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.SessionExtrasKeyAuthtoken = "androidx.media.MediaSessionCompat.Extras.KEY_AUTHTOKEN" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.SessionExtrasKeySlotReservationSkipToNext = "android.media.playback.ALWAYS_RESERVE_SPACE_FOR.ACTION_SKIP_TO_NEXT" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.SessionExtrasKeySlotReservationSkipToPrev = "android.media.playback.ALWAYS_RESERVE_SPACE_FOR.ACTION_SKIP_TO_PREVIOUS" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.TransportControlsExtrasKeyLegacyStreamType = "android.media.session.extra.LEGACY_STREAM_TYPE" -> string!
const AndroidX.Media3.Session.Legacy.MediaConstants.TransportControlsExtrasKeyShuffle = "androidx.media.MediaControllerCompat.TransportControls.extras.KEY_SHUFFLE" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandAddQueueItem = "android.support.v4.media.session.command.ADD_QUEUE_ITEM" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandAddQueueItemAt = "android.support.v4.media.session.command.ADD_QUEUE_ITEM_AT" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandArgumentIndex = "android.support.v4.media.session.command.ARGUMENT_INDEX" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandArgumentMediaDescription = "android.support.v4.media.session.command.ARGUMENT_MEDIA_DESCRIPTION" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandGetExtraBinder = "android.support.v4.media.session.command.GET_EXTRA_BINDER" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandRemoveQueueItem = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.CommandRemoveQueueItemAt = "android.support.v4.media.session.command.REMOVE_QUEUE_ITEM_AT" -> string!
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.PlaybackTypeLocal = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.PlaybackTypeRemote = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.ExtraLegacyStreamType = "android.media.session.extra.LEGACY_STREAM_TYPE" -> string!
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeAlbums = 2 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeArtists = 3 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeGenres = 4 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeMixed = 0 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypePlaylists = 5 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeTitles = 1 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.BtFolderTypeYears = 6 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.DescriptionKeyMediaUri = "android.support.v4.media.description.MEDIA_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.DescriptionKeyNullBundleFlag = "android.support.v4.media.description.NULL_BUNDLE_FLAG" -> string!
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.ExtraBtFolderType = "android.media.extra.BT_FOLDER_TYPE" -> string!
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.ExtraDownloadStatus = "android.media.extra.DOWNLOAD_STATUS" -> string!
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.StatusDownloaded = 2 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.StatusDownloading = 1 -> long
const AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.StatusNotDownloaded = 0 -> long
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAdvertisement = "android.media.metadata.ADVERTISEMENT" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAlbum = "android.media.metadata.ALBUM" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAlbumArt = "android.media.metadata.ALBUM_ART" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAlbumArtUri = "android.media.metadata.ALBUM_ART_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAlbumArtist = "android.media.metadata.ALBUM_ARTIST" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyArt = "android.media.metadata.ART" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyArtUri = "android.media.metadata.ART_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyArtist = "android.media.metadata.ARTIST" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyAuthor = "android.media.metadata.AUTHOR" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyBtFolderType = "android.media.metadata.BT_FOLDER_TYPE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyCompilation = "android.media.metadata.COMPILATION" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyComposer = "android.media.metadata.COMPOSER" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDate = "android.media.metadata.DATE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDiscNumber = "android.media.metadata.DISC_NUMBER" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDisplayDescription = "android.media.metadata.DISPLAY_DESCRIPTION" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDisplayIcon = "android.media.metadata.DISPLAY_ICON" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDisplayIconUri = "android.media.metadata.DISPLAY_ICON_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDisplaySubtitle = "android.media.metadata.DISPLAY_SUBTITLE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDisplayTitle = "android.media.metadata.DISPLAY_TITLE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDownloadStatus = "android.media.metadata.DOWNLOAD_STATUS" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyDuration = "android.media.metadata.DURATION" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyGenre = "android.media.metadata.GENRE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyMediaId = "android.media.metadata.MEDIA_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyMediaUri = "android.media.metadata.MEDIA_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyNumTracks = "android.media.metadata.NUM_TRACKS" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyRating = "android.media.metadata.RATING" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyTitle = "android.media.metadata.TITLE" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyTrackNumber = "android.media.metadata.TRACK_NUMBER" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyUserRating = "android.media.metadata.USER_RATING" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyWriter = "android.media.metadata.WRITER" -> string!
const AndroidX.Media3.Session.Legacy.MediaMetadataCompat.MetadataKeyYear = "android.media.metadata.YEAR" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentCaptioningEnabled = "android.support.v4.media.session.action.ARGUMENT_CAPTIONING_ENABLED" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentExtras = "android.support.v4.media.session.action.ARGUMENT_EXTRAS" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentMediaId = "android.support.v4.media.session.action.ARGUMENT_MEDIA_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentPlaybackSpeed = "android.support.v4.media.session.action.ARGUMENT_PLAYBACK_SPEED" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentQuery = "android.support.v4.media.session.action.ARGUMENT_QUERY" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentRating = "android.support.v4.media.session.action.ARGUMENT_RATING" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentRepeatMode = "android.support.v4.media.session.action.ARGUMENT_REPEAT_MODE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentShuffleMode = "android.support.v4.media.session.action.ARGUMENT_SHUFFLE_MODE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionArgumentUri = "android.support.v4.media.session.action.ARGUMENT_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionFlagAsInappropriate = "android.support.v4.media.session.action.FLAG_AS_INAPPROPRIATE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionFollow = "android.support.v4.media.session.action.FOLLOW" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionPlayFromUri = "android.support.v4.media.session.action.PLAY_FROM_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionPrepare = "android.support.v4.media.session.action.PREPARE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionPrepareFromMediaId = "android.support.v4.media.session.action.PREPARE_FROM_MEDIA_ID" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionPrepareFromSearch = "android.support.v4.media.session.action.PREPARE_FROM_SEARCH" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionPrepareFromUri = "android.support.v4.media.session.action.PREPARE_FROM_URI" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSetCaptioningEnabled = "android.support.v4.media.session.action.SET_CAPTIONING_ENABLED" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSetPlaybackSpeed = "android.support.v4.media.session.action.SET_PLAYBACK_SPEED" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSetRating = "android.support.v4.media.session.action.SET_RATING" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSetRepeatMode = "android.support.v4.media.session.action.SET_REPEAT_MODE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSetShuffleMode = "android.support.v4.media.session.action.SET_SHUFFLE_MODE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionSkipAd = "android.support.v4.media.session.action.SKIP_AD" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ActionUnfollow = "android.support.v4.media.session.action.UNFOLLOW" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ArgumentMediaAttribute = "android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.ArgumentMediaAttributeValue = "android.support.v4.media.session.ARGUMENT_MEDIA_ATTRIBUTE_VALUE" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.FlagHandlesMediaButtons = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.FlagHandlesQueueCommands = 4 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.FlagHandlesTransportControls = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.KeyExtraBinder = "android.support.v4.media.session.EXTRA_BINDER" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.KeySession2Token = "android.support.v4.media.session.SESSION_TOKEN2" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.KeyToken = "android.support.v4.media.session.TOKEN" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaAttributeAlbum = 1 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaAttributeArtist = 0 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaAttributePlaylist = 2 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.UnknownId = -1 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.LegacyController = "android.media.session.MediaController" -> string!
const AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.UnknownPid = -1 -> int
const AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.UnknownUid = -1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionFastForward = 64 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPause = 2 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPlay = 4 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPlayFromMediaId = 1024 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPlayFromSearch = 2048 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPlayFromUri = 8192 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPlayPause = 512 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPrepare = 16384 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPrepareFromMediaId = 32768 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPrepareFromSearch = 65536 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionPrepareFromUri = 131072 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionRewind = 8 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSeekTo = 256 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetCaptioningEnabled = 1048576 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetPlaybackSpeed = 4194304 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetRating = 128 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetRepeatMode = 262144 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetShuffleMode = 2097152 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSetShuffleModeEnabled = 524288 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSkipToNext = 32 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSkipToPrevious = 16 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionSkipToQueueItem = 4096 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ActionStop = 1 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeActionAborted = 10 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeAppError = 1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeAuthenticationExpired = 3 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeConcurrentStreamLimit = 5 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeContentAlreadyPlaying = 8 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeEndOfQueue = 11 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeNotAvailableInRegion = 7 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeNotSupported = 2 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeParentalControlRestricted = 6 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodePremiumAccountRequired = 4 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeSkipLimitReached = 9 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ErrorCodeUnknownError = 0 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.PlaybackPositionUnknown = -1 -> long
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.RepeatModeAll = 2 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.RepeatModeGroup = 3 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.RepeatModeInvalid = -1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.RepeatModeNone = 0 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.RepeatModeOne = 1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ShuffleModeAll = 1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ShuffleModeGroup = 2 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ShuffleModeInvalid = -1 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ShuffleModeNone = 0 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateBuffering = 6 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateConnecting = 8 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateError = 7 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateFastForwarding = 4 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateNone = 0 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StatePaused = 2 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StatePlaying = 3 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateRewinding = 5 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateSkippingToNext = 10 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateSkippingToPrevious = 9 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateSkippingToQueueItem = 11 -> int
const AndroidX.Media3.Session.Legacy.PlaybackStateCompat.StateStopped = 1 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.Rating3Stars = 3 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.Rating4Stars = 4 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.Rating5Stars = 5 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.RatingHeart = 1 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.RatingNone = 0 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.RatingPercentage = 6 -> int
const AndroidX.Media3.Session.Legacy.RatingCompat.RatingThumbUpDown = 2 -> int
const AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeControlAbsolute = 2 -> int
const AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeControlFixed = 0 -> int
const AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeControlRelative = 1 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorBadValue = -3 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorInvalidState = -2 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorIo = -5 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorNotSupported = -6 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorPermissionDenied = -4 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionAuthenticationExpired = -102 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionConcurrentStreamLimit = -104 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionDisconnected = -100 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionNotAvailableInRegion = -106 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionParentalControlRestricted = -105 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionPremiumAccountRequired = -103 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionSetupRequired = -108 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorSessionSkipLimitReached = -107 -> int
const AndroidX.Media3.Session.LibraryResult.ResultErrorUnknown = -1 -> int
const AndroidX.Media3.Session.LibraryResult.ResultInfoSkipped = 1 -> int
const AndroidX.Media3.Session.LibraryResult.ResultSuccess = 0 -> int
const AndroidX.Media3.Session.MediaConstants.ErrorCodeAuthenticationExpiredCompat = 3 -> int
const AndroidX.Media3.Session.MediaConstants.ExtraKeyMediaId = "androidx.media.utils.extras.KEY_CUSTOM_BROWSER_ACTION_MEDIA_ITEM_ID" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtraKeyRootChildrenBrowsableOnly = "androidx.media3.session.LibraryParams.Extras.KEY_ROOT_CHILDREN_BROWSABLE_ONLY" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyApplicationPreferencesUsingCarAppLibraryIntent = "androidx.media.BrowserRoot.Extras.APPLICATION_PREFERENCES_USING_CAR_APP_LIBRARY_INTENT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyCommandButtonIconCompat = "androidx.media3.session.EXTRAS_KEY_COMMAND_BUTTON_ICON_COMPAT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyCompletionPercentage = "androidx.media.MediaItem.Extras.COMPLETION_PERCENTAGE" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyCompletionStatus = "android.media.extra.PLAYBACK_STATUS" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyContentStyleBrowsable = "android.media.browse.CONTENT_STYLE_BROWSABLE_HINT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyContentStyleGroupTitle = "android.media.browse.CONTENT_STYLE_GROUP_TITLE_HINT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyContentStylePlayable = "android.media.browse.CONTENT_STYLE_PLAYABLE_HINT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyContentStyleSingleItem = "android.media.browse.CONTENT_STYLE_SINGLE_ITEM_HINT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyDownloadStatus = "android.media.extra.DOWNLOAD_STATUS" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyErrorResolutionActionIntentCompat = "android.media.extras.ERROR_RESOLUTION_ACTION_INTENT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyErrorResolutionActionLabelCompat = "android.media.extras.ERROR_RESOLUTION_ACTION_LABEL" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyErrorResolutionUsingCarAppLibraryIntentCompat = "androidx.media.PlaybackStateCompat.Extras.ERROR_RESOLUTION_USING_CAR_APP_LIBRARY_INTENT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyIsAdvertisement = "android.media.metadata.ADVERTISEMENT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyIsExplicit = "android.media.IS_EXPLICIT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyMediaArtSizePixels = "android.media.extras.MEDIA_ART_SIZE_HINT_PIXELS" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyMediaIdCompat = "androidx.media.PlaybackStateCompat.Extras.KEY_MEDIA_ID" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyMediaTypeCompat = "androidx.media3.session.EXTRAS_KEY_MEDIA_TYPE_COMPAT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyPlaybackSpeedCompat = "EXO_SPEED" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeyRootChildrenLimit = "androidx.media.MediaBrowserCompat.Extras.KEY_ROOT_CHILDREN_LIMIT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeySlotReservationSeekToNext = "android.media.playback.ALWAYS_RESERVE_SPACE_FOR.ACTION_SKIP_TO_NEXT" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasKeySlotReservationSeekToPrev = "android.media.playback.ALWAYS_RESERVE_SPACE_FOR.ACTION_SKIP_TO_PREVIOUS" -> string!
const AndroidX.Media3.Session.MediaConstants.ExtrasValueAttributePresent = 1 -> long
const AndroidX.Media3.Session.MediaConstants.ExtrasValueCompletionStatusFullyPlayed = 2 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueCompletionStatusNotPlayed = 0 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueCompletionStatusPartiallyPlayed = 1 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueContentStyleCategoryGridItem = 4 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueContentStyleCategoryListItem = 3 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueContentStyleGridItem = 2 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueContentStyleListItem = 1 -> int
const AndroidX.Media3.Session.MediaConstants.ExtrasValueStatusDownloaded = 2 -> long
const AndroidX.Media3.Session.MediaConstants.ExtrasValueStatusDownloading = 1 -> long
const AndroidX.Media3.Session.MediaConstants.ExtrasValueStatusNotDownloaded = 0 -> long
const AndroidX.Media3.Session.MediaController.DefaultPlatformCallbackAggregationTimeoutMs = 100 -> long
const AndroidX.Media3.Session.MediaController.KeyMediaNotificationControllerFlag = "androidx.media3.session.MediaNotificationManager" -> string!
const AndroidX.Media3.Session.MediaController.ReleaseUnbindTimeoutMs = 30000 -> long
const AndroidX.Media3.Session.MediaControllerDefault.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaController" -> string!
const AndroidX.Media3.Session.MediaControllerStub.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaController" -> string!
const AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.LibraryErrorReplicationModeFatal = 1 -> int
const AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.LibraryErrorReplicationModeNonFatal = 2 -> int
const AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.LibraryErrorReplicationModeNone = 0 -> int
const AndroidX.Media3.Session.MediaLibraryService.ServiceInterface = "androidx.media3.session.MediaLibraryService" -> string!
const AndroidX.Media3.Session.MediaNotification.NotificationDismissedEventKey = "androidx.media3.session.NOTIFICATION_DISMISSED_EVENT_KEY" -> string!
const AndroidX.Media3.Session.MediaSession.ControllerInfo.LegacyControllerInterfaceVersion = 0 -> int
const AndroidX.Media3.Session.MediaSession.ControllerInfo.LegacyControllerPackageName = "android.media.session.MediaController" -> string!
const AndroidX.Media3.Session.MediaSession.ControllerInfo.LegacyControllerVersion = 0 -> int
const AndroidX.Media3.Session.MediaSessionDefault.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaSession" -> string!
const AndroidX.Media3.Session.MediaSessionService.DefaultForegroundServiceTimeoutMs = 600000 -> long
const AndroidX.Media3.Session.MediaSessionService.ServiceInterface = "androidx.media3.session.MediaSessionService" -> string!
const AndroidX.Media3.Session.MediaSessionServiceDefault.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaSessionService" -> string!
const AndroidX.Media3.Session.MediaSessionServiceStub.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaSessionService" -> string!
const AndroidX.Media3.Session.MediaSessionStub.InterfaceConsts.Descriptor = "androidx.media3.session.IMediaSession" -> string!
const AndroidX.Media3.Session.MediaStyleNotificationHelper.ExtraMedia3Session = "androidx.media3.session" -> string!
const AndroidX.Media3.Session.SessionCommand.CommandCodeCustom = 0 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibraryGetChildren = 50003 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibraryGetItem = 50004 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibraryGetLibraryRoot = 50000 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibraryGetSearchResult = 50006 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibrarySearch = 50005 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibrarySubscribe = 50001 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeLibraryUnsubscribe = 50002 -> int
const AndroidX.Media3.Session.SessionCommand.CommandCodeSessionSetRating = 40010 -> int
const AndroidX.Media3.Session.SessionError.ErrorBadValue = -3 -> int
const AndroidX.Media3.Session.SessionError.ErrorInvalidState = -2 -> int
const AndroidX.Media3.Session.SessionError.ErrorIo = -5 -> int
const AndroidX.Media3.Session.SessionError.ErrorNotSupported = -6 -> int
const AndroidX.Media3.Session.SessionError.ErrorPermissionDenied = -4 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionAuthenticationExpired = -102 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionConcurrentStreamLimit = -104 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionContentAlreadyPlaying = -110 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionDisconnected = -100 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionEndOfPlaylist = -109 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionNotAvailableInRegion = -106 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionParentalControlRestricted = -105 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionPremiumAccountRequired = -103 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionSetupRequired = -108 -> int
const AndroidX.Media3.Session.SessionError.ErrorSessionSkipLimitReached = -107 -> int
const AndroidX.Media3.Session.SessionError.ErrorUnknown = -1 -> int
const AndroidX.Media3.Session.SessionError.InfoCancelled = 1 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorBadValue = -3 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorInvalidState = -2 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorIo = -5 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorNotSupported = -6 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorPermissionDenied = -4 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionAuthenticationExpired = -102 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionConcurrentStreamLimit = -104 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionDisconnected = -100 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionNotAvailableInRegion = -106 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionParentalControlRestricted = -105 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionPremiumAccountRequired = -103 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionSetupRequired = -108 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorSessionSkipLimitReached = -107 -> int
const AndroidX.Media3.Session.SessionResult.ResultErrorUnknown = -1 -> int
const AndroidX.Media3.Session.SessionResult.ResultInfoSkipped = 1 -> int
const AndroidX.Media3.Session.SessionResult.ResultSuccess = 0 -> int
const AndroidX.Media3.Session.SessionToken.TypeLibraryService = 2 -> int
const AndroidX.Media3.Session.SessionToken.TypeSession = 0 -> int
const AndroidX.Media3.Session.SessionToken.TypeSessionService = 1 -> int
override AndroidX.Media3.Session.CacheBitmapLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.CommandButton.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.CommandButton.DisplayConstraints.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.CommandButton.DisplayConstraints.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.CommandButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.DefaultMediaNotificationProvider.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.DefaultMediaNotificationProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.DefaultMediaNotificationProvider.ThresholdClass.get -> nint
override AndroidX.Media3.Session.DefaultMediaNotificationProvider.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.LegacyParcelableUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserProtocol.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.BrowserRoot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaButtonReceiver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaButtonReceiver.OnReceive(Android.Content.Context? context, Android.Content.Intent? intent) -> void
override AndroidX.Media3.Session.Legacy.MediaButtonReceiver.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaButtonReceiver.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaConstants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaMetadataCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.MediaSessionStub.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.MediaSessionStub.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.PlaybackStateCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.RatingCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.ThresholdClass.get -> nint
override AndroidX.Media3.Session.Legacy.VolumeProviderCompat.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.LibraryResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaBrowser.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaBrowser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaButtonReceiver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaButtonReceiver.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaButtonReceiver.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaConstants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaController.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaController.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaController.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaControllerDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaControllerDefault.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaControllerDefault.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaControllerStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaControllerStub.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaControllerStub.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaController_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaController_Parcel.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaController_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaLibraryService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaLibraryService.LibraryParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaLibraryService.LibraryParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaLibraryService.MediaLibrarySession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaLibraryService.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaLibraryService.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaNotification.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.BuilderBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.BuilderBase.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSession.BuilderBase.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSession.ConnectionResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.ControllerInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.MediaItemsWithStartPosition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSession.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionDefault.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionDefault.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override AndroidX.Media3.Session.MediaSessionService.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionService.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionServiceDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionServiceDefault.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionServiceDefault.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionServiceStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionServiceStub.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionServiceStub.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionService_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionService_Parcel.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionService_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSessionStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSessionStub.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSessionStub.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaSession_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaSession_Parcel.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaSession_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaStyleNotificationHelper.DecoratedMediaCustomViewStyle.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.MediaStyleNotificationHelper.ThresholdClass.get -> nint
override AndroidX.Media3.Session.MediaStyleNotificationHelper.ThresholdType.get -> System.Type!
override AndroidX.Media3.Session.SessionCommand.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SessionCommands.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SessionCommands.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SessionError.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SessionResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SessionToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Session.SimpleBitmapLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed AndroidX.Media3.Session.MediaButtonReceiver.OnReceive(Android.Content.Context? context, Android.Content.Intent? intent) -> void
static AndroidX.Media3.Session.CommandButton.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.CommandButton?
static AndroidX.Media3.Session.CommandButton.FromBundle(Android.OS.Bundle? bundle, int sessionInterfaceVersion) -> AndroidX.Media3.Session.CommandButton?
static AndroidX.Media3.Session.CommandButton.GetDefaultSlot(int playerCommand, int icon) -> int
static AndroidX.Media3.Session.CommandButton.GetIconResIdForIconConstant(int icon) -> int
static AndroidX.Media3.Session.DefaultMediaNotificationProvider.DefaultChannelNameResourceId.get -> int
static AndroidX.Media3.Session.Legacy.AudioAttributesCompat.SetForceLegacyBehavior(bool force) -> void
static AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Wrap(Java.Lang.Object? aa) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat?
static AndroidX.Media3.Session.Legacy.IMediaControllerCallbackExtensions.OnQueueTitleChanged(this AndroidX.Media3.Session.Legacy.IMediaControllerCallback! self, string? p0) -> void
static AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.FromMediaItem(Java.Lang.Object? itemObj) -> AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem?
static AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.FromMediaItemList(System.Collections.Generic.IList<object!>? itemList) -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem!>?
static AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.AreSameOptions(Android.OS.Bundle? options1, Android.OS.Bundle? options2) -> bool
static AndroidX.Media3.Session.Legacy.MediaBrowserCompatUtils.HasDuplicatedItems(Android.OS.Bundle? options1, Android.OS.Bundle? options2) -> bool
static AndroidX.Media3.Session.Legacy.MediaButtonReceiver.BuildMediaButtonPendingIntent(Android.Content.Context? context, Android.Content.ComponentName? mbrComponent, long action) -> Android.App.PendingIntent?
static AndroidX.Media3.Session.Legacy.MediaButtonReceiver.BuildMediaButtonPendingIntent(Android.Content.Context? context, long action) -> Android.App.PendingIntent?
static AndroidX.Media3.Session.Legacy.MediaButtonReceiver.GetMediaButtonReceiverComponent(Android.Content.Context? context) -> Android.Content.ComponentName?
static AndroidX.Media3.Session.Legacy.MediaButtonReceiver.HandleIntent(AndroidX.Media3.Session.Legacy.MediaSessionCompat? mediaSessionCompat, Android.Content.Intent? intent) -> Android.Views.KeyEvent?
static AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media3.Session.Legacy.IMediaControllerCallback?
static AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.DefaultImpl.get -> AndroidX.Media3.Session.Legacy.IMediaControllerCallback?
static AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.SetDefaultImpl(AndroidX.Media3.Session.Legacy.IMediaControllerCallback? impl) -> bool
static AndroidX.Media3.Session.Legacy.MediaControllerCompat.GetMediaController(Android.App.Activity? activity) -> AndroidX.Media3.Session.Legacy.MediaControllerCompat?
static AndroidX.Media3.Session.Legacy.MediaControllerCompat.SetMediaController(Android.App.Activity? activity, AndroidX.Media3.Session.Legacy.MediaControllerCompat? mediaController) -> void
static AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.MediaDescriptionCompat.FromMediaDescription(Java.Lang.Object? descriptionObj) -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat?
static AndroidX.Media3.Session.Legacy.MediaMetadataCompat.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.MediaMetadataCompat.FromMediaMetadata(Java.Lang.Object? metadataObj) -> AndroidX.Media3.Session.Legacy.MediaMetadataCompat?
static AndroidX.Media3.Session.Legacy.MediaMetadataCompat.PreferredDescriptionOrder.get -> System.Collections.Generic.IList<string!>?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.EnsureClassLoader(Android.OS.Bundle? bundle) -> void
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.FromMediaSession(Android.Content.Context? context, Java.Lang.Object? mediaSession) -> AndroidX.Media3.Session.Legacy.MediaSessionCompat?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.FromQueueItem(Java.Lang.Object? queueItem) -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem.FromQueueItemList(System.Collections.Generic.IList<Java.Lang.Object!>? itemList) -> System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.FromBundle(Android.OS.Bundle? tokenBundle) -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token.FromToken(Java.Lang.Object? token) -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
static AndroidX.Media3.Session.Legacy.MediaSessionCompat.UnparcelWithClassLoader(Android.OS.Bundle? bundle) -> Android.OS.Bundle?
static AndroidX.Media3.Session.Legacy.MediaSessionManager.GetSessionManager(Android.Content.Context? context) -> AndroidX.Media3.Session.Legacy.MediaSessionManager?
static AndroidX.Media3.Session.Legacy.MediaSessionStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media3.Session.Legacy.IMediaSession?
static AndroidX.Media3.Session.Legacy.MediaSessionStub.DefaultImpl.get -> AndroidX.Media3.Session.Legacy.IMediaSession?
static AndroidX.Media3.Session.Legacy.MediaSessionStub.SetDefaultImpl(AndroidX.Media3.Session.Legacy.IMediaSession? impl) -> bool
static AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.PlaybackStateCompat.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction.FromCustomAction(Java.Lang.Object? customActionObj) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat.CustomAction?
static AndroidX.Media3.Session.Legacy.PlaybackStateCompat.FromPlaybackState(Java.Lang.Object? stateObj) -> AndroidX.Media3.Session.Legacy.PlaybackStateCompat?
static AndroidX.Media3.Session.Legacy.PlaybackStateCompat.ToKeyCode(long action) -> int
static AndroidX.Media3.Session.Legacy.RatingCompat.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Media3.Session.Legacy.RatingCompat.FromRating(Java.Lang.Object? ratingObj) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.Legacy.RatingCompat.NewHeartRating(bool hasHeart) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.Legacy.RatingCompat.NewPercentageRating(float percent) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.Legacy.RatingCompat.NewStarRating(int starRatingStyle, float starRating) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.Legacy.RatingCompat.NewThumbRating(bool thumbIsUp) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.Legacy.RatingCompat.NewUnratedRating(int ratingStyle) -> AndroidX.Media3.Session.Legacy.RatingCompat?
static AndroidX.Media3.Session.LibraryResult.FromItemBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.FromItemListBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.FromUnknownBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.FromVoidBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfError(AndroidX.Media3.Session.SessionError? sessionError) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfError(AndroidX.Media3.Session.SessionError? sessionError, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfError(int errorCode) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfError(int errorCode, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfItem(AndroidX.Media3.Common.MediaItem? item, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfItemList(System.Collections.Generic.IList<AndroidX.Media3.Common.MediaItem!>? items, AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfVoid() -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.LibraryResult.OfVoid(AndroidX.Media3.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media3.Session.LibraryResult?
static AndroidX.Media3.Session.MediaController.ReleaseFuture(Java.Util.Concurrent.IFuture? controllerFuture) -> void
static AndroidX.Media3.Session.MediaControllerStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media3.Session.IMediaController?
static AndroidX.Media3.Session.MediaLibraryService.LibraryParams.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.MediaLibraryService.LibraryParams?
static AndroidX.Media3.Session.MediaNotificationIActionFactoryExtensions.CreateCustomAction(this AndroidX.Media3.Session.MediaNotification.IActionFactory! self, AndroidX.Media3.Session.MediaSession? p0, AndroidX.Core.Graphics.Drawable.IconCompat? p1, string? p2, string? p3, Android.OS.Bundle? p4) -> AndroidX.Core.App.NotificationCompat.Action?
static AndroidX.Media3.Session.MediaNotificationIActionFactoryExtensions.CreateMediaAction(this AndroidX.Media3.Session.MediaNotification.IActionFactory! self, AndroidX.Media3.Session.MediaSession? p0, AndroidX.Core.Graphics.Drawable.IconCompat? p1, string? p2, int p3) -> AndroidX.Core.App.NotificationCompat.Action?
static AndroidX.Media3.Session.MediaSession.ConnectionResult.Accept(AndroidX.Media3.Session.SessionCommands? availableSessionCommands, AndroidX.Media3.Common.PlayerCommands? availablePlayerCommands) -> AndroidX.Media3.Session.MediaSession.ConnectionResult?
static AndroidX.Media3.Session.MediaSession.ConnectionResult.DefaultPlayerCommands.get -> AndroidX.Media3.Common.PlayerCommands?
static AndroidX.Media3.Session.MediaSession.ConnectionResult.DefaultSessionAndLibraryCommands.get -> AndroidX.Media3.Session.SessionCommands?
static AndroidX.Media3.Session.MediaSession.ConnectionResult.DefaultSessionCommands.get -> AndroidX.Media3.Session.SessionCommands?
static AndroidX.Media3.Session.MediaSession.ConnectionResult.Reject() -> AndroidX.Media3.Session.MediaSession.ConnectionResult?
static AndroidX.Media3.Session.MediaSession.ControllerInfo.CreateTestOnlyControllerInfo(string? packageName, int pid, int uid, int libraryVersion, int interfaceVersion, bool trusted, Android.OS.Bundle? connectionHints) -> AndroidX.Media3.Session.MediaSession.ControllerInfo?
static AndroidX.Media3.Session.MediaSessionServiceStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media3.Session.IMediaSessionService?
static AndroidX.Media3.Session.MediaSessionStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media3.Session.IMediaSession?
static AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.GetSessionToken(Android.App.Notification? notification) -> AndroidX.Media3.Session.SessionToken?
static AndroidX.Media3.Session.SessionCommand.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.SessionCommand?
static AndroidX.Media3.Session.SessionCommands.Empty.get -> AndroidX.Media3.Session.SessionCommands?
static AndroidX.Media3.Session.SessionCommands.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.SessionCommands?
static AndroidX.Media3.Session.SessionError.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.SessionError?
static AndroidX.Media3.Session.SessionError.GetErrorCodeName(int errorCode) -> string?
static AndroidX.Media3.Session.SessionResult.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.SessionResult?
static AndroidX.Media3.Session.SessionToken.CreateSessionToken(Android.Content.Context? context, Android.Media.Session.MediaSession.Token? token) -> Google.Common.Util.Concurrent.IListenableFuture?
static AndroidX.Media3.Session.SessionToken.CreateSessionToken(Android.Content.Context? context, Android.Media.Session.MediaSession.Token? token, Android.OS.Looper? completionLooper) -> Google.Common.Util.Concurrent.IListenableFuture?
static AndroidX.Media3.Session.SessionToken.CreateSessionToken(Android.Content.Context? context, Android.OS.IParcelable? token) -> Google.Common.Util.Concurrent.IListenableFuture?
static AndroidX.Media3.Session.SessionToken.CreateSessionToken(Android.Content.Context? context, Android.OS.IParcelable? token, Android.OS.Looper? completionLooper) -> Google.Common.Util.Concurrent.IListenableFuture?
static AndroidX.Media3.Session.SessionToken.FromBundle(Android.OS.Bundle? bundle) -> AndroidX.Media3.Session.SessionToken?
static AndroidX.Media3.Session.SessionToken.GetAllServiceTokens(Android.Content.Context? context) -> Google.Common.Collect.ImmutableSet?
virtual AndroidX.Media3.Session.DefaultMediaNotificationProvider.AddNotificationActions(AndroidX.Media3.Session.MediaSession? mediaSession, Google.Common.Collect.ImmutableList? mediaButtons, AndroidX.Core.App.NotificationCompat.Builder? builder, AndroidX.Media3.Session.MediaNotification.IActionFactory? actionFactory) -> int[]?
virtual AndroidX.Media3.Session.DefaultMediaNotificationProvider.GetMediaButtons(AndroidX.Media3.Session.MediaSession? session, AndroidX.Media3.Common.PlayerCommands? playerCommands, Google.Common.Collect.ImmutableList? mediaButtonPreferences, bool showPauseButton) -> Google.Common.Collect.ImmutableList?
virtual AndroidX.Media3.Session.DefaultMediaNotificationProvider.GetNotificationContentTextFormatted(AndroidX.Media3.Common.MediaMetadata? metadata) -> Java.Lang.ICharSequence?
virtual AndroidX.Media3.Session.DefaultMediaNotificationProvider.GetNotificationContentTitleFormatted(AndroidX.Media3.Common.MediaMetadata? metadata) -> Java.Lang.ICharSequence?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.AudioAttributes.get -> Java.Lang.Object?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.Build() -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImpl?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.SetContentType(int contentType) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.SetFlags(int flags) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.SetLegacyStreamType(int streamType) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Builder.SetUsage(int usage) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.IAudioAttributesImplBuilder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.ContentType.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Flags.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.LegacyStreamType.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.RawLegacyStreamType.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.Usage.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.AudioAttributesImplBase.VolumeControlStream.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.Build() -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.SetContentType(int contentType) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.SetFlags(int flags) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.SetLegacyStreamType(int streamType) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder.SetUsage(int usage) -> AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Builder?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.ContentType.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Flags.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.LegacyStreamType.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Unwrap() -> Java.Lang.Object?
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.Usage.get -> int
virtual AndroidX.Media3.Session.Legacy.AudioAttributesCompat.VolumeControlStream.get -> int
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.OnConnected() -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.OnConnectionFailed() -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ConnectionCallback.OnConnectionSuspended() -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.OnError(string? action, Android.OS.Bundle? extras, Android.OS.Bundle? data) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.OnProgressUpdate(string? action, Android.OS.Bundle? extras, Android.OS.Bundle? data) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.CustomActionCallback.OnResult(string? action, Android.OS.Bundle? extras, Android.OS.Bundle? resultData) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.OnError(string? itemId) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.ItemCallback.OnItemLoaded(AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem? item) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.DescribeContents() -> int
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.Description.get -> AndroidX.Media3.Session.Legacy.MediaDescriptionCompat?
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.Flags.get -> int
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.IsBrowsable.get -> bool
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.IsPlayable.get -> bool
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.MediaId.get -> string?
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem.WriteToParcel(Android.OS.Parcel? out, Android.OS.ParcelableWriteFlags flags) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.OnError(string? query, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SearchCallback.OnSearchResult(string? query, Android.OS.Bundle? extras, System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem!>? items) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.OnChildrenLoaded(string? parentId, System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem!>? children) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.OnChildrenLoaded(string? parentId, System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaBrowserCompat.MediaItem!>? children, Android.OS.Bundle? options) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.OnError(string? parentId) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserCompat.SubscriptionCallback.OnError(string? parentId, Android.OS.Bundle? options) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.AttachToBaseContext(Android.Content.Context? base) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Dump(Java.IO.FileDescriptor? fd, Java.IO.PrintWriter? writer, string![]? args) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.NotifyChildrenChanged(AndroidX.Media3.Session.Legacy.MediaSessionManager.RemoteUserInfo? remoteUserInfo, string? parentId, Android.OS.Bundle? options) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.NotifyChildrenChanged(string? parentId) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.NotifyChildrenChanged(string? parentId, Android.OS.Bundle? options) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnCustomAction(string? action, Android.OS.Bundle? extras, AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result? result) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnLoadChildren(string? parentId, AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result? result, Android.OS.Bundle? options) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnLoadItem(string? itemId, AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result? result) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnSearch(string? query, Android.OS.Bundle? extras, AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result? result) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnSubscribe(string? id, Android.OS.Bundle? option) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.OnUnsubscribe(string? id) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.Detach() -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.SendError(Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.Result.SendProgressUpdate(Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.SessionToken.get -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
virtual AndroidX.Media3.Session.Legacy.MediaBrowserServiceCompat.SessionToken.set -> void
virtual AndroidX.Media3.Session.Legacy.MediaButtonReceiver.OnForegroundServiceStartNotAllowedException(Android.Content.Intent? intent, Android.App.ForegroundServiceStartNotAllowedException? e) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.Legacy.MediaControllerCallbackStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.BinderDied() -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnAudioInfoChanged(AndroidX.Media3.Session.Legacy.MediaControllerCompat.PlaybackInfo? info) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnCaptioningEnabledChanged(bool enabled) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnExtrasChanged(Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnMetadataChanged(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? metadata) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnPlaybackStateChanged(AndroidX.Media3.Session.Legacy.PlaybackStateCompat? state) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnQueueChanged(System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>? queue) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnQueueTitleChanged(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnRepeatModeChanged(int repeatMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnSessionDestroyed() -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnSessionEvent(string? e, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnSessionReady() -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.Callback.OnShuffleModeChanged(int shuffleMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaControllerCompat.TransportControls.SetPlaybackSpeed(float speed) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Active.get -> bool
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Active.set -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.AddOnActiveChangeListener(AndroidX.Media3.Session.Legacy.MediaSessionCompat.IOnActiveChangeListener? listener) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnAddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnAddQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description, int index) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnCommand(string? command, Android.OS.Bundle? extras, Android.OS.ResultReceiver? cb) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnCustomAction(string? action, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnFastForward() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnMediaButtonEvent(Android.Content.Intent? mediaButtonEvent) -> bool
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPause() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPlay() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPlayFromMediaId(string? mediaId, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPlayFromSearch(string? query, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPlayFromUri(Android.Net.Uri? uri, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPrepare() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPrepareFromMediaId(string? mediaId, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPrepareFromSearch(string? query, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnPrepareFromUri(Android.Net.Uri? uri, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnRemoveQueueItem(AndroidX.Media3.Session.Legacy.MediaDescriptionCompat? description) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnRemoveQueueItemAt(int index) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnRewind() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSeekTo(long pos) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetCaptioningEnabled(bool enabled) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetPlaybackSpeed(float speed) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetRating(AndroidX.Media3.Session.Legacy.RatingCompat? rating) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetRating(AndroidX.Media3.Session.Legacy.RatingCompat? rating, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetRepeatMode(int repeatMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSetShuffleMode(int shuffleMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSkipToNext() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSkipToPrevious() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnSkipToQueueItem(long id) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback.OnStop() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.CallingPackage.get -> string?
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Controller.get -> AndroidX.Media3.Session.Legacy.MediaControllerCompat?
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.MediaSession.get -> Java.Lang.Object?
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.Release() -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.RemoteControlClient.get -> Java.Lang.Object?
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.RemoveOnActiveChangeListener(AndroidX.Media3.Session.Legacy.MediaSessionCompat.IOnActiveChangeListener? listener) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SendSessionEvent(string? e, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SessionToken.get -> AndroidX.Media3.Session.Legacy.MediaSessionCompat.Token?
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetCallback(AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback? callback) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetCallback(AndroidX.Media3.Session.Legacy.MediaSessionCompat.Callback? callback, Android.OS.Handler? handler) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetCaptioningEnabled(bool enabled) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetExtras(Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetFlags(int flags) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetMediaButtonReceiver(Android.App.PendingIntent? mbr) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetMetadata(AndroidX.Media3.Session.Legacy.MediaMetadataCompat? metadata) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetPlaybackState(AndroidX.Media3.Session.Legacy.PlaybackStateCompat? state) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetPlaybackToLocal(int stream) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetPlaybackToRemote(AndroidX.Media3.Session.Legacy.VolumeProviderCompat? volumeProvider) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetQueue(System.Collections.Generic.IList<AndroidX.Media3.Session.Legacy.MediaSessionCompat.QueueItem!>? queue) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetQueueTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetRatingType(int type) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetRegistrationCallback(AndroidX.Media3.Session.Legacy.MediaSessionCompat.IRegistrationCallback? callback, Android.OS.Handler? handler) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetRepeatMode(int repeatMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetSessionActivity(Android.App.PendingIntent? pi) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionCompat.SetShuffleMode(int shuffleMode) -> void
virtual AndroidX.Media3.Session.Legacy.MediaSessionStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.Legacy.MediaSessionStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.DescribeContents() -> int
virtual AndroidX.Media3.Session.Legacy.ParcelableVolumeInfo.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
virtual AndroidX.Media3.Session.Legacy.VolumeProviderCompat.OnAdjustVolume(int direction) -> void
virtual AndroidX.Media3.Session.Legacy.VolumeProviderCompat.OnSetVolumeTo(int volume) -> void
virtual AndroidX.Media3.Session.Legacy.VolumeProviderCompat.SetCallback(AndroidX.Media3.Session.Legacy.VolumeProviderCompat.Callback? callback) -> void
virtual AndroidX.Media3.Session.Legacy.VolumeProviderCompat.VolumeProvider.get -> Java.Lang.Object?
virtual AndroidX.Media3.Session.MediaButtonReceiver.OnForegroundServiceStartNotAllowedException(Android.Content.Intent? intent, Android.App.ForegroundServiceStartNotAllowedException? e) -> void
virtual AndroidX.Media3.Session.MediaButtonReceiver.ShouldStartForegroundService(Android.Content.Context? context, Android.Content.Intent? intent) -> bool
virtual AndroidX.Media3.Session.MediaController.OnCustomCommandHandler.Invoke(AndroidX.Media3.Session.MediaController? controller, AndroidX.Media3.Session.SessionCommand? command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Session.MediaController.OnSetCustomLayoutHandler.Invoke(AndroidX.Media3.Session.MediaController? controller, System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? layout) -> Google.Common.Util.Concurrent.IListenableFuture?
virtual AndroidX.Media3.Session.MediaControllerDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaControllerDefault.OnAvailableCommandsChangedFromPlayer(int seq, Android.OS.Bundle? commandsBundle) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnAvailableCommandsChangedFromSession(int seq, Android.OS.Bundle? sessionCommandsBundle, Android.OS.Bundle? playerCommandsBundle) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnChildrenChanged(int seq, string? parentId, int itemCount, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnConnected(int seq, Android.OS.Bundle? connectionResult) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnCustomCommand(int seq, Android.OS.Bundle? command, Android.OS.Bundle? args) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnDisconnected(int seq) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnError(int seq, Android.OS.Bundle? sessionError) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnExtrasChanged(int seq, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnLibraryResult(int seq, Android.OS.Bundle? libraryResult) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnPeriodicSessionPositionInfoChanged(int seq, Android.OS.Bundle? sessionPositionInfo) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnPlayerInfoChanged(int seq, Android.OS.Bundle? playerInfoBundle, bool isTimelineExcluded) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnPlayerInfoChangedWithExclusions(int seq, Android.OS.Bundle? playerInfoBundle, Android.OS.Bundle? playerInfoExclusions) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnRenderedFirstFrame(int seq) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnSearchResultChanged(int seq, string? query, int itemCount, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnSessionActivityChanged(int seq, Android.App.PendingIntent? pendingIntent) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnSessionResult(int seq, Android.OS.Bundle? sessionResult) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnSetCustomLayout(int seq, System.Collections.Generic.IList<Android.OS.Bundle!>? commandButtonList) -> void
virtual AndroidX.Media3.Session.MediaControllerDefault.OnSetMediaButtonPreferences(int seq, System.Collections.Generic.IList<Android.OS.Bundle!>? commandButtonList) -> void
virtual AndroidX.Media3.Session.MediaControllerStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaControllerStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.Build() -> AndroidX.Media3.Session.MediaSession.ConnectionResult?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetAvailablePlayerCommands(AndroidX.Media3.Common.PlayerCommands? availablePlayerCommands) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetAvailableSessionCommands(AndroidX.Media3.Session.SessionCommands? availableSessionCommands) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetCustomLayout(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? customLayout) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetMediaButtonPreferences(System.Collections.Generic.IList<AndroidX.Media3.Session.CommandButton!>? mediaButtonPreferences) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetSessionActivity(Android.App.PendingIntent? sessionActivity) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder.SetSessionExtras(Android.OS.Bundle? sessionExtras) -> AndroidX.Media3.Session.MediaSession.ConnectionResult.AcceptedResultBuilder?
virtual AndroidX.Media3.Session.MediaSession.CustomLayout.get -> Google.Common.Collect.ImmutableList?
virtual AndroidX.Media3.Session.MediaSession.IsMediaNotificationController(AndroidX.Media3.Session.MediaSession.ControllerInfo? controllerInfo) -> bool
virtual AndroidX.Media3.Session.MediaSession.MediaButtonPreferences.get -> Google.Common.Collect.ImmutableList?
virtual AndroidX.Media3.Session.MediaSession.MediaNotificationControllerInfo.get -> AndroidX.Media3.Session.MediaSession.ControllerInfo?
virtual AndroidX.Media3.Session.MediaSessionDefault.AddMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? mediaItemBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.AddMediaItemWithIndex(AndroidX.Media3.Session.IMediaController? caller, int seq, int index, Android.OS.Bundle? mediaItemBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.AddMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.IBinder? mediaItems) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.AddMediaItemsWithIndex(AndroidX.Media3.Session.IMediaController? caller, int seq, int index, Android.OS.IBinder? mediaItems) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaSessionDefault.ClearMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Connect(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? connectionRequest) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.DecreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.DecreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? caller, int seq, int flags) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.FlushCommandQueue(AndroidX.Media3.Session.IMediaController? caller) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.GetChildren(AndroidX.Media3.Session.IMediaController? caller, int seq, string? parentId, int page, int pageSize, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.GetItem(AndroidX.Media3.Session.IMediaController? caller, int seq, string? mediaId) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.GetLibraryRoot(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.GetSearchResult(AndroidX.Media3.Session.IMediaController? caller, int seq, string? query, int page, int pageSize, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.IncreaseDeviceVolume(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.IncreaseDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? caller, int seq, int flags) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.MoveMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq, int currentIndex, int newIndex) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.MoveMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq, int fromIndex, int toIndex, int newIndex) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.OnControllerResult(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? controllerResult) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.OnCustomCommand(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? sessionCommand, Android.OS.Bundle? args) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Pause(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Play(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Prepare(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Release(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.RemoveMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq, int index) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.RemoveMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq, int fromIndex, int toIndex) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.ReplaceMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq, int index, Android.OS.Bundle? mediaItemBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.ReplaceMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq, int fromIndex, int toIndex, Android.OS.IBinder? mediaItems) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Search(AndroidX.Media3.Session.IMediaController? caller, int seq, string? query, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekBack(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekForward(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekTo(AndroidX.Media3.Session.IMediaController? caller, int seq, long positionMs) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToDefaultPosition(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToDefaultPositionWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? caller, int seq, int mediaItemIndex) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToNext(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToNextMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToPrevious(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToPreviousMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SeekToWithMediaItemIndex(AndroidX.Media3.Session.IMediaController? caller, int seq, int mediaItemIndex, long positionMs) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetAudioAttributes(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? audioAttributes, bool handleAudioFocus) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetDeviceMuted(AndroidX.Media3.Session.IMediaController? caller, int seq, bool muted) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetDeviceMutedWithFlags(AndroidX.Media3.Session.IMediaController? caller, int seq, bool muted, int flags) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetDeviceVolume(AndroidX.Media3.Session.IMediaController? caller, int seq, int volume) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetDeviceVolumeWithFlags(AndroidX.Media3.Session.IMediaController? caller, int seq, int volume, int flags) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItem(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? mediaItemBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItemWithResetPosition(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? mediaItemBundle, bool resetPosition) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItemWithStartPosition(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? mediaItemBundle, long startPositionMs) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItems(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.IBinder? mediaItems) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItemsWithResetPosition(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.IBinder? mediaItems, bool resetPosition) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetMediaItemsWithStartIndex(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.IBinder? mediaItems, int startIndex, long startPositionMs) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetPlayWhenReady(AndroidX.Media3.Session.IMediaController? caller, int seq, bool playWhenReady) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetPlaybackParameters(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? playbackParametersBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetPlaybackSpeed(AndroidX.Media3.Session.IMediaController? caller, int seq, float speed) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetPlaylistMetadata(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? playlistMetadata) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetRating(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? rating) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetRatingWithMediaId(AndroidX.Media3.Session.IMediaController? caller, int seq, string? mediaId, Android.OS.Bundle? rating) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetRepeatMode(AndroidX.Media3.Session.IMediaController? caller, int seq, int repeatMode) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetShuffleModeEnabled(AndroidX.Media3.Session.IMediaController? caller, int seq, bool shuffleModeEnabled) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetTrackSelectionParameters(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.OS.Bundle? trackSelectionParametersBundle) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetVideoSurface(AndroidX.Media3.Session.IMediaController? caller, int seq, Android.Views.Surface? surface) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.SetVolume(AndroidX.Media3.Session.IMediaController? caller, int seq, float volume) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Stop(AndroidX.Media3.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Subscribe(AndroidX.Media3.Session.IMediaController? caller, int seq, string? parentId, Android.OS.Bundle? libraryParams) -> void
virtual AndroidX.Media3.Session.MediaSessionDefault.Unsubscribe(AndroidX.Media3.Session.IMediaController? caller, int seq, string? parentId) -> void
virtual AndroidX.Media3.Session.MediaSessionService.IsPlaybackOngoing.get -> bool
virtual AndroidX.Media3.Session.MediaSessionService.OnUpdateNotification(AndroidX.Media3.Session.MediaSession? session) -> void
virtual AndroidX.Media3.Session.MediaSessionService.OnUpdateNotification(AndroidX.Media3.Session.MediaSession? session, bool startInForegroundRequired) -> void
virtual AndroidX.Media3.Session.MediaSessionService.PauseAllPlayersAndStopSelf() -> void
virtual AndroidX.Media3.Session.MediaSessionServiceDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaSessionServiceDefault.Connect(AndroidX.Media3.Session.IMediaController? caller, Android.OS.Bundle? connectionRequest) -> void
virtual AndroidX.Media3.Session.MediaSessionServiceStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaSessionServiceStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media3.Session.MediaSessionStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media3.Session.MediaSessionStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.SetCancelButtonIntent(Android.App.PendingIntent? pendingIntent) -> AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle?
virtual AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.SetRemotePlaybackInfo(Java.Lang.ICharSequence? deviceName, int iconResource, Android.App.PendingIntent? chipIntent) -> AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle?
virtual AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.SetShowActionsInCompactView(params int[]? actions) -> AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle?
virtual AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle.SetShowCancelButton(bool show) -> AndroidX.Media3.Session.MediaStyleNotificationHelper.MediaStyle?
