#nullable enable
AndroidX.Media3.Effect.AlphaScale
AndroidX.Media3.Effect.AlphaScale.AlphaScale(float alphaScale) -> void
AndroidX.Media3.Effect.AlphaScale.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.AlphaScale.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.BaseGlShaderProgram
AndroidX.Media3.Effect.BaseGlShaderProgram.BaseGlShaderProgram(bool useHighPrecisionColorComponents, int texturePoolCapacity) -> void
AndroidX.Media3.Effect.BaseGlShaderProgram.BaseGlShaderProgram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.BaseGlShaderProgram.CurrentOutputStreamEnded -> System.EventHandler!
AndroidX.Media3.Effect.BaseGlShaderProgram.FlushEvent -> System.EventHandler!
AndroidX.Media3.Effect.BaseGlShaderProgram.InputFrameProcessed -> System.EventHandler<AndroidX.Media3.Effect.InputFrameProcessedEventArgs!>!
AndroidX.Media3.Effect.BaseGlShaderProgram.InputListener.get -> AndroidX.Media3.Effect.IGlShaderProgramInputListener?
AndroidX.Media3.Effect.BaseGlShaderProgram.OnError(Java.Lang.Exception? e) -> void
AndroidX.Media3.Effect.BaseGlShaderProgram.OutputFrameAvailable -> System.EventHandler<AndroidX.Media3.Effect.OutputFrameAvailableEventArgs!>!
AndroidX.Media3.Effect.BaseGlShaderProgram.OutputListener.get -> AndroidX.Media3.Effect.IGlShaderProgramOutputListener?
AndroidX.Media3.Effect.BaseGlShaderProgram.OutputTexturePool.get -> AndroidX.Media3.Effect.TexturePool?
AndroidX.Media3.Effect.BaseGlShaderProgram.OutputTexturePool.set -> void
AndroidX.Media3.Effect.BaseGlShaderProgram.ReadyToAcceptInputFrame -> System.EventHandler!
AndroidX.Media3.Effect.BitmapOverlay
AndroidX.Media3.Effect.BitmapOverlay.BitmapOverlay() -> void
AndroidX.Media3.Effect.BitmapOverlay.BitmapOverlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.Brightness
AndroidX.Media3.Effect.Brightness.Brightness(float brightness) -> void
AndroidX.Media3.Effect.Brightness.GetMatrix(long presentationTimeUs, bool useHdr) -> float[]?
AndroidX.Media3.Effect.Brightness.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.ByteBufferGlEffect
AndroidX.Media3.Effect.ByteBufferGlEffect.ByteBufferGlEffect(AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor? processor) -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.ByteBufferGlEffect(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor.Configure(int p0, int p1) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor.FinishProcessingAndBlend(AndroidX.Media3.Common.GlTextureInfo? p0, long p1, Java.Lang.Object? p2) -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor.GetScaledRegion(long p0) -> AndroidX.Media3.Common.Util.GlRect?
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor.ProcessImage(AndroidX.Media3.Effect.ByteBufferGlEffect.Image? p0, long p1) -> Google.Common.Util.Concurrent.IListenableFuture?
AndroidX.Media3.Effect.ByteBufferGlEffect.IProcessor.Release() -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.Image
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.Height.get -> int
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.Height.set -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.Image(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.PixelBuffer.get -> Java.Nio.ByteBuffer?
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.PixelBuffer.set -> void
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.Width.get -> int
AndroidX.Media3.Effect.ByteBufferGlEffect.Image.Width.set -> void
AndroidX.Media3.Effect.CanvasOverlay
AndroidX.Media3.Effect.CanvasOverlay.CanvasOverlay(bool useInputFrameSize) -> void
AndroidX.Media3.Effect.CanvasOverlay.CanvasOverlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.Contrast
AndroidX.Media3.Effect.Contrast.Contrast(float contrast) -> void
AndroidX.Media3.Effect.Contrast.GetMatrix(long presentationTimeUs, bool useHdr) -> float[]?
AndroidX.Media3.Effect.Contrast.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.Crop
AndroidX.Media3.Effect.Crop.Configure(int inputWidth, int inputHeight) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.Crop.Crop(float left, float right, float bottom, float top) -> void
AndroidX.Media3.Effect.Crop.GetMatrix(long presentationTimeUs) -> Android.Graphics.Matrix?
AndroidX.Media3.Effect.Crop.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.DebugTraceUtil
AndroidX.Media3.Effect.DebugTraceUtil.DebugTraceUtil() -> void
AndroidX.Media3.Effect.DebugTraceUtil.IComponent
AndroidX.Media3.Effect.DebugTraceUtil.IEvent
AndroidX.Media3.Effect.DebugViewEffect
AndroidX.Media3.Effect.DebugViewEffect.DebugViewEffect(AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, AndroidX.Media3.Common.ColorInfo? outputColorInfo) -> void
AndroidX.Media3.Effect.DebugViewEffect.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.DebugViewShaderProgram
AndroidX.Media3.Effect.DebugViewShaderProgram.CurrentOutputStreamEnded -> System.EventHandler!
AndroidX.Media3.Effect.DebugViewShaderProgram.DebugViewShaderProgram(Android.Content.Context? context, AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, AndroidX.Media3.Common.ColorInfo? outputColorInfo) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.Flush() -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.FlushEvent -> System.EventHandler!
AndroidX.Media3.Effect.DebugViewShaderProgram.InputFrameProcessed -> System.EventHandler<AndroidX.Media3.Effect.InputFrameProcessedEventArgs!>!
AndroidX.Media3.Effect.DebugViewShaderProgram.OutputFrameAvailable -> System.EventHandler<AndroidX.Media3.Effect.OutputFrameAvailableEventArgs!>!
AndroidX.Media3.Effect.DebugViewShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, AndroidX.Media3.Common.GlTextureInfo? inputTexture, long presentationTimeUs) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.ReadyToAcceptInputFrame -> System.EventHandler!
AndroidX.Media3.Effect.DebugViewShaderProgram.Release() -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? outputTexture) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? executor, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? errorListener) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? inputListener) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? outputListener) -> void
AndroidX.Media3.Effect.DebugViewShaderProgram.SignalEndOfCurrentInputStream() -> void
AndroidX.Media3.Effect.DefaultGlObjectsProvider
AndroidX.Media3.Effect.DefaultGlObjectsProvider.CreateBuffersForTexture(int texId, int width, int height) -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.DefaultGlObjectsProvider.CreateEglContext(Android.Opengl.EGLDisplay? eglDisplay, int openGlVersion, int[]? configAttributes) -> Android.Opengl.EGLContext?
AndroidX.Media3.Effect.DefaultGlObjectsProvider.CreateEglSurface(Android.Opengl.EGLDisplay? eglDisplay, Java.Lang.Object? surface, int colorTransfer, bool isEncoderInputSurface) -> Android.Opengl.EGLSurface?
AndroidX.Media3.Effect.DefaultGlObjectsProvider.CreateFocusedPlaceholderEglSurface(Android.Opengl.EGLContext? eglContext, Android.Opengl.EGLDisplay? eglDisplay) -> Android.Opengl.EGLSurface?
AndroidX.Media3.Effect.DefaultGlObjectsProvider.DefaultGlObjectsProvider() -> void
AndroidX.Media3.Effect.DefaultGlObjectsProvider.DefaultGlObjectsProvider(Android.Opengl.EGLContext? sharedEglContext) -> void
AndroidX.Media3.Effect.DefaultGlObjectsProvider.Release(Android.Opengl.EGLDisplay? eglDisplay) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor
AndroidX.Media3.Effect.DefaultVideoCompositor.DefaultVideoCompositor(Android.Content.Context? context, AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, Java.Util.Concurrent.IExecutorService? executorService, AndroidX.Media3.Effect.IVideoCompositorListener? listener, AndroidX.Media3.Effect.IGlTextureProducerListener? textureOutputListener, int textureOutputCapacity) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.QueueInputTexture(int inputIndex, AndroidX.Media3.Effect.IGlTextureProducer? textureProducer, AndroidX.Media3.Common.GlTextureInfo? inputTexture, AndroidX.Media3.Common.ColorInfo? colorInfo, long presentationTimeUs) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.RegisterInputSource(int inputIndex) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.Release() -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.ReleaseOutputTexture(long presentationTimeUs) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.SetVideoCompositorSettings(AndroidX.Media3.Common.IVideoCompositorSettings? videoCompositorSettings) -> void
AndroidX.Media3.Effect.DefaultVideoCompositor.SignalEndOfInputSource(int inputIndex) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.BuildUpon() -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.Build() -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.Builder() -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetEnableReplayableCache(bool enableReplayableCache) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetExecutorService(Java.Util.Concurrent.IExecutorService? executorService) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetExperimentalAdjustSurfaceTextureTransformationMatrix(bool experimentalAdjustSurfaceTextureTransformationMatrix) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetExperimentalRepeatInputBitmapWithoutResampling(bool experimentalRepeatInputBitmapWithoutResampling) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetGlObjectsProvider(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetRequireRegisteringAllInputFrames(bool requireRegisteringAllInputFrames) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetSdrWorkingColorSpace(int sdrWorkingColorSpace) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.SetTextureOutput(AndroidX.Media3.Effect.IGlTextureProducerListener? textureOutputListener, int textureOutputCapacity) -> AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Create(Android.Content.Context? context, AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, AndroidX.Media3.Common.ColorInfo? outputColorInfo, bool renderFramesAutomatically, Java.Util.Concurrent.IExecutor? listenerExecutor, AndroidX.Media3.Common.IVideoFrameProcessorListener? listener) -> AndroidX.Media3.Common.IVideoFrameProcessor?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Flush() -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.IReleaseOutputTextureCallback
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.IReleaseOutputTextureCallback.Release(long p0) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.IWorkingColorSpace
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.InputSurface.get -> Android.Views.Surface?
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.PendingInputFrameCount.get -> int
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.QueueInputBitmap(Android.Graphics.Bitmap? inputBitmap, AndroidX.Media3.Common.Util.ITimestampIterator? timestampIterator) -> bool
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.QueueInputTexture(int textureId, long presentationTimeUs) -> bool
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Redraw() -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.RegisterInputFrame() -> bool
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.RegisterInputStream(int inputType, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects, long offsetToAddUs) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Release() -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.RenderOutputFrame(long renderTimeNs) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.SetInputDefaultBufferSize(int width, int height) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.SetOnInputFrameProcessedListener(AndroidX.Media3.Common.IOnInputFrameProcessedListener? listener) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.SetOnInputSurfaceReadyListener(Java.Lang.IRunnable? listener) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.SetOutputSurfaceInfo(AndroidX.Media3.Common.SurfaceInfo? outputSurfaceInfo) -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.SignalEndOfInput() -> void
AndroidX.Media3.Effect.DefaultVideoFrameProcessor.TaskExecutor.get -> Java.Lang.Object?
AndroidX.Media3.Effect.DrawableOverlay
AndroidX.Media3.Effect.DrawableOverlay.DrawableOverlay() -> void
AndroidX.Media3.Effect.DrawableOverlay.DrawableOverlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.ErrorEventArgs
AndroidX.Media3.Effect.ErrorEventArgs.ErrorEventArgs(AndroidX.Media3.Common.VideoFrameProcessingException? p0) -> void
AndroidX.Media3.Effect.ErrorEventArgs.P0.get -> AndroidX.Media3.Common.VideoFrameProcessingException?
AndroidX.Media3.Effect.FrameCache
AndroidX.Media3.Effect.FrameCache.Capacity.get -> int
AndroidX.Media3.Effect.FrameCache.Capacity.set -> void
AndroidX.Media3.Effect.FrameCache.FrameCache(int capacity) -> void
AndroidX.Media3.Effect.FrameCache.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.FrameDropEffect
AndroidX.Media3.Effect.FrameDropEffect.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.GaussianBlur
AndroidX.Media3.Effect.GaussianBlur.GaussianBlur(float sigma) -> void
AndroidX.Media3.Effect.GaussianBlur.GaussianBlur(float sigma, float numStandardDeviations) -> void
AndroidX.Media3.Effect.GaussianBlurWithFrameOverlaid
AndroidX.Media3.Effect.GaussianBlurWithFrameOverlaid.GaussianBlurWithFrameOverlaid(float sigma, float numStandardDeviations, float scaleSharpX, float scaleSharpY) -> void
AndroidX.Media3.Effect.GaussianBlurWithFrameOverlaid.GaussianBlurWithFrameOverlaid(float sigma, float scaleSharpX, float scaleSharpY) -> void
AndroidX.Media3.Effect.GaussianFunction
AndroidX.Media3.Effect.GaussianFunction.DomainEnd() -> float
AndroidX.Media3.Effect.GaussianFunction.DomainStart() -> float
AndroidX.Media3.Effect.GaussianFunction.GaussianFunction(float sigma, float numStandardDeviations) -> void
AndroidX.Media3.Effect.GaussianFunction.Value(float samplePosition) -> float
AndroidX.Media3.Effect.GlShaderProgramErrorEventArgs
AndroidX.Media3.Effect.GlShaderProgramErrorEventArgs.GlShaderProgramErrorEventArgs(AndroidX.Media3.Common.VideoFrameProcessingException? p0) -> void
AndroidX.Media3.Effect.GlShaderProgramErrorEventArgs.P0.get -> AndroidX.Media3.Common.VideoFrameProcessingException?
AndroidX.Media3.Effect.GlTextureProducerEventArgs
AndroidX.Media3.Effect.GlTextureProducerEventArgs.GlTextureProducerEventArgs(AndroidX.Media3.Effect.IGlTextureProducer? p0, AndroidX.Media3.Common.GlTextureInfo? p1, long p2, long p3) -> void
AndroidX.Media3.Effect.GlTextureProducerEventArgs.P0.get -> AndroidX.Media3.Effect.IGlTextureProducer?
AndroidX.Media3.Effect.GlTextureProducerEventArgs.P1.get -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.GlTextureProducerEventArgs.P2.get -> long
AndroidX.Media3.Effect.GlTextureProducerEventArgs.P3.get -> long
AndroidX.Media3.Effect.HslAdjustment
AndroidX.Media3.Effect.HslAdjustment.Builder
AndroidX.Media3.Effect.HslAdjustment.Builder.AdjustHue(float hueAdjustmentDegrees) -> AndroidX.Media3.Effect.HslAdjustment.Builder?
AndroidX.Media3.Effect.HslAdjustment.Builder.AdjustLightness(float lightnessAdjustment) -> AndroidX.Media3.Effect.HslAdjustment.Builder?
AndroidX.Media3.Effect.HslAdjustment.Builder.AdjustSaturation(float saturationAdjustment) -> AndroidX.Media3.Effect.HslAdjustment.Builder?
AndroidX.Media3.Effect.HslAdjustment.Builder.Build() -> AndroidX.Media3.Effect.HslAdjustment?
AndroidX.Media3.Effect.HslAdjustment.Builder.Builder() -> void
AndroidX.Media3.Effect.HslAdjustment.HueAdjustmentDegrees.get -> float
AndroidX.Media3.Effect.HslAdjustment.HueAdjustmentDegrees.set -> void
AndroidX.Media3.Effect.HslAdjustment.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.HslAdjustment.LightnessAdjustment.get -> float
AndroidX.Media3.Effect.HslAdjustment.LightnessAdjustment.set -> void
AndroidX.Media3.Effect.HslAdjustment.SaturationAdjustment.get -> float
AndroidX.Media3.Effect.HslAdjustment.SaturationAdjustment.set -> void
AndroidX.Media3.Effect.HslAdjustment.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.IColorLut
AndroidX.Media3.Effect.IColorLut.GetLength(long p0) -> int
AndroidX.Media3.Effect.IColorLut.GetLutTextureId(long p0) -> int
AndroidX.Media3.Effect.IColorLut.Release() -> void
AndroidX.Media3.Effect.IConvolutionFunction1D
AndroidX.Media3.Effect.IConvolutionFunction1D.DomainEnd() -> float
AndroidX.Media3.Effect.IConvolutionFunction1D.DomainStart() -> float
AndroidX.Media3.Effect.IConvolutionFunction1D.Value(float p0) -> float
AndroidX.Media3.Effect.IConvolutionFunction1D.Width() -> float
AndroidX.Media3.Effect.IConvolutionFunction1DProvider
AndroidX.Media3.Effect.IConvolutionFunction1DProvider.Configure(AndroidX.Media3.Common.Util.Size? p0) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.IConvolutionFunction1DProvider.GetConvolution(long p0) -> AndroidX.Media3.Effect.IConvolutionFunction1D?
AndroidX.Media3.Effect.IGlEffect
AndroidX.Media3.Effect.IGlEffect.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.IGlEffect.ToGlShaderProgram(Android.Content.Context? p0, bool p1) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.IGlMatrixTransformation
AndroidX.Media3.Effect.IGlMatrixTransformation.Configure(int inputWidth, int inputHeight) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.IGlMatrixTransformation.GetGlMatrixArray(long p0) -> float[]?
AndroidX.Media3.Effect.IGlMatrixTransformation.GlTextureMinFilter.get -> int
AndroidX.Media3.Effect.IGlShaderProgram
AndroidX.Media3.Effect.IGlShaderProgram.Flush() -> void
AndroidX.Media3.Effect.IGlShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? p0, AndroidX.Media3.Common.GlTextureInfo? p1, long p2) -> void
AndroidX.Media3.Effect.IGlShaderProgram.Release() -> void
AndroidX.Media3.Effect.IGlShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? p0) -> void
AndroidX.Media3.Effect.IGlShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? p0, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? p1) -> void
AndroidX.Media3.Effect.IGlShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? p0) -> void
AndroidX.Media3.Effect.IGlShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? p0) -> void
AndroidX.Media3.Effect.IGlShaderProgram.SignalEndOfCurrentInputStream() -> void
AndroidX.Media3.Effect.IGlShaderProgramErrorListener
AndroidX.Media3.Effect.IGlShaderProgramErrorListener.OnError(AndroidX.Media3.Common.VideoFrameProcessingException? p0) -> void
AndroidX.Media3.Effect.IGlShaderProgramInputListener
AndroidX.Media3.Effect.IGlShaderProgramInputListener.OnFlush() -> void
AndroidX.Media3.Effect.IGlShaderProgramInputListener.OnInputFrameProcessed(AndroidX.Media3.Common.GlTextureInfo? inputTexture) -> void
AndroidX.Media3.Effect.IGlShaderProgramInputListener.OnReadyToAcceptInputFrame() -> void
AndroidX.Media3.Effect.IGlShaderProgramOutputListener
AndroidX.Media3.Effect.IGlShaderProgramOutputListener.OnCurrentOutputStreamEnded() -> void
AndroidX.Media3.Effect.IGlShaderProgramOutputListener.OnOutputFrameAvailable(AndroidX.Media3.Common.GlTextureInfo? outputTexture, long presentationTimeUs) -> void
AndroidX.Media3.Effect.IGlTextureProducer
AndroidX.Media3.Effect.IGlTextureProducer.ReleaseOutputTexture(long p0) -> void
AndroidX.Media3.Effect.IGlTextureProducerListener
AndroidX.Media3.Effect.IGlTextureProducerListener.OnTextureRendered(AndroidX.Media3.Effect.IGlTextureProducer? p0, AndroidX.Media3.Common.GlTextureInfo? p1, long p2, long p3) -> void
AndroidX.Media3.Effect.IMatrixTransformation
AndroidX.Media3.Effect.IMatrixTransformation.GetMatrix(long p0) -> Android.Graphics.Matrix?
AndroidX.Media3.Effect.IRgbMatrix
AndroidX.Media3.Effect.IRgbMatrix.GetMatrix(long p0, bool p1) -> float[]?
AndroidX.Media3.Effect.IVideoCompositor
AndroidX.Media3.Effect.IVideoCompositor.QueueInputTexture(int p0, AndroidX.Media3.Effect.IGlTextureProducer? p1, AndroidX.Media3.Common.GlTextureInfo? p2, AndroidX.Media3.Common.ColorInfo? p3, long p4) -> void
AndroidX.Media3.Effect.IVideoCompositor.RegisterInputSource(int p0) -> void
AndroidX.Media3.Effect.IVideoCompositor.Release() -> void
AndroidX.Media3.Effect.IVideoCompositor.SetVideoCompositorSettings(AndroidX.Media3.Common.IVideoCompositorSettings? p0) -> void
AndroidX.Media3.Effect.IVideoCompositor.SignalEndOfInputSource(int p0) -> void
AndroidX.Media3.Effect.IVideoCompositorListener
AndroidX.Media3.Effect.IVideoCompositorListener.OnEnded() -> void
AndroidX.Media3.Effect.IVideoCompositorListener.OnError(AndroidX.Media3.Common.VideoFrameProcessingException? p0) -> void
AndroidX.Media3.Effect.InputFrameProcessedEventArgs
AndroidX.Media3.Effect.InputFrameProcessedEventArgs.InputFrameProcessedEventArgs(AndroidX.Media3.Common.GlTextureInfo? inputTexture) -> void
AndroidX.Media3.Effect.InputFrameProcessedEventArgs.InputTexture.get -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.LanczosResample
AndroidX.Media3.Effect.LanczosResample.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.LanczosResample.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.MultipleInputVideoGraph
AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory
AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory.Create(Android.Content.Context? context, AndroidX.Media3.Common.ColorInfo? outputColorInfo, AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, AndroidX.Media3.Common.IVideoGraphListener? listener, Java.Util.Concurrent.IExecutor? listenerExecutor, long initialTimestampOffsetUs, bool renderFramesAutomatically) -> AndroidX.Media3.Common.IVideoGraph?
AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory.Factory() -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory.Factory(AndroidX.Media3.Common.IVideoFrameProcessorFactory? videoFrameProcessorFactory) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory.SupportsMultipleInputs() -> bool
AndroidX.Media3.Effect.MultipleInputVideoGraph.Flush() -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.GetInputSurface(int inputIndex) -> Android.Views.Surface?
AndroidX.Media3.Effect.MultipleInputVideoGraph.GetPendingInputFrameCount(int inputIndex) -> int
AndroidX.Media3.Effect.MultipleInputVideoGraph.HasProducedFrameWithTimestampZero.get -> bool
AndroidX.Media3.Effect.MultipleInputVideoGraph.Initialize() -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.QueueInputBitmap(int inputIndex, Android.Graphics.Bitmap? inputBitmap, AndroidX.Media3.Common.Util.ITimestampIterator? timestampIterator) -> bool
AndroidX.Media3.Effect.MultipleInputVideoGraph.QueueInputTexture(int inputIndex, int textureId, long presentationTimeUs) -> bool
AndroidX.Media3.Effect.MultipleInputVideoGraph.Redraw() -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.RegisterInput(int inputIndex) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.RegisterInputFrame(int inputIndex) -> bool
AndroidX.Media3.Effect.MultipleInputVideoGraph.RegisterInputStream(int inputIndex, int inputType, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects, long offsetToAddUs) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.Release() -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.RenderOutputFrame(long renderTimeNs) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SetCompositionEffects(System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? compositionEffects) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SetCompositorSettings(AndroidX.Media3.Common.IVideoCompositorSettings? videoCompositorSettings) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SetOnInputFrameProcessedListener(int inputIndex, AndroidX.Media3.Common.IOnInputFrameProcessedListener? listener) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SetOnInputSurfaceReadyListener(int inputIndex, Java.Lang.IRunnable? listener) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SetOutputSurfaceInfo(AndroidX.Media3.Common.SurfaceInfo? outputSurfaceInfo) -> void
AndroidX.Media3.Effect.MultipleInputVideoGraph.SignalEndOfInput(int inputIndex) -> void
AndroidX.Media3.Effect.OutputFrameAvailableEventArgs
AndroidX.Media3.Effect.OutputFrameAvailableEventArgs.OutputFrameAvailableEventArgs(AndroidX.Media3.Common.GlTextureInfo? outputTexture, long presentationTimeUs) -> void
AndroidX.Media3.Effect.OutputFrameAvailableEventArgs.OutputTexture.get -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.OutputFrameAvailableEventArgs.PresentationTimeUs.get -> long
AndroidX.Media3.Effect.OverlayEffect
AndroidX.Media3.Effect.OverlayEffect.OverlayEffect(System.Collections.Generic.IList<AndroidX.Media3.Effect.TextureOverlay!>? textureOverlays) -> void
AndroidX.Media3.Effect.OverlayEffect.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.PassthroughShaderProgram
AndroidX.Media3.Effect.PassthroughShaderProgram.CurrentOutputStreamEnded -> System.EventHandler!
AndroidX.Media3.Effect.PassthroughShaderProgram.FlushEvent -> System.EventHandler!
AndroidX.Media3.Effect.PassthroughShaderProgram.InputFrameProcessed -> System.EventHandler<AndroidX.Media3.Effect.InputFrameProcessedEventArgs!>!
AndroidX.Media3.Effect.PassthroughShaderProgram.InputListener.get -> AndroidX.Media3.Effect.IGlShaderProgramInputListener?
AndroidX.Media3.Effect.PassthroughShaderProgram.OnError(Java.Lang.Exception? e) -> void
AndroidX.Media3.Effect.PassthroughShaderProgram.OutputFrameAvailable -> System.EventHandler<AndroidX.Media3.Effect.OutputFrameAvailableEventArgs!>!
AndroidX.Media3.Effect.PassthroughShaderProgram.PassthroughShaderProgram() -> void
AndroidX.Media3.Effect.PassthroughShaderProgram.PassthroughShaderProgram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.PassthroughShaderProgram.ReadyToAcceptInputFrame -> System.EventHandler!
AndroidX.Media3.Effect.Presentation
AndroidX.Media3.Effect.Presentation.Configure(int inputWidth, int inputHeight) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.Presentation.CopyWithTextureMinFilter(int textureMinFilter) -> AndroidX.Media3.Effect.Presentation?
AndroidX.Media3.Effect.Presentation.GetMatrix(long presentationTimeUs) -> Android.Graphics.Matrix?
AndroidX.Media3.Effect.Presentation.GlTextureMinFilter.get -> int
AndroidX.Media3.Effect.Presentation.ILayout
AndroidX.Media3.Effect.Presentation.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.RgbAdjustment
AndroidX.Media3.Effect.RgbAdjustment.Builder
AndroidX.Media3.Effect.RgbAdjustment.Builder.Build() -> AndroidX.Media3.Effect.RgbAdjustment?
AndroidX.Media3.Effect.RgbAdjustment.Builder.Builder() -> void
AndroidX.Media3.Effect.RgbAdjustment.Builder.SetBlueScale(float blueScale) -> AndroidX.Media3.Effect.RgbAdjustment.Builder?
AndroidX.Media3.Effect.RgbAdjustment.Builder.SetGreenScale(float greenScale) -> AndroidX.Media3.Effect.RgbAdjustment.Builder?
AndroidX.Media3.Effect.RgbAdjustment.Builder.SetRedScale(float redScale) -> AndroidX.Media3.Effect.RgbAdjustment.Builder?
AndroidX.Media3.Effect.RgbAdjustment.GetMatrix(long presentationTimeUs, bool useHdr) -> float[]?
AndroidX.Media3.Effect.RgbAdjustment.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.RgbFilter
AndroidX.Media3.Effect.RgbFilter.GetMatrix(long presentationTimeUs, bool useHdr) -> float[]?
AndroidX.Media3.Effect.RgbFilter.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.BaseGlShaderProgram?
AndroidX.Media3.Effect.ScaleAndRotateTransformation
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder.Build() -> AndroidX.Media3.Effect.ScaleAndRotateTransformation?
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder.Builder() -> void
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder.SetRotationDegrees(float rotationDegrees) -> AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder?
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder.SetScale(float scaleX, float scaleY) -> AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder?
AndroidX.Media3.Effect.ScaleAndRotateTransformation.Configure(int inputWidth, int inputHeight) -> AndroidX.Media3.Common.Util.Size?
AndroidX.Media3.Effect.ScaleAndRotateTransformation.GetMatrix(long presentationTimeUs) -> Android.Graphics.Matrix?
AndroidX.Media3.Effect.ScaleAndRotateTransformation.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.ScaleAndRotateTransformation.RotationDegrees.get -> float
AndroidX.Media3.Effect.ScaleAndRotateTransformation.RotationDegrees.set -> void
AndroidX.Media3.Effect.ScaleAndRotateTransformation.ScaleX.get -> float
AndroidX.Media3.Effect.ScaleAndRotateTransformation.ScaleX.set -> void
AndroidX.Media3.Effect.ScaleAndRotateTransformation.ScaleY.get -> float
AndroidX.Media3.Effect.ScaleAndRotateTransformation.ScaleY.set -> void
AndroidX.Media3.Effect.SeparableConvolution
AndroidX.Media3.Effect.SeparableConvolution.SeparableConvolution() -> void
AndroidX.Media3.Effect.SeparableConvolution.SeparableConvolution(float scaleWidth, float scaleHeight) -> void
AndroidX.Media3.Effect.SeparableConvolution.SeparableConvolution(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.CurrentOutputStreamEnded -> System.EventHandler!
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.Flush() -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.FlushEvent -> System.EventHandler!
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.InputFrameProcessed -> System.EventHandler<AndroidX.Media3.Effect.InputFrameProcessedEventArgs!>!
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.OutputFrameAvailable -> System.EventHandler<AndroidX.Media3.Effect.OutputFrameAvailableEventArgs!>!
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, AndroidX.Media3.Common.GlTextureInfo? inputTexture, long presentationTimeUs) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.ReadyToAcceptInputFrame -> System.EventHandler!
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? outputTexture) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SeparableConvolutionShaderProgram(Android.Content.Context? context, bool useHdr, AndroidX.Media3.Effect.IConvolutionFunction1DProvider? convolutionFunction1DProvider) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SeparableConvolutionShaderProgram(Android.Content.Context? context, bool useHdr, AndroidX.Media3.Effect.SeparableConvolution? convolution, float scaleWidth, float scaleHeight) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SeparableConvolutionShaderProgram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? errorListenerExecutor, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? errorListener) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? inputListener) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? outputListener) -> void
AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.SignalEndOfCurrentInputStream() -> void
AndroidX.Media3.Effect.SingleColorLut
AndroidX.Media3.Effect.SingleColorLut.GetLength(long presentationTimeUs) -> int
AndroidX.Media3.Effect.SingleColorLut.GetLutTextureId(long presentationTimeUs) -> int
AndroidX.Media3.Effect.SingleColorLut.Release() -> void
AndroidX.Media3.Effect.SingleColorLut.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.SingleInputVideoGraph
AndroidX.Media3.Effect.SingleInputVideoGraph.Factory
AndroidX.Media3.Effect.SingleInputVideoGraph.Factory.Create(Android.Content.Context? context, AndroidX.Media3.Common.ColorInfo? outputColorInfo, AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, AndroidX.Media3.Common.IVideoGraphListener? listener, Java.Util.Concurrent.IExecutor? listenerExecutor, long initialTimestampOffsetUs, bool renderFramesAutomatically) -> AndroidX.Media3.Common.IVideoGraph?
AndroidX.Media3.Effect.SingleInputVideoGraph.Factory.Factory() -> void
AndroidX.Media3.Effect.SingleInputVideoGraph.Factory.Factory(AndroidX.Media3.Common.IVideoFrameProcessorFactory? videoFrameProcessorFactory) -> void
AndroidX.Media3.Effect.SingleInputVideoGraph.Factory.SupportsMultipleInputs() -> bool
AndroidX.Media3.Effect.SingleInputVideoGraph.SingleInputVideoGraph(Android.Content.Context? context, AndroidX.Media3.Common.IVideoFrameProcessorFactory? videoFrameProcessorFactory, AndroidX.Media3.Common.ColorInfo? outputColorInfo, AndroidX.Media3.Common.IVideoGraphListener? listener, AndroidX.Media3.Common.IDebugViewProvider? debugViewProvider, Java.Util.Concurrent.IExecutor? listenerExecutor, bool renderFramesAutomatically) -> void
AndroidX.Media3.Effect.SingleInputVideoGraph.SingleInputVideoGraph(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.SpeedChangeEffect
AndroidX.Media3.Effect.SpeedChangeEffect.GetDurationAfterEffectApplied(long durationUs) -> long
AndroidX.Media3.Effect.SpeedChangeEffect.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.SpeedChangeEffect.SpeedChangeEffect(AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider) -> void
AndroidX.Media3.Effect.SpeedChangeEffect.SpeedChangeEffect(float speed) -> void
AndroidX.Media3.Effect.SpeedChangeEffect.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.StaticOverlaySettings
AndroidX.Media3.Effect.StaticOverlaySettings.AlphaScale.get -> float
AndroidX.Media3.Effect.StaticOverlaySettings.BackgroundFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.Build() -> AndroidX.Media3.Effect.StaticOverlaySettings?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.Builder() -> void
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetAlphaScale(float alphaScale) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetBackgroundFrameAnchor(float x, float y) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetHdrLuminanceMultiplier(float hdrLuminanceMultiplier) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetOverlayFrameAnchor(float x, float y) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetRotationDegrees(float rotationDegree) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.Builder.SetScale(float x, float y) -> AndroidX.Media3.Effect.StaticOverlaySettings.Builder?
AndroidX.Media3.Effect.StaticOverlaySettings.HdrLuminanceMultiplier.get -> float
AndroidX.Media3.Effect.StaticOverlaySettings.OverlayFrameAnchor.get -> Android.Util.Pair?
AndroidX.Media3.Effect.StaticOverlaySettings.RotationDegrees.get -> float
AndroidX.Media3.Effect.StaticOverlaySettings.Scale.get -> Android.Util.Pair?
AndroidX.Media3.Effect.TextOverlay
AndroidX.Media3.Effect.TextOverlay.TextOverlay() -> void
AndroidX.Media3.Effect.TextOverlay.TextOverlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.TextureOverlay
AndroidX.Media3.Effect.TextureOverlay.TextureOverlay() -> void
AndroidX.Media3.Effect.TextureOverlay.TextureOverlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.TexturePool
AndroidX.Media3.Effect.TexturePool.Capacity() -> int
AndroidX.Media3.Effect.TexturePool.DeleteAllTextures() -> void
AndroidX.Media3.Effect.TexturePool.EnsureConfigured(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, int width, int height) -> void
AndroidX.Media3.Effect.TexturePool.FreeAllTextures() -> void
AndroidX.Media3.Effect.TexturePool.FreeTexture() -> void
AndroidX.Media3.Effect.TexturePool.FreeTexture(AndroidX.Media3.Common.GlTextureInfo? textureInfo) -> void
AndroidX.Media3.Effect.TexturePool.FreeTextureCount() -> int
AndroidX.Media3.Effect.TexturePool.IsConfigured.get -> bool
AndroidX.Media3.Effect.TexturePool.IsUsingTexture(AndroidX.Media3.Common.GlTextureInfo? textureInfo) -> bool
AndroidX.Media3.Effect.TexturePool.MostRecentlyUsedTexture.get -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.TexturePool.TexturePool(bool useHighPrecisionColorComponents, int capacity) -> void
AndroidX.Media3.Effect.TexturePool.UseTexture() -> AndroidX.Media3.Common.GlTextureInfo?
AndroidX.Media3.Effect.TimestampAdjustment
AndroidX.Media3.Effect.TimestampAdjustment.GetDurationAfterEffectApplied(long durationUs) -> long
AndroidX.Media3.Effect.TimestampAdjustment.ITimestampMap
AndroidX.Media3.Effect.TimestampAdjustment.ITimestampMap.CalculateOutputTimeUs(long p0, AndroidX.Media3.Common.Util.ITimestampConsumer? p1) -> void
AndroidX.Media3.Effect.TimestampAdjustment.SpeedProvider.get -> AndroidX.Media3.Common.Audio.ISpeedProvider?
AndroidX.Media3.Effect.TimestampAdjustment.SpeedProvider.set -> void
AndroidX.Media3.Effect.TimestampAdjustment.TimestampAdjustment(AndroidX.Media3.Effect.TimestampAdjustment.ITimestampMap? timestampMap, AndroidX.Media3.Common.Audio.ISpeedProvider? speedProvider) -> void
AndroidX.Media3.Effect.TimestampAdjustment.TimestampMap.get -> AndroidX.Media3.Effect.TimestampAdjustment.ITimestampMap?
AndroidX.Media3.Effect.TimestampAdjustment.TimestampMap.set -> void
AndroidX.Media3.Effect.TimestampAdjustment.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.CurrentOutputStreamEnded -> System.EventHandler!
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.FlushEvent -> System.EventHandler!
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.InputFrameProcessed -> System.EventHandler<AndroidX.Media3.Effect.InputFrameProcessedEventArgs!>!
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.OutputFrameAvailable -> System.EventHandler<AndroidX.Media3.Effect.OutputFrameAvailableEventArgs!>!
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.ReadyToAcceptInputFrame -> System.EventHandler!
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.TimestampAdjustmentShaderProgram(AndroidX.Media3.Effect.TimestampAdjustment.ITimestampMap? timestampMap) -> void
AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.TimestampAdjustmentShaderProgram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.Effect.TimestampWrapper
AndroidX.Media3.Effect.TimestampWrapper.EndTimeUs.get -> long
AndroidX.Media3.Effect.TimestampWrapper.EndTimeUs.set -> void
AndroidX.Media3.Effect.TimestampWrapper.GlEffect.get -> AndroidX.Media3.Effect.IGlEffect?
AndroidX.Media3.Effect.TimestampWrapper.GlEffect.set -> void
AndroidX.Media3.Effect.TimestampWrapper.IsNoOp(int inputWidth, int inputHeight) -> bool
AndroidX.Media3.Effect.TimestampWrapper.StartTimeUs.get -> long
AndroidX.Media3.Effect.TimestampWrapper.StartTimeUs.set -> void
AndroidX.Media3.Effect.TimestampWrapper.TimestampWrapper(AndroidX.Media3.Effect.IGlEffect? glEffect, long startTimeUs, long endTimeUs) -> void
AndroidX.Media3.Effect.TimestampWrapper.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
abstract AndroidX.Media3.Effect.BaseGlShaderProgram.Configure(int p0, int p1) -> AndroidX.Media3.Common.Util.Size?
abstract AndroidX.Media3.Effect.BaseGlShaderProgram.DrawFrame(int p0, long p1) -> void
abstract AndroidX.Media3.Effect.BitmapOverlay.GetBitmap(long p0) -> Android.Graphics.Bitmap?
abstract AndroidX.Media3.Effect.CanvasOverlay.OnDraw(Android.Graphics.Canvas? p0, long p1) -> void
abstract AndroidX.Media3.Effect.DrawableOverlay.GetDrawable(long p0) -> Android.Graphics.Drawables.Drawable?
abstract AndroidX.Media3.Effect.SeparableConvolution.GetConvolution(long p0) -> AndroidX.Media3.Effect.IConvolutionFunction1D?
abstract AndroidX.Media3.Effect.TextOverlay.GetText(long p0) -> Android.Text.SpannableString?
abstract AndroidX.Media3.Effect.TextureOverlay.GetTextureId(long p0) -> int
abstract AndroidX.Media3.Effect.TextureOverlay.GetTextureSize(long p0) -> AndroidX.Media3.Common.Util.Size?
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentAssetLoader = "AssetLoader" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentAudioDecoder = "AudioDecoder" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentAudioEncoder = "AudioEncoder" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentAudioGraph = "AudioGraph" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentAudioMixer = "AudioMixer" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentBitmapTextureManager = "BitmapTextureManager" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentCompositor = "Compositor" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentExternalTextureManager = "ExternalTextureManager" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentMuxer = "Muxer" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentTexIdTextureManager = "TexIdTextureManager" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentTransformerInternal = "TransformerInternal" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentVfp = "VideoFrameProcessor" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentVideoDecoder = "VideoDecoder" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.ComponentVideoEncoder = "VideoEncoder" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventAcceptedInput = "AcceptedInput" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventCanWriteSample = "CanWriteSample" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventInputEnded = "InputEnded" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventInputFormat = "InputFormat" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventOutputEnded = "OutputEnded" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventOutputFormat = "OutputFormat" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventOutputTextureRendered = "OutputTextureRendered" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventProducedOutput = "ProducedOutput" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventQueueBitmap = "QueueBitmap" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventQueueFrame = "QueueFrame" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventQueueTexture = "QueueTexture" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventReceiveEndOfAllInput = "ReceiveEndOfAllInput" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventReceiveEos = "ReceiveEOS" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventRegisterNewInputStream = "RegisterNewInputStream" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventRenderedToOutputSurface = "RenderedToOutputSurface" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventSignalEnded = "SignalEnded" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventSignalEos = "SignalEOS" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventStart = "Start" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventSurfaceTextureInput = "SurfaceTextureInput" -> string!
const AndroidX.Media3.Effect.DebugTraceUtil.EventSurfaceTextureTransformFix = "SurfaceTextureTransformFix" -> string!
const AndroidX.Media3.Effect.DefaultVideoFrameProcessor.WorkingColorSpaceDefault = 0 -> int
const AndroidX.Media3.Effect.DefaultVideoFrameProcessor.WorkingColorSpaceLinear = 2 -> int
const AndroidX.Media3.Effect.DefaultVideoFrameProcessor.WorkingColorSpaceOriginal = 1 -> int
const AndroidX.Media3.Effect.Presentation.LayoutScaleToFit = 0 -> int
const AndroidX.Media3.Effect.Presentation.LayoutScaleToFitWithCrop = 1 -> int
const AndroidX.Media3.Effect.Presentation.LayoutStretchToFit = 2 -> int
const AndroidX.Media3.Effect.TextOverlay.TextSizePixels = 100 -> int
override AndroidX.Media3.Effect.AlphaScale.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.BaseGlShaderProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.BaseGlShaderProgram.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.BaseGlShaderProgram.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.BitmapOverlay.GetTextureId(long presentationTimeUs) -> int
override AndroidX.Media3.Effect.BitmapOverlay.GetTextureSize(long presentationTimeUs) -> AndroidX.Media3.Common.Util.Size?
override AndroidX.Media3.Effect.BitmapOverlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.BitmapOverlay.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.BitmapOverlay.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.Brightness.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.ByteBufferGlEffect.Image.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.ByteBufferGlEffect.Image.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.ByteBufferGlEffect.Image.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.ByteBufferGlEffect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.ByteBufferGlEffect.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.ByteBufferGlEffect.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.CanvasOverlay.GetBitmap(long presentationTimeUs) -> Android.Graphics.Bitmap?
override AndroidX.Media3.Effect.CanvasOverlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.CanvasOverlay.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.CanvasOverlay.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.Contrast.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.Crop.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DebugTraceUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DebugViewEffect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DebugViewShaderProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DefaultGlObjectsProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DefaultVideoCompositor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DefaultVideoFrameProcessor.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DefaultVideoFrameProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DrawableOverlay.GetBitmap(long presentationTimeUs) -> Android.Graphics.Bitmap?
override AndroidX.Media3.Effect.DrawableOverlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.DrawableOverlay.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.DrawableOverlay.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.FrameCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.FrameDropEffect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.GaussianBlur.GetConvolution(long presentationTimeUs) -> AndroidX.Media3.Effect.IConvolutionFunction1D?
override AndroidX.Media3.Effect.GaussianBlur.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.GaussianBlurWithFrameOverlaid.GetConvolution(long presentationTimeUs) -> AndroidX.Media3.Effect.IConvolutionFunction1D?
override AndroidX.Media3.Effect.GaussianBlurWithFrameOverlaid.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.GaussianFunction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.HslAdjustment.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.HslAdjustment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.LanczosResample.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.MultipleInputVideoGraph.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.MultipleInputVideoGraph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.OverlayEffect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.PassthroughShaderProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.PassthroughShaderProgram.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.PassthroughShaderProgram.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.Presentation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.RgbAdjustment.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.RgbAdjustment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.RgbFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.ScaleAndRotateTransformation.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.ScaleAndRotateTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SeparableConvolution.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SeparableConvolution.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.SeparableConvolution.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.SingleColorLut.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SingleInputVideoGraph.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SingleInputVideoGraph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.SingleInputVideoGraph.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.SingleInputVideoGraph.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.SpeedChangeEffect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.StaticOverlaySettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.StaticOverlaySettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TextOverlay.GetBitmap(long presentationTimeUs) -> Android.Graphics.Bitmap?
override AndroidX.Media3.Effect.TextOverlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TextOverlay.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.TextOverlay.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.TextureOverlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TextureOverlay.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.TextureOverlay.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.TexturePool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TimestampAdjustment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.ThresholdClass.get -> nint
override AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.ThresholdType.get -> System.Type!
override AndroidX.Media3.Effect.TimestampWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media3.Effect.BitmapOverlay.CreateStaticBitmapOverlay(Android.Content.Context? context, Android.Net.Uri? overlayBitmapUri, AndroidX.Media3.Effect.StaticOverlaySettings? overlaySettings) -> AndroidX.Media3.Effect.BitmapOverlay?
static AndroidX.Media3.Effect.BitmapOverlay.CreateStaticBitmapOverlay(Android.Graphics.Bitmap? overlayBitmap) -> AndroidX.Media3.Effect.BitmapOverlay?
static AndroidX.Media3.Effect.BitmapOverlay.CreateStaticBitmapOverlay(Android.Graphics.Bitmap? overlayBitmap, AndroidX.Media3.Effect.StaticOverlaySettings? overlaySettings) -> AndroidX.Media3.Effect.BitmapOverlay?
static AndroidX.Media3.Effect.DebugTraceUtil.DumpTsv(Java.IO.Writer? writer) -> void
static AndroidX.Media3.Effect.DebugTraceUtil.EnableTracing.get -> bool
static AndroidX.Media3.Effect.DebugTraceUtil.EnableTracing.set -> void
static AndroidX.Media3.Effect.DebugTraceUtil.GenerateTraceSummary() -> string?
static AndroidX.Media3.Effect.DebugTraceUtil.LogCodecEvent(bool isDecoder, bool isVideo, string? eventName, long presentationTimeUs, string? extraFormat, params Java.Lang.Object![]? extraArgs) -> void
static AndroidX.Media3.Effect.DebugTraceUtil.LogEvent(string? component, string? e, long presentationTimeUs) -> void
static AndroidX.Media3.Effect.DebugTraceUtil.LogEvent(string? component, string? e, long presentationTimeUs, string? extraFormat, params Java.Lang.Object![]? extraArgs) -> void
static AndroidX.Media3.Effect.DebugTraceUtil.Reset() -> void
static AndroidX.Media3.Effect.DrawableOverlay.CreateStaticDrawableOverlay(Android.Graphics.Drawables.Drawable? drawable, AndroidX.Media3.Effect.StaticOverlaySettings? overlaySettings) -> AndroidX.Media3.Effect.DrawableOverlay?
static AndroidX.Media3.Effect.FrameDropEffect.CreateDefaultFrameDropEffect(float targetFrameRate) -> AndroidX.Media3.Effect.FrameDropEffect?
static AndroidX.Media3.Effect.FrameDropEffect.CreateSimpleFrameDropEffect(float expectedFrameRate, float targetFrameRate) -> AndroidX.Media3.Effect.FrameDropEffect?
static AndroidX.Media3.Effect.LanczosResample.ScaleToFit(int width, int height) -> AndroidX.Media3.Effect.LanczosResample?
static AndroidX.Media3.Effect.LanczosResample.ScaleToFitWithFlexibleOrientation(int firstDimension, int secondDimension) -> AndroidX.Media3.Effect.LanczosResample?
static AndroidX.Media3.Effect.Presentation.CreateForAspectRatio(float aspectRatio, int layout) -> AndroidX.Media3.Effect.Presentation?
static AndroidX.Media3.Effect.Presentation.CreateForHeight(int height) -> AndroidX.Media3.Effect.Presentation?
static AndroidX.Media3.Effect.Presentation.CreateForShortSide(int shortSide) -> AndroidX.Media3.Effect.Presentation?
static AndroidX.Media3.Effect.Presentation.CreateForWidthAndHeight(int width, int height, int layout) -> AndroidX.Media3.Effect.Presentation?
static AndroidX.Media3.Effect.RgbFilter.CreateGrayscaleFilter() -> AndroidX.Media3.Effect.RgbFilter?
static AndroidX.Media3.Effect.RgbFilter.CreateInvertedFilter() -> AndroidX.Media3.Effect.RgbFilter?
static AndroidX.Media3.Effect.SingleColorLut.CreateFromBitmap(Android.Graphics.Bitmap? lut) -> AndroidX.Media3.Effect.SingleColorLut?
static AndroidX.Media3.Effect.SingleColorLut.CreateFromCube(int[]![]![]? lutCube) -> AndroidX.Media3.Effect.SingleColorLut?
static AndroidX.Media3.Effect.TextOverlay.CreateStaticTextOverlay(Android.Text.SpannableString? overlayText) -> AndroidX.Media3.Effect.TextOverlay?
static AndroidX.Media3.Effect.TextOverlay.CreateStaticTextOverlay(Android.Text.SpannableString? overlayText, AndroidX.Media3.Effect.StaticOverlaySettings? overlaySettings) -> AndroidX.Media3.Effect.TextOverlay?
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.Flush() -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, AndroidX.Media3.Common.GlTextureInfo? inputTexture, long presentationTimeUs) -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.Release() -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? outputTexture) -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? errorListenerExecutor, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? errorListener) -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? inputListener) -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? outputListener) -> void
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.ShouldClearTextureBuffer() -> bool
virtual AndroidX.Media3.Effect.BaseGlShaderProgram.SignalEndOfCurrentInputStream() -> void
virtual AndroidX.Media3.Effect.ByteBufferGlEffect.Image.CopyToBitmap() -> Android.Graphics.Bitmap?
virtual AndroidX.Media3.Effect.ByteBufferGlEffect.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
virtual AndroidX.Media3.Effect.CanvasOverlay.SetCanvasSize(int width, int height) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.Flush() -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, AndroidX.Media3.Common.GlTextureInfo? inputTexture, long presentationTimeUs) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.Release() -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? outputTexture) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? executor, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? errorListener) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? inputListener) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? outputListener) -> void
virtual AndroidX.Media3.Effect.PassthroughShaderProgram.SignalEndOfCurrentInputStream() -> void
virtual AndroidX.Media3.Effect.SeparableConvolution.ToGlShaderProgram(Android.Content.Context? context, bool useHdr) -> AndroidX.Media3.Effect.IGlShaderProgram?
virtual AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.OnBlurRendered(AndroidX.Media3.Common.GlTextureInfo? inputTexture) -> void
virtual AndroidX.Media3.Effect.SeparableConvolutionShaderProgram.Release() -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.Flush() -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.GetInputSurface(int inputIndex) -> Android.Views.Surface?
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.GetPendingInputFrameCount(int inputIndex) -> int
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.HasProducedFrameWithTimestampZero.get -> bool
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.Initialize() -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.QueueInputBitmap(int inputIndex, Android.Graphics.Bitmap? inputBitmap, AndroidX.Media3.Common.Util.ITimestampIterator? timestampIterator) -> bool
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.QueueInputTexture(int inputIndex, int textureId, long presentationTimeUs) -> bool
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.Redraw() -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.RegisterInput(int inputIndex) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.RegisterInputFrame(int inputIndex) -> bool
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.RegisterInputStream(int inputIndex, int inputType, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? effects, long offsetToAddUs) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.Release() -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.RenderOutputFrame(long renderTimeNs) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SetCompositionEffects(System.Collections.Generic.IList<AndroidX.Media3.Common.IEffect!>? compositionEffects) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SetCompositorSettings(AndroidX.Media3.Common.IVideoCompositorSettings? videoCompositorSettings) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SetOnInputFrameProcessedListener(int inputIndex, AndroidX.Media3.Common.IOnInputFrameProcessedListener? listener) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SetOnInputSurfaceReadyListener(int inputIndex, Java.Lang.IRunnable? listener) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SetOutputSurfaceInfo(AndroidX.Media3.Common.SurfaceInfo? outputSurfaceInfo) -> void
virtual AndroidX.Media3.Effect.SingleInputVideoGraph.SignalEndOfInput(int inputIndex) -> void
virtual AndroidX.Media3.Effect.TextureOverlay.Configure(AndroidX.Media3.Common.Util.Size? videoSize) -> void
virtual AndroidX.Media3.Effect.TextureOverlay.GetOverlaySettings(long presentationTimeUs) -> AndroidX.Media3.Common.IOverlaySettings?
virtual AndroidX.Media3.Effect.TextureOverlay.GetVertexTransformation(long presentationTimeUs) -> float[]?
virtual AndroidX.Media3.Effect.TextureOverlay.Release() -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.Flush() -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.QueueInputFrame(AndroidX.Media3.Common.IGlObjectsProvider? glObjectsProvider, AndroidX.Media3.Common.GlTextureInfo? inputTexture, long presentationTimeUs) -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.Release() -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.ReleaseOutputFrame(AndroidX.Media3.Common.GlTextureInfo? outputTexture) -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.SetErrorListener(Java.Util.Concurrent.IExecutor? executor, AndroidX.Media3.Effect.IGlShaderProgramErrorListener? errorListener) -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.SetInputListener(AndroidX.Media3.Effect.IGlShaderProgramInputListener? inputListener) -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.SetOutputListener(AndroidX.Media3.Effect.IGlShaderProgramOutputListener? outputListener) -> void
virtual AndroidX.Media3.Effect.TimestampAdjustmentShaderProgram.SignalEndOfCurrentInputStream() -> void
