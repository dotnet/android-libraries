#nullable enable
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.BundledHlsMediaChunkExtractor(AndroidX.Media3.Extractor.IExtractor? extractor, AndroidX.Media3.Common.Format? multivariantPlaylistFormat, AndroidX.Media3.Common.Util.TimestampAdjuster? timestampAdjuster) -> void
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.Init(AndroidX.Media3.Extractor.IExtractorOutput? extractorOutput) -> void
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.IsPackedAudioExtractor.get -> bool
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.IsReusable.get -> bool
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.OnTruncatedSegmentParsed() -> void
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.Read(AndroidX.Media3.Extractor.IExtractorInput? extractorInput) -> bool
AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.Recreate() -> AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsDataSourceFactory
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsDataSourceFactory.CreateDataSource(int dataType) -> AndroidX.Media3.DataSource.IDataSource?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsDataSourceFactory.DefaultHlsDataSourceFactory(AndroidX.Media3.DataSource.IDataSourceFactory? dataSourceFactory) -> void
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.CreateExtractor(Android.Net.Uri? uri, AndroidX.Media3.Common.Format? format, System.Collections.Generic.IList<AndroidX.Media3.Common.Format!>? muxedCaptionFormats, AndroidX.Media3.Common.Util.TimestampAdjuster? timestampAdjuster, System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>? responseHeaders, AndroidX.Media3.Extractor.IExtractorInput? sniffingExtractorInput, AndroidX.Media3.ExoPlayer.Analytics.PlayerId? playerId) -> AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.DefaultHlsExtractorFactory() -> void
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.DefaultHlsExtractorFactory(int payloadReaderFactoryFlags, bool exposeCea608WhenMissingDeclarations) -> void
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.ExperimentalParseSubtitlesDuringExtraction(bool parseSubtitlesDuringExtraction) -> AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.ExperimentalSetCodecsToParseWithinGopSampleDependencies(int codecsToParseWithinGopSampleDependencies) -> AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.GetOutputTextFormat(AndroidX.Media3.Common.Format? sourceFormat) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.InterfaceConsts
AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.SetSubtitleParserFactory(AndroidX.Media3.Extractor.Text.ISubtitleParserFactory? subtitleParserFactory) -> AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs.AdCompletedEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs.AdGroupIndex.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs.AdIndexInAdGroup.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdCompletedEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AddListener(AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener? listener) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.AdsMediaSourceFactory(AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader? adsLoader, AndroidX.Media3.Common.IAdViewProvider? adViewProvider, Android.Content.Context? context) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.AdsMediaSourceFactory(AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader? adsLoader, AndroidX.Media3.Common.IAdViewProvider? adViewProvider, AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory? mediaSourceFactory) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.CreateMediaSource(AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.ExoPlayer.Source.IMediaSource?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.GetSupportedTypes() -> int[]?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.SetDrmSessionManagerProvider(AndroidX.Media3.ExoPlayer.Drm.IDrmSessionManagerProvider? drmSessionManagerProvider) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.SetLoadErrorHandlingPolicy(AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? loadErrorHandlingPolicy) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.ContentTimelineChangedEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.ContentTimelineChangedEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.ContentTimelineChangedEventArgs.ContentTimelineChangedEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.Timeline? hlsContentTimeline) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.ContentTimelineChangedEventArgs.HlsContentTimeline.get -> AndroidX.Media3.Common.Timeline?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.ContentTimelineChangedEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.HandleContentTimelineChanged(AndroidX.Media3.ExoPlayer.Source.Ads.AdsMediaSource? adsMediaSource, AndroidX.Media3.Common.Timeline? timeline) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.HandlePrepareComplete(AndroidX.Media3.ExoPlayer.Source.Ads.AdsMediaSource? adsMediaSource, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.HandlePrepareError(AndroidX.Media3.ExoPlayer.Source.Ads.AdsMediaSource? adsMediaSource, int adGroupIndex, int adIndexInAdGroup, Java.IO.IOException? exception) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.HlsInterstitialsAdsLoader() -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnAdCompleted(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnContentTimelineChanged(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.Timeline? hlsContentTimeline) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnMetadata(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup, AndroidX.Media3.Common.Metadata? metadata) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnPrepareCompleted(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnPrepareError(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup, Java.IO.IOException? exception) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnStart(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.IAdViewProvider? adViewProvider) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener.OnStop(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.AdPlaybackState? adPlaybackState) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.AdGroupIndex.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.AdIndexInAdGroup.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.Metadata.get -> AndroidX.Media3.Common.Metadata?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.MetadataEventArgs.MetadataEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup, AndroidX.Media3.Common.Metadata? metadata) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs.AdGroupIndex.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs.AdIndexInAdGroup.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareCompletedEventArgs.PrepareCompletedEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.AdGroupIndex.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.AdIndexInAdGroup.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.Exception.get -> Java.IO.IOException?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.PrepareErrorEventArgs.PrepareErrorEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, int adGroupIndex, int adIndexInAdGroup, Java.IO.IOException? exception) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.Release() -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.RemoveListener(AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.IListener? listener) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.SetPlayer(AndroidX.Media3.Common.IPlayer? player) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.SetSupportedContentTypes(params int[]? contentTypes) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.Start(AndroidX.Media3.ExoPlayer.Source.Ads.AdsMediaSource? adsMediaSource, AndroidX.Media3.DataSource.DataSpec? adTagDataSpec, Java.Lang.Object? adsId, AndroidX.Media3.Common.IAdViewProvider? adViewProvider, AndroidX.Media3.ExoPlayer.Source.Ads.IAdsLoaderEventListener? eventListener) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StartEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StartEventArgs.AdViewProvider.get -> AndroidX.Media3.Common.IAdViewProvider?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StartEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StartEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StartEventArgs.StartEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.IAdViewProvider? adViewProvider) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.Stop(AndroidX.Media3.ExoPlayer.Source.Ads.AdsMediaSource? adsMediaSource, AndroidX.Media3.ExoPlayer.Source.Ads.IAdsLoaderEventListener? eventListener) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StopEventArgs
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StopEventArgs.AdPlaybackState.get -> AndroidX.Media3.Common.AdPlaybackState?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StopEventArgs.AdsId.get -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StopEventArgs.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.StopEventArgs.StopEventArgs(AndroidX.Media3.Common.MediaItem? mediaItem, Java.Lang.Object? adsId, AndroidX.Media3.Common.AdPlaybackState? adPlaybackState) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsManifest
AndroidX.Media3.ExoPlayer.Hls.HlsManifest.MediaPlaylist.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.HlsManifest.MediaPlaylist.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsManifest.MultivariantPlaylist.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist?
AndroidX.Media3.ExoPlayer.Hls.HlsManifest.MultivariantPlaylist.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.CanUpdateMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> bool
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.CreateMediaSource(AndroidX.Media3.Common.MediaItem? mediaItem) -> AndroidX.Media3.ExoPlayer.Source.IMediaSource?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.ExperimentalParseSubtitlesDuringExtraction(bool parseSubtitlesDuringExtraction) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.ExperimentalSetCodecsToParseWithinGopSampleDependencies(int codecsToParseWithinGopSampleDependencies) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.Factory(AndroidX.Media3.DataSource.IDataSourceFactory? dataSourceFactory) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.Factory(AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory? hlsDataSourceFactory) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.GetSupportedTypes() -> int[]?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetAllowChunklessPreparation(bool allowChunklessPreparation) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetCmcdConfigurationFactory(AndroidX.Media3.ExoPlayer.Upstream.CmcdConfiguration.IFactory? cmcdConfigurationFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetCompositeSequenceableLoaderFactory(AndroidX.Media3.ExoPlayer.Source.ICompositeSequenceableLoaderFactory? compositeSequenceableLoaderFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetDrmSessionManagerProvider(AndroidX.Media3.ExoPlayer.Drm.IDrmSessionManagerProvider? drmSessionManagerProvider) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetExtractorFactory(AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory? extractorFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetLoadErrorHandlingPolicy(AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? loadErrorHandlingPolicy) -> AndroidX.Media3.ExoPlayer.Source.IMediaSourceMediaSourceIFactory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetMetadataType(int metadataType) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetPlaylistParserFactory(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory? playlistParserFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetPlaylistTrackerFactory(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerFactory? playlistTrackerFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetSubtitleParserFactory(AndroidX.Media3.Extractor.Text.ISubtitleParserFactory? subtitleParserFactory) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetTimestampAdjusterInitializationTimeoutMs(long timestampAdjusterInitializationTimeoutMs) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.SetUseSessionKeys(bool useSessionKeys) -> AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory?
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.IMetadataType
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.OnPrimaryPlaylistRefreshed(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? mediaPlaylist) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.UpdateMediaItem(AndroidX.Media3.Common.MediaItem? mediaItem) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.GroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.GroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.HlsTrackMetadataEntry(string? groupId, string? name, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo!>? variantInfos) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.Name.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.Name.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.AudioGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.AudioGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.AverageBitrate.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.AverageBitrate.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.CaptionGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.CaptionGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.PeakBitrate.get -> int
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.PeakBitrate.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.SubtitleGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.SubtitleGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.VariantInfo(int averageBitrate, int peakBitrate, string? videoGroupId, string? audioGroupId, string? subtitleGroupId, string? captionGroupId) -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.VideoGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.VideoGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfos.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfos.set -> void
AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory
AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory.CreateDataSource(int p0) -> AndroidX.Media3.DataSource.IDataSource?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.CreateExtractor(Android.Net.Uri? p0, AndroidX.Media3.Common.Format? p1, System.Collections.Generic.IList<AndroidX.Media3.Common.Format!>? p2, AndroidX.Media3.Common.Util.TimestampAdjuster? p3, System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>? p4, AndroidX.Media3.Extractor.IExtractorInput? p5, AndroidX.Media3.ExoPlayer.Analytics.PlayerId? p6) -> AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.Default.get -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.ExperimentalParseSubtitlesDuringExtraction(bool parseSubtitlesDuringExtraction) -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.ExperimentalSetCodecsToParseWithinGopSampleDependencies(int codecsToParseWithinGopSampleDependencies) -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.GetOutputTextFormat(AndroidX.Media3.Common.Format? sourceFormat) -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory.SetSubtitleParserFactory(AndroidX.Media3.Extractor.Text.ISubtitleParserFactory? subtitleParserFactory) -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.Init(AndroidX.Media3.Extractor.IExtractorOutput? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.IsPackedAudioExtractor.get -> bool
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.IsReusable.get -> bool
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.OnTruncatedSegmentParsed() -> void
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.Read(AndroidX.Media3.Extractor.IExtractorInput? p0) -> bool
AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor.Recreate() -> AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor?
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.Init(AndroidX.Media3.Extractor.IExtractorOutput? extractorOutput) -> void
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.IsPackedAudioExtractor.get -> bool
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.IsReusable.get -> bool
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.MediaParserHlsMediaChunkExtractor(Android.Media.MediaParser? mediaParser, AndroidX.Media3.ExoPlayer.Source.MediaParser.OutputConsumerAdapterV30? outputConsumerAdapter, AndroidX.Media3.Common.Format? format, bool overrideInBandCaptionDeclarations, Google.Common.Collect.ImmutableList? muxedCaptionMediaFormats, int leadingBytesToSkip, AndroidX.Media3.ExoPlayer.Analytics.PlayerId? playerId) -> void
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.OnTruncatedSegmentParsed() -> void
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.Read(AndroidX.Media3.Extractor.IExtractorInput? extractorInput) -> bool
AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.Recreate() -> AndroidX.Media3.ExoPlayer.Hls.IHlsMediaChunkExtractor?
AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader
AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader.HlsDownloader(AndroidX.Media3.Common.MediaItem? mediaItem, AndroidX.Media3.DataSource.Cache.CacheDataSource.Factory? cacheDataSourceFactory) -> void
AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader.HlsDownloader(AndroidX.Media3.Common.MediaItem? mediaItem, AndroidX.Media3.DataSource.Cache.CacheDataSource.Factory? cacheDataSourceFactory, Java.Util.Concurrent.IExecutor? executor) -> void
AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader.HlsDownloader(AndroidX.Media3.Common.MediaItem? mediaItem, AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser? manifestParser, AndroidX.Media3.DataSource.Cache.CacheDataSource.Factory? cacheDataSourceFactory, Java.Util.Concurrent.IExecutor? executor) -> void
AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader.HlsDownloader(AndroidX.Media3.Common.MediaItem? mediaItem, AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser? manifestParser, AndroidX.Media3.DataSource.Cache.CacheDataSource.Factory? cacheDataSourceFactory, Java.Util.Concurrent.IExecutor? executor, long maxMergedSegmentStartTimeDiffMs) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistParserFactory
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistParserFactory.CreatePlaylistParser() -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistParserFactory.CreatePlaylistParser(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist? multivariantPlaylist, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? previousMediaPlaylist) -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistParserFactory.DefaultHlsPlaylistParserFactory() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.AddListener(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener? listener) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.DeactivatePlaylistForPlayback(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.DefaultHlsPlaylistTracker(AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory? dataSourceFactory, AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? loadErrorHandlingPolicy, AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory? playlistParserFactory, AndroidX.Media3.ExoPlayer.Upstream.CmcdConfiguration? cmcdConfiguration) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.DefaultHlsPlaylistTracker(AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory? dataSourceFactory, AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? loadErrorHandlingPolicy, AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory? playlistParserFactory, AndroidX.Media3.ExoPlayer.Upstream.CmcdConfiguration? cmcdConfiguration, double playlistStuckTargetDurationCoefficient) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.ExcludeMediaPlaylist(Android.Net.Uri? playlistUrl, long exclusionDurationMs) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.GetPlaylistSnapshot(Android.Net.Uri? url, bool isForPlayback) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.InitialStartTimeUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.IsLive.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.IsSnapshotValid(Android.Net.Uri? url) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.MaybeThrowPlaylistRefreshError(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.MaybeThrowPrimaryPlaylistRefreshError() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.MultivariantPlaylist.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.OnLoadCanceled(Java.Lang.Object? loadable, long elapsedRealtimeMs, long loadDurationMs, bool released) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.OnLoadCompleted(Java.Lang.Object? loadable, long elapsedRealtimeMs, long loadDurationMs) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.OnLoadError(Java.Lang.Object? loadable, long elapsedRealtimeMs, long loadDurationMs, Java.IO.IOException? error, int errorCount) -> AndroidX.Media3.ExoPlayer.Upstream.Loader.LoadErrorAction?
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.OnLoadStarted(AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable? loadable, long elapsedRealtimeMs, long loadDurationMs, int retryCount) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.RefreshPlaylist(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.RemoveListener(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener? listener) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.Start(Android.Net.Uri? initialPlaylistUri, AndroidX.Media3.ExoPlayer.Source.MediaSourceEventListenerEventDispatcher? eventDispatcher, AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPrimaryPlaylistListener? primaryPlaylistListener) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.Stop() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.FilteringHlsPlaylistParserFactory
AndroidX.Media3.ExoPlayer.Hls.Playlist.FilteringHlsPlaylistParserFactory.CreatePlaylistParser() -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.FilteringHlsPlaylistParserFactory.CreatePlaylistParser(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist? multivariantPlaylist, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? previousMediaPlaylist) -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.FilteringHlsPlaylistParserFactory.FilteringHlsPlaylistParserFactory(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory? hlsPlaylistParserFactory, System.Collections.Generic.IList<AndroidX.Media3.Common.StreamKey!>? streamKeys) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.ClientDefinedAttribute(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.ClientDefinedAttribute(string? name, double value) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.ClientDefinedAttribute(string? name, string? value, int type) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.IType
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.Name.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.Name.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.Type.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.Type.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Copy(System.Collections.Generic.IList<AndroidX.Media3.Common.StreamKey!>? streamKeys) -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.CopyWith(long startTimeUs, int discontinuitySequence) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.CopyWithEndTag() -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.DiscontinuitySequence.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.DiscontinuitySequence.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.DurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.DurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.EndTimeUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasDiscontinuitySequence.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasDiscontinuitySequence.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasEndTag.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasEndTag.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasPositiveStartOffset.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasPositiveStartOffset.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasProgramDateTime.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HasProgramDateTime.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.HlsMediaPlaylist(int playlistType, string? baseUri, System.Collections.Generic.IList<string!>? tags, long startOffsetUs, bool preciseStart, long startTimeUs, bool hasDiscontinuitySequence, int discontinuitySequence, long mediaSequence, int version, long targetDurationUs, long partTargetDurationUs, bool hasIndependentSegments, bool hasEndTag, bool hasProgramDateTime, AndroidX.Media3.Common.DrmInitData? protectionSchemes, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment!>? segments, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part!>? trailingParts, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl? serverControl, System.Collections.Generic.IDictionary<Android.Net.Uri!, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport!>? renditionReports, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial!>? interstitials) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.IPlaylistType
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.AssetListUri.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.AssetListUri.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.AssetUri.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.AssetUri.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ClientDefinedAttributes.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ClientDefinedAttributes.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Cue.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Cue.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.DurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.DurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.EndDateUnixUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.EndDateUnixUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.EndOnNext.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.EndOnNext.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ICueTriggerType
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.INavigationRestriction
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ISnapType
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Id.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Id.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Interstitial(string? id, Android.Net.Uri? assetUri, Android.Net.Uri? assetListUri, long startDateUnixUs, long endDateUnixUs, long durationUs, long plannedDurationUs, System.Collections.Generic.IList<string!>? cue, bool endOnNext, long resumeOffsetUs, long playoutLimitUs, System.Collections.Generic.IList<string!>? snapTypes, System.Collections.Generic.IList<string!>? restrictions, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute!>? clientDefinedAttributes) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.PlannedDurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.PlannedDurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.PlayoutLimitUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.PlayoutLimitUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Restrictions.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.Restrictions.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ResumeOffsetUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.ResumeOffsetUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.SnapTypes.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.SnapTypes.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.StartDateUnixUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.StartDateUnixUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitials.get -> Google.Common.Collect.ImmutableList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitials.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.IsNewerThan(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? other) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.MediaSequence.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.MediaSequence.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.CopyWith(long relativeStartTimeUs, int relativeDiscontinuitySequence) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.IsIndependent.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.IsIndependent.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.IsPreload.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.IsPreload.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.Part(string? url, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment? initializationSegment, long durationUs, int relativeDiscontinuitySequence, long relativeStartTimeUs, AndroidX.Media3.Common.DrmInitData? drmInitData, string? fullSegmentEncryptionKeyUri, string? encryptionIV, long byteRangeOffset, long byteRangeLength, bool hasGapTag, bool isIndependent, bool isPreload) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PartTargetDurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PartTargetDurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PlaylistType.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PlaylistType.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PreciseStart.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PreciseStart.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ProtectionSchemes.get -> AndroidX.Media3.Common.DrmInitData?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ProtectionSchemes.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.LastMediaSequence.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.LastMediaSequence.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.LastPartIndex.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.LastPartIndex.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.PlaylistUri.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.PlaylistUri.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.RenditionReport(Android.Net.Uri? playlistUri, long lastMediaSequence, int lastPartIndex) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReports.get -> System.Collections.IDictionary?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReports.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.CopyWith(long relativeStartTimeUs, int relativeDiscontinuitySequence) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Parts.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Parts.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Segment(string? uri, long byteRangeOffset, long byteRangeLength, string? fullSegmentEncryptionKeyUri, string? encryptionIV) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Segment(string? url, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment? initializationSegment, string? title, long durationUs, int relativeDiscontinuitySequence, long relativeStartTimeUs, AndroidX.Media3.Common.DrmInitData? drmInitData, string? fullSegmentEncryptionKeyUri, string? encryptionIV, long byteRangeOffset, long byteRangeLength, bool hasGapTag, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part!>? parts) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Title.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.Title.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ByteRangeLength.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ByteRangeLength.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ByteRangeOffset.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ByteRangeOffset.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.DrmInitData.get -> AndroidX.Media3.Common.DrmInitData?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.DrmInitData.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.DurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.DurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.EncryptionIV.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.EncryptionIV.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.FullSegmentEncryptionKeyUri.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.FullSegmentEncryptionKeyUri.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.HasGapTag.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.HasGapTag.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.InitializationSegment.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.InitializationSegment.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.RelativeDiscontinuitySequence.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.RelativeDiscontinuitySequence.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.RelativeStartTimeUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.RelativeStartTimeUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.SegmentBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.Url.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.Url.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segments.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segments.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.CanBlockReload.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.CanBlockReload.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.CanSkipDateRanges.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.CanSkipDateRanges.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.HoldBackUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.HoldBackUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.PartHoldBackUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.PartHoldBackUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.ServerControl(long skipUntilUs, bool canSkipDateRanges, long holdBackUs, long partHoldBackUs, bool canBlockReload) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.SkipUntilUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.SkipUntilUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.StartOffsetUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.StartOffsetUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.StartTimeUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.StartTimeUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.TargetDurationUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.TargetDurationUs.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.TrailingParts.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.TrailingParts.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Version.get -> int
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Version.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Audios.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Audios.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.ClosedCaptions.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.ClosedCaptions.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Copy(System.Collections.Generic.IList<AndroidX.Media3.Common.StreamKey!>? streamKeys) -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.HlsMultivariantPlaylist(string? baseUri, System.Collections.Generic.IList<string!>? tags, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant!>? variants, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition!>? videos, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition!>? audios, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition!>? subtitles, System.Collections.Generic.IList<AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition!>? closedCaptions, AndroidX.Media3.Common.Format? muxedAudioFormat, System.Collections.Generic.IList<AndroidX.Media3.Common.Format!>? muxedCaptionFormats, bool hasIndependentSegments, System.Collections.Generic.IDictionary<string!, string!>? variableDefinitions, System.Collections.Generic.IList<AndroidX.Media3.Common.DrmInitData!>? sessionKeyDrmInitData) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MediaPlaylistUrls.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MediaPlaylistUrls.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MuxedAudioFormat.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MuxedAudioFormat.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MuxedCaptionFormats.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.MuxedCaptionFormats.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Format.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Format.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.GroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.GroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Name.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Name.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Rendition(Android.Net.Uri? url, AndroidX.Media3.Common.Format? format, string? groupId, string? name) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Url.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.Url.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.SessionKeyDrmInitData.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.SessionKeyDrmInitData.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Subtitles.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Subtitles.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.VariableDefinitions.get -> System.Collections.IDictionary?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.VariableDefinitions.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.AudioGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.AudioGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.CaptionGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.CaptionGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.CopyWithFormat(AndroidX.Media3.Common.Format? format) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.Format.get -> AndroidX.Media3.Common.Format?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.Format.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.SubtitleGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.SubtitleGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.Url.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.Url.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.Variant(Android.Net.Uri? url, AndroidX.Media3.Common.Format? format, string? videoGroupId, string? audioGroupId, string? subtitleGroupId, string? captionGroupId) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.VideoGroupId.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.VideoGroupId.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variants.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variants.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Videos.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Videos.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.BaseUri.get -> string?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.BaseUri.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.Copy(System.Collections.Generic.IList<AndroidX.Media3.Common.StreamKey!>? streamKeys) -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.HasIndependentSegments.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.HasIndependentSegments.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.HlsPlaylist(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.HlsPlaylist(string? baseUri, System.Collections.Generic.IList<string!>? tags, bool hasIndependentSegments) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.Tags.get -> System.Collections.IList?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.Tags.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.DeltaUpdateException
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.DeltaUpdateException.DeltaUpdateException() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.HlsPlaylistParser() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.HlsPlaylistParser(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist? multivariantPlaylist, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? previousMediaPlaylist) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.Parse(Android.Net.Uri? uri, System.IO.Stream? inputStream) -> Java.Lang.Object?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistResetException
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistResetException.HlsPlaylistTrackerPlaylistResetException(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistResetException.Url.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistResetException.Url.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistStuckException
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistStuckException.HlsPlaylistTrackerPlaylistStuckException(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistStuckException.Url.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistStuckException.Url.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPrimaryPlaylistEventArgs
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPrimaryPlaylistEventArgs.HlsPlaylistTrackerPrimaryPlaylistEventArgs(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPrimaryPlaylistEventArgs.P0.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory.CreatePlaylistParser() -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory.CreatePlaylistParser(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist? p0, AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? p1) -> AndroidX.Media3.ExoPlayer.Upstream.ParsingLoadable.IParser?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.AddListener(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.DeactivatePlaylistForPlayback(Android.Net.Uri? url) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.ExcludeMediaPlaylist(Android.Net.Uri? p0, long p1) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.GetPlaylistSnapshot(Android.Net.Uri? p0, bool p1) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.InitialStartTimeUs.get -> long
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.IsLive.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.IsSnapshotValid(Android.Net.Uri? p0) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.MaybeThrowPlaylistRefreshError(Android.Net.Uri? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.MaybeThrowPrimaryPlaylistRefreshError() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.MultivariantPlaylist.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.RefreshPlaylist(Android.Net.Uri? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.RemoveListener(AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.Start(Android.Net.Uri? p0, AndroidX.Media3.ExoPlayer.Source.MediaSourceEventListenerEventDispatcher? p1, AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPrimaryPlaylistListener? p2) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker.Stop() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerFactory
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerFactory.CreateTracker(AndroidX.Media3.ExoPlayer.Hls.IHlsDataSourceFactory? p0, AndroidX.Media3.ExoPlayer.Upstream.ILoadErrorHandlingPolicy? p1, AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistParserFactory? p2, AndroidX.Media3.ExoPlayer.Upstream.CmcdConfiguration? p3) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTracker?
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener.OnPlaylistChanged() -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPlaylistEventListener.OnPlaylistError(Android.Net.Uri? p0, AndroidX.Media3.ExoPlayer.Upstream.LoadErrorHandlingPolicyLoadErrorInfo? p1, bool p2) -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPrimaryPlaylistListener
AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerPrimaryPlaylistListener.OnPrimaryPlaylistRefreshed(AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist? p0) -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.Handled.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.Handled.set -> void
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.P0.get -> Android.Net.Uri?
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.P1.get -> AndroidX.Media3.ExoPlayer.Upstream.LoadErrorHandlingPolicyLoadErrorInfo?
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.P2.get -> bool
AndroidX.Media3.ExoPlayer.Hls.Playlist.PlaylistErrorEventArgs.PlaylistErrorEventArgs(bool handled, Android.Net.Uri? p0, AndroidX.Media3.ExoPlayer.Upstream.LoadErrorHandlingPolicyLoadErrorInfo? p1, bool p2) -> void
AndroidX.Media3.ExoPlayer.Hls.SampleQueueMappingException
AndroidX.Media3.ExoPlayer.Hls.SampleQueueMappingException.SampleQueueMappingException(string? mimeType) -> void
AndroidX.Media3.ExoPlayer.Hls.TimestampAdjusterProvider
AndroidX.Media3.ExoPlayer.Hls.TimestampAdjusterProvider.GetAdjuster(int discontinuitySequence) -> AndroidX.Media3.Common.Util.TimestampAdjuster?
AndroidX.Media3.ExoPlayer.Hls.TimestampAdjusterProvider.Reset() -> void
AndroidX.Media3.ExoPlayer.Hls.TimestampAdjusterProvider.TimestampAdjusterProvider() -> void
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.Init(AndroidX.Media3.Extractor.IExtractorOutput? output) -> void
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.Read(AndroidX.Media3.Extractor.IExtractorInput? input, AndroidX.Media3.Extractor.PositionHolder? seekPosition) -> int
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.Release() -> void
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.Seek(long position, long timeUs) -> void
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.Sniff(AndroidX.Media3.Extractor.IExtractorInput? input) -> bool
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.WebvttExtractor(string? language, AndroidX.Media3.Common.Util.TimestampAdjuster? timestampAdjuster) -> void
AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.WebvttExtractor(string? language, AndroidX.Media3.Common.Util.TimestampAdjuster? timestampAdjuster, AndroidX.Media3.Extractor.Text.ISubtitleParserFactory? subtitleParserFactory, bool parseSubtitlesDuringExtraction) -> void
const AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.MetadataTypeEmsg = 3 -> int
const AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.MetadataTypeId3 = 1 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.DefaultPlaylistStuckTargetDurationCoefficient = 3.5 -> double
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.TypeDouble = 2 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.TypeHexText = 1 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.TypeText = 0 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.CueTriggerOnce = "ONCE" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.CueTriggerPost = "POST" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.CueTriggerPre = "PRE" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.NavigationRestrictionJump = "JUMP" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.NavigationRestrictionSkip = "SKIP" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.SnapTypeIn = "IN" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.SnapTypeOut = "OUT" -> string!
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PlaylistTypeEvent = 2 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PlaylistTypeUnknown = 0 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.PlaylistTypeVod = 1 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.GroupIndexAudio = 1 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.GroupIndexSubtitle = 2 -> int
const AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.GroupIndexVariant = 0 -> int
override AndroidX.Media3.ExoPlayer.Hls.BundledHlsMediaChunkExtractor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.DefaultHlsDataSourceFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.AdsMediaSourceFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsInterstitialsAdsLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsManifest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.CreatePeriod(AndroidX.Media3.ExoPlayer.Source.MediaSourceMediaPeriodId? id, AndroidX.Media3.ExoPlayer.Upstream.IAllocator? allocator, long startPositionUs) -> AndroidX.Media3.ExoPlayer.Source.IMediaPeriod?
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.MaybeThrowSourceInfoRefreshError() -> void
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.MediaItem.get -> AndroidX.Media3.Common.MediaItem?
override AndroidX.Media3.ExoPlayer.Hls.HlsMediaSource.ReleasePeriod(AndroidX.Media3.ExoPlayer.Source.IMediaPeriod? mediaPeriod) -> void
override AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.HlsTrackMetadataEntry.VariantInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Offline.HlsDownloader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistParserFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.FilteringHlsPlaylistParserFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.ThresholdClass.get -> nint
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.ThresholdType.get -> System.Type!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Interstitial.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Part.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.RenditionReport.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.Segment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ThresholdClass.get -> nint
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.ThresholdType.get -> System.Type!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ServerControl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Rendition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.ThresholdClass.get -> nint
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylist.ThresholdType.get -> System.Type!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.DeltaUpdateException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistResetException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsPlaylistTrackerPlaylistStuckException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.SampleQueueMappingException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.TimestampAdjusterProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media3.ExoPlayer.Hls.WebvttExtractor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media3.ExoPlayer.Hls.DefaultHlsExtractorFactory.InterfaceConsts.Default.get -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
static AndroidX.Media3.ExoPlayer.Hls.MediaParserHlsMediaChunkExtractor.Factory.get -> AndroidX.Media3.ExoPlayer.Hls.IHlsExtractorFactory?
static AndroidX.Media3.ExoPlayer.Hls.Playlist.DefaultHlsPlaylistTracker.Factory.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.IHlsPlaylistTrackerFactory?
static AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.CreateSingleVariantMultivariantPlaylist(string? variantUrl) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist?
static AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Empty.get -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist?
static AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant.CreateMediaPlaylistVariantUrl(Android.Net.Uri? url) -> AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMultivariantPlaylist.Variant?
virtual AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.DoubleValue.get -> double
virtual AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.ClientDefinedAttribute.TextValue.get -> string?
virtual AndroidX.Media3.ExoPlayer.Hls.Playlist.HlsMediaPlaylist.SegmentBase.CompareTo(Java.Lang.Object? relativeStartTimeUs) -> int
