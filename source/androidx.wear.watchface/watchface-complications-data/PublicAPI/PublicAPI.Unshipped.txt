#nullable enable
Android.Support.Wearable.Complications.ComplicationData
Android.Support.Wearable.Complications.ComplicationData.Builder
Android.Support.Wearable.Complications.ComplicationData.Builder.Build() -> Android.Support.Wearable.Complications.ComplicationData!
Android.Support.Wearable.Complications.ComplicationData.Builder.Builder(Android.Support.Wearable.Complications.ComplicationData! data) -> void
Android.Support.Wearable.Complications.ComplicationData.Builder.Builder(int type) -> void
Android.Support.Wearable.Complications.ComplicationData.Builder.ClearEndDateTime() -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.ClearStartDateTime() -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetAmbientLayout(byte[]! ambientProtoLayout) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetBurnInProtectionIcon(Android.Graphics.Drawables.Icon? icon) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetBurnInProtectionSmallImage(Android.Graphics.Drawables.Icon? smallImage) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetColorRamp(int[]? colorRamp) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetColorRampIsSmoothShaded(Java.Lang.Boolean? isSmoothShaded) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetContentDescription(Android.Support.Wearable.Complications.ComplicationText? description) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetDataSource(Android.Content.ComponentName? provider) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetDisplayPolicy(int displayPolicy) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetElementBackgroundColor(int elementBackgroundColor) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetElementColors(int[]? elementColors) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetElementWeights(float[]? elementWeights) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetEndDateTimeMillis(long endDateTimeMillis) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetIcon(Android.Graphics.Drawables.Icon? icon) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetInteractiveLayout(byte[]! protoLayout) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetLargeImage(Android.Graphics.Drawables.Icon? largeImage) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetLayoutResources(byte[]! resources) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetListEntryCollection(System.Collections.Generic.ICollection<Android.Support.Wearable.Complications.ComplicationData!>? listEntries) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetListStyleHint(int listStyleHint) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetLongText(Android.Support.Wearable.Complications.ComplicationText? longText) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetLongTitle(Android.Support.Wearable.Complications.ComplicationText? longTitle) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetPersistencePolicy(int cachePolicy) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetPlaceholder(Android.Support.Wearable.Complications.ComplicationData? placeholder) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetRangedDynamicValue(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat? value) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetRangedMaxValue(float maxValue) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetRangedMinValue(float minValue) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetRangedValue(Java.Lang.Float? value) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetRangedValueType(int valueType) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetShortText(Android.Support.Wearable.Complications.ComplicationText? shortText) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetShortTitle(Android.Support.Wearable.Complications.ComplicationText? shortTitle) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetSmallImage(Android.Graphics.Drawables.Icon? smallImage) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetSmallImageStyle(int imageStyle) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetStartDateTimeMillis(long startDateTimeMillis) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetTapAction(Android.App.PendingIntent? pendingIntent) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetTapActionLostDueToSerialization(bool tapActionLostDueToSerialization) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.Builder.SetTargetValue(float targetValue) -> Android.Support.Wearable.Complications.ComplicationData.Builder!
Android.Support.Wearable.Complications.ComplicationData.BurnInProtectionIcon.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationData.BurnInProtectionSmallImage.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationData.Companion
Android.Support.Wearable.Complications.ComplicationData.Companion.IsFieldValidForType(string! field, int type) -> bool
Android.Support.Wearable.Complications.ComplicationData.Companion.MaybeRedact(Java.Lang.ICharSequence? unredacted) -> string!
Android.Support.Wearable.Complications.ComplicationData.Companion.MaybeRedact(string? unredacted) -> string!
Android.Support.Wearable.Complications.ComplicationData.Companion.ShouldRedact() -> bool
Android.Support.Wearable.Complications.ComplicationData.ContentDescription.get -> Android.Support.Wearable.Complications.ComplicationText?
Android.Support.Wearable.Complications.ComplicationData.DataSource.get -> Android.Content.ComponentName?
Android.Support.Wearable.Complications.ComplicationData.DataSource.set -> void
Android.Support.Wearable.Complications.ComplicationData.DescribeContents() -> int
Android.Support.Wearable.Complications.ComplicationData.DisplayPolicy.get -> int
Android.Support.Wearable.Complications.ComplicationData.ElementBackgroundColor.get -> int
Android.Support.Wearable.Complications.ComplicationData.EndDateTimeMillis.get -> long
Android.Support.Wearable.Complications.ComplicationData.EqualsUnevaluated(Android.Support.Wearable.Complications.ComplicationData! other) -> bool
Android.Support.Wearable.Complications.ComplicationData.GetAmbientLayout() -> byte[]?
Android.Support.Wearable.Complications.ComplicationData.GetColorRamp() -> int[]?
Android.Support.Wearable.Complications.ComplicationData.GetElementColors() -> int[]?
Android.Support.Wearable.Complications.ComplicationData.GetElementWeights() -> float[]?
Android.Support.Wearable.Complications.ComplicationData.GetInteractiveLayout() -> byte[]?
Android.Support.Wearable.Complications.ComplicationData.GetLayoutResources() -> byte[]?
Android.Support.Wearable.Complications.ComplicationData.HasBurnInProtectionIcon.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasBurnInProtectionSmallImage.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasContentDescription.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasDynamicValues.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasIcon.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasLargeImage.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasLongText.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasLongTitle.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasRangedDynamicValue.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasRangedMaxValue.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasRangedMinValue.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasRangedValue.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasRangedValueType.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasShortText.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasShortTitle.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasSmallImage.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasTapAction.get -> bool
Android.Support.Wearable.Complications.ComplicationData.HasTargetValue.get -> bool
Android.Support.Wearable.Complications.ComplicationData.IComplicationType
Android.Support.Wearable.Complications.ComplicationData.IImageStyle
Android.Support.Wearable.Complications.ComplicationData.Icon.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationData.IsActiveAt(long dateTimeMillis) -> bool
Android.Support.Wearable.Complications.ComplicationData.IsColorRampInterpolated() -> Java.Lang.Boolean?
Android.Support.Wearable.Complications.ComplicationData.IsTimeDependent.get -> bool
Android.Support.Wearable.Complications.ComplicationData.LargeImage.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationData.ListEntries.get -> System.Collections.Generic.IList<Android.Support.Wearable.Complications.ComplicationData!>?
Android.Support.Wearable.Complications.ComplicationData.ListStyleHint.get -> int
Android.Support.Wearable.Complications.ComplicationData.LongText.get -> Android.Support.Wearable.Complications.ComplicationText?
Android.Support.Wearable.Complications.ComplicationData.LongTitle.get -> Android.Support.Wearable.Complications.ComplicationText?
Android.Support.Wearable.Complications.ComplicationData.PersistencePolicy.get -> int
Android.Support.Wearable.Complications.ComplicationData.Placeholder.get -> Android.Support.Wearable.Complications.ComplicationData?
Android.Support.Wearable.Complications.ComplicationData.RangedDynamicValue.get -> AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat?
Android.Support.Wearable.Complications.ComplicationData.RangedMaxValue.get -> float
Android.Support.Wearable.Complications.ComplicationData.RangedMinValue.get -> float
Android.Support.Wearable.Complications.ComplicationData.RangedValue.get -> float
Android.Support.Wearable.Complications.ComplicationData.RangedValueType.get -> int
Android.Support.Wearable.Complications.ComplicationData.SetTimelineEntryCollection(System.Collections.Generic.ICollection<Android.Support.Wearable.Complications.ComplicationData!>? timelineEntries) -> void
Android.Support.Wearable.Complications.ComplicationData.ShortText.get -> Android.Support.Wearable.Complications.ComplicationText?
Android.Support.Wearable.Complications.ComplicationData.ShortTitle.get -> Android.Support.Wearable.Complications.ComplicationText?
Android.Support.Wearable.Complications.ComplicationData.SmallImage.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationData.SmallImageStyle.get -> int
Android.Support.Wearable.Complications.ComplicationData.StartDateTimeMillis.get -> long
Android.Support.Wearable.Complications.ComplicationData.TapAction.get -> Android.App.PendingIntent?
Android.Support.Wearable.Complications.ComplicationData.TapActionLostDueToSerialization.get -> bool
Android.Support.Wearable.Complications.ComplicationData.TargetValue.get -> float
Android.Support.Wearable.Complications.ComplicationData.TimelineEndEpochSecond.get -> Java.Lang.Long?
Android.Support.Wearable.Complications.ComplicationData.TimelineEndEpochSecond.set -> void
Android.Support.Wearable.Complications.ComplicationData.TimelineEntries.get -> System.Collections.Generic.IList<Android.Support.Wearable.Complications.ComplicationData!>?
Android.Support.Wearable.Complications.ComplicationData.TimelineStartEpochSecond.get -> Java.Lang.Long?
Android.Support.Wearable.Complications.ComplicationData.TimelineStartEpochSecond.set -> void
Android.Support.Wearable.Complications.ComplicationData.ToStringNoRedaction() -> string!
Android.Support.Wearable.Complications.ComplicationData.Type.get -> int
Android.Support.Wearable.Complications.ComplicationData.WriteReplace() -> Java.Lang.Object!
Android.Support.Wearable.Complications.ComplicationData.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Support.Wearable.Complications.ComplicationDataKt
Android.Support.Wearable.Complications.ComplicationManager
Android.Support.Wearable.Complications.ComplicationManagerConsts
Android.Support.Wearable.Complications.ComplicationManagerDefault
Android.Support.Wearable.Complications.ComplicationManagerDefault.ComplicationManagerDefault() -> void
Android.Support.Wearable.Complications.ComplicationManagerDefault.ComplicationManagerDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationManagerDefault.InterfaceConsts
Android.Support.Wearable.Complications.ComplicationManagerStub
Android.Support.Wearable.Complications.ComplicationManagerStub.ComplicationManagerStub() -> void
Android.Support.Wearable.Complications.ComplicationManagerStub.ComplicationManagerStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationManagerStub.InterfaceConsts
Android.Support.Wearable.Complications.ComplicationManager_Parcel
Android.Support.Wearable.Complications.ComplicationManager_Parcel.ComplicationManager_Parcel() -> void
Android.Support.Wearable.Complications.ComplicationManager_Parcel.ComplicationManager_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationProvider
Android.Support.Wearable.Complications.ComplicationProviderConsts
Android.Support.Wearable.Complications.ComplicationProviderDefault
Android.Support.Wearable.Complications.ComplicationProviderDefault.ComplicationProviderDefault() -> void
Android.Support.Wearable.Complications.ComplicationProviderDefault.ComplicationProviderDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationProviderDefault.InterfaceConsts
Android.Support.Wearable.Complications.ComplicationProviderInfo
Android.Support.Wearable.Complications.ComplicationProviderInfo.AppName.get -> string?
Android.Support.Wearable.Complications.ComplicationProviderInfo.AppName.set -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.ComplicationProviderInfo(Android.OS.Parcel! in) -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.ComplicationProviderInfo(string! appName, string! providerName, Android.Graphics.Drawables.Icon! providerIcon, int complicationType, Android.Content.ComponentName? providerComponentName) -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.ComplicationType.get -> int
Android.Support.Wearable.Complications.ComplicationProviderInfo.ComplicationType.set -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.DescribeContents() -> int
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderComponentName.get -> Android.Content.ComponentName?
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderComponentName.set -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderIcon.get -> Android.Graphics.Drawables.Icon?
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderIcon.set -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderName.get -> string?
Android.Support.Wearable.Complications.ComplicationProviderInfo.ProviderName.set -> void
Android.Support.Wearable.Complications.ComplicationProviderInfo.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Support.Wearable.Complications.ComplicationProviderStub
Android.Support.Wearable.Complications.ComplicationProviderStub.ComplicationProviderStub() -> void
Android.Support.Wearable.Complications.ComplicationProviderStub.ComplicationProviderStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationProviderStub.InterfaceConsts
Android.Support.Wearable.Complications.ComplicationProvider_Parcel
Android.Support.Wearable.Complications.ComplicationProvider_Parcel.ComplicationProvider_Parcel() -> void
Android.Support.Wearable.Complications.ComplicationProvider_Parcel.ComplicationProvider_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ComplicationText
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString! dynamicText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(Java.Lang.ICharSequence! surroundingText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(Java.Lang.ICharSequence! surroundingText, Android.Support.Wearable.Complications.ITimeDependentText! timeDependentText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(Java.Lang.ICharSequence! surroundingText, AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString! dynamicText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(string! surroundingText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(string! surroundingText, Android.Support.Wearable.Complications.ITimeDependentText! timeDependentText) -> void
Android.Support.Wearable.Complications.ComplicationText.ComplicationText(string! surroundingText, AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString! dynamicText) -> void
Android.Support.Wearable.Complications.ComplicationText.DescribeContents() -> int
Android.Support.Wearable.Complications.ComplicationText.DynamicValue.get -> AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString?
Android.Support.Wearable.Complications.ComplicationText.GetNextChangeTime(long fromTime) -> long
Android.Support.Wearable.Complications.ComplicationText.GetTextAt(Android.Content.Res.Resources! resources, long dateTimeMillis) -> string!
Android.Support.Wearable.Complications.ComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, long dateTimeMillis) -> Java.Lang.ICharSequence!
Android.Support.Wearable.Complications.ComplicationText.ITimeDifferenceStyle
Android.Support.Wearable.Complications.ComplicationText.ITimeFormatStyle
Android.Support.Wearable.Complications.ComplicationText.IsAlwaysEmpty.get -> bool
Android.Support.Wearable.Complications.ComplicationText.IsPlaceholder.get -> bool
Android.Support.Wearable.Complications.ComplicationText.ReturnsSameText(long firstDateTimeMillis, long secondDateTimeMillis) -> bool
Android.Support.Wearable.Complications.ComplicationText.SurroundingText.get -> string?
Android.Support.Wearable.Complications.ComplicationText.SurroundingTextFormatted.get -> Java.Lang.ICharSequence?
Android.Support.Wearable.Complications.ComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.Build() -> Android.Support.Wearable.Complications.ComplicationText!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetMinimumUnit(Java.Util.Concurrent.TimeUnit? minimumUnit) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetReferencePeriodEndMillis(long refPeriodEndMillis) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetReferencePeriodStartMillis(long refPeriodStartMillis) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetShowNowText(bool showNowText) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetStyle(int style) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetSurroundingText(Java.Lang.ICharSequence? surroundingText) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.SetSurroundingText(string? surroundingText) -> Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.TimeDifferenceBuilder() -> void
Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.TimeDifferenceBuilder(long referencePeriodStartMillis, long referencePeriodEndMillis) -> void
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.Build() -> Android.Support.Wearable.Complications.ComplicationText!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.SetFormat(string? format) -> Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.SetStyle(int style) -> Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.SetSurroundingText(Java.Lang.ICharSequence? surroundingText) -> Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.SetSurroundingText(string? surroundingText) -> Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.SetTimeZone(Java.Util.TimeZone? timeZone) -> Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder!
Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.TimeFormatBuilder() -> void
Android.Support.Wearable.Complications.ComplicationText.WriteToParcel(Android.OS.Parcel! out, Android.OS.ParcelableWriteFlags flags) -> void
Android.Support.Wearable.Complications.ComplicationTextTemplate
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.AddComplicationText(Android.Support.Wearable.Complications.ComplicationText! text) -> Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder!
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.Build() -> Android.Support.Wearable.Complications.ComplicationTextTemplate!
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.Builder() -> void
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.IsEmpty.get -> bool
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.SetSurroundingText(Java.Lang.ICharSequence? surroundingText) -> Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder!
Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.SetSurroundingText(string? surroundingText) -> Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder!
Android.Support.Wearable.Complications.ComplicationTextTemplate.DescribeContents() -> int
Android.Support.Wearable.Complications.ComplicationTextTemplate.GetNextChangeTime(long fromTime) -> long
Android.Support.Wearable.Complications.ComplicationTextTemplate.GetTextAt(Android.Content.Res.Resources! resources, long dateTimeMillis) -> string!
Android.Support.Wearable.Complications.ComplicationTextTemplate.GetTextAtFormatted(Android.Content.Res.Resources! resources, long dateTimeMillis) -> Java.Lang.ICharSequence!
Android.Support.Wearable.Complications.ComplicationTextTemplate.ReturnsSameText(long firstDateTimeMillis, long secondDateTimeMillis) -> bool
Android.Support.Wearable.Complications.ComplicationTextTemplate.WriteToParcel(Android.OS.Parcel! out, Android.OS.ParcelableWriteFlags flags) -> void
Android.Support.Wearable.Complications.IComplicationManager
Android.Support.Wearable.Complications.IComplicationManager.UpdateComplicationData(int p0, Android.Support.Wearable.Complications.ComplicationData? p1) -> void
Android.Support.Wearable.Complications.IComplicationProvider
Android.Support.Wearable.Complications.IComplicationProvider.ApiVersion.get -> int
Android.Support.Wearable.Complications.IComplicationProvider.GetComplicationPreviewData(int p0) -> Android.Support.Wearable.Complications.ComplicationData?
Android.Support.Wearable.Complications.IComplicationProvider.OnComplicationActivated(int p0, int p1, Android.OS.IBinder? p2) -> void
Android.Support.Wearable.Complications.IComplicationProvider.OnComplicationDeactivated(int p0) -> void
Android.Support.Wearable.Complications.IComplicationProvider.OnStartSynchronousComplicationRequests(int p0) -> void
Android.Support.Wearable.Complications.IComplicationProvider.OnStopSynchronousComplicationRequests(int p0) -> void
Android.Support.Wearable.Complications.IComplicationProvider.OnSynchronousComplicationRequest(int p0, int p1) -> Android.Support.Wearable.Complications.ComplicationData?
Android.Support.Wearable.Complications.IComplicationProvider.OnSynchronousComplicationRequest2(int p0, int p1, Android.OS.Bundle? p2) -> Android.Support.Wearable.Complications.ComplicationData?
Android.Support.Wearable.Complications.IComplicationProvider.OnUpdate(int p0, int p1, Android.OS.IBinder? p2) -> void
Android.Support.Wearable.Complications.IComplicationProvider.OnUpdate2(int p0, int p1, Android.OS.IBinder? p2, Android.OS.Bundle? p3) -> void
Android.Support.Wearable.Complications.IPreviewComplicationDataCallback
Android.Support.Wearable.Complications.IPreviewComplicationDataCallback.UpdateComplicationData(Android.Support.Wearable.Complications.ComplicationData? p0) -> void
Android.Support.Wearable.Complications.IProviderInfoService
Android.Support.Wearable.Complications.IProviderInfoService.ApiVersion.get -> int
Android.Support.Wearable.Complications.IProviderInfoService.GetProviderInfos(Android.Content.ComponentName? p0, int[]? p1) -> Android.Support.Wearable.Complications.ComplicationProviderInfo![]?
Android.Support.Wearable.Complications.IProviderInfoService.RequestPreviewComplicationData(Android.Content.ComponentName? p0, int p1, Android.Support.Wearable.Complications.IPreviewComplicationDataCallback? p2) -> bool
Android.Support.Wearable.Complications.ITimeDependentText
Android.Support.Wearable.Complications.ITimeDependentText.GetNextChangeTime(long p0) -> long
Android.Support.Wearable.Complications.ITimeDependentText.GetTextAtFormatted(Android.Content.Res.Resources! p0, long p1) -> Java.Lang.ICharSequence!
Android.Support.Wearable.Complications.ITimeDependentText.ReturnsSameText(long p0, long p1) -> bool
Android.Support.Wearable.Complications.ITimeDependentTextExtensions
Android.Support.Wearable.Complications.PreviewComplicationDataCallback
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackConsts
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.InterfaceConsts
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.PreviewComplicationDataCallbackDefault() -> void
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.PreviewComplicationDataCallbackDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.InterfaceConsts
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.PreviewComplicationDataCallbackStub() -> void
Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.PreviewComplicationDataCallbackStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel
Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel.PreviewComplicationDataCallback_Parcel() -> void
Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel.PreviewComplicationDataCallback_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ProviderInfoService
Android.Support.Wearable.Complications.ProviderInfoServiceConsts
Android.Support.Wearable.Complications.ProviderInfoServiceDefault
Android.Support.Wearable.Complications.ProviderInfoServiceDefault.InterfaceConsts
Android.Support.Wearable.Complications.ProviderInfoServiceDefault.ProviderInfoServiceDefault() -> void
Android.Support.Wearable.Complications.ProviderInfoServiceDefault.ProviderInfoServiceDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ProviderInfoServiceStub
Android.Support.Wearable.Complications.ProviderInfoServiceStub.InterfaceConsts
Android.Support.Wearable.Complications.ProviderInfoServiceStub.ProviderInfoServiceStub() -> void
Android.Support.Wearable.Complications.ProviderInfoServiceStub.ProviderInfoServiceStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.ProviderInfoService_Parcel
Android.Support.Wearable.Complications.ProviderInfoService_Parcel.ProviderInfoService_Parcel() -> void
Android.Support.Wearable.Complications.ProviderInfoService_Parcel.ProviderInfoService_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Support.Wearable.Complications.TimeDifferenceText
Android.Support.Wearable.Complications.TimeDifferenceText.DescribeContents() -> int
Android.Support.Wearable.Complications.TimeDifferenceText.GetNextChangeTime(long fromTime) -> long
Android.Support.Wearable.Complications.TimeDifferenceText.GetTextAt(Android.Content.Res.Resources! resources, long dateTimeMillis) -> string!
Android.Support.Wearable.Complications.TimeDifferenceText.GetTextAtFormatted(Android.Content.Res.Resources! resources, long dateTimeMillis) -> Java.Lang.ICharSequence!
Android.Support.Wearable.Complications.TimeDifferenceText.MinimumUnit.get -> Java.Util.Concurrent.TimeUnit?
Android.Support.Wearable.Complications.TimeDifferenceText.Precision.get -> long
Android.Support.Wearable.Complications.TimeDifferenceText.ReturnsSameText(long firstDateTimeMillis, long secondDateTimeMillis) -> bool
Android.Support.Wearable.Complications.TimeDifferenceText.TimeDifferenceText(long referencePeriodStart, long referencePeriodEnd, int style, bool showNowText, Java.Util.Concurrent.TimeUnit? minimumUnit) -> void
Android.Support.Wearable.Complications.TimeDifferenceText.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
Android.Support.Wearable.Complications.TimeFormatText
Android.Support.Wearable.Complications.TimeFormatText.DescribeContents() -> int
Android.Support.Wearable.Complications.TimeFormatText.FormatString.get -> string!
Android.Support.Wearable.Complications.TimeFormatText.GetNextChangeTime(long fromTime) -> long
Android.Support.Wearable.Complications.TimeFormatText.GetTextAt(Android.Content.Res.Resources! resources, long dateTimeMillis) -> string!
Android.Support.Wearable.Complications.TimeFormatText.GetTextAtFormatted(Android.Content.Res.Resources! resources, long dateTimeMillis) -> Java.Lang.ICharSequence!
Android.Support.Wearable.Complications.TimeFormatText.Precision.get -> long
Android.Support.Wearable.Complications.TimeFormatText.ReturnsSameText(long firstDateTimeMillis, long secondDateTimeMillis) -> bool
Android.Support.Wearable.Complications.TimeFormatText.Style.get -> int
Android.Support.Wearable.Complications.TimeFormatText.TimeFormatText(string! format, int style, Java.Util.TimeZone? timeZone) -> void
Android.Support.Wearable.Complications.TimeFormatText.TimeZone.get -> Java.Util.TimeZone?
Android.Support.Wearable.Complications.TimeFormatText.WriteToParcel(Android.OS.Parcel! dest, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Wear.WatchFace.Complications.Data.ColorRamp
AndroidX.Wear.WatchFace.Complications.Data.ColorRamp.ColorRamp(int[]! colors, bool interpolated) -> void
AndroidX.Wear.WatchFace.Complications.Data.ColorRamp.GetColors() -> int[]!
AndroidX.Wear.WatchFace.Complications.Data.ColorRamp.IsInterpolated.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.AsWireComplicationData() -> Android.Support.Wearable.Complications.ComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.BaseBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.SetDataSource(Android.Content.ComponentName? dataSource) -> Java.Lang.Object!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.SetDisplayPolicy(int displayPolicy) -> Java.Lang.Object!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.SetDynamicValueInvalidationFallback(Java.Lang.Object? fallback) -> Java.Lang.Object!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.SetPersistencePolicy(int persistencePolicy) -> Java.Lang.Object!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.ComplicationData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.DataSource.get -> Android.Content.ComponentName?
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.DisplayPolicy.get -> int
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.DynamicValueInvalidationFallback.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationData?
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.EqualsUnevaluated(AndroidX.Wear.WatchFace.Complications.Data.ComplicationData! other) -> bool
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.PersistencePolicy.get -> int
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.TapAction.get -> Android.App.PendingIntent?
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.TapActionLostDueToSerialization.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.TapActionLostDueToSerialization.set -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.Type.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.ValidTimeRange.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.Companion
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.Companion.INVALID_DATA.get -> Android.Support.Wearable.Complications.ComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.ComplicationDataEvaluator() -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.ComplicationDataEvaluator(AndroidX.Wear.ProtoLayout.Expression.Pipeline.StateStore? stateStore, AndroidX.Wear.ProtoLayout.Expression.Pipeline.IPlatformTimeUpdateNotifier? platformTimeUpdateNotifier, System.Collections.Generic.IDictionary<AndroidX.Wear.ProtoLayout.Expression.Pipeline.IPlatformDataProvider!, System.Collections.Generic.ICollection<AndroidX.Wear.ProtoLayout.Expression.PlatformDataKey!>!>! platformDataProviders, bool keepDynamicValues) -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.ComplicationDataEvaluator(AndroidX.Wear.ProtoLayout.Expression.Pipeline.StateStore? stateStore, AndroidX.Wear.ProtoLayout.Expression.Pipeline.IPlatformTimeUpdateNotifier? platformTimeUpdateNotifier, System.Collections.Generic.IDictionary<AndroidX.Wear.ProtoLayout.Expression.Pipeline.IPlatformDataProvider!, System.Collections.Generic.ICollection<AndroidX.Wear.ProtoLayout.Expression.PlatformDataKey!>!>! platformDataProviders, bool keepDynamicValues, Java.Util.Functions.ISupplier? clock) -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.Evaluate(Android.Support.Wearable.Complications.ComplicationData! unevaluatedData) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluatorKt
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicyAttribute
AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicyAttribute.ComplicationDisplayPolicyAttribute() -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationExperimentalAttribute
AndroidX.Wear.WatchFace.Complications.Data.ComplicationExperimentalAttribute.ComplicationExperimentalAttribute() -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies
AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicyAttribute
AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicyAttribute.ComplicationPersistencePolicyAttribute() -> void
AndroidX.Wear.WatchFace.Complications.Data.ComplicationText
AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion
AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextConsts
AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextDefaultImpls
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion.FromWireType(int wireType) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion.FromWireTypeList(int[]! types) -> System.Collections.Generic.IList<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!>!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion.FromWireTypes(int[]! types) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType![]!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion.ToWireTypes(System.Collections.Generic.ICollection<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!>! types) -> int[]!
AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.ToWireComplicationType() -> int
AndroidX.Wear.WatchFace.Complications.Data.CountDownTimeReference
AndroidX.Wear.WatchFace.Complications.Data.CountDownTimeReference.CountDownTimeReference(Java.Time.Instant! instant) -> void
AndroidX.Wear.WatchFace.Complications.Data.CountDownTimeReference.Instant.get -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.CountUpTimeReference
AndroidX.Wear.WatchFace.Complications.Data.CountUpTimeReference.CountUpTimeReference(Java.Time.Instant! instant) -> void
AndroidX.Wear.WatchFace.Complications.Data.CountUpTimeReference.Instant.get -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.DataKt
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.DefaultComplicationDataSourcePolicyWireFormat(System.Collections.Generic.IList<Android.Content.ComponentName!>! defaultDataSourcesToTry, int fallbackSystemDataSource, int defaultDataSourceType, int primaryDataSourceDefaultType, int secondaryDataSourceDefaultType) -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.DescribeContents() -> int
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MDefaultDataSourcesToTry.get -> System.Collections.IList!
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MDefaultDataSourcesToTry.set -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MDefaultType.get -> int
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MDefaultType.set -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MFallbackSystemDataSource.get -> int
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MFallbackSystemDataSource.set -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MPrimaryDataSourceDefaultType.get -> int
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MPrimaryDataSourceDefaultType.set -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MSecondaryDataSourceDefaultType.get -> int
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.MSecondaryDataSourceDefaultType.set -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.WriteToParcel(Android.OS.Parcel! parcel, Android.OS.ParcelableWriteFlags flags) -> void
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormatParcelizer
AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormatParcelizer.DefaultComplicationDataSourcePolicyWireFormatParcelizer() -> void
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.DynamicComplicationText(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString! dynamicValue, Java.Lang.ICharSequence! fallbackValue) -> void
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.DynamicComplicationText(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString! dynamicValue, string! fallbackValue) -> void
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.DynamicValue.get -> AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicString!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.FallbackValue.get -> string?
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.FallbackValueFormatted.get -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.GetNextChangeTime(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.GetTextAt(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> string!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.InterfaceConsts
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.IsAlwaysEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.ReturnsSameText(Java.Time.Instant! firstInstant, Java.Time.Instant! secondInstant) -> bool
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.ToWireComplicationText() -> Android.Support.Wearable.Complications.ComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData
AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData.EmptyComplicationData() -> void
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.Builder(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat! dynamicValue, float fallbackValue, float targetValue, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.Builder(float value, AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat? dynamicValue, float targetValue, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.Builder(float value, float targetValue, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetColorRamp(AndroidX.Wear.WatchFace.Complications.Data.ColorRamp? colorRamp) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? monochromaticImage) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetText(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? text) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.ColorRamp.get -> AndroidX.Wear.WatchFace.Complications.Data.ColorRamp?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.DynamicValue.get -> AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.TargetValue.get -> float
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Value.get -> float
AndroidX.Wear.WatchFace.Complications.Data.IComplicationDisplayPolicy
AndroidX.Wear.WatchFace.Complications.Data.IComplicationExperimental
AndroidX.Wear.WatchFace.Complications.Data.IComplicationPersistencePolicy
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.GetNextChangeTime(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.IsAlwaysEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.ReturnsSameText(Java.Time.Instant! firstInstant, Java.Time.Instant! secondInstant) -> bool
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationText.ToWireComplicationText() -> Android.Support.Wearable.Complications.ComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.IComplicationTextExtensions
AndroidX.Wear.WatchFace.Complications.Data.ImageKt
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! text, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? icon) -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.AmbientImage.get -> Android.Graphics.Drawables.Icon?
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder.Builder(Android.Graphics.Drawables.Icon! image) -> void
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder.SetAmbientImage(Android.Graphics.Drawables.Icon? ambientImage) -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Companion
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Image.get -> Android.Graphics.Drawables.Icon!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage! monochromaticImage, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage!
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.NoDataComplicationData() -> void
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.NoDataComplicationData(AndroidX.Wear.WatchFace.Complications.Data.ComplicationData! placeholder) -> void
AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationData?
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.Builder() -> void
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? monochromaticImage) -> AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.SetText(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? text) -> AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData
AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData.NotConfiguredComplicationData() -> void
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder.Builder(Android.Graphics.Drawables.Icon! photoImage, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.PhotoImage.get -> Android.Graphics.Drawables.Icon!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.Builder
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.Builder.Builder(Java.Lang.ICharSequence! text) -> void
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.Builder.Builder(string! text) -> void
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.GetNextChangeTime(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.GetTextAt(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> string!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.InterfaceConsts
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.IsAlwaysEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.ReturnsSameText(Java.Time.Instant! firstInstant, Java.Time.Instant! secondInstant) -> bool
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.ToWireComplicationText() -> Android.Support.Wearable.Complications.ComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.Builder(AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat! dynamicValue, float fallbackValue, float min, float max, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.Builder(float value, AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat? dynamicValue, float min, float max, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.Builder(float value, float min, float max, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetColorRamp(AndroidX.Wear.WatchFace.Complications.Data.ColorRamp? colorRamp) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? monochromaticImage) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetText(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? text) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.SetValueType(int valueType) -> AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.ColorRamp.get -> AndroidX.Wear.WatchFace.Complications.Data.ColorRamp?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.DynamicValue.get -> AndroidX.Wear.ProtoLayout.Expression.DynamicBuilders.IDynamicFloat?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.IRangedValueType
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Max.get -> float
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Min.get -> float
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Value.get -> float
AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.ValueType.get -> int
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! text, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? monochromaticImage) -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.SmallImage
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.AmbientImage.get -> Android.Graphics.Drawables.Icon?
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage!
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder.Builder(Android.Graphics.Drawables.Icon! image, AndroidX.Wear.WatchFace.Complications.Data.SmallImageType! type) -> void
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder.SetAmbientImage(Android.Graphics.Drawables.Icon? ambientImage) -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder!
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Companion
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Image.get -> Android.Graphics.Drawables.Icon!
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Type.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageType!
AndroidX.Wear.WatchFace.Complications.Data.SmallImage.WhenMappings
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.SmallImage! smallImage, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage!
AndroidX.Wear.WatchFace.Complications.Data.SmallImageType
AndroidX.Wear.WatchFace.Complications.Data.TextKt
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle! style, AndroidX.Wear.WatchFace.Complications.Data.CountDownTimeReference! countDownTimeReference) -> void
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.Builder(AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle! style, AndroidX.Wear.WatchFace.Complications.Data.CountUpTimeReference! countUpTimeReference) -> void
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.SetDisplayAsNow(bool displayAsNow) -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.SetMinimumTimeUnit(Java.Util.Concurrent.TimeUnit? minimumUnit) -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.SetText(Java.Lang.ICharSequence? text) -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.SetText(string? text) -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.GetNextChangeTime(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.GetTextAt(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> string!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.InterfaceConsts
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.IsAlwaysEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.MinimumTimeUnit.get -> Java.Util.Concurrent.TimeUnit?
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.ReturnsSameText(Java.Time.Instant! firstInstant, Java.Time.Instant! secondInstant) -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.ToWireComplicationText() -> Android.Support.Wearable.Complications.ComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.Builder(string! format) -> void
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.SetStyle(AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle! style) -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.SetText(Java.Lang.ICharSequence! text) -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.SetText(string! text) -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.SetTimeZone(Android.Icu.Util.TimeZone! timeZone) -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.GetNextChangeTime(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.GetTextAt(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> string!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.GetTextAtFormatted(Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> Java.Lang.ICharSequence!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.InterfaceConsts
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.IsAlwaysEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.IsPlaceholder.get -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.ReturnsSameText(Java.Time.Instant! firstInstant, Java.Time.Instant! secondInstant) -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.TimeDependentText.get -> Android.Support.Wearable.Complications.ITimeDependentText!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.ToWireComplicationText() -> Android.Support.Wearable.Complications.ComplicationText!
AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle
AndroidX.Wear.WatchFace.Complications.Data.TimeRange
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Companion
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Companion.After(Java.Time.Instant! startInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Companion.Before(Java.Time.Instant! endInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Companion.Between(Java.Time.Instant! startInstant, Java.Time.Instant! endInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Contains(Java.Time.Instant! dateTimeMillis) -> bool
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.EndDateTimeMillis.get -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.TimeRange.StartDateTimeMillis.get -> Java.Time.Instant!
AndroidX.Wear.WatchFace.Complications.Data.TypeKt
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.Build() -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.Builder(System.Collections.Generic.IList<AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element!>! elements, AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! contentDescription) -> void
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetElementBackgroundColor(int elementBackgroundColor) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetMonochromaticImage(AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage? monochromaticImage) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetSmallImage(AndroidX.Wear.WatchFace.Complications.Data.SmallImage? smallImage) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetTapAction(Android.App.PendingIntent? tapAction) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetText(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? text) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetTitle(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText? title) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.SetValidTimeRange(AndroidX.Wear.WatchFace.Complications.Data.TimeRange? validTimeRange) -> AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Companion
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Companion.MaxElements.get -> int
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.ContentDescription.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element.Color.get -> int
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element.Element(float weight, int color) -> void
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element.Weight.get -> float
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.ElementBackgroundColor.get -> int
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Elements.get -> System.Collections.Generic.IList<AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element!>!
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage?
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage?
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Text.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Title.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText?
AndroidX.Wear.WatchFace.Utility.AidlMethodKt
AndroidX.Wear.WatchFace.Utility.AsyncTraceEvent
AndroidX.Wear.WatchFace.Utility.AsyncTraceEvent.AsyncTraceEvent(string! traceName) -> void
AndroidX.Wear.WatchFace.Utility.AsyncTraceEvent.Close() -> void
AndroidX.Wear.WatchFace.Utility.IconKtKt
AndroidX.Wear.WatchFace.Utility.TraceEvent
AndroidX.Wear.WatchFace.Utility.TraceEvent.Close() -> void
AndroidX.Wear.WatchFace.Utility.TraceEvent.TraceEvent(string! traceName) -> void
AndroidX.Wear.WatchFace.Utility.TraceEventKt
abstract Android.Support.Wearable.Complications.ComplicationManagerStub.UpdateComplicationData(int p0, Android.Support.Wearable.Complications.ComplicationData? p1) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.ApiVersion.get -> int
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.GetComplicationPreviewData(int p0) -> Android.Support.Wearable.Complications.ComplicationData?
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnComplicationActivated(int p0, int p1, Android.OS.IBinder? p2) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnComplicationDeactivated(int p0) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnStartSynchronousComplicationRequests(int p0) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnStopSynchronousComplicationRequests(int p0) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnSynchronousComplicationRequest(int p0, int p1) -> Android.Support.Wearable.Complications.ComplicationData?
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnSynchronousComplicationRequest2(int p0, int p1, Android.OS.Bundle? p2) -> Android.Support.Wearable.Complications.ComplicationData?
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnUpdate(int p0, int p1, Android.OS.IBinder? p2) -> void
abstract Android.Support.Wearable.Complications.ComplicationProviderStub.OnUpdate2(int p0, int p1, Android.OS.IBinder? p2, Android.OS.Bundle? p3) -> void
abstract Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.UpdateComplicationData(Android.Support.Wearable.Complications.ComplicationData? p0) -> void
abstract Android.Support.Wearable.Complications.ProviderInfoServiceStub.ApiVersion.get -> int
abstract Android.Support.Wearable.Complications.ProviderInfoServiceStub.GetProviderInfos(Android.Content.ComponentName? p0, int[]? p1) -> Android.Support.Wearable.Complications.ComplicationProviderInfo![]?
abstract Android.Support.Wearable.Complications.ProviderInfoServiceStub.RequestPreviewComplicationData(Android.Content.ComponentName? p0, int p1, Android.Support.Wearable.Complications.IPreviewComplicationDataCallback? p2) -> bool
abstract AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
const Android.Support.Wearable.Complications.ComplicationData.ExpTypeList = -12 -> int
const Android.Support.Wearable.Complications.ComplicationData.ExpTypeProtoLayout = -11 -> int
const Android.Support.Wearable.Complications.ComplicationData.ImageStyleIcon = 2 -> int
const Android.Support.Wearable.Complications.ComplicationData.ImageStylePhoto = 1 -> int
const Android.Support.Wearable.Complications.ComplicationData.PlaceholderString = "__placeholder__" -> string!
const Android.Support.Wearable.Complications.ComplicationData.TypeEmpty = 2 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeGoalProgress = 13 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeIcon = 6 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeLargeImage = 8 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeLongText = 4 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeNoData = 10 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeNoPermission = 9 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeNotConfigured = 1 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeRangedValue = 5 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeShortText = 3 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeSmallImage = 7 -> int
const Android.Support.Wearable.Complications.ComplicationData.TypeWeightedElements = 14 -> int
const Android.Support.Wearable.Complications.ComplicationManager.Descriptor = "android.support.wearable.complications.IComplicationManager" -> string!
const Android.Support.Wearable.Complications.ComplicationManagerDefault.InterfaceConsts.Descriptor = "android.support.wearable.complications.IComplicationManager" -> string!
const Android.Support.Wearable.Complications.ComplicationManagerStub.InterfaceConsts.Descriptor = "android.support.wearable.complications.IComplicationManager" -> string!
const Android.Support.Wearable.Complications.ComplicationProvider.BundleKeyIsSafeForWatchface = "IsSafeForWatchFace" -> string!
const Android.Support.Wearable.Complications.ComplicationProvider.Descriptor = "android.support.wearable.complications.IComplicationProvider" -> string!
const Android.Support.Wearable.Complications.ComplicationProviderDefault.InterfaceConsts.BundleKeyIsSafeForWatchface = "IsSafeForWatchFace" -> string!
const Android.Support.Wearable.Complications.ComplicationProviderDefault.InterfaceConsts.Descriptor = "android.support.wearable.complications.IComplicationProvider" -> string!
const Android.Support.Wearable.Complications.ComplicationProviderStub.InterfaceConsts.BundleKeyIsSafeForWatchface = "IsSafeForWatchFace" -> string!
const Android.Support.Wearable.Complications.ComplicationProviderStub.InterfaceConsts.Descriptor = "android.support.wearable.complications.IComplicationProvider" -> string!
const Android.Support.Wearable.Complications.ComplicationText.DifferenceStyleShortDualUnit = 3 -> int
const Android.Support.Wearable.Complications.ComplicationText.DifferenceStyleShortSingleUnit = 2 -> int
const Android.Support.Wearable.Complications.ComplicationText.DifferenceStyleShortWordsSingleUnit = 5 -> int
const Android.Support.Wearable.Complications.ComplicationText.DifferenceStyleStopwatch = 1 -> int
const Android.Support.Wearable.Complications.ComplicationText.DifferenceStyleWordsSingleUnit = 4 -> int
const Android.Support.Wearable.Complications.ComplicationText.FormatStyleDefault = 1 -> int
const Android.Support.Wearable.Complications.ComplicationText.FormatStyleLowerCase = 3 -> int
const Android.Support.Wearable.Complications.ComplicationText.FormatStyleUpperCase = 2 -> int
const Android.Support.Wearable.Complications.PreviewComplicationDataCallback.Descriptor = "android.support.wearable.complications.IPreviewComplicationDataCallback" -> string!
const Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.InterfaceConsts.Descriptor = "android.support.wearable.complications.IPreviewComplicationDataCallback" -> string!
const Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.InterfaceConsts.Descriptor = "android.support.wearable.complications.IPreviewComplicationDataCallback" -> string!
const Android.Support.Wearable.Complications.ProviderInfoService.Descriptor = "android.support.wearable.complications.IProviderInfoService" -> string!
const Android.Support.Wearable.Complications.ProviderInfoServiceDefault.InterfaceConsts.Descriptor = "android.support.wearable.complications.IProviderInfoService" -> string!
const Android.Support.Wearable.Complications.ProviderInfoServiceStub.InterfaceConsts.Descriptor = "android.support.wearable.complications.IProviderInfoService" -> string!
const AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies.AlwaysDisplay = 0 -> int
const AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies.DoNotShowWhenDeviceLocked = 1 -> int
const AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies.CachingAllowed = 0 -> int
const AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies.DoNotPersist = 1 -> int
const AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.TypePercentage = 2 -> int
const AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.TypeRating = 1 -> int
const AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.TypeUndefined = 0 -> int
override Android.Support.Wearable.Complications.ComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationDataKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationManagerDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationManagerDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationManagerDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationManagerStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationManagerStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationManagerStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationManager_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationManager_Parcel.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationManager_Parcel.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationProviderDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationProviderDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationProviderDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationProviderInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationProviderStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationProviderStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationProviderStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationProvider_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationProvider_Parcel.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ComplicationProvider_Parcel.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ComplicationText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationText.TimeDifferenceBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationText.TimeFormatBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationTextTemplate.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ComplicationTextTemplate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.PreviewComplicationDataCallback_Parcel.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ProviderInfoServiceDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ProviderInfoServiceDefault.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ProviderInfoServiceDefault.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ProviderInfoServiceStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ProviderInfoServiceStub.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ProviderInfoServiceStub.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.ProviderInfoService_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.ProviderInfoService_Parcel.ThresholdClass.get -> nint
override Android.Support.Wearable.Complications.ProviderInfoService_Parcel.ThresholdType.get -> System.Type!
override Android.Support.Wearable.Complications.TimeDifferenceText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Support.Wearable.Complications.TimeFormatText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ColorRamp.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.ThresholdClass.get -> nint
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.BaseBuilder.ThresholdType.get -> System.Type!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.ThresholdClass.get -> nint
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.ThresholdType.get -> System.Type!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationDataEvaluatorKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextDefaultImpls.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.CountDownTimeReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.CountUpTimeReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.DataKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormatParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.EmptyComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ImageKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.LongTextComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImageComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.NoDataComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.NoPermissionComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.NotConfiguredComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImage.WhenMappings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.SmallImageComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.SmallImageType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TextKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TimeRange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.TypeKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Element.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.GetContentDescription(Android.Content.Context! context) -> Android.Support.Wearable.Complications.ITimeDependentText?
override AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Utility.AidlMethodKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Utility.AsyncTraceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Utility.IconKtKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Utility.TraceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Utility.TraceEventKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Android.Support.Wearable.Complications.ComplicationData.Creator.get -> Android.OS.IParcelableCreator!
static Android.Support.Wearable.Complications.ComplicationData.MaybeRedact(Java.Lang.ICharSequence? unredacted) -> string!
static Android.Support.Wearable.Complications.ComplicationData.MaybeRedact(string? unredacted) -> string!
static Android.Support.Wearable.Complications.ComplicationData.ShouldRedact() -> bool
static Android.Support.Wearable.Complications.ComplicationManagerStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Complications.IComplicationManager?
static Android.Support.Wearable.Complications.ComplicationProviderInfo.Creator.get -> Android.OS.IParcelableCreator!
static Android.Support.Wearable.Complications.ComplicationProviderStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Complications.IComplicationProvider?
static Android.Support.Wearable.Complications.ComplicationText.Creator.get -> Android.OS.IParcelableCreator!
static Android.Support.Wearable.Complications.ComplicationText.PlainText(Java.Lang.ICharSequence! text) -> Android.Support.Wearable.Complications.ComplicationText!
static Android.Support.Wearable.Complications.ComplicationText.PlainText(string! text) -> Android.Support.Wearable.Complications.ComplicationText!
static Android.Support.Wearable.Complications.ComplicationTextTemplate.Creator.get -> Android.OS.IParcelableCreator?
static Android.Support.Wearable.Complications.ITimeDependentTextExtensions.GetTextAt(this Android.Support.Wearable.Complications.ITimeDependentText! self, Android.Content.Res.Resources! p0, long p1) -> string!
static Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Complications.IPreviewComplicationDataCallback?
static Android.Support.Wearable.Complications.ProviderInfoServiceStub.AsInterface(Android.OS.IBinder? obj) -> Android.Support.Wearable.Complications.IProviderInfoService?
static Android.Support.Wearable.Complications.TimeDifferenceText.Creator.get -> Android.OS.IParcelableCreator?
static Android.Support.Wearable.Complications.TimeFormatText.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies.Instance.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationDisplayPolicies!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies.Instance.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationPersistencePolicies!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationText.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationText.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationText.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextDefaultImpls.IsPlaceholder(AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! _this) -> bool
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.FromWireType(int wireType) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.FromWireTypeList(int[]! types) -> System.Collections.Generic.IList<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!>!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.FromWireTypes(int[]! types) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType![]!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.GoalProgress.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.LongText.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.MonochromaticImage.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.NoData.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.NoPermission.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.NotConfigured.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.PhotoImage.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.RangedValue.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.ShortText.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.SmallImage.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.ToWireTypes(System.Collections.Generic.ICollection<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!>! types) -> int[]!
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.ValueOf(string? value) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.Values() -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType![]?
static AndroidX.Wear.WatchFace.Complications.Data.ComplicationType.WeightedElements.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
static AndroidX.Wear.WatchFace.Complications.Data.DataKt.ToApiComplicationData(Android.Support.Wearable.Complications.ComplicationData! obj) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationData!
static AndroidX.Wear.WatchFace.Complications.Data.DataKt.ToTypedApiComplicationData(Android.Support.Wearable.Complications.ComplicationData! obj) -> Java.Lang.Object!
static AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormatParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat?
static AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormatParcelizer.Write(AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.InterfaceConsts.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
static AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.InterfaceConsts.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.DynamicComplicationText.InterfaceConsts.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.GoalProgressComplicationData.Placeholder.get -> float
static AndroidX.Wear.WatchFace.Complications.Data.IComplicationTextExtensions.GetTextAt(this AndroidX.Wear.WatchFace.Complications.Data.IComplicationText! self, Android.Content.Res.Resources! resources, Java.Time.Instant! instant) -> string!
static AndroidX.Wear.WatchFace.Complications.Data.ImageKt.IsPlaceholder(Android.Graphics.Drawables.Icon! obj) -> bool
static AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.MonochromaticImage!
static AndroidX.Wear.WatchFace.Complications.Data.PhotoImageComplicationData.Placeholder.get -> Android.Graphics.Drawables.Icon!
static AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.InterfaceConsts.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
static AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.InterfaceConsts.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.PlainComplicationText.InterfaceConsts.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.RangedValueComplicationData.Placeholder.get -> float
static AndroidX.Wear.WatchFace.Complications.Data.ShortTextComplicationData.MaxTextLength.get -> int
static AndroidX.Wear.WatchFace.Complications.Data.SmallImage.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImage!
static AndroidX.Wear.WatchFace.Complications.Data.SmallImageType.Icon.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageType?
static AndroidX.Wear.WatchFace.Complications.Data.SmallImageType.Photo.get -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageType?
static AndroidX.Wear.WatchFace.Complications.Data.SmallImageType.ValueOf(string? value) -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageType?
static AndroidX.Wear.WatchFace.Complications.Data.SmallImageType.Values() -> AndroidX.Wear.WatchFace.Complications.Data.SmallImageType![]?
static AndroidX.Wear.WatchFace.Complications.Data.TextKt.ToApiComplicationText(Android.Support.Wearable.Complications.ITimeDependentText! obj) -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.InterfaceConsts.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.InterfaceConsts.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceComplicationText.InterfaceConsts.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.ShortDualUnit.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.ShortSingleUnit.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.ShortWordsSingleUnit.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.Stopwatch.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.ValueOf(string? value) -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.Values() -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle![]?
static AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle.WordsSingleUnit.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeDifferenceStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.InterfaceConsts.Companion.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationTextCompanion!
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.InterfaceConsts.Empty.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatComplicationText.InterfaceConsts.Placeholder.get -> AndroidX.Wear.WatchFace.Complications.Data.IComplicationText!
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.Default.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.LowerCase.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.UpperCase.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.ValueOf(string? value) -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle?
static AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle.Values() -> AndroidX.Wear.WatchFace.Complications.Data.TimeFormatStyle![]?
static AndroidX.Wear.WatchFace.Complications.Data.TimeRange.After(Java.Time.Instant! startInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
static AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Always.get -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
static AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Before(Java.Time.Instant! endInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
static AndroidX.Wear.WatchFace.Complications.Data.TimeRange.Between(Java.Time.Instant! startInstant, Java.Time.Instant! endInstant) -> AndroidX.Wear.WatchFace.Complications.Data.TimeRange!
static AndroidX.Wear.WatchFace.Complications.Data.TypeKt.ToApiComplicationTypes(int[]! obj) -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType![]!
static AndroidX.Wear.WatchFace.Complications.Data.TypeKt.ToWireTypes(System.Collections.Generic.ICollection<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!>! obj) -> int[]!
static AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.MaxElements.get -> int
static AndroidX.Wear.WatchFace.Complications.Data.WeightedElementsComplicationData.Placeholder.get -> System.Collections.IList!
static AndroidX.Wear.WatchFace.Utility.AidlMethodKt.AidlMethod(string! classTag, string! methodName, Kotlin.Jvm.Functions.IFunction0! block) -> Java.Lang.Object?
static AndroidX.Wear.WatchFace.Utility.IconKtKt.IconEquals(Android.Graphics.Drawables.Icon? obj, Android.Graphics.Drawables.Icon? other) -> bool
static AndroidX.Wear.WatchFace.Utility.IconKtKt.IconHashCode(Android.Graphics.Drawables.Icon! obj) -> int
static AndroidX.Wear.WatchFace.Utility.TraceEventKt.LaunchWithTracing(Xamarin.KotlinX.Coroutines.ICoroutineScope! obj, string! traceEventName, Kotlin.Jvm.Functions.IFunction2! block) -> Xamarin.KotlinX.Coroutines.IJob!
virtual Android.Support.Wearable.Complications.ComplicationManagerDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ComplicationManagerDefault.UpdateComplicationData(int complicationSlotId, Android.Support.Wearable.Complications.ComplicationData? data) -> void
virtual Android.Support.Wearable.Complications.ComplicationManagerStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ComplicationManagerStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.ApiVersion.get -> int
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.GetComplicationPreviewData(int type) -> Android.Support.Wearable.Complications.ComplicationData?
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnComplicationActivated(int complicationInstanceId, int type, Android.OS.IBinder? manager) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnComplicationDeactivated(int complicationInstanceId) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnStartSynchronousComplicationRequests(int complicationInstanceId) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnStopSynchronousComplicationRequests(int complicationInstanceId) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnSynchronousComplicationRequest(int complicationInstanceId, int type) -> Android.Support.Wearable.Complications.ComplicationData?
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnSynchronousComplicationRequest2(int complicationInstanceId, int type, Android.OS.Bundle? bundle) -> Android.Support.Wearable.Complications.ComplicationData?
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnUpdate(int complicationInstanceId, int type, Android.OS.IBinder? manager) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderDefault.OnUpdate2(int complicationInstanceId, int type, Android.OS.IBinder? manager, Android.OS.Bundle? bundle) -> void
virtual Android.Support.Wearable.Complications.ComplicationProviderStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ComplicationProviderStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.PreviewComplicationDataCallbackDefault.UpdateComplicationData(Android.Support.Wearable.Complications.ComplicationData? data) -> void
virtual Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.PreviewComplicationDataCallbackStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual Android.Support.Wearable.Complications.ProviderInfoServiceDefault.ApiVersion.get -> int
virtual Android.Support.Wearable.Complications.ProviderInfoServiceDefault.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ProviderInfoServiceDefault.GetProviderInfos(Android.Content.ComponentName? watchFaceComponent, int[]? ids) -> Android.Support.Wearable.Complications.ComplicationProviderInfo![]?
virtual Android.Support.Wearable.Complications.ProviderInfoServiceDefault.RequestPreviewComplicationData(Android.Content.ComponentName? providerComponent, int complicationType, Android.Support.Wearable.Complications.IPreviewComplicationDataCallback? previewComplicationDataCallback) -> bool
virtual Android.Support.Wearable.Complications.ProviderInfoServiceStub.AsBinder() -> Android.OS.IBinder?
virtual Android.Support.Wearable.Complications.ProviderInfoServiceStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.GetNextChangeInstant(Java.Time.Instant! afterInstant) -> Java.Time.Instant!
virtual AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.HasPlaceholderFields.get -> bool
virtual AndroidX.Wear.WatchFace.Complications.Data.ComplicationData.Validate() -> void
