#nullable enable
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.AppName.get -> string!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.ComplicationDataSourceInfo(string! appName, string! name, Android.Graphics.Drawables.Icon! icon, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! type, Android.Content.ComponentName? componentName) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.ComponentName.get -> Android.Content.ComponentName?
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.FallbackPreviewData.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationData!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.Icon.get -> Android.Graphics.Drawables.Icon!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.Name.get -> string!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.ToWireComplicationProviderInfo() -> Android.Support.Wearable.Complications.ComplicationProviderInfo!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.Type.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Close() -> void
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Closed.get -> bool
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.ComplicationDataSourceInfoRetriever(Android.Content.Context! context) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.ComplicationDataSourceInfoRetriever(Android.Support.Wearable.Complications.IProviderInfoService! service) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Result
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Result.Info.get -> AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo?
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Result.SlotId.get -> int
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.RetrieveComplicationDataSourceInfo(Android.Content.ComponentName! watchFaceComponent, int[]! watchFaceComplicationIds, Kotlin.Coroutines.IContinuation! p2) -> Java.Lang.Object?
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.RetrievePreviewComplicationData(Android.Content.ComponentName! complicationDataSourceComponent, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! complicationType, Kotlin.Coroutines.IContinuation! p2) -> Java.Lang.Object?
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.ServiceDisconnectedException
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.ServiceDisconnectedException.ServiceDisconnectedException() -> void
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetrieverKt
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants
AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants.ComplicationDataSourceUpdateRequesterConstants(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.Companion
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.Companion.CreateFromPartialMap(System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>! partialPerComplicationTypeBounds, System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>! partialPerComplicationTypeMargins) -> AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds!
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.Companion.Inflate(Android.Content.Res.Resources! resources, System.Xml.XmlReader! parser, float complicationScaleX, float complicationScaleY) -> AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds?
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.ComplicationSlotBounds(Android.Graphics.RectF! bounds) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.ComplicationSlotBounds(Android.Graphics.RectF! bounds, Android.Graphics.RectF! margins) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.ComplicationSlotBounds(System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>! perComplicationTypeBounds) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.ComplicationSlotBounds(System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>! perComplicationTypeBounds, System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>! perComplicationTypeMargins) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.PerComplicationTypeBounds.get -> System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>!
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.PerComplicationTypeMargins.get -> System.Collections.Generic.IDictionary<AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!, Android.Graphics.RectF!>!
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.Write(Java.IO.DataOutputStream! dos) -> void
AndroidX.Wear.WatchFace.Complications.ComplicationSlotBoundsKt
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.Companion
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.Companion.Inflate(Android.Content.Res.Resources! resources, System.Xml.XmlReader! parser, string! nodeName) -> AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy!
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DataSourcesAsList() -> System.Collections.Generic.IList<Android.Content.ComponentName!>!
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy() -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(Android.Content.ComponentName! dataSource, int systemDataSourceFallback) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(Android.Content.ComponentName! primaryDataSource, Android.Content.ComponentName! secondaryDataSource, int systemDataSourceFallback) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(Android.Content.ComponentName! primaryDataSource, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! primaryDataSourceDefaultType, Android.Content.ComponentName! secondaryDataSource, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! secondaryDataSourceDefaultType, int systemDataSourceFallback, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! systemDataSourceFallbackDefaultType) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(Android.Content.ComponentName! primaryDataSource, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! primaryDataSourceDefaultType, int systemDataSourceFallback, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! systemDataSourceFallbackDefaultType) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat! wireFormat) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(System.Collections.Generic.IList<Android.Content.ComponentName!>! dataSources, int systemDataSourceFallback, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! primaryDataSourceDefaultType, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! secondaryDataSourceDefaultType, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! systemDataSourceFallbackDefaultType) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(int systemDataSource, AndroidX.Wear.WatchFace.Complications.Data.ComplicationType! systemDataSourceDefaultType) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.DefaultComplicationDataSourcePolicy(int systemProvider) -> void
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.IsEmpty.get -> bool
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.PrimaryDataSource.get -> Android.Content.ComponentName?
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.PrimaryDataSourceDefaultType.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.SecondaryDataSource.get -> Android.Content.ComponentName?
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.SecondaryDataSourceDefaultType.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType?
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.SystemDataSourceFallback.get -> int
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.SystemDataSourceFallbackDefaultType.get -> AndroidX.Wear.WatchFace.Complications.Data.ComplicationType!
AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.ToWireFormat() -> AndroidX.Wear.WatchFace.Complications.Data.DefaultComplicationDataSourcePolicyWireFormat!
AndroidX.Wear.WatchFace.Complications.IllegalNodeException
AndroidX.Wear.WatchFace.Complications.IllegalNodeException.IllegalNodeException(System.Xml.XmlReader! parser) -> void
AndroidX.Wear.WatchFace.Complications.SystemDataSources
AndroidX.Wear.WatchFace.Complications.SystemDataSources.Companion
AndroidX.Wear.WatchFace.Complications.SystemDataSources.IDataSourceId
AndroidX.Wear.WatchFace.Complications.XmlUtilsKt
const AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants.ExtraPendingIntent = "android.support.wearable.complications.EXTRA_PENDING_INTENT" -> string!
const AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.NodeName = "ComplicationSlotBounds" -> string!
const AndroidX.Wear.WatchFace.Complications.ComplicationSlotBoundsKt.NamespaceAndroid = "http://schemas.android.com/apk/res/android" -> string!
const AndroidX.Wear.WatchFace.Complications.ComplicationSlotBoundsKt.NamespaceApp = "http://schemas.android.com/apk/res-auto" -> string!
const AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.NoDefaultProvider = -1 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceAppShortcut = 6 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDate = 2 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDayAndDate = 16 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDayOfWeek = 13 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDeprecated10 = 10 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDeprecated11 = 11 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDeprecated15 = 15 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceDeprecated8 = 8 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceFavoriteContact = 14 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceNextEvent = 9 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceStepCount = 4 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceSunriseSunset = 12 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceTimeAndDate = 3 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceUnreadNotificationCount = 7 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceWatchBattery = 1 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.DataSourceWorldClock = 5 -> int
const AndroidX.Wear.WatchFace.Complications.SystemDataSources.NoDataSource = -1 -> int
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.Result.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetriever.ServiceDisconnectedException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetrieverKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants.ThresholdClass.get -> nint
override AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceUpdateRequesterConstants.ThresholdType.get -> System.Type!
override AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationSlotBounds.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.ComplicationSlotBoundsKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.DefaultComplicationDataSourcePolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.IllegalNodeException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.SystemDataSources.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.SystemDataSources.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Wear.WatchFace.Complications.XmlUtilsKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfoRetrieverKt.ToApiComplicationDataSourceInfo(Android.Support.Wearable.Complications.ComplicationProviderInfo! obj) -> AndroidX.Wear.WatchFace.Complications.ComplicationDataSourceInfo!
static AndroidX.Wear.WatchFace.Complications.ComplicationSlotBoundsKt.HasValue(System.Xml.XmlReader! obj, string! id) -> bool
static AndroidX.Wear.WatchFace.Complications.XmlUtilsKt.GetIntRefAttribute(Android.Content.Res.Resources! resources, System.Xml.XmlReader! parser, string! name) -> Java.Lang.Integer?
static AndroidX.Wear.WatchFace.Complications.XmlUtilsKt.GetStringRefAttribute(Android.Content.Res.Resources! resources, System.Xml.XmlReader! parser, string! name) -> string?
static AndroidX.Wear.WatchFace.Complications.XmlUtilsKt.Iterate(System.Xml.XmlReader! obj, Kotlin.Jvm.Functions.IFunction0! block) -> void
static AndroidX.Wear.WatchFace.Complications.XmlUtilsKt.MoveToStart(System.Xml.XmlReader! obj, string! expectedNode) -> void
