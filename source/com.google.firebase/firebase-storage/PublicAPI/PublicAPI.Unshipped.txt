#nullable enable
Firebase.Storage.BuildConfig
Firebase.Storage.BuildConfig.BuildConfig() -> void
Firebase.Storage.CancellableTask
Firebase.Storage.CancellableTask.CancellableTask() -> void
Firebase.Storage.CancellableTask.CancellableTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.ControllableTask
Firebase.Storage.ControllableTask.ControllableTask() -> void
Firebase.Storage.ControllableTask.ControllableTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.FileDownloadTask
Firebase.Storage.FileDownloadTask.FileDownloadTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.FileDownloadTask.TaskSnapshot
Firebase.Storage.FileDownloadTask.TaskSnapshot.TaskSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.FirebaseStorage
Firebase.Storage.FirebaseStorage.FirebaseStorage(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.FirebaseStorageKtxRegistrar
Firebase.Storage.FirebaseStorageKtxRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Storage.FirebaseStorageKtxRegistrar.FirebaseStorageKtxRegistrar() -> void
Firebase.Storage.IOnPausedListener
Firebase.Storage.IOnPausedListener.snapshot(Java.Lang.Object! p0) -> void
Firebase.Storage.IOnProgressListener
Firebase.Storage.IOnProgressListener.snapshot(Java.Lang.Object! p0) -> void
Firebase.Storage.Internal.ActivityLifecycleListener
Firebase.Storage.Internal.ActivityLifecycleListener.ActivityLifecycleListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.AdaptiveStreamBuffer
Firebase.Storage.Internal.AdaptiveStreamBuffer.AdaptiveStreamBuffer(System.IO.Stream? source, int initialBufferSize) -> void
Firebase.Storage.Internal.AdaptiveStreamBuffer.AdaptiveStreamBuffer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.ExponentialBackoffSender
Firebase.Storage.Internal.ExponentialBackoffSender.ExponentialBackoffSender(Android.Content.Context? context, Firebase.Auth.Internal.IInternalAuthProvider? authProvider, Firebase.AppCheck.Interop.IInteropAppCheckTokenProvider? appCheckProvider, long retryTime) -> void
Firebase.Storage.Internal.ExponentialBackoffSender.ExponentialBackoffSender(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.ISleeper
Firebase.Storage.Internal.ISleeper.Sleep(int p0) -> void
Firebase.Storage.Internal.Slashes
Firebase.Storage.Internal.Slashes.Slashes() -> void
Firebase.Storage.Internal.Slashes.Slashes(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.SleeperImpl
Firebase.Storage.Internal.SleeperImpl.SleeperImpl() -> void
Firebase.Storage.Internal.SleeperImpl.SleeperImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.SmartHandler
Firebase.Storage.Internal.SmartHandler.SmartHandler(Java.Util.Concurrent.IExecutor? executor) -> void
Firebase.Storage.Internal.SmartHandler.SmartHandler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.StorageReferenceUri
Firebase.Storage.Internal.StorageReferenceUri.StorageReferenceUri(Android.Net.Uri! gsUri) -> void
Firebase.Storage.Internal.StorageReferenceUri.StorageReferenceUri(Android.Net.Uri! gsUri, Firebase.Emulators.EmulatedServiceSettings? emulatorSettings) -> void
Firebase.Storage.Internal.StorageReferenceUri.StorageReferenceUri(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Internal.Util
Firebase.Storage.Internal.Util.Util() -> void
Firebase.Storage.Internal.Util.Util(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.ListResult
Firebase.Storage.ListResult.Items.get -> System.Collections.Generic.IList<Firebase.Storage.StorageReference!>!
Firebase.Storage.ListResult.PageToken.get -> string?
Firebase.Storage.ListResult.Prefixes.get -> System.Collections.Generic.IList<Firebase.Storage.StorageReference!>!
Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl
Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.HttpURLConnectionFactoryImpl() -> void
Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.HttpURLConnectionFactoryImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.Connection.IHttpURLConnectionFactory
Firebase.Storage.Network.Connection.IHttpURLConnectionFactory.CreateInstance(Java.Net.URL! p0) -> Java.Net.HttpURLConnection?
Firebase.Storage.Network.DeleteNetworkRequest
Firebase.Storage.Network.DeleteNetworkRequest.DeleteNetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app) -> void
Firebase.Storage.Network.DeleteNetworkRequest.DeleteNetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.GetMetadataNetworkRequest
Firebase.Storage.Network.GetMetadataNetworkRequest.GetMetadataNetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app) -> void
Firebase.Storage.Network.GetMetadataNetworkRequest.GetMetadataNetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.GetNetworkRequest
Firebase.Storage.Network.GetNetworkRequest.GetNetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, long startByte) -> void
Firebase.Storage.Network.GetNetworkRequest.GetNetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.ListNetworkRequest
Firebase.Storage.Network.ListNetworkRequest.ListNetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Java.Lang.Integer? maxPageSize, string? nextPageToken) -> void
Firebase.Storage.Network.ListNetworkRequest.ListNetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.NetworkRequest
Firebase.Storage.Network.NetworkRequest.MException.get -> Java.Lang.Exception?
Firebase.Storage.Network.NetworkRequest.MException.set -> void
Firebase.Storage.Network.NetworkRequest.NetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app) -> void
Firebase.Storage.Network.NetworkRequest.NetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.NetworkRequest.Reset() -> void
Firebase.Storage.Network.ResumableUploadByteRequest
Firebase.Storage.Network.ResumableUploadByteRequest.ResumableUploadByteRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Android.Net.Uri! uploadURL, byte[]? chunk, long offset, int bytesToWrite, bool isFinal) -> void
Firebase.Storage.Network.ResumableUploadByteRequest.ResumableUploadByteRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.ResumableUploadCancelRequest
Firebase.Storage.Network.ResumableUploadCancelRequest.ResumableUploadCancelRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Android.Net.Uri! uploadURL) -> void
Firebase.Storage.Network.ResumableUploadCancelRequest.ResumableUploadCancelRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.ResumableUploadQueryRequest
Firebase.Storage.Network.ResumableUploadQueryRequest.ResumableUploadQueryRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Android.Net.Uri! uploadURL) -> void
Firebase.Storage.Network.ResumableUploadQueryRequest.ResumableUploadQueryRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.ResumableUploadStartRequest
Firebase.Storage.Network.ResumableUploadStartRequest.ResumableUploadStartRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Org.Json.JSONObject? metadata, string! contentType) -> void
Firebase.Storage.Network.ResumableUploadStartRequest.ResumableUploadStartRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.Network.UpdateMetadataNetworkRequest
Firebase.Storage.Network.UpdateMetadataNetworkRequest.UpdateMetadataNetworkRequest(Firebase.Storage.Internal.StorageReferenceUri! storageReferenceUri, Firebase.FirebaseApp! app, Org.Json.JSONObject? metadata) -> void
Firebase.Storage.Network.UpdateMetadataNetworkRequest.UpdateMetadataNetworkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.PausedEventArgs
Firebase.Storage.PausedEventArgs.P0.get -> Java.Lang.Object!
Firebase.Storage.PausedEventArgs.PausedEventArgs(Java.Lang.Object! p0) -> void
Firebase.Storage.ProgressEventArgs
Firebase.Storage.ProgressEventArgs.P0.get -> Java.Lang.Object!
Firebase.Storage.ProgressEventArgs.ProgressEventArgs(Java.Lang.Object! p0) -> void
Firebase.Storage.StorageException
Firebase.Storage.StorageException.IErrorCode
Firebase.Storage.StorageException.StorageException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageKt
Firebase.Storage.StorageMetadata
Firebase.Storage.StorageMetadata.Builder
Firebase.Storage.StorageMetadata.Builder.Builder() -> void
Firebase.Storage.StorageMetadata.Builder.Builder(Firebase.Storage.StorageMetadata! original) -> void
Firebase.Storage.StorageMetadata.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageMetadata.StorageMetadata() -> void
Firebase.Storage.StorageMetadata.StorageMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageReference
Firebase.Storage.StorageReference.DeleteAsync() -> System.Threading.Tasks.Task!
Firebase.Storage.StorageReference.GetDownloadUrlAsync() -> System.Threading.Tasks.Task<Android.Net.Uri!>!
Firebase.Storage.StorageReference.StorageReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageRegistrar
Firebase.Storage.StorageRegistrar.StorageRegistrar() -> void
Firebase.Storage.StorageRegistrar.StorageRegistrar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageTask
Firebase.Storage.StorageTask.IProvideError
Firebase.Storage.StorageTask.IProvideError.Error.get -> Java.Lang.Exception?
Firebase.Storage.StorageTask.SnapshotBase
Firebase.Storage.StorageTask.SnapshotBase.SnapshotBase(Firebase.Storage.StorageTask? __self, Java.Lang.Exception? error) -> void
Firebase.Storage.StorageTask.SnapshotBase.SnapshotBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageTask.StorageTask() -> void
Firebase.Storage.StorageTask.StorageTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StorageTask.SyncObject.get -> Java.Lang.Object?
Firebase.Storage.StorageTask.SyncObject.set -> void
Firebase.Storage.StorageTaskScheduler
Firebase.Storage.StorageTaskScheduler.StorageTaskScheduler() -> void
Firebase.Storage.StorageTaskScheduler.StorageTaskScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StreamDownloadTask
Firebase.Storage.StreamDownloadTask.IStreamProcessor
Firebase.Storage.StreamDownloadTask.IStreamProcessor.DoInBackground(Firebase.Storage.StreamDownloadTask.TaskSnapshot! p0, System.IO.Stream! p1) -> void
Firebase.Storage.StreamDownloadTask.StreamDownloadTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.StreamDownloadTask.TaskSnapshot
Firebase.Storage.StreamDownloadTask.TaskSnapshot.TaskSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.TaskState
Firebase.Storage.TaskState.InProgress
Firebase.Storage.TaskState.InProgress.InProgress(Java.Lang.Object? snapshot) -> void
Firebase.Storage.TaskState.InProgress.Snapshot.get -> Java.Lang.Object?
Firebase.Storage.TaskState.Paused
Firebase.Storage.TaskState.Paused.Paused(Java.Lang.Object? snapshot) -> void
Firebase.Storage.TaskState.Paused.Snapshot.get -> Java.Lang.Object?
Firebase.Storage.TaskState.TaskState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.UploadTask
Firebase.Storage.UploadTask.TaskSnapshot
Firebase.Storage.UploadTask.TaskSnapshot.TaskSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Storage.UploadTask.UploadTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract Firebase.Storage.CancellableTask.AddOnProgressListener(Android.App.Activity! p0, Firebase.Storage.IOnProgressListener! p1) -> Firebase.Storage.CancellableTask!
abstract Firebase.Storage.CancellableTask.AddOnProgressListener(Firebase.Storage.IOnProgressListener! p0) -> Firebase.Storage.CancellableTask!
abstract Firebase.Storage.CancellableTask.AddOnProgressListener(Java.Util.Concurrent.IExecutor! p0, Firebase.Storage.IOnProgressListener! p1) -> Firebase.Storage.CancellableTask!
abstract Firebase.Storage.CancellableTask.Cancel() -> bool
abstract Firebase.Storage.CancellableTask.IsInProgress.get -> bool
abstract Firebase.Storage.ControllableTask.AddOnPausedListener(Android.App.Activity! p0, Firebase.Storage.IOnPausedListener! p1) -> Firebase.Storage.ControllableTask!
abstract Firebase.Storage.ControllableTask.AddOnPausedListener(Firebase.Storage.IOnPausedListener! p0) -> Firebase.Storage.ControllableTask!
abstract Firebase.Storage.ControllableTask.AddOnPausedListener(Java.Util.Concurrent.IExecutor! p0, Firebase.Storage.IOnPausedListener! p1) -> Firebase.Storage.ControllableTask!
abstract Firebase.Storage.ControllableTask.IsPaused.get -> bool
abstract Firebase.Storage.ControllableTask.Pause() -> bool
abstract Firebase.Storage.ControllableTask.Resume() -> bool
abstract Firebase.Storage.Network.NetworkRequest.Action.get -> string!
const Firebase.Storage.BuildConfig.BuildType = "release" -> string!
const Firebase.Storage.BuildConfig.Debug = false -> bool
const Firebase.Storage.BuildConfig.LibraryPackageName = "com.google.firebase.storage" -> string!
const Firebase.Storage.BuildConfig.VersionName = "22.0.0" -> string!
const Firebase.Storage.Internal.ExponentialBackoffSender.RndMax = 250 -> int
const Firebase.Storage.Internal.Util.Iso8601Format = "yyyy-MM-dd'T'HH:mm:ss.SSSZ" -> string!
const Firebase.Storage.Internal.Util.NetworkUnavailable = -2 -> int
const Firebase.Storage.Network.NetworkRequest.InitializationException = -1 -> int
const Firebase.Storage.Network.NetworkRequest.NetworkUnavailable = -2 -> int
const Firebase.Storage.StorageException.ErrorBucketNotFound = -13011 -> int
const Firebase.Storage.StorageException.ErrorCanceled = -13040 -> int
const Firebase.Storage.StorageException.ErrorInvalidChecksum = -13031 -> int
const Firebase.Storage.StorageException.ErrorNotAuthenticated = -13020 -> int
const Firebase.Storage.StorageException.ErrorNotAuthorized = -13021 -> int
const Firebase.Storage.StorageException.ErrorObjectNotFound = -13010 -> int
const Firebase.Storage.StorageException.ErrorProjectNotFound = -13012 -> int
const Firebase.Storage.StorageException.ErrorQuotaExceeded = -13013 -> int
const Firebase.Storage.StorageException.ErrorRetryLimitExceeded = -13030 -> int
const Firebase.Storage.StorageException.ErrorUnknown = -13000 -> int
override Firebase.Storage.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.CancellableTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.CancellableTask.ThresholdClass.get -> nint
override Firebase.Storage.CancellableTask.ThresholdType.get -> System.Type!
override Firebase.Storage.ControllableTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.ControllableTask.ThresholdClass.get -> nint
override Firebase.Storage.ControllableTask.ThresholdType.get -> System.Type!
override Firebase.Storage.FileDownloadTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.FileDownloadTask.RawResult.get -> Java.Lang.Object!
override Firebase.Storage.FileDownloadTask.TaskSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.FileDownloadTask.TaskSnapshot.ThresholdClass.get -> nint
override Firebase.Storage.FileDownloadTask.TaskSnapshot.ThresholdType.get -> System.Type!
override Firebase.Storage.FileDownloadTask.ThresholdClass.get -> nint
override Firebase.Storage.FileDownloadTask.ThresholdType.get -> System.Type!
override Firebase.Storage.FirebaseStorage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.FirebaseStorage.ThresholdClass.get -> nint
override Firebase.Storage.FirebaseStorage.ThresholdType.get -> System.Type!
override Firebase.Storage.FirebaseStorageKtxRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.ActivityLifecycleListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.ActivityLifecycleListener.ThresholdClass.get -> nint
override Firebase.Storage.Internal.ActivityLifecycleListener.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.AdaptiveStreamBuffer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.AdaptiveStreamBuffer.ThresholdClass.get -> nint
override Firebase.Storage.Internal.AdaptiveStreamBuffer.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.ExponentialBackoffSender.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.ExponentialBackoffSender.ThresholdClass.get -> nint
override Firebase.Storage.Internal.ExponentialBackoffSender.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.Slashes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.Slashes.ThresholdClass.get -> nint
override Firebase.Storage.Internal.Slashes.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.SleeperImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.SleeperImpl.ThresholdClass.get -> nint
override Firebase.Storage.Internal.SleeperImpl.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.SmartHandler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.SmartHandler.ThresholdClass.get -> nint
override Firebase.Storage.Internal.SmartHandler.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.StorageReferenceUri.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.StorageReferenceUri.ThresholdClass.get -> nint
override Firebase.Storage.Internal.StorageReferenceUri.ThresholdType.get -> System.Type!
override Firebase.Storage.Internal.Util.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Internal.Util.ThresholdClass.get -> nint
override Firebase.Storage.Internal.Util.ThresholdType.get -> System.Type!
override Firebase.Storage.ListResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.ThresholdClass.get -> nint
override Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.DeleteNetworkRequest.Action.get -> string!
override Firebase.Storage.Network.DeleteNetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.DeleteNetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.DeleteNetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.GetMetadataNetworkRequest.Action.get -> string!
override Firebase.Storage.Network.GetMetadataNetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.GetMetadataNetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.GetMetadataNetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.GetNetworkRequest.Action.get -> string!
override Firebase.Storage.Network.GetNetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.GetNetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.GetNetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.ListNetworkRequest.Action.get -> string!
override Firebase.Storage.Network.ListNetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.ListNetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.ListNetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.NetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.NetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.NetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.ResumableUploadByteRequest.Action.get -> string!
override Firebase.Storage.Network.ResumableUploadByteRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.ResumableUploadByteRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.ResumableUploadByteRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.ResumableUploadCancelRequest.Action.get -> string!
override Firebase.Storage.Network.ResumableUploadCancelRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.ResumableUploadCancelRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.ResumableUploadCancelRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.ResumableUploadQueryRequest.Action.get -> string!
override Firebase.Storage.Network.ResumableUploadQueryRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.ResumableUploadQueryRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.ResumableUploadQueryRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.ResumableUploadStartRequest.Action.get -> string!
override Firebase.Storage.Network.ResumableUploadStartRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.ResumableUploadStartRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.ResumableUploadStartRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.Network.UpdateMetadataNetworkRequest.Action.get -> string!
override Firebase.Storage.Network.UpdateMetadataNetworkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.Network.UpdateMetadataNetworkRequest.ThresholdClass.get -> nint
override Firebase.Storage.Network.UpdateMetadataNetworkRequest.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageException.ThresholdClass.get -> nint
override Firebase.Storage.StorageException.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageMetadata.Builder.ThresholdClass.get -> nint
override Firebase.Storage.StorageMetadata.Builder.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageMetadata.ThresholdClass.get -> nint
override Firebase.Storage.StorageMetadata.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageReference.ThresholdClass.get -> nint
override Firebase.Storage.StorageReference.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageRegistrar.ThresholdClass.get -> nint
override Firebase.Storage.StorageRegistrar.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageTask.AddOnFailureListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnFailureListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.AddOnFailureListener(Android.Gms.Tasks.IOnFailureListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.AddOnFailureListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnFailureListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.AddOnPausedListener(Android.App.Activity! activity, Firebase.Storage.IOnPausedListener! listener) -> Firebase.Storage.ControllableTask!
override Firebase.Storage.StorageTask.AddOnPausedListener(Firebase.Storage.IOnPausedListener! listener) -> Firebase.Storage.ControllableTask!
override Firebase.Storage.StorageTask.AddOnPausedListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Storage.IOnPausedListener! listener) -> Firebase.Storage.ControllableTask!
override Firebase.Storage.StorageTask.AddOnProgressListener(Android.App.Activity! activity, Firebase.Storage.IOnProgressListener! listener) -> Firebase.Storage.CancellableTask!
override Firebase.Storage.StorageTask.AddOnProgressListener(Firebase.Storage.IOnProgressListener! listener) -> Firebase.Storage.CancellableTask!
override Firebase.Storage.StorageTask.AddOnProgressListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Storage.IOnProgressListener! listener) -> Firebase.Storage.CancellableTask!
override Firebase.Storage.StorageTask.AddOnSuccessListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnSuccessListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.AddOnSuccessListener(Android.Gms.Tasks.IOnSuccessListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.AddOnSuccessListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnSuccessListener! listener) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.Cancel() -> bool
override Firebase.Storage.StorageTask.ContinueWith(Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.ContinueWith(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.ContinueWithTask(Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.ContinueWithTask(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.Exception.get -> Java.Lang.Exception?
override Firebase.Storage.StorageTask.GetResult(Java.Lang.Class! exceptionType) -> Java.Lang.Object!
override Firebase.Storage.StorageTask.IsCanceled.get -> bool
override Firebase.Storage.StorageTask.IsComplete.get -> bool
override Firebase.Storage.StorageTask.IsInProgress.get -> bool
override Firebase.Storage.StorageTask.IsPaused.get -> bool
override Firebase.Storage.StorageTask.IsSuccessful.get -> bool
override Firebase.Storage.StorageTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageTask.OnSuccessTask(Android.Gms.Tasks.ISuccessContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.OnSuccessTask(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.ISuccessContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Storage.StorageTask.Pause() -> bool
override Firebase.Storage.StorageTask.Resume() -> bool
override Firebase.Storage.StorageTask.SnapshotBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageTask.SnapshotBase.ThresholdClass.get -> nint
override Firebase.Storage.StorageTask.SnapshotBase.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageTask.ThresholdClass.get -> nint
override Firebase.Storage.StorageTask.ThresholdType.get -> System.Type!
override Firebase.Storage.StorageTaskScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StorageTaskScheduler.ThresholdClass.get -> nint
override Firebase.Storage.StorageTaskScheduler.ThresholdType.get -> System.Type!
override Firebase.Storage.StreamDownloadTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StreamDownloadTask.RawResult.get -> Java.Lang.Object!
override Firebase.Storage.StreamDownloadTask.TaskSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.StreamDownloadTask.TaskSnapshot.ThresholdClass.get -> nint
override Firebase.Storage.StreamDownloadTask.TaskSnapshot.ThresholdType.get -> System.Type!
override Firebase.Storage.StreamDownloadTask.ThresholdClass.get -> nint
override Firebase.Storage.StreamDownloadTask.ThresholdType.get -> System.Type!
override Firebase.Storage.TaskState.InProgress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.TaskState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.TaskState.Paused.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.TaskState.ThresholdClass.get -> nint
override Firebase.Storage.TaskState.ThresholdType.get -> System.Type!
override Firebase.Storage.UploadTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.UploadTask.RawResult.get -> Java.Lang.Object!
override Firebase.Storage.UploadTask.TaskSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Storage.UploadTask.TaskSnapshot.ThresholdClass.get -> nint
override Firebase.Storage.UploadTask.TaskSnapshot.ThresholdType.get -> System.Type!
override Firebase.Storage.UploadTask.ThresholdClass.get -> nint
override Firebase.Storage.UploadTask.ThresholdType.get -> System.Type!
static Firebase.Storage.FirebaseStorage.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.FirebaseStorage.GetInstance(Firebase.FirebaseApp! app, string! url) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.FirebaseStorage.GetInstance(string! url) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.FirebaseStorage.Instance.get -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.Internal.ActivityLifecycleListener.Instance.get -> Firebase.Storage.Internal.ActivityLifecycleListener!
static Firebase.Storage.Internal.Slashes.NormalizeSlashes(string! uriSegment) -> string!
static Firebase.Storage.Internal.Slashes.PreserveSlashEncode(string? s) -> string!
static Firebase.Storage.Internal.Slashes.Slashize(string! s) -> string!
static Firebase.Storage.Internal.Util.Equals(Java.Lang.Object? a, Java.Lang.Object? b) -> bool
static Firebase.Storage.Internal.Util.GetCurrentAppCheckToken(Firebase.AppCheck.Interop.IInteropAppCheckTokenProvider? appCheckProvider) -> string?
static Firebase.Storage.Internal.Util.GetCurrentAuthToken(Firebase.Auth.Internal.IInternalAuthProvider? authProvider) -> string?
static Firebase.Storage.Internal.Util.Normalize(Firebase.FirebaseApp! app, string? s) -> Android.Net.Uri?
static Firebase.Storage.Internal.Util.ParseDateTime(string? dateString) -> long
static Firebase.Storage.Network.NetworkRequest.GetBaseUrl(Firebase.Emulators.EmulatedServiceSettings? emulatorSettings) -> Android.Net.Uri!
static Firebase.Storage.Network.NetworkRequest.ProdBaseUrl.get -> Android.Net.Uri?
static Firebase.Storage.Network.ResumableUploadCancelRequest.CancelCalled.get -> bool
static Firebase.Storage.Network.ResumableUploadCancelRequest.CancelCalled.set -> void
static Firebase.Storage.StorageException.FromErrorStatus(Android.Gms.Common.Apis.Statuses! status) -> Firebase.Storage.StorageException!
static Firebase.Storage.StorageException.FromException(Java.Lang.Throwable! exception) -> Firebase.Storage.StorageException!
static Firebase.Storage.StorageException.FromExceptionAndHttpCode(Java.Lang.Throwable? exception, int httpResultCode) -> Firebase.Storage.StorageException?
static Firebase.Storage.StorageKt.Component1(Firebase.Storage.FileDownloadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component1(Firebase.Storage.ListResult! obj) -> System.Collections.Generic.IList<Firebase.Storage.StorageReference!>!
static Firebase.Storage.StorageKt.Component1(Firebase.Storage.StreamDownloadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component1(Firebase.Storage.UploadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component2(Firebase.Storage.FileDownloadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component2(Firebase.Storage.ListResult! obj) -> System.Collections.Generic.IList<Firebase.Storage.StorageReference!>!
static Firebase.Storage.StorageKt.Component2(Firebase.Storage.StreamDownloadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component2(Firebase.Storage.UploadTask.TaskSnapshot! obj) -> long
static Firebase.Storage.StorageKt.Component3(Firebase.Storage.ListResult! obj) -> string?
static Firebase.Storage.StorageKt.Component3(Firebase.Storage.StreamDownloadTask.TaskSnapshot! obj) -> System.IO.Stream!
static Firebase.Storage.StorageKt.Component3(Firebase.Storage.UploadTask.TaskSnapshot! obj) -> Firebase.Storage.StorageMetadata?
static Firebase.Storage.StorageKt.Component4(Firebase.Storage.UploadTask.TaskSnapshot! obj) -> Android.Net.Uri?
static Firebase.Storage.StorageKt.GetStorage(Firebase.Firebase! obj) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.StorageKt.GetTaskState(Firebase.Storage.StorageTask! obj) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Firebase.Storage.StorageKt.Storage(Firebase.Firebase! obj, Firebase.FirebaseApp! app) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.StorageKt.Storage(Firebase.Firebase! obj, Firebase.FirebaseApp! app, string! url) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.StorageKt.Storage(Firebase.Firebase! obj, string! url) -> Firebase.Storage.FirebaseStorage!
static Firebase.Storage.StorageKt.StorageMetadata(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Storage.StorageMetadata!
static Firebase.Storage.StorageTaskScheduler.InitializeExecutors(Java.Util.Concurrent.IExecutor! firebaseExecutor, Java.Util.Concurrent.IExecutor! uiExecutor) -> void
static Firebase.Storage.StorageTaskScheduler.Instance.get -> Firebase.Storage.StorageTaskScheduler?
static Firebase.Storage.StorageTaskScheduler.SInstance.get -> Firebase.Storage.StorageTaskScheduler?
static Firebase.Storage.StorageTaskScheduler.SInstance.set -> void
virtual Firebase.Storage.FileDownloadTask.Schedule() -> void
virtual Firebase.Storage.FileDownloadTask.TaskSnapshot.BytesTransferred.get -> long
virtual Firebase.Storage.FileDownloadTask.TaskSnapshot.TotalByteCount.get -> long
virtual Firebase.Storage.FirebaseStorage.App.get -> Firebase.FirebaseApp!
virtual Firebase.Storage.FirebaseStorage.GetReference(string! location) -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.FirebaseStorage.GetReferenceFromUrl(string! fullUrl) -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.FirebaseStorage.MaxChunkUploadRetry.get -> long
virtual Firebase.Storage.FirebaseStorage.MaxChunkUploadRetry.set -> void
virtual Firebase.Storage.FirebaseStorage.MaxDownloadRetryTimeMillis.get -> long
virtual Firebase.Storage.FirebaseStorage.MaxDownloadRetryTimeMillis.set -> void
virtual Firebase.Storage.FirebaseStorage.MaxOperationRetryTimeMillis.get -> long
virtual Firebase.Storage.FirebaseStorage.MaxOperationRetryTimeMillis.set -> void
virtual Firebase.Storage.FirebaseStorage.MaxUploadRetryTimeMillis.get -> long
virtual Firebase.Storage.FirebaseStorage.MaxUploadRetryTimeMillis.set -> void
virtual Firebase.Storage.FirebaseStorage.Reference.get -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.FirebaseStorage.UseEmulator(string! host, int port) -> void
virtual Firebase.Storage.Internal.ActivityLifecycleListener.RemoveCookie(Java.Lang.Object! cookie) -> void
virtual Firebase.Storage.Internal.ActivityLifecycleListener.RunOnActivityStopped(Android.App.Activity! activityToListenOn, Java.Lang.Object! cookie, Java.Lang.IRunnable! runnable) -> void
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.Advance(int bytes) -> int
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.Available() -> int
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.Close() -> void
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.Fill(int targetSize) -> int
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.Get() -> byte[]?
virtual Firebase.Storage.Internal.AdaptiveStreamBuffer.IsFinished.get -> bool
virtual Firebase.Storage.Internal.ExponentialBackoffSender.Cancel() -> void
virtual Firebase.Storage.Internal.ExponentialBackoffSender.IsRetryableError(int resultCode) -> bool
virtual Firebase.Storage.Internal.ExponentialBackoffSender.Reset() -> void
virtual Firebase.Storage.Internal.ExponentialBackoffSender.SendWithExponentialBackoff(Firebase.Storage.Network.NetworkRequest! request) -> void
virtual Firebase.Storage.Internal.ExponentialBackoffSender.SendWithExponentialBackoff(Firebase.Storage.Network.NetworkRequest! request, bool closeRequest) -> void
virtual Firebase.Storage.Internal.SleeperImpl.Sleep(int milliseconds) -> void
virtual Firebase.Storage.Internal.SmartHandler.CallBack(Java.Lang.IRunnable! runnable) -> void
virtual Firebase.Storage.Internal.StorageReferenceUri.GsUri.get -> Android.Net.Uri!
virtual Firebase.Storage.Internal.StorageReferenceUri.HttpBaseUri.get -> Android.Net.Uri!
virtual Firebase.Storage.Internal.StorageReferenceUri.HttpUri.get -> Android.Net.Uri!
virtual Firebase.Storage.Network.Connection.HttpURLConnectionFactoryImpl.CreateInstance(Java.Net.URL! url) -> Java.Net.HttpURLConnection?
virtual Firebase.Storage.Network.NetworkRequest.CompleteTask(Android.Gms.Tasks.TaskCompletionSource? source, Java.Lang.Object? result) -> void
virtual Firebase.Storage.Network.NetworkRequest.Exception.get -> Java.Lang.Exception?
virtual Firebase.Storage.Network.NetworkRequest.GetOutputRaw() -> byte[]?
virtual Firebase.Storage.Network.NetworkRequest.GetResultString(string? key) -> string?
virtual Firebase.Storage.Network.NetworkRequest.IsResultSuccess.get -> bool
virtual Firebase.Storage.Network.NetworkRequest.OutputJSON.get -> Org.Json.JSONObject?
virtual Firebase.Storage.Network.NetworkRequest.OutputRawSize.get -> int
virtual Firebase.Storage.Network.NetworkRequest.ParseErrorResponse(System.IO.Stream? resultStream) -> void
virtual Firebase.Storage.Network.NetworkRequest.ParseSuccessulResponse(System.IO.Stream? resultStream) -> void
virtual Firebase.Storage.Network.NetworkRequest.PerformRequest(string? authToken, string? appCheckToken, Android.Content.Context! applicationContext) -> void
virtual Firebase.Storage.Network.NetworkRequest.PerformRequestEnd() -> void
virtual Firebase.Storage.Network.NetworkRequest.PerformRequestStart(string? authToken, string? appCheckToken) -> void
virtual Firebase.Storage.Network.NetworkRequest.QueryParameters.get -> System.Collections.Generic.IDictionary<string!, string!>?
virtual Firebase.Storage.Network.NetworkRequest.RawResult.get -> string?
virtual Firebase.Storage.Network.NetworkRequest.ResultBody.get -> Org.Json.JSONObject?
virtual Firebase.Storage.Network.NetworkRequest.ResultCode.get -> int
virtual Firebase.Storage.Network.NetworkRequest.ResultHeaders.get -> System.Collections.Generic.IDictionary<string!, string!>!
virtual Firebase.Storage.Network.NetworkRequest.ResultHeadersImpl.get -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>?
virtual Firebase.Storage.Network.NetworkRequest.ResultingContentLength.get -> int
virtual Firebase.Storage.Network.NetworkRequest.SetCustomHeader(string? key, string? value) -> void
virtual Firebase.Storage.Network.NetworkRequest.StorageReferenceUri.get -> Firebase.Storage.Internal.StorageReferenceUri!
virtual Firebase.Storage.Network.NetworkRequest.Stream.get -> System.IO.Stream?
virtual Firebase.Storage.Network.NetworkRequest.URL.get -> Android.Net.Uri!
virtual Firebase.Storage.StorageException.ErrorCode.get -> int
virtual Firebase.Storage.StorageException.HttpResultCode.get -> int
virtual Firebase.Storage.StorageException.IsRecoverableException.get -> bool
virtual Firebase.Storage.StorageMetadata.Bucket.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.Build() -> Firebase.Storage.StorageMetadata!
virtual Firebase.Storage.StorageMetadata.Builder.CacheControl.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.ContentDisposition.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.ContentEncoding.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.ContentLanguage.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.ContentType.get -> string?
virtual Firebase.Storage.StorageMetadata.Builder.SetCacheControl(string? cacheControl) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.Builder.SetContentDisposition(string? contentDisposition) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.Builder.SetContentEncoding(string? contentEncoding) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.Builder.SetContentLanguage(string? contentLanguage) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.Builder.SetContentType(string? contentType) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.Builder.SetCustomMetadata(string! key, string? value) -> Firebase.Storage.StorageMetadata.Builder!
virtual Firebase.Storage.StorageMetadata.CacheControl.get -> string?
virtual Firebase.Storage.StorageMetadata.ContentDisposition.get -> string?
virtual Firebase.Storage.StorageMetadata.ContentEncoding.get -> string?
virtual Firebase.Storage.StorageMetadata.ContentLanguage.get -> string?
virtual Firebase.Storage.StorageMetadata.ContentType.get -> string?
virtual Firebase.Storage.StorageMetadata.CreationTimeMillis.get -> long
virtual Firebase.Storage.StorageMetadata.CustomMetadataKeys.get -> System.Collections.Generic.ICollection<string!>!
virtual Firebase.Storage.StorageMetadata.Generation.get -> string?
virtual Firebase.Storage.StorageMetadata.GetCustomMetadata(string! key) -> string?
virtual Firebase.Storage.StorageMetadata.Md5Hash.get -> string?
virtual Firebase.Storage.StorageMetadata.MetadataGeneration.get -> string?
virtual Firebase.Storage.StorageMetadata.Name.get -> string?
virtual Firebase.Storage.StorageMetadata.Path.get -> string!
virtual Firebase.Storage.StorageMetadata.Reference.get -> Firebase.Storage.StorageReference?
virtual Firebase.Storage.StorageMetadata.SizeBytes.get -> long
virtual Firebase.Storage.StorageMetadata.UpdatedTimeMillis.get -> long
virtual Firebase.Storage.StorageReference.ActiveDownloadTasks.get -> System.Collections.Generic.IList<Firebase.Storage.FileDownloadTask!>!
virtual Firebase.Storage.StorageReference.ActiveUploadTasks.get -> System.Collections.Generic.IList<Firebase.Storage.UploadTask!>!
virtual Firebase.Storage.StorageReference.Bucket.get -> string!
virtual Firebase.Storage.StorageReference.Child(string! pathString) -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.StorageReference.CompareTo(Firebase.Storage.StorageReference! other) -> int
virtual Firebase.Storage.StorageReference.CompareTo(Java.Lang.Object? rhs) -> int
virtual Firebase.Storage.StorageReference.Delete() -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.GetBytes(long maxDownloadSizeBytes) -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.GetDownloadUrl() -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.GetFile(Android.Net.Uri! destinationUri) -> Firebase.Storage.FileDownloadTask!
virtual Firebase.Storage.StorageReference.GetFile(Java.IO.File! destinationFile) -> Firebase.Storage.FileDownloadTask!
virtual Firebase.Storage.StorageReference.GetMetadata() -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.GetStream(Firebase.Storage.StreamDownloadTask.IStreamProcessor! processor) -> Firebase.Storage.StreamDownloadTask!
virtual Firebase.Storage.StorageReference.List(int maxResults) -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.List(int maxResults, string! pageToken) -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.ListAll() -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageReference.Name.get -> string!
virtual Firebase.Storage.StorageReference.Parent.get -> Firebase.Storage.StorageReference?
virtual Firebase.Storage.StorageReference.Path.get -> string!
virtual Firebase.Storage.StorageReference.PutBytes(byte[]! bytes) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutBytes(byte[]! bytes, Firebase.Storage.StorageMetadata! metadata) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutFile(Android.Net.Uri! uri) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutFile(Android.Net.Uri! uri, Firebase.Storage.StorageMetadata! metadata) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutFile(Android.Net.Uri! uri, Firebase.Storage.StorageMetadata? metadata, Android.Net.Uri? existingUploadUri) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutStream(System.IO.Stream! stream) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.PutStream(System.IO.Stream! stream, Firebase.Storage.StorageMetadata! metadata) -> Firebase.Storage.UploadTask!
virtual Firebase.Storage.StorageReference.Root.get -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.StorageReference.Storage.get -> Firebase.Storage.FirebaseStorage!
virtual Firebase.Storage.StorageReference.Stream.get -> Firebase.Storage.StreamDownloadTask!
virtual Firebase.Storage.StorageReference.UpdateMetadata(Firebase.Storage.StorageMetadata! metadata) -> Android.Gms.Tasks.Task!
virtual Firebase.Storage.StorageRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>?
virtual Firebase.Storage.StorageTask.AddOnCompleteListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnCompleteListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.AddOnCompleteListener(Android.Gms.Tasks.IOnCompleteListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.AddOnCompleteListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnCompleteListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.OnCanceled() -> void
virtual Firebase.Storage.StorageTask.OnFailure() -> void
virtual Firebase.Storage.StorageTask.OnPaused() -> void
virtual Firebase.Storage.StorageTask.OnProgress() -> void
virtual Firebase.Storage.StorageTask.OnQueued() -> void
virtual Firebase.Storage.StorageTask.OnSuccess() -> void
virtual Firebase.Storage.StorageTask.RemoveOnCanceledListener(Android.Gms.Tasks.IOnCanceledListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.RemoveOnCompleteListener(Android.Gms.Tasks.IOnCompleteListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.RemoveOnFailureListener(Android.Gms.Tasks.IOnFailureListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.RemoveOnPausedListener(Firebase.Storage.IOnPausedListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.RemoveOnProgressListener(Firebase.Storage.IOnProgressListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.RemoveOnSuccessListener(Android.Gms.Tasks.IOnSuccessListener! listener) -> Firebase.Storage.StorageTask!
virtual Firebase.Storage.StorageTask.Result.get -> Java.Lang.Object!
virtual Firebase.Storage.StorageTask.Snapshot.get -> Java.Lang.Object!
virtual Firebase.Storage.StorageTask.SnapshotBase.Error.get -> Java.Lang.Exception?
virtual Firebase.Storage.StorageTask.SnapshotBase.Storage.get -> Firebase.Storage.StorageReference!
virtual Firebase.Storage.StorageTaskScheduler.CommandPoolExecutor.get -> Java.Util.Concurrent.IExecutor?
virtual Firebase.Storage.StorageTaskScheduler.MainThreadExecutor.get -> Java.Util.Concurrent.IExecutor?
virtual Firebase.Storage.StorageTaskScheduler.ScheduleCallback(Java.Lang.IRunnable? task) -> void
virtual Firebase.Storage.StorageTaskScheduler.ScheduleCommand(Java.Lang.IRunnable? task) -> void
virtual Firebase.Storage.StorageTaskScheduler.ScheduleDownload(Java.Lang.IRunnable? task) -> void
virtual Firebase.Storage.StorageTaskScheduler.ScheduleUpload(Java.Lang.IRunnable? task) -> void
virtual Firebase.Storage.StreamDownloadTask.Schedule() -> void
virtual Firebase.Storage.StreamDownloadTask.TaskSnapshot.BytesTransferred.get -> long
virtual Firebase.Storage.StreamDownloadTask.TaskSnapshot.Stream.get -> System.IO.Stream!
virtual Firebase.Storage.StreamDownloadTask.TaskSnapshot.TotalByteCount.get -> long
virtual Firebase.Storage.UploadTask.ResetState() -> void
virtual Firebase.Storage.UploadTask.Schedule() -> void
virtual Firebase.Storage.UploadTask.TaskSnapshot.BytesTransferred.get -> long
virtual Firebase.Storage.UploadTask.TaskSnapshot.Metadata.get -> Firebase.Storage.StorageMetadata?
virtual Firebase.Storage.UploadTask.TaskSnapshot.TotalByteCount.get -> long
virtual Firebase.Storage.UploadTask.TaskSnapshot.UploadSessionUri.get -> Android.Net.Uri?
