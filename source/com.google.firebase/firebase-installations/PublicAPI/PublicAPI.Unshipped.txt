#nullable enable
Firebase.Installations.BuildConfig
Firebase.Installations.BuildConfig.BuildConfig() -> void
Firebase.Installations.FirebaseInstallations
Firebase.Installations.FirebaseInstallations.FirebaseInstallations(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.FirebaseInstallationsException
Firebase.Installations.FirebaseInstallationsException.FirebaseInstallationsException(Firebase.Installations.FirebaseInstallationsException.Status! status) -> void
Firebase.Installations.FirebaseInstallationsException.FirebaseInstallationsException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.FirebaseInstallationsException.FirebaseInstallationsException(string! message, Firebase.Installations.FirebaseInstallationsException.Status! status) -> void
Firebase.Installations.FirebaseInstallationsException.FirebaseInstallationsException(string! message, Firebase.Installations.FirebaseInstallationsException.Status! status, Java.Lang.Throwable! cause) -> void
Firebase.Installations.FirebaseInstallationsException.Status
Firebase.Installations.FirebaseInstallationsKtxRegistrar
Firebase.Installations.FirebaseInstallationsKtxRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Installations.FirebaseInstallationsKtxRegistrar.FirebaseInstallationsKtxRegistrar() -> void
Firebase.Installations.FirebaseInstallationsRegistrar
Firebase.Installations.FirebaseInstallationsRegistrar.FirebaseInstallationsRegistrar() -> void
Firebase.Installations.FirebaseInstallationsRegistrar.FirebaseInstallationsRegistrar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.InstallationsKt
Firebase.Installations.Local.IidStore
Firebase.Installations.Local.IidStore.IidStore(Android.Content.ISharedPreferences! iidPrefs, string? defaultSenderId) -> void
Firebase.Installations.Local.IidStore.IidStore(Firebase.FirebaseApp! firebaseApp) -> void
Firebase.Installations.Local.IidStore.IidStore(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Local.PersistedInstallation
Firebase.Installations.Local.PersistedInstallation.PersistedInstallation(Firebase.FirebaseApp! firebaseApp) -> void
Firebase.Installations.Local.PersistedInstallation.PersistedInstallation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Local.PersistedInstallation.RegistrationStatus
Firebase.Installations.Local.PersistedInstallationEntry
Firebase.Installations.Local.PersistedInstallationEntry.Builder
Firebase.Installations.Local.PersistedInstallationEntry.Builder.Builder() -> void
Firebase.Installations.Local.PersistedInstallationEntry.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Local.PersistedInstallationEntry.PersistedInstallationEntry() -> void
Firebase.Installations.Local.PersistedInstallationEntry.PersistedInstallationEntry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.RandomFidGenerator
Firebase.Installations.RandomFidGenerator.RandomFidGenerator() -> void
Firebase.Installations.RandomFidGenerator.RandomFidGenerator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Remote.FirebaseInstallationServiceClient
Firebase.Installations.Remote.FirebaseInstallationServiceClient.FirebaseInstallationServiceClient(Android.Content.Context! context, Firebase.Inject.IProvider! heartBeatProvider) -> void
Firebase.Installations.Remote.FirebaseInstallationServiceClient.FirebaseInstallationServiceClient(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Remote.InstallationResponse
Firebase.Installations.Remote.InstallationResponse.Builder
Firebase.Installations.Remote.InstallationResponse.Builder.Builder() -> void
Firebase.Installations.Remote.InstallationResponse.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Remote.InstallationResponse.InstallationResponse() -> void
Firebase.Installations.Remote.InstallationResponse.InstallationResponse(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Remote.InstallationResponse.ResponseCode
Firebase.Installations.Remote.TokenResult
Firebase.Installations.Remote.TokenResult.Builder
Firebase.Installations.Remote.TokenResult.Builder.Builder() -> void
Firebase.Installations.Remote.TokenResult.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Remote.TokenResult.ResponseCode
Firebase.Installations.Remote.TokenResult.TokenResult() -> void
Firebase.Installations.Remote.TokenResult.TokenResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Time.IClock
Firebase.Installations.Time.IClock.CurrentTimeMillis() -> long
Firebase.Installations.Time.SystemClock
Firebase.Installations.Time.SystemClock.SystemClock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Installations.Utils
Firebase.Installations.Utils.CurrentTimeInMillis() -> long
Firebase.Installations.Utils.CurrentTimeInSecs() -> long
Firebase.Installations.Utils.IsAuthTokenExpired(Firebase.Installations.Local.PersistedInstallationEntry! entry) -> bool
Firebase.Installations.Utils.RandomDelayForSyncPrevention.get -> long
abstract Firebase.Installations.Local.PersistedInstallationEntry.AuthToken.get -> string?
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.Build() -> Firebase.Installations.Local.PersistedInstallationEntry!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetAuthToken(string? p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetExpiresInSecs(long p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetFirebaseInstallationId(string! p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetFisError(string? p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetRefreshToken(string? p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetRegistrationStatus(Firebase.Installations.Local.PersistedInstallation.RegistrationStatus! p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.Builder.SetTokenCreationEpochInSecs(long p0) -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.ExpiresInSecs.get -> long
abstract Firebase.Installations.Local.PersistedInstallationEntry.FirebaseInstallationId.get -> string?
abstract Firebase.Installations.Local.PersistedInstallationEntry.FisError.get -> string?
abstract Firebase.Installations.Local.PersistedInstallationEntry.RefreshToken.get -> string?
abstract Firebase.Installations.Local.PersistedInstallationEntry.RegistrationStatus.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus!
abstract Firebase.Installations.Local.PersistedInstallationEntry.ToBuilder() -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
abstract Firebase.Installations.Local.PersistedInstallationEntry.TokenCreationEpochInSecs.get -> long
abstract Firebase.Installations.Remote.InstallationResponse.AuthToken.get -> Firebase.Installations.Remote.TokenResult?
abstract Firebase.Installations.Remote.InstallationResponse.Builder.Build() -> Firebase.Installations.Remote.InstallationResponse!
abstract Firebase.Installations.Remote.InstallationResponse.Builder.SetAuthToken(Firebase.Installations.Remote.TokenResult! p0) -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Builder.SetFid(string! p0) -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Builder.SetRefreshToken(string! p0) -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Builder.SetResponseCode(Firebase.Installations.Remote.InstallationResponse.ResponseCode! p0) -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Builder.SetUri(string! p0) -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Fid.get -> string?
abstract Firebase.Installations.Remote.InstallationResponse.GetResponseCode() -> Firebase.Installations.Remote.InstallationResponse.ResponseCode?
abstract Firebase.Installations.Remote.InstallationResponse.RefreshToken.get -> string?
abstract Firebase.Installations.Remote.InstallationResponse.ToBuilder() -> Firebase.Installations.Remote.InstallationResponse.Builder!
abstract Firebase.Installations.Remote.InstallationResponse.Uri.get -> string?
abstract Firebase.Installations.Remote.TokenResult.Builder.Build() -> Firebase.Installations.Remote.TokenResult!
abstract Firebase.Installations.Remote.TokenResult.Builder.SetResponseCode(Firebase.Installations.Remote.TokenResult.ResponseCode! p0) -> Firebase.Installations.Remote.TokenResult.Builder!
abstract Firebase.Installations.Remote.TokenResult.Builder.SetToken(string! p0) -> Firebase.Installations.Remote.TokenResult.Builder!
abstract Firebase.Installations.Remote.TokenResult.Builder.SetTokenExpirationTimestamp(long p0) -> Firebase.Installations.Remote.TokenResult.Builder!
abstract Firebase.Installations.Remote.TokenResult.GetResponseCode() -> Firebase.Installations.Remote.TokenResult.ResponseCode?
abstract Firebase.Installations.Remote.TokenResult.ToBuilder() -> Firebase.Installations.Remote.TokenResult.Builder!
abstract Firebase.Installations.Remote.TokenResult.Token.get -> string?
abstract Firebase.Installations.Remote.TokenResult.TokenExpirationTimestamp.get -> long
const Firebase.Installations.BuildConfig.BuildType = "release" -> string!
const Firebase.Installations.BuildConfig.Debug = false -> bool
const Firebase.Installations.BuildConfig.LibraryPackageName = "com.google.firebase.installations" -> string!
const Firebase.Installations.BuildConfig.VersionName = "19.0.0" -> string!
override Firebase.Installations.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallations.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallations.ThresholdClass.get -> nint
override Firebase.Installations.FirebaseInstallations.ThresholdType.get -> System.Type!
override Firebase.Installations.FirebaseInstallationsException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallationsException.Status.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallationsException.ThresholdClass.get -> nint
override Firebase.Installations.FirebaseInstallationsException.ThresholdType.get -> System.Type!
override Firebase.Installations.FirebaseInstallationsKtxRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallationsRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.FirebaseInstallationsRegistrar.ThresholdClass.get -> nint
override Firebase.Installations.FirebaseInstallationsRegistrar.ThresholdType.get -> System.Type!
override Firebase.Installations.InstallationsKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.IidStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.IidStore.ThresholdClass.get -> nint
override Firebase.Installations.Local.IidStore.ThresholdType.get -> System.Type!
override Firebase.Installations.Local.PersistedInstallation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.PersistedInstallation.ThresholdClass.get -> nint
override Firebase.Installations.Local.PersistedInstallation.ThresholdType.get -> System.Type!
override Firebase.Installations.Local.PersistedInstallationEntry.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.PersistedInstallationEntry.Builder.ThresholdClass.get -> nint
override Firebase.Installations.Local.PersistedInstallationEntry.Builder.ThresholdType.get -> System.Type!
override Firebase.Installations.Local.PersistedInstallationEntry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Local.PersistedInstallationEntry.ThresholdClass.get -> nint
override Firebase.Installations.Local.PersistedInstallationEntry.ThresholdType.get -> System.Type!
override Firebase.Installations.RandomFidGenerator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.RandomFidGenerator.ThresholdClass.get -> nint
override Firebase.Installations.RandomFidGenerator.ThresholdType.get -> System.Type!
override Firebase.Installations.Remote.FirebaseInstallationServiceClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.FirebaseInstallationServiceClient.ThresholdClass.get -> nint
override Firebase.Installations.Remote.FirebaseInstallationServiceClient.ThresholdType.get -> System.Type!
override Firebase.Installations.Remote.InstallationResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.InstallationResponse.Builder.ThresholdClass.get -> nint
override Firebase.Installations.Remote.InstallationResponse.Builder.ThresholdType.get -> System.Type!
override Firebase.Installations.Remote.InstallationResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.InstallationResponse.ResponseCode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.InstallationResponse.ThresholdClass.get -> nint
override Firebase.Installations.Remote.InstallationResponse.ThresholdType.get -> System.Type!
override Firebase.Installations.Remote.TokenResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.TokenResult.Builder.ThresholdClass.get -> nint
override Firebase.Installations.Remote.TokenResult.Builder.ThresholdType.get -> System.Type!
override Firebase.Installations.Remote.TokenResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.TokenResult.ResponseCode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Remote.TokenResult.ThresholdClass.get -> nint
override Firebase.Installations.Remote.TokenResult.ThresholdType.get -> System.Type!
override Firebase.Installations.Time.SystemClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Installations.Time.SystemClock.ThresholdClass.get -> nint
override Firebase.Installations.Time.SystemClock.ThresholdType.get -> System.Type!
override Firebase.Installations.Utils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Firebase.Installations.FirebaseInstallations.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Installations.FirebaseInstallations!
static Firebase.Installations.FirebaseInstallations.Instance.get -> Firebase.Installations.FirebaseInstallations!
static Firebase.Installations.FirebaseInstallationsException.Status.BadConfig.get -> Firebase.Installations.FirebaseInstallationsException.Status?
static Firebase.Installations.FirebaseInstallationsException.Status.TooManyRequests.get -> Firebase.Installations.FirebaseInstallationsException.Status?
static Firebase.Installations.FirebaseInstallationsException.Status.Unavailable.get -> Firebase.Installations.FirebaseInstallationsException.Status?
static Firebase.Installations.FirebaseInstallationsException.Status.ValueOf(string? name) -> Firebase.Installations.FirebaseInstallationsException.Status?
static Firebase.Installations.FirebaseInstallationsException.Status.Values() -> Firebase.Installations.FirebaseInstallationsException.Status![]?
static Firebase.Installations.InstallationsKt.GetInstallations(Firebase.Firebase! obj) -> Firebase.Installations.FirebaseInstallations!
static Firebase.Installations.InstallationsKt.Installations(Firebase.Firebase! obj, Firebase.FirebaseApp! app) -> Firebase.Installations.FirebaseInstallations!
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.AttemptMigration.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.NotGenerated.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.RegisterError.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.Registered.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.Unregistered.get -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.ValueOf(string? name) -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus?
static Firebase.Installations.Local.PersistedInstallation.RegistrationStatus.Values() -> Firebase.Installations.Local.PersistedInstallation.RegistrationStatus![]?
static Firebase.Installations.Local.PersistedInstallationEntry.Instance.get -> Firebase.Installations.Local.PersistedInstallationEntry!
static Firebase.Installations.Local.PersistedInstallationEntry.Instance.set -> void
static Firebase.Installations.Local.PersistedInstallationEntry.InvokeBuilder() -> Firebase.Installations.Local.PersistedInstallationEntry.Builder!
static Firebase.Installations.Remote.InstallationResponse.InvokeBuilder() -> Firebase.Installations.Remote.InstallationResponse.Builder!
static Firebase.Installations.Remote.InstallationResponse.ResponseCode.BadConfig.get -> Firebase.Installations.Remote.InstallationResponse.ResponseCode?
static Firebase.Installations.Remote.InstallationResponse.ResponseCode.Ok.get -> Firebase.Installations.Remote.InstallationResponse.ResponseCode?
static Firebase.Installations.Remote.InstallationResponse.ResponseCode.ValueOf(string? name) -> Firebase.Installations.Remote.InstallationResponse.ResponseCode?
static Firebase.Installations.Remote.InstallationResponse.ResponseCode.Values() -> Firebase.Installations.Remote.InstallationResponse.ResponseCode![]?
static Firebase.Installations.Remote.TokenResult.InvokeBuilder() -> Firebase.Installations.Remote.TokenResult.Builder!
static Firebase.Installations.Remote.TokenResult.ResponseCode.AuthError.get -> Firebase.Installations.Remote.TokenResult.ResponseCode?
static Firebase.Installations.Remote.TokenResult.ResponseCode.BadConfig.get -> Firebase.Installations.Remote.TokenResult.ResponseCode?
static Firebase.Installations.Remote.TokenResult.ResponseCode.Ok.get -> Firebase.Installations.Remote.TokenResult.ResponseCode?
static Firebase.Installations.Remote.TokenResult.ResponseCode.ValueOf(string? name) -> Firebase.Installations.Remote.TokenResult.ResponseCode?
static Firebase.Installations.Remote.TokenResult.ResponseCode.Values() -> Firebase.Installations.Remote.TokenResult.ResponseCode![]?
static Firebase.Installations.Time.SystemClock.Instance.get -> Firebase.Installations.Time.SystemClock?
static Firebase.Installations.Utils.AuthTokenExpirationBufferInSecs.get -> long
static Firebase.Installations.Utils.GetInstance(Firebase.Installations.Time.IClock? clock) -> Firebase.Installations.Utils?
static Firebase.Installations.Utils.Instance.get -> Firebase.Installations.Utils?
virtual Firebase.Installations.FirebaseInstallations.Delete() -> Android.Gms.Tasks.Task!
virtual Firebase.Installations.FirebaseInstallations.GetId() -> Android.Gms.Tasks.Task!
virtual Firebase.Installations.FirebaseInstallations.GetToken(bool forceRefresh) -> Android.Gms.Tasks.Task!
virtual Firebase.Installations.FirebaseInstallations.RegisterFidListener(Firebase.Installations.Internal.IFidListener! listener) -> Firebase.Installations.Internal.IFidListenerHandle!
virtual Firebase.Installations.FirebaseInstallationsException.GetStatus() -> Firebase.Installations.FirebaseInstallationsException.Status!
virtual Firebase.Installations.FirebaseInstallationsRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>?
virtual Firebase.Installations.Local.IidStore.ReadIid() -> string?
virtual Firebase.Installations.Local.IidStore.ReadToken() -> string?
virtual Firebase.Installations.Local.PersistedInstallation.ClearForTesting() -> void
virtual Firebase.Installations.Local.PersistedInstallation.InsertOrUpdatePersistedInstallationEntry(Firebase.Installations.Local.PersistedInstallationEntry! prefs) -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallation.ReadPersistedInstallationEntryValue() -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.IsErrored.get -> bool
virtual Firebase.Installations.Local.PersistedInstallationEntry.IsNotGenerated.get -> bool
virtual Firebase.Installations.Local.PersistedInstallationEntry.IsRegistered.get -> bool
virtual Firebase.Installations.Local.PersistedInstallationEntry.IsUnregistered.get -> bool
virtual Firebase.Installations.Local.PersistedInstallationEntry.ShouldAttemptMigration() -> bool
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithAuthToken(string! authToken, long authTokenExpiration, long creationTime) -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithClearedAuthToken() -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithFisError(string! message) -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithNoGeneratedFid() -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithRegisteredFid(string! fid, string! refreshToken, long creationTime, string? authToken, long authTokenExpiration) -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.Local.PersistedInstallationEntry.WithUnregisteredFid(string! fid) -> Firebase.Installations.Local.PersistedInstallationEntry!
virtual Firebase.Installations.RandomFidGenerator.CreateRandomFid() -> string!
virtual Firebase.Installations.Remote.FirebaseInstallationServiceClient.CreateFirebaseInstallation(string! apiKey, string? fid, string! projectID, string! appId, string? iidToken) -> Firebase.Installations.Remote.InstallationResponse!
virtual Firebase.Installations.Remote.FirebaseInstallationServiceClient.DeleteFirebaseInstallation(string! apiKey, string! fid, string! projectID, string! refreshToken) -> void
virtual Firebase.Installations.Remote.FirebaseInstallationServiceClient.GenerateAuthToken(string! apiKey, string! fid, string! projectID, string! refreshToken) -> Firebase.Installations.Remote.TokenResult!
virtual Firebase.Installations.Time.SystemClock.CurrentTimeMillis() -> long
