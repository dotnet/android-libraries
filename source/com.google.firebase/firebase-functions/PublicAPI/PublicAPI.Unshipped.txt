#nullable enable
Firebase.Functions.BuildConfig
Firebase.Functions.BuildConfig.BuildConfig() -> void
Firebase.Functions.Dagger.Assisted.AssistedAttribute
Firebase.Functions.Dagger.Assisted.AssistedAttribute.AssistedAttribute() -> void
Firebase.Functions.Dagger.Assisted.AssistedAttribute.Value.get -> string?
Firebase.Functions.Dagger.Assisted.AssistedAttribute.Value.set -> void
Firebase.Functions.Dagger.Assisted.AssistedFactoryAttribute
Firebase.Functions.Dagger.Assisted.AssistedFactoryAttribute.AssistedFactoryAttribute() -> void
Firebase.Functions.Dagger.Assisted.AssistedInjectAttribute
Firebase.Functions.Dagger.Assisted.AssistedInjectAttribute.AssistedInjectAttribute() -> void
Firebase.Functions.Dagger.Assisted.IAssisted
Firebase.Functions.Dagger.Assisted.IAssisted.Value() -> string?
Firebase.Functions.Dagger.Assisted.IAssistedFactory
Firebase.Functions.Dagger.Assisted.IAssistedInject
Firebase.Functions.Dagger.BindsAttribute
Firebase.Functions.Dagger.BindsAttribute.BindsAttribute() -> void
Firebase.Functions.Dagger.BindsInstanceAttribute
Firebase.Functions.Dagger.BindsInstanceAttribute.BindsInstanceAttribute() -> void
Firebase.Functions.Dagger.ComponentAttribute
Firebase.Functions.Dagger.ComponentAttribute.ComponentAttribute() -> void
Firebase.Functions.Dagger.ComponentAttribute.Dependencies.get -> Java.Lang.Class![]?
Firebase.Functions.Dagger.ComponentAttribute.Dependencies.set -> void
Firebase.Functions.Dagger.ComponentAttribute.Modules.get -> Java.Lang.Class![]?
Firebase.Functions.Dagger.ComponentAttribute.Modules.set -> void
Firebase.Functions.Dagger.IBinds
Firebase.Functions.Dagger.IBindsInstance
Firebase.Functions.Dagger.IComponent
Firebase.Functions.Dagger.IComponent.Dependencies() -> Java.Lang.Class![]?
Firebase.Functions.Dagger.IComponent.Modules() -> Java.Lang.Class![]?
Firebase.Functions.Dagger.IComponentBuilder
Firebase.Functions.Dagger.IComponentFactory
Firebase.Functions.Dagger.ILazy
Firebase.Functions.Dagger.ILazy.Get() -> Java.Lang.Object?
Firebase.Functions.Dagger.IModule
Firebase.Functions.Dagger.IModule.Includes() -> Java.Lang.Class![]?
Firebase.Functions.Dagger.IModule.Subcomponents() -> Java.Lang.Class![]?
Firebase.Functions.Dagger.IProvides
Firebase.Functions.Dagger.Interal.DaggerGeneratedAttribute
Firebase.Functions.Dagger.Interal.DaggerGeneratedAttribute.DaggerGeneratedAttribute() -> void
Firebase.Functions.Dagger.Interal.DoubleCheck
Firebase.Functions.Dagger.Interal.DoubleCheck.Get() -> Java.Lang.Object?
Firebase.Functions.Dagger.Interal.IDaggerGenerated
Firebase.Functions.Dagger.Interal.IFactory
Firebase.Functions.Dagger.Interal.IProvider
Firebase.Functions.Dagger.Interal.IQualifierMetadata
Firebase.Functions.Dagger.Interal.IQualifierMetadata.Value() -> string![]?
Firebase.Functions.Dagger.Interal.IScopeMetadata
Firebase.Functions.Dagger.Interal.IScopeMetadata.Value() -> string?
Firebase.Functions.Dagger.Interal.InstanceFactory
Firebase.Functions.Dagger.Interal.InstanceFactory.Get() -> Java.Lang.Object?
Firebase.Functions.Dagger.Interal.Preconditions
Firebase.Functions.Dagger.Interal.Providers
Firebase.Functions.Dagger.Interal.QualifierMetadataAttribute
Firebase.Functions.Dagger.Interal.QualifierMetadataAttribute.QualifierMetadataAttribute() -> void
Firebase.Functions.Dagger.Interal.QualifierMetadataAttribute.Value.get -> string![]?
Firebase.Functions.Dagger.Interal.QualifierMetadataAttribute.Value.set -> void
Firebase.Functions.Dagger.Interal.ScopeMetadataAttribute
Firebase.Functions.Dagger.Interal.ScopeMetadataAttribute.ScopeMetadataAttribute() -> void
Firebase.Functions.Dagger.Interal.ScopeMetadataAttribute.Value.get -> string?
Firebase.Functions.Dagger.Interal.ScopeMetadataAttribute.Value.set -> void
Firebase.Functions.Dagger.ModuleAttribute
Firebase.Functions.Dagger.ModuleAttribute.Includes.get -> Java.Lang.Class![]?
Firebase.Functions.Dagger.ModuleAttribute.Includes.set -> void
Firebase.Functions.Dagger.ModuleAttribute.ModuleAttribute() -> void
Firebase.Functions.Dagger.ModuleAttribute.Subcomponents.get -> Java.Lang.Class![]?
Firebase.Functions.Dagger.ModuleAttribute.Subcomponents.set -> void
Firebase.Functions.Dagger.ProvidesAttribute
Firebase.Functions.Dagger.ProvidesAttribute.ProvidesAttribute() -> void
Firebase.Functions.DaggerFunctionsComponent
Firebase.Functions.FirebaseContextProvider_Factory
Firebase.Functions.FirebaseContextProvider_Factory.FirebaseContextProvider_Factory(JavaX.Inject.IProvider? tokenProvider, JavaX.Inject.IProvider? instanceIdProvider, JavaX.Inject.IProvider? appCheckDeferredProvider, JavaX.Inject.IProvider? executorProvider) -> void
Firebase.Functions.FirebaseContextProvider_Factory.Get() -> Java.Lang.Object?
Firebase.Functions.FirebaseFunctions
Firebase.Functions.FirebaseFunctions.Companion
Firebase.Functions.FirebaseFunctions.Companion.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Functions.FirebaseFunctions!
Firebase.Functions.FirebaseFunctions.Companion.GetInstance(Firebase.FirebaseApp! app, string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
Firebase.Functions.FirebaseFunctions.Companion.GetInstance(string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
Firebase.Functions.FirebaseFunctions.Companion.Instance.get -> Firebase.Functions.FirebaseFunctions!
Firebase.Functions.FirebaseFunctions.GetHttpsCallable(string! name) -> Firebase.Functions.HttpsCallableReference!
Firebase.Functions.FirebaseFunctions.GetHttpsCallable(string! name, Firebase.Functions.HttpsCallableOptions! options) -> Firebase.Functions.HttpsCallableReference!
Firebase.Functions.FirebaseFunctions.GetHttpsCallableFromUrl(Java.Net.URL! url) -> Firebase.Functions.HttpsCallableReference!
Firebase.Functions.FirebaseFunctions.GetHttpsCallableFromUrl(Java.Net.URL! url, Firebase.Functions.HttpsCallableOptions! options) -> Firebase.Functions.HttpsCallableReference!
Firebase.Functions.FirebaseFunctions.UseEmulator(string! host, int port) -> void
Firebase.Functions.FirebaseFunctions.UseFunctionsEmulator(string! origin) -> void
Firebase.Functions.FirebaseFunctionsException
Firebase.Functions.FirebaseFunctionsException.Code
Firebase.Functions.FirebaseFunctionsException.Code.Companion
Firebase.Functions.FirebaseFunctionsException.Code.Companion.FromHttpStatus(int status) -> Firebase.Functions.FirebaseFunctionsException.Code!
Firebase.Functions.FirebaseFunctionsException.Code.Companion.FromValue(int value) -> Firebase.Functions.FirebaseFunctionsException.Code!
Firebase.Functions.FirebaseFunctionsException.Details.get -> Java.Lang.Object?
Firebase.Functions.FirebaseFunctionsException.GetCode() -> Firebase.Functions.FirebaseFunctionsException.Code!
Firebase.Functions.FirebaseFunctionsKtxRegistrar
Firebase.Functions.FirebaseFunctionsKtxRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Functions.FirebaseFunctionsKtxRegistrar.FirebaseFunctionsKtxRegistrar() -> void
Firebase.Functions.FirebaseFunctions_Factory
Firebase.Functions.FirebaseFunctions_Factory.FirebaseFunctions_Factory(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? projectIdProvider, JavaX.Inject.IProvider? contextProvider2, JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? uiExecutorProvider) -> void
Firebase.Functions.FirebaseFunctions_Factory.Get(string? regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions?
Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory
Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory.FunctionsComponent_MainModule_Companion_BindProjectIdFactory(JavaX.Inject.IProvider? optionsProvider) -> void
Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory.Get() -> Java.Lang.Object?
Firebase.Functions.FunctionsKt
Firebase.Functions.FunctionsMultiResourceComponent_Factory
Firebase.Functions.FunctionsMultiResourceComponent_Factory.FunctionsMultiResourceComponent_Factory(JavaX.Inject.IProvider? functionsFactoryProvider) -> void
Firebase.Functions.FunctionsMultiResourceComponent_Factory.Get() -> Java.Lang.Object?
Firebase.Functions.FunctionsMultiResourceComponent_FirebaseFunctionsFactory_Impl
Firebase.Functions.FunctionsMultiResourceComponent_FirebaseFunctionsFactory_Impl.Create(string? regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions?
Firebase.Functions.FunctionsRegistrar
Firebase.Functions.FunctionsRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Functions.FunctionsRegistrar.FunctionsRegistrar() -> void
Firebase.Functions.HttpsCallableOptions
Firebase.Functions.HttpsCallableOptions.Builder
Firebase.Functions.HttpsCallableOptions.Builder.Build() -> Firebase.Functions.HttpsCallableOptions!
Firebase.Functions.HttpsCallableOptions.Builder.Builder() -> void
Firebase.Functions.HttpsCallableOptions.Builder.LimitedUseAppCheckTokens.get -> bool
Firebase.Functions.HttpsCallableOptions.Builder.SetLimitedUseAppCheckTokens(bool limitedUse) -> Firebase.Functions.HttpsCallableOptions.Builder!
Firebase.Functions.HttpsCallableOptions.LimitedUseAppCheckTokens.get -> bool
Firebase.Functions.HttpsCallableReference
Firebase.Functions.HttpsCallableReference.Call() -> Android.Gms.Tasks.Task!
Firebase.Functions.HttpsCallableReference.Call(Java.Lang.Object? data) -> Android.Gms.Tasks.Task!
Firebase.Functions.HttpsCallableReference.SetTimeout(long timeout, Java.Util.Concurrent.TimeUnit! units) -> void
Firebase.Functions.HttpsCallableReference.Stream() -> ReactiveStreams.IPublisher!
Firebase.Functions.HttpsCallableReference.Stream(Java.Lang.Object? data) -> ReactiveStreams.IPublisher!
Firebase.Functions.HttpsCallableReference.Timeout.get -> long
Firebase.Functions.HttpsCallableReference.WithTimeout(long timeout, Java.Util.Concurrent.TimeUnit! units) -> Firebase.Functions.HttpsCallableReference!
Firebase.Functions.HttpsCallableResult
Firebase.Functions.HttpsCallableResult.Data.get -> Java.Lang.Object?
Firebase.Functions.StreamResponse
Firebase.Functions.StreamResponse.Message
Firebase.Functions.StreamResponse.Message.GetMessage() -> Firebase.Functions.HttpsCallableResult!
Firebase.Functions.StreamResponse.Message.Message(Firebase.Functions.HttpsCallableResult! message) -> void
Firebase.Functions.StreamResponse.Result
Firebase.Functions.StreamResponse.Result.GetResult() -> Firebase.Functions.HttpsCallableResult!
Firebase.Functions.StreamResponse.Result.Result(Firebase.Functions.HttpsCallableResult! result) -> void
Firebase.Functions.StreamResponse.StreamResponse(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Firebase.Functions.BuildConfig.BuildType = "release" -> string!
const Firebase.Functions.BuildConfig.Debug = false -> bool
const Firebase.Functions.BuildConfig.LibraryPackageName = "com.google.firebase.functions" -> string!
const Firebase.Functions.BuildConfig.VersionName = "22.0.0" -> string!
override Firebase.Functions.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.Dagger.Interal.DoubleCheck.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.Dagger.Interal.InstanceFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.Dagger.Interal.Preconditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.Dagger.Interal.Providers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.DaggerFunctionsComponent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseContextProvider_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctions.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctionsException.Code.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctionsException.Code.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctionsException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctionsKtxRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FirebaseFunctions_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FunctionsKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FunctionsMultiResourceComponent_Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FunctionsMultiResourceComponent_FirebaseFunctionsFactory_Impl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.FunctionsRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.HttpsCallableOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.HttpsCallableOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.HttpsCallableReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.HttpsCallableResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.StreamResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.StreamResponse.Message.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.StreamResponse.Result.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Functions.StreamResponse.ThresholdClass.get -> nint
override Firebase.Functions.StreamResponse.ThresholdType.get -> System.Type!
static Firebase.Functions.Dagger.Interal.InstanceFactory.Create(Java.Lang.Object? instance) -> Firebase.Functions.Dagger.Interal.IFactory?
static Firebase.Functions.Dagger.Interal.InstanceFactory.CreateNullable(Java.Lang.Object? instance) -> Firebase.Functions.Dagger.Interal.IFactory?
static Firebase.Functions.Dagger.Interal.Preconditions.CheckBuilderRequirement(Java.Lang.Object? requirement, Java.Lang.Class? clazz) -> void
static Firebase.Functions.Dagger.Interal.Preconditions.CheckNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static Firebase.Functions.Dagger.Interal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessage) -> Java.Lang.Object?
static Firebase.Functions.Dagger.Interal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessageTemplate, Java.Lang.Object? errorMessageArg) -> Java.Lang.Object?
static Firebase.Functions.Dagger.Interal.Preconditions.CheckNotNullFromComponent(Java.Lang.Object? reference) -> Java.Lang.Object?
static Firebase.Functions.Dagger.Interal.Preconditions.CheckNotNullFromProvides(Java.Lang.Object? reference) -> Java.Lang.Object?
static Firebase.Functions.Dagger.Interal.Providers.AsDaggerProvider(JavaX.Inject.IProvider? provider) -> Firebase.Functions.Dagger.Interal.IProvider?
static Firebase.Functions.FirebaseContextProvider_Factory.Create(JavaX.Inject.IProvider? tokenProvider, JavaX.Inject.IProvider? instanceIdProvider, JavaX.Inject.IProvider? appCheckDeferredProvider, JavaX.Inject.IProvider? executorProvider) -> Firebase.Functions.FirebaseContextProvider_Factory?
static Firebase.Functions.FirebaseContextProvider_Factory.NewInstance(Firebase.Inject.IProvider? tokenProvider, Firebase.Inject.IProvider? instanceId, Firebase.Inject.IDeferred? appCheckDeferred, Java.Util.Concurrent.IExecutor? executor) -> Java.Lang.Object?
static Firebase.Functions.FirebaseFunctions.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FirebaseFunctions.GetInstance(Firebase.FirebaseApp! app, string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FirebaseFunctions.GetInstance(string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FirebaseFunctions.Instance.get -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FirebaseFunctionsException.Code.Aborted.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.AlreadyExists.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Cancelled.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.DataLoss.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.DeadlineExceeded.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Entries.get -> Kotlin.Enums.IEnumEntries!
static Firebase.Functions.FirebaseFunctionsException.Code.FailedPrecondition.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.FromHttpStatus(int status) -> Firebase.Functions.FirebaseFunctionsException.Code!
static Firebase.Functions.FirebaseFunctionsException.Code.FromValue(int value) -> Firebase.Functions.FirebaseFunctionsException.Code!
static Firebase.Functions.FirebaseFunctionsException.Code.Internal.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.InvalidArgument.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.NotFound.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Ok.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.OutOfRange.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.PermissionDenied.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.ResourceExhausted.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Unauthenticated.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Unavailable.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Unimplemented.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Unknown.get -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.ValueOf(string? value) -> Firebase.Functions.FirebaseFunctionsException.Code?
static Firebase.Functions.FirebaseFunctionsException.Code.Values() -> Firebase.Functions.FirebaseFunctionsException.Code![]?
static Firebase.Functions.FirebaseFunctions_Factory.Create(JavaX.Inject.IProvider? contextProvider, JavaX.Inject.IProvider? projectIdProvider, JavaX.Inject.IProvider? contextProvider2, JavaX.Inject.IProvider? executorProvider, JavaX.Inject.IProvider? uiExecutorProvider) -> Firebase.Functions.FirebaseFunctions_Factory?
static Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory.BindProjectId(Firebase.FirebaseOptions? options) -> string?
static Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory.Create(JavaX.Inject.IProvider? optionsProvider) -> Firebase.Functions.FunctionsComponent_MainModule_Companion_BindProjectIdFactory?
static Firebase.Functions.FunctionsKt.Functions(Firebase.Firebase! obj, Firebase.FirebaseApp! app) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FunctionsKt.Functions(Firebase.Firebase! obj, Firebase.FirebaseApp! app, string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FunctionsKt.Functions(Firebase.Firebase! obj, string! regionOrCustomDomain) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FunctionsKt.GetFunctions(Firebase.Firebase! obj) -> Firebase.Functions.FirebaseFunctions!
static Firebase.Functions.FunctionsKt.GetHttpsCallable(Firebase.Functions.FirebaseFunctions! obj, string! name, Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Functions.HttpsCallableReference!
static Firebase.Functions.FunctionsKt.GetHttpsCallableFromUrl(Firebase.Functions.FirebaseFunctions! obj, Java.Net.URL! url, Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Functions.HttpsCallableReference!
static Firebase.Functions.FunctionsMultiResourceComponent_Factory.Create(JavaX.Inject.IProvider? functionsFactoryProvider) -> Firebase.Functions.FunctionsMultiResourceComponent_Factory?
static Firebase.Functions.FunctionsMultiResourceComponent_FirebaseFunctionsFactory_Impl.Create(Firebase.Functions.FirebaseFunctions_Factory? delegateFactory) -> JavaX.Inject.IProvider?
