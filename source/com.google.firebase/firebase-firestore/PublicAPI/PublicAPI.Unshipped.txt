#nullable enable
Firebase.Firestore.AggregateField
Firebase.Firestore.AggregateField.AggregateField(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateField.AverageAggregateField
Firebase.Firestore.AggregateField.AverageAggregateField.AverageAggregateField(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateField.CountAggregateField
Firebase.Firestore.AggregateField.CountAggregateField.CountAggregateField(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateField.SumAggregateField
Firebase.Firestore.AggregateField.SumAggregateField.SumAggregateField(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateQuery
Firebase.Firestore.AggregateQuery.AggregateQuery(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateQuerySnapshot
Firebase.Firestore.AggregateQuerySnapshot.AggregateQuerySnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.AggregateSource
Firebase.Firestore.Auth.CredentialsProvider
Firebase.Firestore.Auth.CredentialsProvider.CredentialsProvider() -> void
Firebase.Firestore.Auth.CredentialsProvider.CredentialsProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider
Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.FirebaseAppCheckTokenProvider(Firebase.Inject.IDeferred? deferredAppCheckTokenProvider) -> void
Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider
Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.FirebaseAuthCredentialsProvider(Firebase.Inject.IDeferred? deferredAuthProvider) -> void
Firebase.Firestore.Auth.Token
Firebase.Firestore.Auth.Token.Token(string? value, Firebase.Firestore.Auth.User? user) -> void
Firebase.Firestore.Auth.Token.User.get -> Firebase.Firestore.Auth.User?
Firebase.Firestore.Auth.Token.Value.get -> string?
Firebase.Firestore.Auth.User
Firebase.Firestore.Auth.User.IsAuthenticated.get -> bool
Firebase.Firestore.Auth.User.Uid.get -> string?
Firebase.Firestore.Auth.User.User(string? uid) -> void
Firebase.Firestore.Blob
Firebase.Firestore.Blob.Blob(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.BuildConfig
Firebase.Firestore.BuildConfig.BuildConfig() -> void
Firebase.Firestore.Bundle.BundleDocument
Firebase.Firestore.Bundle.BundleDocument.BundleDocument(Firebase.Firestore.Model.MutableDocument? document) -> void
Firebase.Firestore.Bundle.BundleDocument.BundleDocument(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundleLoader
Firebase.Firestore.Bundle.BundleLoader.BundleLoader(Firebase.Firestore.Bundle.IBundleCallback? bundleCallback, Firebase.Firestore.Bundle.BundleMetadata? bundleMetadata) -> void
Firebase.Firestore.Bundle.BundleLoader.BundleLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundleMetadata
Firebase.Firestore.Bundle.BundleMetadata.BundleMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundleMetadata.BundleMetadata(string? bundleId, int schemaVersion, Firebase.Firestore.Model.SnapshotVersion? createTime, int totalDocuments, long totalBytes) -> void
Firebase.Firestore.Bundle.BundleReader
Firebase.Firestore.Bundle.BundleReader.BundleReader(Firebase.Firestore.Bundle.BundleSerializer? serializer, System.IO.Stream? bundleInputStream) -> void
Firebase.Firestore.Bundle.BundleReader.BundleReader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundleSerializer
Firebase.Firestore.Bundle.BundleSerializer.BundleSerializer(Firebase.Firestore.Remote.RemoteSerializer? remoteSerializer) -> void
Firebase.Firestore.Bundle.BundleSerializer.BundleSerializer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundledDocumentMetadata
Firebase.Firestore.Bundle.BundledDocumentMetadata.BundledDocumentMetadata(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.SnapshotVersion? readTime, bool exists, System.Collections.Generic.IList<string!>? queries) -> void
Firebase.Firestore.Bundle.BundledDocumentMetadata.BundledDocumentMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.BundledQuery
Firebase.Firestore.Bundle.BundledQuery.BundledQuery(Firebase.Firestore.Core.Target? target, Firebase.Firestore.Core.Query.LimitType? limitType) -> void
Firebase.Firestore.Bundle.BundledQuery.BundledQuery(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.IBundleCallback
Firebase.Firestore.Bundle.IBundleCallback.ApplyBundledDocuments(Firebase.Database.Collection.ImmutableSortedMap? p0, string? p1) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Bundle.IBundleCallback.SaveBundle(Firebase.Firestore.Bundle.BundleMetadata? p0) -> void
Firebase.Firestore.Bundle.IBundleCallback.SaveNamedQuery(Firebase.Firestore.Bundle.NamedQuery? p0, Firebase.Database.Collection.ImmutableSortedSet? p1) -> void
Firebase.Firestore.Bundle.IBundleElement
Firebase.Firestore.Bundle.NamedQuery
Firebase.Firestore.Bundle.NamedQuery.NamedQuery(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Bundle.NamedQuery.NamedQuery(string? name, Firebase.Firestore.Bundle.BundledQuery? bundledQuery, Firebase.Firestore.Model.SnapshotVersion? readTime) -> void
Firebase.Firestore.CollectionReference
Firebase.Firestore.CollectionReference.CollectionReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ActivityScope
Firebase.Firestore.Core.ActivityScope.ActivityScope() -> void
Firebase.Firestore.Core.ActivityScope.ActivityScope(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ActivityScope.StopListenerFragment
Firebase.Firestore.Core.ActivityScope.StopListenerFragment.StopListenerFragment() -> void
Firebase.Firestore.Core.ActivityScope.StopListenerFragment.StopListenerFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment
Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment.StopListenerSupportFragment() -> void
Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment.StopListenerSupportFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ArrayContainsAnyFilter
Firebase.Firestore.Core.ArrayContainsAnyFilter.ArrayContainsAnyFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ArrayContainsFilter
Firebase.Firestore.Core.ArrayContainsFilter.ArrayContainsFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.AsyncEventListener
Firebase.Firestore.Core.AsyncEventListener.AsyncEventListener(Java.Util.Concurrent.IExecutor? executor, Firebase.Firestore.IEventListener? eventListener) -> void
Firebase.Firestore.Core.AsyncEventListener.AsyncEventListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.Bound
Firebase.Firestore.Core.Bound.Bound(System.Collections.Generic.IList<Google.Firestore.V1.Value!>? position, bool inclusive) -> void
Firebase.Firestore.Core.Bound.IsInclusive.get -> bool
Firebase.Firestore.Core.Bound.Position.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Firebase.Firestore.Core.Bound.PositionString() -> string?
Firebase.Firestore.Core.Bound.SortsAfterDocument(System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>? orderBy, Firebase.Firestore.Model.IDocument? document) -> bool
Firebase.Firestore.Core.Bound.SortsBeforeDocument(System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>? orderBy, Firebase.Firestore.Model.IDocument? document) -> bool
Firebase.Firestore.Core.ComponentProvider
Firebase.Firestore.Core.ComponentProvider.ComponentProvider(Firebase.Firestore.FirebaseFirestoreSettings? settings) -> void
Firebase.Firestore.Core.ComponentProvider.ComponentProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ComponentProvider.Configuration
Firebase.Firestore.Core.ComponentProvider.Configuration.AppCheckProvider.get -> Firebase.Firestore.Auth.CredentialsProvider?
Firebase.Firestore.Core.ComponentProvider.Configuration.AppCheckProvider.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.AsyncQueue.get -> Firebase.Firestore.Util.AsyncQueue?
Firebase.Firestore.Core.ComponentProvider.Configuration.AsyncQueue.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.AuthProvider.get -> Firebase.Firestore.Auth.CredentialsProvider?
Firebase.Firestore.Core.ComponentProvider.Configuration.AuthProvider.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.Configuration(Android.Content.Context? context, Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Core.DatabaseInfo? databaseInfo, Firebase.Firestore.Auth.User? initialUser, int maxConcurrentLimboResolutions, Firebase.Firestore.Auth.CredentialsProvider? authProvider, Firebase.Firestore.Auth.CredentialsProvider? appCheckProvider, Firebase.Firestore.Remote.IGrpcMetadataProvider? metadataProvider) -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.Context.get -> Android.Content.Context?
Firebase.Firestore.Core.ComponentProvider.Configuration.Context.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.DatabaseInfo.get -> Firebase.Firestore.Core.DatabaseInfo?
Firebase.Firestore.Core.ComponentProvider.Configuration.DatabaseInfo.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.InitialUser.get -> Firebase.Firestore.Auth.User?
Firebase.Firestore.Core.ComponentProvider.Configuration.InitialUser.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.MaxConcurrentLimboResolutions.get -> int
Firebase.Firestore.Core.ComponentProvider.Configuration.MaxConcurrentLimboResolutions.set -> void
Firebase.Firestore.Core.ComponentProvider.Configuration.MetadataProvider.get -> Firebase.Firestore.Remote.IGrpcMetadataProvider?
Firebase.Firestore.Core.ComponentProvider.Configuration.MetadataProvider.set -> void
Firebase.Firestore.Core.ComponentProvider.Settings.get -> Firebase.Firestore.FirebaseFirestoreSettings?
Firebase.Firestore.Core.ComponentProvider.Settings.set -> void
Firebase.Firestore.Core.CompositeFilter
Firebase.Firestore.Core.CompositeFilter.CompositeFilter(System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>? filters, Firebase.Firestore.Core.CompositeFilter.Operator? operator) -> void
Firebase.Firestore.Core.CompositeFilter.CompositeFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.CompositeFilter.Operator
Firebase.Firestore.Core.DatabaseInfo
Firebase.Firestore.Core.DatabaseInfo.DatabaseId.get -> Firebase.Firestore.Model.DatabaseId?
Firebase.Firestore.Core.DatabaseInfo.DatabaseInfo(Firebase.Firestore.Model.DatabaseId? databaseId, string? persistenceKey, string? host, bool sslEnabled) -> void
Firebase.Firestore.Core.DatabaseInfo.Host.get -> string?
Firebase.Firestore.Core.DatabaseInfo.IsSslEnabled.get -> bool
Firebase.Firestore.Core.DatabaseInfo.PersistenceKey.get -> string?
Firebase.Firestore.Core.DocumentViewChange
Firebase.Firestore.Core.DocumentViewChange.DocumentViewChange(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.DocumentViewChange.Type
Firebase.Firestore.Core.DocumentViewChangeSet
Firebase.Firestore.Core.DocumentViewChangeSet.DocumentViewChangeSet() -> void
Firebase.Firestore.Core.DocumentViewChangeSet.DocumentViewChangeSet(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.EventManager
Firebase.Firestore.Core.EventManager.AddQueryListener(Firebase.Firestore.Core.QueryListener? queryListener) -> int
Firebase.Firestore.Core.EventManager.AddSnapshotsInSyncListener(Firebase.Firestore.IEventListener? listener) -> void
Firebase.Firestore.Core.EventManager.EventManager(Firebase.Firestore.Core.SyncEngine? syncEngine) -> void
Firebase.Firestore.Core.EventManager.HandleOnlineStateChange(Firebase.Firestore.Core.OnlineState? onlineState) -> void
Firebase.Firestore.Core.EventManager.ListenOptions
Firebase.Firestore.Core.EventManager.ListenOptions.IncludeDocumentMetadataChanges.get -> bool
Firebase.Firestore.Core.EventManager.ListenOptions.IncludeDocumentMetadataChanges.set -> void
Firebase.Firestore.Core.EventManager.ListenOptions.IncludeQueryMetadataChanges.get -> bool
Firebase.Firestore.Core.EventManager.ListenOptions.IncludeQueryMetadataChanges.set -> void
Firebase.Firestore.Core.EventManager.ListenOptions.ListenOptions() -> void
Firebase.Firestore.Core.EventManager.ListenOptions.ListenOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.EventManager.ListenOptions.Source.get -> Firebase.Firestore.ListenSource?
Firebase.Firestore.Core.EventManager.ListenOptions.Source.set -> void
Firebase.Firestore.Core.EventManager.ListenOptions.WaitForSyncWhenOnline.get -> bool
Firebase.Firestore.Core.EventManager.ListenOptions.WaitForSyncWhenOnline.set -> void
Firebase.Firestore.Core.EventManager.OnError(Firebase.Firestore.Core.Query? query, Xamarin.Grpc.Status? error) -> void
Firebase.Firestore.Core.EventManager.OnViewSnapshots(System.Collections.Generic.IList<Firebase.Firestore.Core.ViewSnapshot!>? snapshotList) -> void
Firebase.Firestore.Core.EventManager.RemoveQueryListener(Firebase.Firestore.Core.QueryListener? listener) -> void
Firebase.Firestore.Core.EventManager.RemoveSnapshotsInSyncListener(Firebase.Firestore.IEventListener? listener) -> void
Firebase.Firestore.Core.FieldFilter
Firebase.Firestore.Core.FieldFilter.FieldFilter(Firebase.Firestore.Model.FieldPath? field, Firebase.Firestore.Core.FieldFilter.Operator? operator, Google.Firestore.V1.Value? value) -> void
Firebase.Firestore.Core.FieldFilter.FieldFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.FieldFilter.Operator
Firebase.Firestore.Core.Filter
Firebase.Firestore.Core.Filter.Filter() -> void
Firebase.Firestore.Core.Filter.Filter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.FirestoreClient
Firebase.Firestore.Core.FirestoreClient.AddSnapshotsInSyncListener(Firebase.Firestore.IEventListener? listener) -> void
Firebase.Firestore.Core.FirestoreClient.ConfigureFieldIndexes(System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex!>? fieldIndices) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.DeleteAllFieldIndexes() -> void
Firebase.Firestore.Core.FirestoreClient.DisableNetwork() -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.EnableNetwork() -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.FirestoreClient(Android.Content.Context? context, Firebase.Firestore.Core.DatabaseInfo? databaseInfo, Firebase.Firestore.Auth.CredentialsProvider? authProvider, Firebase.Firestore.Auth.CredentialsProvider? appCheckProvider, Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Remote.IGrpcMetadataProvider? metadataProvider, Firebase.Firestore.Core.ComponentProvider? componentProvider) -> void
Firebase.Firestore.Core.FirestoreClient.GetDocumentFromLocalCache(Firebase.Firestore.Model.DocumentKey? docKey) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.GetDocumentsFromLocalCache(Firebase.Firestore.Core.Query? query) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.GetNamedQuery(string? queryName) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.IsTerminated.get -> bool
Firebase.Firestore.Core.FirestoreClient.Listen(Firebase.Firestore.Core.Query? query, Firebase.Firestore.Core.EventManager.ListenOptions? options, Firebase.Firestore.IEventListener? listener) -> Firebase.Firestore.Core.QueryListener?
Firebase.Firestore.Core.FirestoreClient.LoadBundle(System.IO.Stream? bundleData, Firebase.Firestore.LoadBundleTask? resultTask) -> void
Firebase.Firestore.Core.FirestoreClient.RemoveSnapshotsInSyncListener(Firebase.Firestore.IEventListener? listener) -> void
Firebase.Firestore.Core.FirestoreClient.RunAggregateQuery(Firebase.Firestore.Core.Query? query, System.Collections.Generic.IList<Firebase.Firestore.AggregateField!>? aggregateFields) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.SetIndexAutoCreationEnabled(bool isEnabled) -> void
Firebase.Firestore.Core.FirestoreClient.StopListening(Firebase.Firestore.Core.QueryListener? listener) -> void
Firebase.Firestore.Core.FirestoreClient.Terminate() -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.Transaction(Firebase.Firestore.TransactionOptions? options, Firebase.Firestore.Util.IFunction? updateFunction) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.WaitForPendingWrites() -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.FirestoreClient.Write(System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? mutations) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Core.InFilter
Firebase.Firestore.Core.InFilter.InFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.KeyFieldFilter
Firebase.Firestore.Core.KeyFieldFilter.KeyFieldFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.KeyFieldInFilter
Firebase.Firestore.Core.KeyFieldInFilter.KeyFieldInFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.KeyFieldNotInFilter
Firebase.Firestore.Core.KeyFieldNotInFilter.KeyFieldNotInFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.LimboDocumentChange
Firebase.Firestore.Core.LimboDocumentChange.LimboDocumentChange(Firebase.Firestore.Core.LimboDocumentChange.Type? type, Firebase.Firestore.Model.DocumentKey? key) -> void
Firebase.Firestore.Core.LimboDocumentChange.LimboDocumentChange(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.LimboDocumentChange.Type
Firebase.Firestore.Core.ListenSequence
Firebase.Firestore.Core.ListenSequence.ListenSequence(long startAfter) -> void
Firebase.Firestore.Core.ListenSequence.ListenSequence(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.MemoryComponentProvider
Firebase.Firestore.Core.MemoryComponentProvider.MemoryComponentProvider(Firebase.Firestore.FirebaseFirestoreSettings? settings) -> void
Firebase.Firestore.Core.MemoryComponentProvider.MemoryComponentProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.NotInFilter
Firebase.Firestore.Core.NotInFilter.NotInFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.OnlineState
Firebase.Firestore.Core.OrderBy
Firebase.Firestore.Core.OrderBy.Direction
Firebase.Firestore.Core.OrderBy.OrderBy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.Query
Firebase.Firestore.Core.Query.AsCollectionQueryAtPath(Firebase.Firestore.Model.ResourcePath? path) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.CanonicalId.get -> string?
Firebase.Firestore.Core.Query.CollectionGroup.get -> string?
Firebase.Firestore.Core.Query.Comparator() -> Java.Util.IComparator?
Firebase.Firestore.Core.Query.EndAt.get -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Query.ExplicitOrderBy.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>?
Firebase.Firestore.Core.Query.Filter(Firebase.Firestore.Core.Filter? filter) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.Filters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
Firebase.Firestore.Core.Query.GetLimitType() -> Firebase.Firestore.Core.Query.LimitType?
Firebase.Firestore.Core.Query.HasLimit.get -> bool
Firebase.Firestore.Core.Query.InequalityFilterFields.get -> Java.Util.ISortedSet?
Firebase.Firestore.Core.Query.InvokeEndAt(Firebase.Firestore.Core.Bound? bound) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.InvokeStartAt(Firebase.Firestore.Core.Bound? bound) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.IsCollectionGroupQuery.get -> bool
Firebase.Firestore.Core.Query.IsDocumentQuery.get -> bool
Firebase.Firestore.Core.Query.Limit.get -> long
Firebase.Firestore.Core.Query.LimitToFirst(long limit) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.LimitToLast(long limit) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.LimitType
Firebase.Firestore.Core.Query.Matches(Firebase.Firestore.Model.IDocument? doc) -> bool
Firebase.Firestore.Core.Query.MatchesAllDocuments() -> bool
Firebase.Firestore.Core.Query.NormalizedOrderBy.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>?
Firebase.Firestore.Core.Query.OrderBy(Firebase.Firestore.Core.OrderBy? order) -> Firebase.Firestore.Core.Query?
Firebase.Firestore.Core.Query.Path.get -> Firebase.Firestore.Model.ResourcePath?
Firebase.Firestore.Core.Query.Query(Firebase.Firestore.Model.ResourcePath? path, string? collectionGroup) -> void
Firebase.Firestore.Core.Query.Query(Firebase.Firestore.Model.ResourcePath? path, string? collectionGroup, System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>? filters, System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>? explicitSortOrder, long limit, Firebase.Firestore.Core.Query.LimitType? limitType, Firebase.Firestore.Core.Bound? startAt, Firebase.Firestore.Core.Bound? endAt) -> void
Firebase.Firestore.Core.Query.StartAt.get -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Query.ToAggregateTarget() -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Core.Query.ToTarget() -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Core.QueryListener
Firebase.Firestore.Core.QueryListener.QueryListener(Firebase.Firestore.Core.Query? query, Firebase.Firestore.Core.EventManager.ListenOptions? options, Firebase.Firestore.IEventListener? listener) -> void
Firebase.Firestore.Core.QueryListener.QueryListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.SQLiteComponentProvider
Firebase.Firestore.Core.SQLiteComponentProvider.SQLiteComponentProvider(Firebase.Firestore.FirebaseFirestoreSettings? settings) -> void
Firebase.Firestore.Core.SQLiteComponentProvider.SQLiteComponentProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.SyncEngine
Firebase.Firestore.Core.SyncEngine.SyncEngine(Firebase.Firestore.Local.LocalStore? localStore, Firebase.Firestore.Remote.RemoteStore? remoteStore, Firebase.Firestore.Auth.User? initialUser, int maxConcurrentLimboResolutions) -> void
Firebase.Firestore.Core.SyncEngine.SyncEngine(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.Target
Firebase.Firestore.Core.Target.CanonicalId.get -> string?
Firebase.Firestore.Core.Target.CollectionGroup.get -> string?
Firebase.Firestore.Core.Target.EndAt.get -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Target.Filters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
Firebase.Firestore.Core.Target.GetArrayValues(Firebase.Firestore.Model.FieldIndex? fieldIndex) -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Firebase.Firestore.Core.Target.GetLowerBound(Firebase.Firestore.Model.FieldIndex? fieldIndex) -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Target.GetNotInValues(Firebase.Firestore.Model.FieldIndex? fieldIndex) -> System.Collections.Generic.ICollection<Google.Firestore.V1.Value!>?
Firebase.Firestore.Core.Target.GetUpperBound(Firebase.Firestore.Model.FieldIndex? fieldIndex) -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Target.HasLimit.get -> bool
Firebase.Firestore.Core.Target.IsDocumentQuery.get -> bool
Firebase.Firestore.Core.Target.KeyOrder.get -> Firebase.Firestore.Core.OrderBy.Direction?
Firebase.Firestore.Core.Target.Limit.get -> long
Firebase.Firestore.Core.Target.OrderBy.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>?
Firebase.Firestore.Core.Target.Path.get -> Firebase.Firestore.Model.ResourcePath?
Firebase.Firestore.Core.Target.SegmentCount.get -> int
Firebase.Firestore.Core.Target.StartAt.get -> Firebase.Firestore.Core.Bound?
Firebase.Firestore.Core.Target.Target(Firebase.Firestore.Model.ResourcePath? path, string? collectionGroup, System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>? filters, System.Collections.Generic.IList<Firebase.Firestore.Core.OrderBy!>? orderBys, long limit, Firebase.Firestore.Core.Bound? startAt, Firebase.Firestore.Core.Bound? endAt) -> void
Firebase.Firestore.Core.TargetIdGenerator
Firebase.Firestore.Core.TargetIdGenerator.TargetIdGenerator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.Transaction
Firebase.Firestore.Core.Transaction.Transaction(Firebase.Firestore.Remote.Datastore? d) -> void
Firebase.Firestore.Core.Transaction.Transaction(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.TransactionRunner
Firebase.Firestore.Core.TransactionRunner.TransactionRunner(Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Remote.RemoteStore? remoteStore, Firebase.Firestore.TransactionOptions? options, Firebase.Firestore.Util.IFunction? updateFunction) -> void
Firebase.Firestore.Core.TransactionRunner.TransactionRunner(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.UserData
Firebase.Firestore.Core.UserData.ParseAccumulator
Firebase.Firestore.Core.UserData.ParseAccumulator.ParseAccumulator(Firebase.Firestore.Core.UserData.Source? dataSource) -> void
Firebase.Firestore.Core.UserData.ParseAccumulator.ParseAccumulator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.UserData.ParseContext
Firebase.Firestore.Core.UserData.ParseContext.ParseContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.UserData.ParsedSetData
Firebase.Firestore.Core.UserData.ParsedSetData.ParsedSetData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.UserData.ParsedUpdateData
Firebase.Firestore.Core.UserData.ParsedUpdateData.ParsedUpdateData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.UserData.Source
Firebase.Firestore.Core.UserData.UserData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.View
Firebase.Firestore.Core.View.DocumentChanges
Firebase.Firestore.Core.View.DocumentChanges.DocumentChanges(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.View.View(Firebase.Firestore.Core.Query? query, Firebase.Database.Collection.ImmutableSortedSet? remoteDocuments) -> void
Firebase.Firestore.Core.View.View(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ViewChange
Firebase.Firestore.Core.ViewChange.ViewChange(Firebase.Firestore.Core.ViewSnapshot? snapshot, System.Collections.Generic.IList<Firebase.Firestore.Core.LimboDocumentChange!>? limboChanges) -> void
Firebase.Firestore.Core.ViewChange.ViewChange(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Core.ViewSnapshot
Firebase.Firestore.Core.ViewSnapshot.SyncState
Firebase.Firestore.Core.ViewSnapshot.ViewSnapshot(Firebase.Firestore.Core.Query? query, Firebase.Firestore.Model.DocumentSet? documents, Firebase.Firestore.Model.DocumentSet? oldDocuments, System.Collections.Generic.IList<Firebase.Firestore.Core.DocumentViewChange!>? changes, bool isFromCache, Firebase.Database.Collection.ImmutableSortedSet? mutatedKeys, bool didSyncStateChange, bool excludesMetadataChanges, bool hasCachedResults) -> void
Firebase.Firestore.Core.ViewSnapshot.ViewSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.DocumentChange
Firebase.Firestore.DocumentChange.DocumentChange(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.DocumentChange.Type
Firebase.Firestore.DocumentIdAttribute
Firebase.Firestore.DocumentIdAttribute.DocumentIdAttribute() -> void
Firebase.Firestore.DocumentReference
Firebase.Firestore.DocumentReference.DocumentReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.DocumentSnapshot
Firebase.Firestore.DocumentSnapshot.DocumentSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior
Firebase.Firestore.EventEventArgs
Firebase.Firestore.EventEventArgs.Error.get -> Firebase.Firestore.FirebaseFirestoreException?
Firebase.Firestore.EventEventArgs.EventEventArgs(Java.Lang.Object? obj, Firebase.Firestore.FirebaseFirestoreException? error) -> void
Firebase.Firestore.EventEventArgs.Obj.get -> Java.Lang.Object?
Firebase.Firestore.ExcludeAttribute
Firebase.Firestore.ExcludeAttribute.ExcludeAttribute() -> void
Firebase.Firestore.FieldPath
Firebase.Firestore.FieldValue
Firebase.Firestore.FieldValue.FieldValue(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Filter
Firebase.Firestore.Filter.Filter() -> void
Firebase.Firestore.Filter.Filter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.FirebaseFirestore
Firebase.Firestore.FirebaseFirestore.FirebaseFirestore(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.FirebaseFirestore.IInstanceRegistry
Firebase.Firestore.FirebaseFirestore.IInstanceRegistry.Remove(string! p0) -> void
Firebase.Firestore.FirebaseFirestoreException
Firebase.Firestore.FirebaseFirestoreException.Code
Firebase.Firestore.FirebaseFirestoreException.Code.Value() -> int
Firebase.Firestore.FirebaseFirestoreException.FirebaseFirestoreException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.FirebaseFirestoreException.FirebaseFirestoreException(string! detailMessage, Firebase.Firestore.FirebaseFirestoreException.Code! code) -> void
Firebase.Firestore.FirebaseFirestoreException.FirebaseFirestoreException(string! detailMessage, Firebase.Firestore.FirebaseFirestoreException.Code! code, Java.Lang.Throwable? cause) -> void
Firebase.Firestore.FirebaseFirestoreKtxRegistrar
Firebase.Firestore.FirebaseFirestoreKtxRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Firestore.FirebaseFirestoreKtxRegistrar.FirebaseFirestoreKtxRegistrar() -> void
Firebase.Firestore.FirebaseFirestoreSettings
Firebase.Firestore.FirebaseFirestoreSettings.Builder
Firebase.Firestore.FirebaseFirestoreSettings.Builder.Build() -> Firebase.Firestore.FirebaseFirestoreSettings!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.Builder() -> void
Firebase.Firestore.FirebaseFirestoreSettings.Builder.Builder(Firebase.Firestore.FirebaseFirestoreSettings! settings) -> void
Firebase.Firestore.FirebaseFirestoreSettings.Builder.CacheSizeBytes.get -> long
Firebase.Firestore.FirebaseFirestoreSettings.Builder.Host.get -> string!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.IsPersistenceEnabled.get -> bool
Firebase.Firestore.FirebaseFirestoreSettings.Builder.IsSslEnabled.get -> bool
Firebase.Firestore.FirebaseFirestoreSettings.Builder.SetCacheSizeBytes(long value) -> Firebase.Firestore.FirebaseFirestoreSettings.Builder!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.SetHost(string! host) -> Firebase.Firestore.FirebaseFirestoreSettings.Builder!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.SetLocalCacheSettings(Firebase.Firestore.ILocalCacheSettings! settings) -> Firebase.Firestore.FirebaseFirestoreSettings.Builder!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.SetPersistenceEnabled(bool value) -> Firebase.Firestore.FirebaseFirestoreSettings.Builder!
Firebase.Firestore.FirebaseFirestoreSettings.Builder.SetSslEnabled(bool value) -> Firebase.Firestore.FirebaseFirestoreSettings.Builder!
Firebase.Firestore.FirebaseFirestoreSettings.CacheSettings.get -> Firebase.Firestore.ILocalCacheSettings?
Firebase.Firestore.FirebaseFirestoreSettings.CacheSizeBytes.get -> long
Firebase.Firestore.FirebaseFirestoreSettings.Host.get -> string!
Firebase.Firestore.FirebaseFirestoreSettings.IsPersistenceEnabled.get -> bool
Firebase.Firestore.FirebaseFirestoreSettings.IsSslEnabled.get -> bool
Firebase.Firestore.FirestoreKt
Firebase.Firestore.FirestoreRegistrar
Firebase.Firestore.FirestoreRegistrar.FirestoreRegistrar() -> void
Firebase.Firestore.FirestoreRegistrar.FirestoreRegistrar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.GeoPoint
Firebase.Firestore.GeoPoint.GeoPoint(double latitude, double longitude) -> void
Firebase.Firestore.GeoPoint.GeoPoint(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.IDocumentId
Firebase.Firestore.IEventListener
Firebase.Firestore.IEventListener.OnEvent(Java.Lang.Object? obj, Firebase.Firestore.FirebaseFirestoreException? error) -> void
Firebase.Firestore.IExclude
Firebase.Firestore.IIgnoreExtraProperties
Firebase.Firestore.IListenerRegistration
Firebase.Firestore.IListenerRegistration.Remove() -> void
Firebase.Firestore.ILocalCacheSettings
Firebase.Firestore.IMemoryGarbageCollectorSettings
Firebase.Firestore.IOnProgressListener
Firebase.Firestore.IOnProgressListener.OnProgress(Java.Lang.Object! p0) -> void
Firebase.Firestore.IPropertyName
Firebase.Firestore.IPropertyName.Value() -> string?
Firebase.Firestore.IServerTimestamp
Firebase.Firestore.IThrowOnExtraProperties
Firebase.Firestore.IgnoreExtraPropertiesAttribute
Firebase.Firestore.IgnoreExtraPropertiesAttribute.IgnoreExtraPropertiesAttribute() -> void
Firebase.Firestore.Index.DirectionalIndexByteEncoder
Firebase.Firestore.Index.DirectionalIndexByteEncoder.DirectionalIndexByteEncoder() -> void
Firebase.Firestore.Index.DirectionalIndexByteEncoder.DirectionalIndexByteEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Index.FirestoreIndexValueWriter
Firebase.Firestore.Index.FirestoreIndexValueWriter.FirestoreIndexValueWriter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Index.IndexByteEncoder
Firebase.Firestore.Index.IndexByteEncoder.IndexByteEncoder() -> void
Firebase.Firestore.Index.IndexByteEncoder.IndexByteEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Index.IndexEntry
Firebase.Firestore.Index.IndexEntry.IndexEntry() -> void
Firebase.Firestore.Index.IndexEntry.IndexEntry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Index.IntMath
Firebase.Firestore.Index.OrderedCodeWriter
Firebase.Firestore.Index.OrderedCodeWriter.OrderedCodeWriter() -> void
Firebase.Firestore.Index.OrderedCodeWriter.OrderedCodeWriter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Index.OrderedCodeWriter.WriteUtf8Ascending(string? sequence) -> void
Firebase.Firestore.Index.OrderedCodeWriter.WriteUtf8Descending(string? sequence) -> void
Firebase.Firestore.Ktx.FirebaseFirestoreKtxRegistrar
Firebase.Firestore.Ktx.FirebaseFirestoreKtxRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>!
Firebase.Firestore.Ktx.FirebaseFirestoreKtxRegistrar.FirebaseFirestoreKtxRegistrar() -> void
Firebase.Firestore.Ktx.FirestoreKt
Firebase.Firestore.ListenSource
Firebase.Firestore.LoadBundleTask
Firebase.Firestore.LoadBundleTask.LoadBundleTask() -> void
Firebase.Firestore.LoadBundleTask.LoadBundleTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.LoadBundleTaskProgress
Firebase.Firestore.LoadBundleTaskProgress.BytesLoaded.get -> long
Firebase.Firestore.LoadBundleTaskProgress.DocumentsLoaded.get -> int
Firebase.Firestore.LoadBundleTaskProgress.Exception.get -> Java.Lang.Exception?
Firebase.Firestore.LoadBundleTaskProgress.GetTaskState() -> Firebase.Firestore.LoadBundleTaskProgress.TaskState!
Firebase.Firestore.LoadBundleTaskProgress.LoadBundleTaskProgress(int documentsLoaded, int totalDocuments, long bytesLoaded, long totalBytes, Java.Lang.Exception? exception, Firebase.Firestore.LoadBundleTaskProgress.TaskState! taskState) -> void
Firebase.Firestore.LoadBundleTaskProgress.TaskState
Firebase.Firestore.LoadBundleTaskProgress.TotalBytes.get -> long
Firebase.Firestore.LoadBundleTaskProgress.TotalDocuments.get -> int
Firebase.Firestore.Local.IBundleCache
Firebase.Firestore.Local.IBundleCache.GetBundleMetadata(string? p0) -> Firebase.Firestore.Bundle.BundleMetadata?
Firebase.Firestore.Local.IBundleCache.GetNamedQuery(string? p0) -> Firebase.Firestore.Bundle.NamedQuery?
Firebase.Firestore.Local.IBundleCache.SaveBundleMetadata(Firebase.Firestore.Bundle.BundleMetadata? p0) -> void
Firebase.Firestore.Local.IBundleCache.SaveNamedQuery(Firebase.Firestore.Bundle.NamedQuery? p0) -> void
Firebase.Firestore.Local.IDocumentOverlayCache
Firebase.Firestore.Local.IDocumentOverlayCache.GetOverlay(Firebase.Firestore.Model.DocumentKey? p0) -> Firebase.Firestore.Model.Mutation.Overlay?
Firebase.Firestore.Local.IDocumentOverlayCache.GetOverlays(Firebase.Firestore.Model.ResourcePath? p0, int p1) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
Firebase.Firestore.Local.IDocumentOverlayCache.GetOverlays(Java.Util.ISortedSet? p0) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
Firebase.Firestore.Local.IDocumentOverlayCache.GetOverlays(string? p0, int p1, int p2) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
Firebase.Firestore.Local.IDocumentOverlayCache.RemoveOverlaysForBatchId(int p0) -> void
Firebase.Firestore.Local.IDocumentOverlayCache.SaveOverlays(int p0, System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Mutation!>? p1) -> void
Firebase.Firestore.Local.IIndexManager
Firebase.Firestore.Local.IIndexManager.AddFieldIndex(Firebase.Firestore.Model.FieldIndex? p0) -> void
Firebase.Firestore.Local.IIndexManager.AddToCollectionParentIndex(Firebase.Firestore.Model.ResourcePath? p0) -> void
Firebase.Firestore.Local.IIndexManager.CreateTargetIndexes(Firebase.Firestore.Core.Target? p0) -> void
Firebase.Firestore.Local.IIndexManager.DeleteAllFieldIndexes() -> void
Firebase.Firestore.Local.IIndexManager.DeleteFieldIndex(Firebase.Firestore.Model.FieldIndex? p0) -> void
Firebase.Firestore.Local.IIndexManager.FieldIndexes.get -> System.Collections.Generic.ICollection<Firebase.Firestore.Model.FieldIndex!>?
Firebase.Firestore.Local.IIndexManager.GetCollectionParents(string? p0) -> System.Collections.Generic.IList<Firebase.Firestore.Model.ResourcePath!>?
Firebase.Firestore.Local.IIndexManager.GetDocumentsMatchingTarget(Firebase.Firestore.Core.Target? p0) -> System.Collections.Generic.IList<Firebase.Firestore.Model.DocumentKey!>?
Firebase.Firestore.Local.IIndexManager.GetFieldIndexes(string? p0) -> System.Collections.Generic.ICollection<Firebase.Firestore.Model.FieldIndex!>?
Firebase.Firestore.Local.IIndexManager.GetIndexType(Firebase.Firestore.Core.Target? p0) -> Firebase.Firestore.Local.IndexManagerIndexType?
Firebase.Firestore.Local.IIndexManager.GetMinOffset(Firebase.Firestore.Core.Target? p0) -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
Firebase.Firestore.Local.IIndexManager.GetMinOffset(string? p0) -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
Firebase.Firestore.Local.IIndexManager.NextCollectionGroupToUpdate.get -> string?
Firebase.Firestore.Local.IIndexManager.Start() -> void
Firebase.Firestore.Local.IIndexManager.UpdateCollectionGroup(string? p0, Firebase.Firestore.Model.FieldIndex.IndexOffset? p1) -> void
Firebase.Firestore.Local.IIndexManager.UpdateIndexEntries(Firebase.Database.Collection.ImmutableSortedMap? p0) -> void
Firebase.Firestore.Local.ILruDelegate
Firebase.Firestore.Local.ILruDelegate.ByteSize.get -> long
Firebase.Firestore.Local.ILruDelegate.ForEachOrphanedDocumentSequenceNumber(Firebase.Firestore.Util.IConsumer? p0) -> void
Firebase.Firestore.Local.ILruDelegate.ForEachTarget(Firebase.Firestore.Util.IConsumer? p0) -> void
Firebase.Firestore.Local.ILruDelegate.GarbageCollector.get -> Firebase.Firestore.Local.LruGarbageCollector?
Firebase.Firestore.Local.ILruDelegate.RemoveOrphanedDocuments(long p0) -> int
Firebase.Firestore.Local.ILruDelegate.RemoveTargets(long p0, Android.Util.SparseArray? p1) -> int
Firebase.Firestore.Local.ILruDelegate.SequenceNumberCount.get -> long
Firebase.Firestore.Local.IOverlayMigrationManager
Firebase.Firestore.Local.IOverlayMigrationManager.Run() -> void
Firebase.Firestore.Local.IScheduler
Firebase.Firestore.Local.IScheduler.Start() -> void
Firebase.Firestore.Local.IScheduler.Stop() -> void
Firebase.Firestore.Local.IndexBackfiller
Firebase.Firestore.Local.IndexBackfiller.IndexBackfiller(Firebase.Firestore.Local.Persistence? persistence, Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Local.LocalStore? localStore) -> void
Firebase.Firestore.Local.IndexBackfiller.IndexBackfiller(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.IndexBackfiller.Scheduler
Firebase.Firestore.Local.IndexBackfiller.Scheduler.Scheduler(Firebase.Firestore.Local.IndexBackfiller? __self, Firebase.Firestore.Util.AsyncQueue? asyncQueue) -> void
Firebase.Firestore.Local.IndexBackfiller.Scheduler.Scheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.IndexManagerIndexType
Firebase.Firestore.Local.LocalDocumentsResult
Firebase.Firestore.Local.LocalDocumentsResult.BatchId.get -> int
Firebase.Firestore.Local.LocalDocumentsResult.Documents.get -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalSerializer
Firebase.Firestore.Local.LocalSerializer.DecodeBundledQuery(Firestore.Bundle.BundledQuery? bundledQuery) -> Firebase.Firestore.Bundle.BundledQuery?
Firebase.Firestore.Local.LocalSerializer.DecodeFieldIndexSegments(Firestore.Admin.V1.Index? index) -> System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex.Segment!>?
Firebase.Firestore.Local.LocalSerializer.DecodeMutation(Google.Firestore.V1.Write? mutation) -> Firebase.Firestore.Model.Mutation.Mutation?
Firebase.Firestore.Local.LocalSerializer.EncodeBundledQuery(Firebase.Firestore.Bundle.BundledQuery? bundledQuery) -> Firestore.Bundle.BundledQuery?
Firebase.Firestore.Local.LocalSerializer.EncodeFieldIndexSegments(System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex.Segment!>? segments) -> Firestore.Admin.V1.Index?
Firebase.Firestore.Local.LocalSerializer.EncodeMutation(Firebase.Firestore.Model.Mutation.Mutation? mutation) -> Google.Firestore.V1.Write?
Firebase.Firestore.Local.LocalSerializer.LocalSerializer(Firebase.Firestore.Remote.RemoteSerializer? rpcSerializer) -> void
Firebase.Firestore.Local.LocalStore
Firebase.Firestore.Local.LocalStore.AcknowledgeBatch(Firebase.Firestore.Model.Mutation.MutationBatchResult? batchResult) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalStore.AllocateTarget(Firebase.Firestore.Core.Target? target) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Local.LocalStore.ApplyBundledDocuments(Firebase.Database.Collection.ImmutableSortedMap? documents, string? bundleId) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalStore.ApplyRemoteEvent(Firebase.Firestore.Remote.RemoteEvent? remoteEvent) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalStore.CollectGarbage(Firebase.Firestore.Local.LruGarbageCollector? garbageCollector) -> Firebase.Firestore.Local.LruGarbageCollector.Results?
Firebase.Firestore.Local.LocalStore.ConfigureFieldIndexes(System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex!>? newFieldIndexes) -> void
Firebase.Firestore.Local.LocalStore.DeleteAllFieldIndexes() -> void
Firebase.Firestore.Local.LocalStore.ExecuteQuery(Firebase.Firestore.Core.Query? query, bool usePreviousResults) -> Firebase.Firestore.Local.QueryResult?
Firebase.Firestore.Local.LocalStore.GetNamedQuery(string? queryName) -> Firebase.Firestore.Bundle.NamedQuery?
Firebase.Firestore.Local.LocalStore.GetNextMutationBatch(int afterBatchId) -> Firebase.Firestore.Model.Mutation.MutationBatch?
Firebase.Firestore.Local.LocalStore.GetRemoteDocumentKeys(int targetId) -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Local.LocalStore.HandleUserChange(Firebase.Firestore.Auth.User? user) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalStore.HasNewerBundle(Firebase.Firestore.Bundle.BundleMetadata? bundleMetadata) -> bool
Firebase.Firestore.Local.LocalStore.HighestUnacknowledgedBatchId.get -> int
Firebase.Firestore.Local.LocalStore.IndexManagerForCurrentUser.get -> Firebase.Firestore.Local.IIndexManager?
Firebase.Firestore.Local.LocalStore.LastRemoteSnapshotVersion.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Local.LocalStore.LastStreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Local.LocalStore.LastStreamToken.set -> void
Firebase.Firestore.Local.LocalStore.LocalDocumentsForCurrentUser.get -> Java.Lang.Object?
Firebase.Firestore.Local.LocalStore.LocalStore(Firebase.Firestore.Local.Persistence? persistence, Firebase.Firestore.Local.QueryEngine? queryEngine, Firebase.Firestore.Auth.User? initialUser) -> void
Firebase.Firestore.Local.LocalStore.NotifyLocalViewChanges(System.Collections.Generic.IList<Firebase.Firestore.Local.LocalViewChanges!>? viewChanges) -> void
Firebase.Firestore.Local.LocalStore.ReadDocument(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.IDocument?
Firebase.Firestore.Local.LocalStore.RejectBatch(int batchId) -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Local.LocalStore.ReleaseTarget(int targetId) -> void
Firebase.Firestore.Local.LocalStore.SaveBundle(Firebase.Firestore.Bundle.BundleMetadata? bundleMetadata) -> void
Firebase.Firestore.Local.LocalStore.SaveNamedQuery(Firebase.Firestore.Bundle.NamedQuery? namedQuery, Firebase.Database.Collection.ImmutableSortedSet? documentKeys) -> void
Firebase.Firestore.Local.LocalStore.SessionToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Local.LocalStore.SetIndexAutoCreationEnabled(bool isEnabled) -> void
Firebase.Firestore.Local.LocalStore.SetSessionsToken(Xamarin.Protobuf.Lite.ByteString? sessionToken) -> void
Firebase.Firestore.Local.LocalStore.Start() -> void
Firebase.Firestore.Local.LocalStore.WriteLocally(System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? mutations) -> Firebase.Firestore.Local.LocalDocumentsResult?
Firebase.Firestore.Local.LocalViewChanges
Firebase.Firestore.Local.LocalViewChanges.Added.get -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Local.LocalViewChanges.IsFromCache.get -> bool
Firebase.Firestore.Local.LocalViewChanges.LocalViewChanges(int targetId, bool fromCache, Firebase.Database.Collection.ImmutableSortedSet? added, Firebase.Database.Collection.ImmutableSortedSet? removed) -> void
Firebase.Firestore.Local.LocalViewChanges.Removed.get -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Local.LocalViewChanges.TargetId.get -> int
Firebase.Firestore.Local.LruGarbageCollector
Firebase.Firestore.Local.LruGarbageCollector.GCScheduler
Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.GCScheduler(Firebase.Firestore.Local.LruGarbageCollector? __self, Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Local.LocalStore? localStore) -> void
Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.GCScheduler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.LruGarbageCollector.LruGarbageCollector(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.LruGarbageCollector.Params
Firebase.Firestore.Local.LruGarbageCollector.Params.Params(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.LruGarbageCollector.Results
Firebase.Firestore.Local.LruGarbageCollector.Results.Results(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.MemoryDocumentOverlayCache
Firebase.Firestore.Local.MemoryDocumentOverlayCache.MemoryDocumentOverlayCache() -> void
Firebase.Firestore.Local.MemoryDocumentOverlayCache.MemoryDocumentOverlayCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.MemoryOverlayMigrationManager
Firebase.Firestore.Local.MemoryOverlayMigrationManager.MemoryOverlayMigrationManager() -> void
Firebase.Firestore.Local.MemoryOverlayMigrationManager.MemoryOverlayMigrationManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.MemoryPersistence
Firebase.Firestore.Local.OverlayedDocument
Firebase.Firestore.Local.OverlayedDocument.OverlayedDocument(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.Persistence
Firebase.Firestore.Local.Persistence.Persistence(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.QueryContext
Firebase.Firestore.Local.QueryContext.QueryContext() -> void
Firebase.Firestore.Local.QueryContext.QueryContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.QueryEngine
Firebase.Firestore.Local.QueryEngine.QueryEngine() -> void
Firebase.Firestore.Local.QueryEngine.QueryEngine(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.QueryPurpose
Firebase.Firestore.Local.QueryResult
Firebase.Firestore.Local.QueryResult.QueryResult(Firebase.Database.Collection.ImmutableSortedMap? documents, Firebase.Database.Collection.ImmutableSortedSet? remoteKeys) -> void
Firebase.Firestore.Local.QueryResult.QueryResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.ReferenceSet
Firebase.Firestore.Local.ReferenceSet.ReferenceSet() -> void
Firebase.Firestore.Local.ReferenceSet.ReferenceSet(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.SQLiteDocumentOverlayCache
Firebase.Firestore.Local.SQLiteDocumentOverlayCache.SQLiteDocumentOverlayCache(Firebase.Firestore.Local.SQLitePersistence? db, Firebase.Firestore.Local.LocalSerializer? serializer, Firebase.Firestore.Auth.User? user) -> void
Firebase.Firestore.Local.SQLiteDocumentOverlayCache.SQLiteDocumentOverlayCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.SQLiteGlobalsCache
Firebase.Firestore.Local.SQLiteGlobalsCache.SQLiteGlobalsCache(Firebase.Firestore.Local.SQLitePersistence? persistence) -> void
Firebase.Firestore.Local.SQLiteGlobalsCache.SQLiteGlobalsCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.SQLiteOverlayMigrationManager
Firebase.Firestore.Local.SQLiteOverlayMigrationManager.SQLiteOverlayMigrationManager(Firebase.Firestore.Local.SQLitePersistence? persistence) -> void
Firebase.Firestore.Local.SQLiteOverlayMigrationManager.SQLiteOverlayMigrationManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Local.SQLitePersistence
Firebase.Firestore.Local.SQLitePersistence.SQLitePersistence(Android.Content.Context? context, string? persistenceKey, Firebase.Firestore.Model.DatabaseId? databaseId, Firebase.Firestore.Local.LocalSerializer? serializer, Firebase.Firestore.Local.LruGarbageCollector.Params? params) -> void
Firebase.Firestore.Local.TargetData
Firebase.Firestore.Local.TargetData.ExpectedCount.get -> Java.Lang.Integer?
Firebase.Firestore.Local.TargetData.LastLimboFreeSnapshotVersion.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Local.TargetData.Purpose.get -> Firebase.Firestore.Local.QueryPurpose?
Firebase.Firestore.Local.TargetData.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Local.TargetData.SequenceNumber.get -> long
Firebase.Firestore.Local.TargetData.SnapshotVersion.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Local.TargetData.Target.get -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Local.TargetData.TargetData(Firebase.Firestore.Core.Target? target, int targetId, long sequenceNumber, Firebase.Firestore.Local.QueryPurpose? purpose) -> void
Firebase.Firestore.Local.TargetData.TargetId.get -> int
Firebase.Firestore.Local.TargetData.WithExpectedCount(Java.Lang.Integer? expectedCount) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Local.TargetData.WithLastLimboFreeSnapshotVersion(Firebase.Firestore.Model.SnapshotVersion? lastLimboFreeSnapshotVersion) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Local.TargetData.WithResumeToken(Xamarin.Protobuf.Lite.ByteString? resumeToken, Firebase.Firestore.Model.SnapshotVersion? snapshotVersion) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Local.TargetData.WithSequenceNumber(long sequenceNumber) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.MemoryCacheSettings
Firebase.Firestore.MemoryCacheSettings.Builder
Firebase.Firestore.MemoryCacheSettings.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.MemoryCacheSettings.GarbageCollectorSettings.get -> Firebase.Firestore.IMemoryGarbageCollectorSettings!
Firebase.Firestore.MemoryEagerGcSettings
Firebase.Firestore.MemoryEagerGcSettings.Builder
Firebase.Firestore.MemoryEagerGcSettings.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.MemoryLruGcSettings
Firebase.Firestore.MemoryLruGcSettings.Builder
Firebase.Firestore.MemoryLruGcSettings.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.MemoryLruGcSettings.SizeBytes.get -> long
Firebase.Firestore.MetadataChanges
Firebase.Firestore.Model.BasePath
Firebase.Firestore.Model.BasePath.BasePath(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.DatabaseId
Firebase.Firestore.Model.DatabaseId.CompareTo(Firebase.Firestore.Model.DatabaseId! other) -> int
Firebase.Firestore.Model.DatabaseId.CompareTo(Java.Lang.Object? rhs) -> int
Firebase.Firestore.Model.DatabaseId.GetDatabaseId() -> string?
Firebase.Firestore.Model.DatabaseId.ProjectId.get -> string?
Firebase.Firestore.Model.Document
Firebase.Firestore.Model.DocumentCollections
Firebase.Firestore.Model.DocumentCollections.DocumentCollections() -> void
Firebase.Firestore.Model.DocumentCollections.DocumentCollections(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.DocumentConsts
Firebase.Firestore.Model.DocumentKey
Firebase.Firestore.Model.DocumentKey.CollectionGroup.get -> string?
Firebase.Firestore.Model.DocumentKey.CollectionPath.get -> Firebase.Firestore.Model.ResourcePath?
Firebase.Firestore.Model.DocumentKey.CompareTo(Firebase.Firestore.Model.DocumentKey! another) -> int
Firebase.Firestore.Model.DocumentKey.CompareTo(Java.Lang.Object? rhs) -> int
Firebase.Firestore.Model.DocumentKey.DocumentId.get -> string?
Firebase.Firestore.Model.DocumentKey.HasCollectionId(string? collectionId) -> bool
Firebase.Firestore.Model.DocumentKey.Path.get -> Firebase.Firestore.Model.ResourcePath?
Firebase.Firestore.Model.DocumentSet
Firebase.Firestore.Model.DocumentSet.Add(Firebase.Firestore.Model.IDocument? document) -> Firebase.Firestore.Model.DocumentSet?
Firebase.Firestore.Model.DocumentSet.Contains(Firebase.Firestore.Model.DocumentKey? key) -> bool
Firebase.Firestore.Model.DocumentSet.FirstDocument.get -> Firebase.Firestore.Model.IDocument?
Firebase.Firestore.Model.DocumentSet.GetDocument(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.IDocument?
Firebase.Firestore.Model.DocumentSet.GetPredecessor(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.IDocument?
Firebase.Firestore.Model.DocumentSet.IndexOf(Firebase.Firestore.Model.DocumentKey? key) -> int
Firebase.Firestore.Model.DocumentSet.IsEmpty.get -> bool
Firebase.Firestore.Model.DocumentSet.Iterator() -> Java.Util.IIterator!
Firebase.Firestore.Model.DocumentSet.LastDocument.get -> Firebase.Firestore.Model.IDocument?
Firebase.Firestore.Model.DocumentSet.Remove(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.DocumentSet?
Firebase.Firestore.Model.DocumentSet.Size() -> int
Firebase.Firestore.Model.DocumentSet.ToList() -> System.Collections.Generic.IList<Firebase.Firestore.Model.IDocument!>?
Firebase.Firestore.Model.FieldIndex
Firebase.Firestore.Model.FieldIndex.FieldIndex() -> void
Firebase.Firestore.Model.FieldIndex.FieldIndex(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.FieldIndex.IndexOffset
Firebase.Firestore.Model.FieldIndex.IndexOffset.IndexOffset() -> void
Firebase.Firestore.Model.FieldIndex.IndexOffset.IndexOffset(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.FieldIndex.IndexState
Firebase.Firestore.Model.FieldIndex.IndexState.IndexState() -> void
Firebase.Firestore.Model.FieldIndex.IndexState.IndexState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.FieldIndex.Segment
Firebase.Firestore.Model.FieldIndex.Segment.Kind
Firebase.Firestore.Model.FieldIndex.Segment.Segment() -> void
Firebase.Firestore.Model.FieldIndex.Segment.Segment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.FieldPath
Firebase.Firestore.Model.FieldPath.IsKeyField.get -> bool
Firebase.Firestore.Model.IDocument
Firebase.Firestore.Model.IDocument.Data.get -> Firebase.Firestore.Model.ObjectValue?
Firebase.Firestore.Model.IDocument.GetField(Firebase.Firestore.Model.FieldPath? p0) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.IDocument.HasCommittedMutations.get -> bool
Firebase.Firestore.Model.IDocument.HasLocalMutations.get -> bool
Firebase.Firestore.Model.IDocument.HasPendingWrites.get -> bool
Firebase.Firestore.Model.IDocument.IsFoundDocument.get -> bool
Firebase.Firestore.Model.IDocument.IsNoDocument.get -> bool
Firebase.Firestore.Model.IDocument.IsUnknownDocument.get -> bool
Firebase.Firestore.Model.IDocument.IsValidDocument.get -> bool
Firebase.Firestore.Model.IDocument.Key.get -> Firebase.Firestore.Model.DocumentKey?
Firebase.Firestore.Model.IDocument.KeyComparator.get -> Java.Util.IComparator?
Firebase.Firestore.Model.IDocument.MutableCopy() -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.IDocument.ReadTime.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.IDocument.Version.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.MutableDocument
Firebase.Firestore.Model.MutableDocument.ConvertToFoundDocument(Firebase.Firestore.Model.SnapshotVersion? version, Firebase.Firestore.Model.ObjectValue? value) -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.ConvertToNoDocument(Firebase.Firestore.Model.SnapshotVersion? version) -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.ConvertToUnknownDocument(Firebase.Firestore.Model.SnapshotVersion? version) -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.Data.get -> Firebase.Firestore.Model.ObjectValue?
Firebase.Firestore.Model.MutableDocument.GetField(Firebase.Firestore.Model.FieldPath? field) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.MutableDocument.HasCommittedMutations.get -> bool
Firebase.Firestore.Model.MutableDocument.HasLocalMutations.get -> bool
Firebase.Firestore.Model.MutableDocument.HasPendingWrites.get -> bool
Firebase.Firestore.Model.MutableDocument.InterfaceConsts
Firebase.Firestore.Model.MutableDocument.IsFoundDocument.get -> bool
Firebase.Firestore.Model.MutableDocument.IsNoDocument.get -> bool
Firebase.Firestore.Model.MutableDocument.IsUnknownDocument.get -> bool
Firebase.Firestore.Model.MutableDocument.IsValidDocument.get -> bool
Firebase.Firestore.Model.MutableDocument.Key.get -> Firebase.Firestore.Model.DocumentKey?
Firebase.Firestore.Model.MutableDocument.MutableCopy() -> Firebase.Firestore.Model.MutableDocument!
Firebase.Firestore.Model.MutableDocument.ReadTime.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.MutableDocument.SetHasCommittedMutations() -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.SetHasLocalMutations() -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.SetReadTime(Firebase.Firestore.Model.SnapshotVersion? readTime) -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Model.MutableDocument.Version.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.Mutation.ArrayTransformOperation
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ArrayTransformOperation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.Remove(System.Collections.Generic.IList<Google.Firestore.V1.Value!>? elements) -> void
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.Remove(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.Union(System.Collections.Generic.IList<Google.Firestore.V1.Value!>? elements) -> void
Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.Union(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.DeleteMutation
Firebase.Firestore.Model.Mutation.DeleteMutation.DeleteMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> void
Firebase.Firestore.Model.Mutation.FieldMask
Firebase.Firestore.Model.Mutation.FieldMask.Covers(Firebase.Firestore.Model.FieldPath? fieldPath) -> bool
Firebase.Firestore.Model.Mutation.FieldMask.Mask.get -> System.Collections.Generic.ICollection<Firebase.Firestore.Model.FieldPath!>?
Firebase.Firestore.Model.Mutation.FieldTransform
Firebase.Firestore.Model.Mutation.FieldTransform.FieldPath.get -> Firebase.Firestore.Model.FieldPath?
Firebase.Firestore.Model.Mutation.FieldTransform.FieldTransform(Firebase.Firestore.Model.FieldPath? fieldPath, Firebase.Firestore.Model.Mutation.ITransformOperation? operation) -> void
Firebase.Firestore.Model.Mutation.FieldTransform.Operation.get -> Firebase.Firestore.Model.Mutation.ITransformOperation?
Firebase.Firestore.Model.Mutation.ITransformOperation
Firebase.Firestore.Model.Mutation.ITransformOperation.ApplyToLocalView(Google.Firestore.V1.Value? p0, Firebase.Timestamp? p1) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.Mutation.ITransformOperation.ApplyToRemoteDocument(Google.Firestore.V1.Value? p0, Google.Firestore.V1.Value? p1) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.Mutation.ITransformOperation.ComputeBaseValue(Google.Firestore.V1.Value? p0) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.Mutation.Mutation
Firebase.Firestore.Model.Mutation.Mutation.Mutation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.MutationBatch
Firebase.Firestore.Model.Mutation.MutationBatch.ApplyToLocalDocumentSet(System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Local.OverlayedDocument!>? documentMap, System.Collections.Generic.ICollection<Firebase.Firestore.Model.DocumentKey!>? documentsWithoutRemoteVersion) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Mutation!>?
Firebase.Firestore.Model.Mutation.MutationBatch.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.FieldMask? mutatedFields) -> Firebase.Firestore.Model.Mutation.FieldMask?
Firebase.Firestore.Model.Mutation.MutationBatch.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.MutationBatchResult? batchResult) -> void
Firebase.Firestore.Model.Mutation.MutationBatch.BaseMutations.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>?
Firebase.Firestore.Model.Mutation.MutationBatch.BatchId.get -> int
Firebase.Firestore.Model.Mutation.MutationBatch.Keys.get -> System.Collections.Generic.ICollection<Firebase.Firestore.Model.DocumentKey!>?
Firebase.Firestore.Model.Mutation.MutationBatch.LocalWriteTime.get -> Firebase.Timestamp?
Firebase.Firestore.Model.Mutation.MutationBatch.MutationBatch(int batchId, Firebase.Timestamp? localWriteTime, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? baseMutations, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? mutations) -> void
Firebase.Firestore.Model.Mutation.MutationBatch.Mutations.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>?
Firebase.Firestore.Model.Mutation.MutationBatchResult
Firebase.Firestore.Model.Mutation.MutationBatchResult.Batch.get -> Firebase.Firestore.Model.Mutation.MutationBatch?
Firebase.Firestore.Model.Mutation.MutationBatchResult.CommitVersion.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.Mutation.MutationBatchResult.DocVersions.get -> Firebase.Database.Collection.ImmutableSortedMap?
Firebase.Firestore.Model.Mutation.MutationBatchResult.MutationResults.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.MutationResult!>?
Firebase.Firestore.Model.Mutation.MutationBatchResult.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Model.Mutation.MutationResult
Firebase.Firestore.Model.Mutation.MutationResult.MutationResult(Firebase.Firestore.Model.SnapshotVersion? version, System.Collections.Generic.IList<Google.Firestore.V1.Value!>? transformResults) -> void
Firebase.Firestore.Model.Mutation.MutationResult.TransformResults.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Firebase.Firestore.Model.Mutation.MutationResult.Version.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation
Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.NumericIncrementTransformOperation(Google.Firestore.V1.Value? operand) -> void
Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.NumericIncrementTransformOperation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.Overlay
Firebase.Firestore.Model.Mutation.Overlay.Overlay() -> void
Firebase.Firestore.Model.Mutation.Overlay.Overlay(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.PatchMutation
Firebase.Firestore.Model.Mutation.PatchMutation.PatchMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.ObjectValue? value, Firebase.Firestore.Model.Mutation.FieldMask? mask, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> void
Firebase.Firestore.Model.Mutation.PatchMutation.PatchMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.ObjectValue? value, Firebase.Firestore.Model.Mutation.FieldMask? mask, Firebase.Firestore.Model.Mutation.Precondition? precondition, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>? fieldTransforms) -> void
Firebase.Firestore.Model.Mutation.PatchMutation.Value.get -> Firebase.Firestore.Model.ObjectValue?
Firebase.Firestore.Model.Mutation.Precondition
Firebase.Firestore.Model.Mutation.Precondition.Exists.get -> Java.Lang.Boolean?
Firebase.Firestore.Model.Mutation.Precondition.IsNone.get -> bool
Firebase.Firestore.Model.Mutation.Precondition.IsValidFor(Firebase.Firestore.Model.MutableDocument? doc) -> bool
Firebase.Firestore.Model.Mutation.Precondition.UpdateTime.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Model.Mutation.ServerTimestampOperation
Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ServerTimestampOperation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Mutation.SetMutation
Firebase.Firestore.Model.Mutation.SetMutation.SetMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.ObjectValue? value, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> void
Firebase.Firestore.Model.Mutation.SetMutation.SetMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.ObjectValue? value, Firebase.Firestore.Model.Mutation.Precondition? precondition, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>? fieldTransforms) -> void
Firebase.Firestore.Model.Mutation.SetMutation.Value.get -> Firebase.Firestore.Model.ObjectValue?
Firebase.Firestore.Model.Mutation.VerifyMutation
Firebase.Firestore.Model.Mutation.VerifyMutation.VerifyMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> void
Firebase.Firestore.Model.ObjectValue
Firebase.Firestore.Model.ObjectValue.Clone() -> Firebase.Firestore.Model.ObjectValue!
Firebase.Firestore.Model.ObjectValue.Delete(Firebase.Firestore.Model.FieldPath? path) -> void
Firebase.Firestore.Model.ObjectValue.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
Firebase.Firestore.Model.ObjectValue.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Firebase.Firestore.Model.ObjectValue.Get(Firebase.Firestore.Model.FieldPath? fieldPath) -> Google.Firestore.V1.Value?
Firebase.Firestore.Model.ObjectValue.ObjectValue() -> void
Firebase.Firestore.Model.ObjectValue.ObjectValue(Google.Firestore.V1.Value? value) -> void
Firebase.Firestore.Model.ObjectValue.Set(Firebase.Firestore.Model.FieldPath? path, Google.Firestore.V1.Value? value) -> void
Firebase.Firestore.Model.ObjectValue.SetAll(System.Collections.Generic.IDictionary<Firebase.Firestore.Model.FieldPath!, Google.Firestore.V1.Value!>? data) -> void
Firebase.Firestore.Model.ResourcePath
Firebase.Firestore.Model.ServerTimestamps
Firebase.Firestore.Model.SnapshotVersion
Firebase.Firestore.Model.SnapshotVersion.CompareTo(Firebase.Firestore.Model.SnapshotVersion? other) -> int
Firebase.Firestore.Model.SnapshotVersion.CompareTo(Java.Lang.Object? rhs) -> int
Firebase.Firestore.Model.SnapshotVersion.SnapshotVersion(Firebase.Timestamp? timestamp) -> void
Firebase.Firestore.Model.SnapshotVersion.Timestamp.get -> Firebase.Timestamp?
Firebase.Firestore.Model.TargetIndexMatcher
Firebase.Firestore.Model.TargetIndexMatcher.TargetIndexMatcher(Firebase.Firestore.Core.Target? target) -> void
Firebase.Firestore.Model.TargetIndexMatcher.TargetIndexMatcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Model.Values
Firebase.Firestore.Model.Values.Values() -> void
Firebase.Firestore.Model.Values.Values(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.PersistentCacheIndexManager
Firebase.Firestore.PersistentCacheIndexManager.DeleteAllIndexes() -> void
Firebase.Firestore.PersistentCacheIndexManager.DisableIndexAutoCreation() -> void
Firebase.Firestore.PersistentCacheIndexManager.EnableIndexAutoCreation() -> void
Firebase.Firestore.PersistentCacheSettings
Firebase.Firestore.PersistentCacheSettings.Builder
Firebase.Firestore.PersistentCacheSettings.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.PersistentCacheSettings.SizeBytes.get -> long
Firebase.Firestore.ProgressEventArgs
Firebase.Firestore.ProgressEventArgs.P0.get -> Java.Lang.Object!
Firebase.Firestore.ProgressEventArgs.ProgressEventArgs(Java.Lang.Object! p0) -> void
Firebase.Firestore.PropertyNameAttribute
Firebase.Firestore.PropertyNameAttribute.PropertyNameAttribute() -> void
Firebase.Firestore.PropertyNameAttribute.Value.get -> string?
Firebase.Firestore.PropertyNameAttribute.Value.set -> void
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.Document.get -> Google.Firestore.V1.Document?
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.DocumentTypeCaseData.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.HasCommittedMutations.get -> bool
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.HasDocument.get -> bool
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.HasNoDocument.get -> bool
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.HasUnknownDocument.get -> bool
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.NoDocument.get -> Firebase.Firestore.Proto.NoDocument?
Firebase.Firestore.Proto.IMaybeDocumentOrBuilder.UnknownDocument.get -> Firebase.Firestore.Proto.UnknownDocument?
Firebase.Firestore.Proto.IMutationQueueOrBuilder
Firebase.Firestore.Proto.IMutationQueueOrBuilder.LastAcknowledgedBatchId.get -> int
Firebase.Firestore.Proto.IMutationQueueOrBuilder.LastStreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.INoDocumentOrBuilder
Firebase.Firestore.Proto.INoDocumentOrBuilder.HasReadTime.get -> bool
Firebase.Firestore.Proto.INoDocumentOrBuilder.Name.get -> string?
Firebase.Firestore.Proto.INoDocumentOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.INoDocumentOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.ITargetGlobalOrBuilder
Firebase.Firestore.Proto.ITargetGlobalOrBuilder.HasLastRemoteSnapshotVersion.get -> bool
Firebase.Firestore.Proto.ITargetGlobalOrBuilder.HighestListenSequenceNumber.get -> long
Firebase.Firestore.Proto.ITargetGlobalOrBuilder.HighestTargetId.get -> int
Firebase.Firestore.Proto.ITargetGlobalOrBuilder.LastRemoteSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.ITargetGlobalOrBuilder.TargetCount.get -> int
Firebase.Firestore.Proto.ITargetOrBuilder
Firebase.Firestore.Proto.ITargetOrBuilder.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Firebase.Firestore.Proto.ITargetOrBuilder.HasDocuments.get -> bool
Firebase.Firestore.Proto.ITargetOrBuilder.HasLastLimboFreeSnapshotVersion.get -> bool
Firebase.Firestore.Proto.ITargetOrBuilder.HasQuery.get -> bool
Firebase.Firestore.Proto.ITargetOrBuilder.HasSnapshotVersion.get -> bool
Firebase.Firestore.Proto.ITargetOrBuilder.LastLimboFreeSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.ITargetOrBuilder.LastListenSequenceNumber.get -> long
Firebase.Firestore.Proto.ITargetOrBuilder.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Firebase.Firestore.Proto.ITargetOrBuilder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.ITargetOrBuilder.SnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.ITargetOrBuilder.TargetId.get -> int
Firebase.Firestore.Proto.ITargetOrBuilder.TargetTypeCaseData.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
Firebase.Firestore.Proto.IUnknownDocumentOrBuilder
Firebase.Firestore.Proto.IUnknownDocumentOrBuilder.HasVersion.get -> bool
Firebase.Firestore.Proto.IUnknownDocumentOrBuilder.Name.get -> string?
Firebase.Firestore.Proto.IUnknownDocumentOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.IUnknownDocumentOrBuilder.Version.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.IWriteBatchOrBuilder
Firebase.Firestore.Proto.IWriteBatchOrBuilder.BaseWritesCount.get -> int
Firebase.Firestore.Proto.IWriteBatchOrBuilder.BaseWritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.IWriteBatchOrBuilder.BatchId.get -> int
Firebase.Firestore.Proto.IWriteBatchOrBuilder.GetBaseWrites(int p0) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.IWriteBatchOrBuilder.GetWrites(int p0) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.IWriteBatchOrBuilder.HasLocalWriteTime.get -> bool
Firebase.Firestore.Proto.IWriteBatchOrBuilder.LocalWriteTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.IWriteBatchOrBuilder.WritesCount.get -> int
Firebase.Firestore.Proto.IWriteBatchOrBuilder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.MaybeDocument
Firebase.Firestore.Proto.MaybeDocument.Builder
Firebase.Firestore.Proto.MaybeDocument.Builder.ClearDocument() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.ClearDocumentType() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.ClearHasCommittedMutations() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.ClearNoDocument() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.ClearUnknownDocument() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.Document.get -> Google.Firestore.V1.Document?
Firebase.Firestore.Proto.MaybeDocument.Builder.DocumentTypeCaseData.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
Firebase.Firestore.Proto.MaybeDocument.Builder.HasCommittedMutations.get -> bool
Firebase.Firestore.Proto.MaybeDocument.Builder.HasDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.Builder.HasNoDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.Builder.HasUnknownDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.MergeNoDocument(Firebase.Firestore.Proto.NoDocument? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.MergeUnknownDocument(Firebase.Firestore.Proto.UnknownDocument? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.NoDocument.get -> Firebase.Firestore.Proto.NoDocument?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetHasCommittedMutations(bool value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetNoDocument(Firebase.Firestore.Proto.NoDocument.Builder? builderForValue) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetNoDocument(Firebase.Firestore.Proto.NoDocument? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetUnknownDocument(Firebase.Firestore.Proto.UnknownDocument.Builder? builderForValue) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.SetUnknownDocument(Firebase.Firestore.Proto.UnknownDocument? value) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
Firebase.Firestore.Proto.MaybeDocument.Builder.UnknownDocument.get -> Firebase.Firestore.Proto.UnknownDocument?
Firebase.Firestore.Proto.MaybeDocument.Document.get -> Google.Firestore.V1.Document?
Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase
Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.Number.get -> int
Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCaseData.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
Firebase.Firestore.Proto.MaybeDocument.HasCommittedMutations.get -> bool
Firebase.Firestore.Proto.MaybeDocument.HasDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.HasNoDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.HasUnknownDocument.get -> bool
Firebase.Firestore.Proto.MaybeDocument.NoDocument.get -> Firebase.Firestore.Proto.NoDocument?
Firebase.Firestore.Proto.MaybeDocument.UnknownDocument.get -> Firebase.Firestore.Proto.UnknownDocument?
Firebase.Firestore.Proto.MaybeDocumentOuterClass
Firebase.Firestore.Proto.Mutation
Firebase.Firestore.Proto.MutationQueue
Firebase.Firestore.Proto.MutationQueue.Builder
Firebase.Firestore.Proto.MutationQueue.Builder.ClearLastAcknowledgedBatchId() -> Firebase.Firestore.Proto.MutationQueue.Builder?
Firebase.Firestore.Proto.MutationQueue.Builder.ClearLastStreamToken() -> Firebase.Firestore.Proto.MutationQueue.Builder?
Firebase.Firestore.Proto.MutationQueue.Builder.LastAcknowledgedBatchId.get -> int
Firebase.Firestore.Proto.MutationQueue.Builder.LastStreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.MutationQueue.Builder.SetLastAcknowledgedBatchId(int value) -> Firebase.Firestore.Proto.MutationQueue.Builder?
Firebase.Firestore.Proto.MutationQueue.Builder.SetLastStreamToken(Xamarin.Protobuf.Lite.ByteString? value) -> Firebase.Firestore.Proto.MutationQueue.Builder?
Firebase.Firestore.Proto.MutationQueue.LastAcknowledgedBatchId.get -> int
Firebase.Firestore.Proto.MutationQueue.LastStreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.NoDocument
Firebase.Firestore.Proto.NoDocument.Builder
Firebase.Firestore.Proto.NoDocument.Builder.ClearName() -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.ClearReadTime() -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.HasReadTime.get -> bool
Firebase.Firestore.Proto.NoDocument.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.Name.get -> string?
Firebase.Firestore.Proto.NoDocument.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.NoDocument.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.NoDocument.Builder.SetName(string? value) -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.NoDocument.Builder?
Firebase.Firestore.Proto.NoDocument.HasReadTime.get -> bool
Firebase.Firestore.Proto.NoDocument.Name.get -> string?
Firebase.Firestore.Proto.NoDocument.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.NoDocument.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.Target
Firebase.Firestore.Proto.Target.Builder
Firebase.Firestore.Proto.Target.Builder.ClearDocuments() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearLastLimboFreeSnapshotVersion() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearLastListenSequenceNumber() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearQuery() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearResumeToken() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearSnapshotVersion() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearTargetId() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.ClearTargetType() -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Firebase.Firestore.Proto.Target.Builder.HasDocuments.get -> bool
Firebase.Firestore.Proto.Target.Builder.HasLastLimboFreeSnapshotVersion.get -> bool
Firebase.Firestore.Proto.Target.Builder.HasQuery.get -> bool
Firebase.Firestore.Proto.Target.Builder.HasSnapshotVersion.get -> bool
Firebase.Firestore.Proto.Target.Builder.LastLimboFreeSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.Target.Builder.LastListenSequenceNumber.get -> long
Firebase.Firestore.Proto.Target.Builder.MergeDocuments(Google.Firestore.V1.Target.DocumentsTarget? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.MergeLastLimboFreeSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.MergeQuery(Google.Firestore.V1.Target.QueryTarget? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.MergeSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Firebase.Firestore.Proto.Target.Builder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.Target.Builder.SetDocuments(Google.Firestore.V1.Target.DocumentsTarget.Builder? builderForValue) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetDocuments(Google.Firestore.V1.Target.DocumentsTarget? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetLastLimboFreeSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetLastLimboFreeSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetLastListenSequenceNumber(long value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetQuery(Google.Firestore.V1.Target.QueryTarget.Builder? builderForValue) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetQuery(Google.Firestore.V1.Target.QueryTarget? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetResumeToken(Xamarin.Protobuf.Lite.ByteString? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SetTargetId(int value) -> Firebase.Firestore.Proto.Target.Builder?
Firebase.Firestore.Proto.Target.Builder.SnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.Target.Builder.TargetId.get -> int
Firebase.Firestore.Proto.Target.Builder.TargetTypeCaseData.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
Firebase.Firestore.Proto.Target.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Firebase.Firestore.Proto.Target.HasDocuments.get -> bool
Firebase.Firestore.Proto.Target.HasLastLimboFreeSnapshotVersion.get -> bool
Firebase.Firestore.Proto.Target.HasQuery.get -> bool
Firebase.Firestore.Proto.Target.HasSnapshotVersion.get -> bool
Firebase.Firestore.Proto.Target.LastLimboFreeSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.Target.LastListenSequenceNumber.get -> long
Firebase.Firestore.Proto.Target.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Firebase.Firestore.Proto.Target.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.Target.SnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.Target.TargetId.get -> int
Firebase.Firestore.Proto.Target.TargetTypeCase
Firebase.Firestore.Proto.Target.TargetTypeCase.Number.get -> int
Firebase.Firestore.Proto.Target.TargetTypeCaseData.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
Firebase.Firestore.Proto.TargetGlobal
Firebase.Firestore.Proto.TargetGlobal.Builder
Firebase.Firestore.Proto.TargetGlobal.Builder.ClearHighestListenSequenceNumber() -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.ClearHighestTargetId() -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.ClearLastRemoteSnapshotVersion() -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.ClearTargetCount() -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.HasLastRemoteSnapshotVersion.get -> bool
Firebase.Firestore.Proto.TargetGlobal.Builder.HighestListenSequenceNumber.get -> long
Firebase.Firestore.Proto.TargetGlobal.Builder.HighestTargetId.get -> int
Firebase.Firestore.Proto.TargetGlobal.Builder.LastRemoteSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.TargetGlobal.Builder.MergeLastRemoteSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.SetHighestListenSequenceNumber(long value) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.SetHighestTargetId(int value) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.SetLastRemoteSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.SetLastRemoteSnapshotVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.SetTargetCount(int value) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
Firebase.Firestore.Proto.TargetGlobal.Builder.TargetCount.get -> int
Firebase.Firestore.Proto.TargetGlobal.HasLastRemoteSnapshotVersion.get -> bool
Firebase.Firestore.Proto.TargetGlobal.HighestListenSequenceNumber.get -> long
Firebase.Firestore.Proto.TargetGlobal.HighestTargetId.get -> int
Firebase.Firestore.Proto.TargetGlobal.LastRemoteSnapshotVersion.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.TargetGlobal.TargetCount.get -> int
Firebase.Firestore.Proto.TargetOuterClass
Firebase.Firestore.Proto.UnknownDocument
Firebase.Firestore.Proto.UnknownDocument.Builder
Firebase.Firestore.Proto.UnknownDocument.Builder.ClearName() -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.ClearVersion() -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.HasVersion.get -> bool
Firebase.Firestore.Proto.UnknownDocument.Builder.MergeVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.Name.get -> string?
Firebase.Firestore.Proto.UnknownDocument.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.UnknownDocument.Builder.SetName(string? value) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.SetVersion(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.SetVersion(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
Firebase.Firestore.Proto.UnknownDocument.Builder.Version.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.UnknownDocument.HasVersion.get -> bool
Firebase.Firestore.Proto.UnknownDocument.Name.get -> string?
Firebase.Firestore.Proto.UnknownDocument.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Proto.UnknownDocument.Version.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.WriteBatch
Firebase.Firestore.Proto.WriteBatch.BaseWritesCount.get -> int
Firebase.Firestore.Proto.WriteBatch.BaseWritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.WriteBatch.BaseWritesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteOrBuilder!>?
Firebase.Firestore.Proto.WriteBatch.BatchId.get -> int
Firebase.Firestore.Proto.WriteBatch.Builder
Firebase.Firestore.Proto.WriteBatch.Builder.AddAllBaseWrites(Java.Lang.IIterable? values) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddAllWrites(Java.Lang.IIterable? values) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddBaseWrites(Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddBaseWrites(Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddBaseWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddBaseWrites(int index, Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddWrites(Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddWrites(Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.AddWrites(int index, Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.BaseWritesCount.get -> int
Firebase.Firestore.Proto.WriteBatch.Builder.BaseWritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.WriteBatch.Builder.BatchId.get -> int
Firebase.Firestore.Proto.WriteBatch.Builder.ClearBaseWrites() -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.ClearBatchId() -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.ClearLocalWriteTime() -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.ClearWrites() -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.GetBaseWrites(int index) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.WriteBatch.Builder.GetWrites(int index) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.WriteBatch.Builder.HasLocalWriteTime.get -> bool
Firebase.Firestore.Proto.WriteBatch.Builder.LocalWriteTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.WriteBatch.Builder.MergeLocalWriteTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.RemoveBaseWrites(int index) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.RemoveWrites(int index) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetBaseWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetBaseWrites(int index, Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetBatchId(int value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetLocalWriteTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetLocalWriteTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.SetWrites(int index, Google.Firestore.V1.Write? value) -> Firebase.Firestore.Proto.WriteBatch.Builder?
Firebase.Firestore.Proto.WriteBatch.Builder.WritesCount.get -> int
Firebase.Firestore.Proto.WriteBatch.Builder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.WriteBatch.GetBaseWrites(int index) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.WriteBatch.GetBaseWritesOrBuilder(int index) -> Google.Firestore.V1.IWriteOrBuilder?
Firebase.Firestore.Proto.WriteBatch.GetWrites(int index) -> Google.Firestore.V1.Write?
Firebase.Firestore.Proto.WriteBatch.GetWritesOrBuilder(int index) -> Google.Firestore.V1.IWriteOrBuilder?
Firebase.Firestore.Proto.WriteBatch.HasLocalWriteTime.get -> bool
Firebase.Firestore.Proto.WriteBatch.LocalWriteTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Proto.WriteBatch.WritesCount.get -> int
Firebase.Firestore.Proto.WriteBatch.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Firebase.Firestore.Proto.WriteBatch.WritesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteOrBuilder!>?
Firebase.Firestore.Query
Firebase.Firestore.Query.Direction
Firebase.Firestore.Query.Query(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.QueryDocumentSnapshot
Firebase.Firestore.QueryDocumentSnapshot.QueryDocumentSnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.QuerySnapshot
Firebase.Firestore.QuerySnapshot.QuerySnapshot(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.BloomFilter
Firebase.Firestore.Remote.BloomFilter.BloomFilter(Xamarin.Protobuf.Lite.ByteString! bitmap, int padding, int hashCount) -> void
Firebase.Firestore.Remote.BloomFilter.BloomFilterCreateException
Firebase.Firestore.Remote.BloomFilter.BloomFilterCreateException.BloomFilterCreateException(string? message) -> void
Firebase.Firestore.Remote.BloomFilter.MightContain(string! value) -> bool
Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus
Firebase.Firestore.Remote.Datastore
Firebase.Firestore.Remote.Datastore.Datastore(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.Datastore.Serializer.get -> Firebase.Firestore.Remote.RemoteSerializer?
Firebase.Firestore.Remote.Datastore.Serializer.set -> void
Firebase.Firestore.Remote.ExistenceFilter
Firebase.Firestore.Remote.ExistenceFilter.Count.get -> int
Firebase.Firestore.Remote.ExistenceFilter.ExistenceFilter(int count) -> void
Firebase.Firestore.Remote.ExistenceFilter.ExistenceFilter(int count, Google.Firestore.V1.BloomFilter? unchangedNames) -> void
Firebase.Firestore.Remote.ExistenceFilter.UnchangedNames.get -> Google.Firestore.V1.BloomFilter?
Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider
Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.FirebaseClientGrpcMetadataProvider(Firebase.Inject.IProvider! userAgentPublisherProvider, Firebase.Inject.IProvider! heartBeatInfoProvider, Firebase.FirebaseOptions? firebaseOptions) -> void
Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.FirebaseClientGrpcMetadataProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.FirestoreChannel
Firebase.Firestore.Remote.FirestoreChannel.FirestoreChannel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.FirestoreChannel.StreamingListener
Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.StreamingListener() -> void
Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.StreamingListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.GrpcCallProvider
Firebase.Firestore.Remote.GrpcCallProvider.GrpcCallProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.IConnectivityMonitor
Firebase.Firestore.Remote.IConnectivityMonitor.AddCallback(Firebase.Firestore.Util.IConsumer? p0) -> void
Firebase.Firestore.Remote.IConnectivityMonitor.Shutdown() -> void
Firebase.Firestore.Remote.IGrpcMetadataProvider
Firebase.Firestore.Remote.IGrpcMetadataProvider.UpdateMetadata(Xamarin.Grpc.Metadata! p0) -> void
Firebase.Firestore.Remote.IStream
Firebase.Firestore.Remote.IStream.InhibitBackoff() -> void
Firebase.Firestore.Remote.IStream.IsOpen.get -> bool
Firebase.Firestore.Remote.IStream.IsStarted.get -> bool
Firebase.Firestore.Remote.IStream.Start() -> void
Firebase.Firestore.Remote.IStream.Stop() -> void
Firebase.Firestore.Remote.IStreamStreamCallback
Firebase.Firestore.Remote.IStreamStreamCallback.OnClose(Xamarin.Grpc.Status? p0) -> void
Firebase.Firestore.Remote.IStreamStreamCallback.OnOpen() -> void
Firebase.Firestore.Remote.RemoteComponenetProvider
Firebase.Firestore.Remote.RemoteComponenetProvider.RemoteComponenetProvider() -> void
Firebase.Firestore.Remote.RemoteComponenetProvider.RemoteComponenetProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.RemoteEvent
Firebase.Firestore.Remote.RemoteEvent.DocumentUpdates.get -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.MutableDocument!>?
Firebase.Firestore.Remote.RemoteEvent.RemoteEvent(Firebase.Firestore.Model.SnapshotVersion? snapshotVersion, System.Collections.Generic.IDictionary<Java.Lang.Integer!, Firebase.Firestore.Remote.TargetChange!>? targetChanges, System.Collections.Generic.IDictionary<Java.Lang.Integer!, Firebase.Firestore.Local.QueryPurpose!>? targetMismatches, System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.MutableDocument!>? documentUpdates, System.Collections.Generic.ICollection<Firebase.Firestore.Model.DocumentKey!>? resolvedLimboDocuments) -> void
Firebase.Firestore.Remote.RemoteEvent.ResolvedLimboDocuments.get -> System.Collections.Generic.ICollection<Firebase.Firestore.Model.DocumentKey!>?
Firebase.Firestore.Remote.RemoteEvent.SnapshotVersion.get -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Remote.RemoteEvent.TargetChanges.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Firebase.Firestore.Remote.TargetChange!>?
Firebase.Firestore.Remote.RemoteEvent.TargetMismatches.get -> System.Collections.Generic.IDictionary<Java.Lang.Integer!, Firebase.Firestore.Local.QueryPurpose!>?
Firebase.Firestore.Remote.RemoteSerializer
Firebase.Firestore.Remote.RemoteSerializer.DatabaseName() -> string?
Firebase.Firestore.Remote.RemoteSerializer.DecodeDocumentsTarget(Google.Firestore.V1.Target.DocumentsTarget? target) -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Remote.RemoteSerializer.DecodeKey(string? name) -> Firebase.Firestore.Model.DocumentKey?
Firebase.Firestore.Remote.RemoteSerializer.DecodeMaybeDocument(Google.Firestore.V1.BatchGetDocumentsResponse? response) -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Remote.RemoteSerializer.DecodeMutation(Google.Firestore.V1.Write? mutation) -> Firebase.Firestore.Model.Mutation.Mutation?
Firebase.Firestore.Remote.RemoteSerializer.DecodeMutationResult(Google.Firestore.V1.WriteResult? proto, Firebase.Firestore.Model.SnapshotVersion? commitVersion) -> Firebase.Firestore.Model.Mutation.MutationResult?
Firebase.Firestore.Remote.RemoteSerializer.DecodeQueryTarget(Google.Firestore.V1.Target.QueryTarget? target) -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Remote.RemoteSerializer.DecodeQueryTarget(string? parent, Google.Firestore.V1.StructuredQuery? query) -> Firebase.Firestore.Core.Target?
Firebase.Firestore.Remote.RemoteSerializer.DecodeTimestamp(Xamarin.Protobuf.Lite.Timestamp? proto) -> Firebase.Timestamp?
Firebase.Firestore.Remote.RemoteSerializer.DecodeVersion(Xamarin.Protobuf.Lite.Timestamp? proto) -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Remote.RemoteSerializer.DecodeVersionFromListenResponse(Google.Firestore.V1.ListenResponse? watchChange) -> Firebase.Firestore.Model.SnapshotVersion?
Firebase.Firestore.Remote.RemoteSerializer.DecodeWatchChange(Google.Firestore.V1.ListenResponse? protoChange) -> Firebase.Firestore.Remote.WatchChange?
Firebase.Firestore.Remote.RemoteSerializer.EncodeDocument(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.ObjectValue? value) -> Google.Firestore.V1.Document?
Firebase.Firestore.Remote.RemoteSerializer.EncodeDocumentsTarget(Firebase.Firestore.Core.Target? target) -> Google.Firestore.V1.Target.DocumentsTarget?
Firebase.Firestore.Remote.RemoteSerializer.EncodeKey(Firebase.Firestore.Model.DocumentKey? key) -> string?
Firebase.Firestore.Remote.RemoteSerializer.EncodeListenRequestLabels(Firebase.Firestore.Local.TargetData? targetData) -> System.Collections.Generic.IDictionary<string!, string!>?
Firebase.Firestore.Remote.RemoteSerializer.EncodeMutation(Firebase.Firestore.Model.Mutation.Mutation? mutation) -> Google.Firestore.V1.Write?
Firebase.Firestore.Remote.RemoteSerializer.EncodeQueryTarget(Firebase.Firestore.Core.Target? target) -> Google.Firestore.V1.Target.QueryTarget?
Firebase.Firestore.Remote.RemoteSerializer.EncodeTarget(Firebase.Firestore.Local.TargetData? targetData) -> Google.Firestore.V1.Target?
Firebase.Firestore.Remote.RemoteSerializer.EncodeTimestamp(Firebase.Timestamp? timestamp) -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Remote.RemoteSerializer.EncodeVersion(Firebase.Firestore.Model.SnapshotVersion? version) -> Xamarin.Protobuf.Lite.Timestamp?
Firebase.Firestore.Remote.RemoteSerializer.IsLocalResourceName(Firebase.Firestore.Model.ResourcePath? path) -> bool
Firebase.Firestore.Remote.RemoteSerializer.RemoteSerializer(Firebase.Firestore.Model.DatabaseId? databaseId) -> void
Firebase.Firestore.Remote.RemoteStore
Firebase.Firestore.Remote.RemoteStore.CanUseNetwork() -> bool
Firebase.Firestore.Remote.RemoteStore.CreateTransaction() -> Firebase.Firestore.Core.Transaction?
Firebase.Firestore.Remote.RemoteStore.DisableNetwork() -> void
Firebase.Firestore.Remote.RemoteStore.EnableNetwork() -> void
Firebase.Firestore.Remote.RemoteStore.FillWritePipeline() -> void
Firebase.Firestore.Remote.RemoteStore.GetRemoteKeysForTarget(int targetId) -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.RemoteStore.GetTargetDataForTarget(int targetId) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Remote.RemoteStore.HandleCredentialChange() -> void
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.GetRemoteKeysForTarget(int p0) -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.HandleOnlineStateChange(Firebase.Firestore.Core.OnlineState? p0) -> void
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.HandleRejectedListen(int p0, Xamarin.Grpc.Status? p1) -> void
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.HandleRejectedWrite(int p0, Xamarin.Grpc.Status? p1) -> void
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.HandleRemoteEvent(Firebase.Firestore.Remote.RemoteEvent? p0) -> void
Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback.HandleSuccessfulWrite(Firebase.Firestore.Model.Mutation.MutationBatchResult? p0) -> void
Firebase.Firestore.Remote.RemoteStore.Listen(Firebase.Firestore.Local.TargetData? targetData) -> void
Firebase.Firestore.Remote.RemoteStore.RemoteStore(Firebase.Firestore.Model.DatabaseId? databaseId, Firebase.Firestore.Remote.RemoteStore.IRemoteStoreCallback? remoteStoreCallback, Firebase.Firestore.Local.LocalStore? localStore, Firebase.Firestore.Remote.Datastore? datastore, Firebase.Firestore.Util.AsyncQueue? workerQueue, Firebase.Firestore.Remote.IConnectivityMonitor? connectivityMonitor) -> void
Firebase.Firestore.Remote.RemoteStore.RunAggregateQuery(Firebase.Firestore.Core.Query? query, System.Collections.Generic.IList<Firebase.Firestore.AggregateField!>? aggregateFields) -> Android.Gms.Tasks.Task?
Firebase.Firestore.Remote.RemoteStore.Shutdown() -> void
Firebase.Firestore.Remote.RemoteStore.Start() -> void
Firebase.Firestore.Remote.RemoteStore.StopListening(int targetId) -> void
Firebase.Firestore.Remote.StreamState
Firebase.Firestore.Remote.TargetChange
Firebase.Firestore.Remote.TargetChange.AddedDocuments.get -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.TargetChange.IsCurrent.get -> bool
Firebase.Firestore.Remote.TargetChange.ModifiedDocuments.get -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.TargetChange.RemovedDocuments.get -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.TargetChange.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Remote.TargetChange.TargetChange(Xamarin.Protobuf.Lite.ByteString? resumeToken, bool current, Firebase.Database.Collection.ImmutableSortedSet? addedDocuments, Firebase.Database.Collection.ImmutableSortedSet? modifiedDocuments, Firebase.Database.Collection.ImmutableSortedSet? removedDocuments) -> void
Firebase.Firestore.Remote.WatchChange
Firebase.Firestore.Remote.WatchChange.DocumentChange
Firebase.Firestore.Remote.WatchChange.DocumentChange.DocumentChange(System.Collections.Generic.IList<Java.Lang.Integer!>? updatedTargetIds, System.Collections.Generic.IList<Java.Lang.Integer!>? removedTargetIds, Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.MutableDocument? document) -> void
Firebase.Firestore.Remote.WatchChange.DocumentChange.DocumentKey.get -> Firebase.Firestore.Model.DocumentKey?
Firebase.Firestore.Remote.WatchChange.DocumentChange.NewDocument.get -> Firebase.Firestore.Model.MutableDocument?
Firebase.Firestore.Remote.WatchChange.DocumentChange.RemovedTargetIds.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Firebase.Firestore.Remote.WatchChange.DocumentChange.UpdatedTargetIds.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange
Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange.ExistenceFilter.get -> Firebase.Firestore.Remote.ExistenceFilter?
Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange.ExistenceFilterWatchChange(int targetId, Firebase.Firestore.Remote.ExistenceFilter? existenceFilter) -> void
Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange.TargetId.get -> int
Firebase.Firestore.Remote.WatchChange.WatchChange(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.WatchChange.WatchTargetChange
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.Cause.get -> Xamarin.Grpc.Status?
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.ChangeType.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.TargetIds.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.WatchTargetChange(Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType? changeType, System.Collections.Generic.IList<Java.Lang.Integer!>? targetIds) -> void
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.WatchTargetChange(Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType? changeType, System.Collections.Generic.IList<Java.Lang.Integer!>? targetIds, Xamarin.Protobuf.Lite.ByteString? resumeToken) -> void
Firebase.Firestore.Remote.WatchChange.WatchTargetChange.WatchTargetChange(Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType? changeType, System.Collections.Generic.IList<Java.Lang.Integer!>? targetIds, Xamarin.Protobuf.Lite.ByteString? resumeToken, Xamarin.Grpc.Status? cause) -> void
Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType
Firebase.Firestore.Remote.WatchChangeAggregator
Firebase.Firestore.Remote.WatchChangeAggregator.ITargetMetadataProvider
Firebase.Firestore.Remote.WatchChangeAggregator.ITargetMetadataProvider.GetRemoteKeysForTarget(int p0) -> Firebase.Database.Collection.ImmutableSortedSet?
Firebase.Firestore.Remote.WatchChangeAggregator.ITargetMetadataProvider.GetTargetDataForTarget(int p0) -> Firebase.Firestore.Local.TargetData?
Firebase.Firestore.Remote.WatchChangeAggregator.WatchChangeAggregator(Firebase.Firestore.Model.DatabaseId? databaseId, Firebase.Firestore.Remote.WatchChangeAggregator.ITargetMetadataProvider? targetMetadataProvider) -> void
Firebase.Firestore.Remote.WatchChangeAggregator.WatchChangeAggregator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.WatchStream
Firebase.Firestore.Remote.WatchStream.WatchStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Remote.WriteStream
Firebase.Firestore.Remote.WriteStream.HandshakeComplete.get -> bool
Firebase.Firestore.Remote.WriteStream.HandshakeComplete.set -> void
Firebase.Firestore.Remote.WriteStream.ICallback
Firebase.Firestore.Remote.WriteStream.ICallback.OnHandshakeComplete() -> void
Firebase.Firestore.Remote.WriteStream.ICallback.OnWriteResponse(Firebase.Firestore.Model.SnapshotVersion? p0, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.MutationResult!>? p1) -> void
Firebase.Firestore.Remote.WriteStream.WriteStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.ServerTimestampAttribute
Firebase.Firestore.ServerTimestampAttribute.ServerTimestampAttribute() -> void
Firebase.Firestore.SetOptions
Firebase.Firestore.SetOptions.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
Firebase.Firestore.SnapshotListenOptions
Firebase.Firestore.SnapshotListenOptions.Activity.get -> Android.App.Activity?
Firebase.Firestore.SnapshotListenOptions.Builder
Firebase.Firestore.SnapshotListenOptions.Builder.Builder() -> void
Firebase.Firestore.SnapshotListenOptions.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.SnapshotListenOptions.Executor.get -> Java.Util.Concurrent.IExecutor!
Firebase.Firestore.SnapshotListenOptions.MetadataChanges.get -> Firebase.Firestore.MetadataChanges!
Firebase.Firestore.SnapshotListenOptions.Source.get -> Firebase.Firestore.ListenSource!
Firebase.Firestore.SnapshotMetadata
Firebase.Firestore.SnapshotMetadata.SnapshotMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Source
Firebase.Firestore.ThrowOnExtraPropertiesAttribute
Firebase.Firestore.ThrowOnExtraPropertiesAttribute.ThrowOnExtraPropertiesAttribute() -> void
Firebase.Firestore.Transaction
Firebase.Firestore.Transaction.IFunction
Firebase.Firestore.Transaction.IFunction.Apply(Firebase.Firestore.Transaction! p0) -> Java.Lang.Object?
Firebase.Firestore.Transaction.Transaction(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.TransactionOptions
Firebase.Firestore.TransactionOptions.Builder
Firebase.Firestore.TransactionOptions.Builder.Build() -> Firebase.Firestore.TransactionOptions!
Firebase.Firestore.TransactionOptions.Builder.Builder() -> void
Firebase.Firestore.TransactionOptions.Builder.Builder(Firebase.Firestore.TransactionOptions! options) -> void
Firebase.Firestore.TransactionOptions.Builder.SetMaxAttempts(int maxAttempts) -> Firebase.Firestore.TransactionOptions.Builder!
Firebase.Firestore.TransactionOptions.MaxAttempts.get -> int
Firebase.Firestore.UserDataReader
Firebase.Firestore.UserDataReader.ConvertAndParseFieldData(Java.Lang.Object? input, Firebase.Firestore.Core.UserData.ParseContext? context) -> Google.Firestore.V1.Value?
Firebase.Firestore.UserDataReader.ParseMergeData(Java.Lang.Object? input, Firebase.Firestore.Model.Mutation.FieldMask? fieldMask) -> Firebase.Firestore.Core.UserData.ParsedSetData?
Firebase.Firestore.UserDataReader.ParseQueryValue(Java.Lang.Object? input) -> Google.Firestore.V1.Value?
Firebase.Firestore.UserDataReader.ParseQueryValue(Java.Lang.Object? input, bool allowArrays) -> Google.Firestore.V1.Value?
Firebase.Firestore.UserDataReader.ParseSetData(Java.Lang.Object? input) -> Firebase.Firestore.Core.UserData.ParsedSetData?
Firebase.Firestore.UserDataReader.ParseUpdateData(System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>? data) -> Firebase.Firestore.Core.UserData.ParsedUpdateData?
Firebase.Firestore.UserDataReader.ParseUpdateData(System.Collections.Generic.IList<Java.Lang.Object!>? fieldsAndValues) -> Firebase.Firestore.Core.UserData.ParsedUpdateData?
Firebase.Firestore.UserDataReader.UserDataReader(Firebase.Firestore.Model.DatabaseId? databaseId) -> void
Firebase.Firestore.UserDataWriter
Firebase.Firestore.UserDataWriter.UserDataWriter(Firebase.Firestore.FirebaseFirestore? firestore, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior? serverTimestampBehavior) -> void
Firebase.Firestore.UserDataWriter.UserDataWriter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.ApiUtil
Firebase.Firestore.Util.ApiUtil.ApiUtil() -> void
Firebase.Firestore.Util.ApiUtil.ApiUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.Assert
Firebase.Firestore.Util.Assert.Assert() -> void
Firebase.Firestore.Util.Assert.Assert(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.AsyncQueue
Firebase.Firestore.Util.AsyncQueue.AsyncQueue() -> void
Firebase.Firestore.Util.AsyncQueue.AsyncQueue(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.AsyncQueue.DelayedTask
Firebase.Firestore.Util.AsyncQueue.DelayedTask.DelayedTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.AsyncQueue.TimerId
Firebase.Firestore.Util.BackgroundQueue
Firebase.Firestore.Util.BackgroundQueue.BackgroundQueue() -> void
Firebase.Firestore.Util.BackgroundQueue.BackgroundQueue(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.ByteBufferInputStream
Firebase.Firestore.Util.ByteBufferInputStream.ByteBufferInputStream(Java.Nio.ByteBuffer? buf) -> void
Firebase.Firestore.Util.ByteBufferInputStream.ByteBufferInputStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.CustomClassMapper
Firebase.Firestore.Util.CustomClassMapper.CustomClassMapper() -> void
Firebase.Firestore.Util.CustomClassMapper.CustomClassMapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.EventArgs
Firebase.Firestore.Util.EventArgs.EventArgs(Java.Lang.Object? p0) -> void
Firebase.Firestore.Util.EventArgs.P0.get -> Java.Lang.Object?
Firebase.Firestore.Util.Executors
Firebase.Firestore.Util.ExponentialBackoff
Firebase.Firestore.Util.ExponentialBackoff.ExponentialBackoff(Firebase.Firestore.Util.AsyncQueue? queue, Firebase.Firestore.Util.AsyncQueue.TimerId? timerId) -> void
Firebase.Firestore.Util.ExponentialBackoff.ExponentialBackoff(Firebase.Firestore.Util.AsyncQueue? queue, Firebase.Firestore.Util.AsyncQueue.TimerId? timerId, long initialDelayMs, double backoffFactor, long maxDelayMs) -> void
Firebase.Firestore.Util.ExponentialBackoff.ExponentialBackoff(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.FileUtil
Firebase.Firestore.Util.FileUtil.FileUtil() -> void
Firebase.Firestore.Util.FileUtil.FileUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.IConsumer
Firebase.Firestore.Util.IConsumer.Accept(Java.Lang.Object? p0) -> void
Firebase.Firestore.Util.IFunction
Firebase.Firestore.Util.IFunction.Apply(Java.Lang.Object? p0) -> Java.Lang.Object?
Firebase.Firestore.Util.IFunction.Equals(Java.Lang.Object? p0) -> bool
Firebase.Firestore.Util.IListener
Firebase.Firestore.Util.IListener.OnValue(Java.Lang.Object? p0) -> void
Firebase.Firestore.Util.ISupplier
Firebase.Firestore.Util.ISupplier.Get() -> Java.Lang.Object?
Firebase.Firestore.Util.Logger
Firebase.Firestore.Util.Logger.Level
Firebase.Firestore.Util.Logger.Logger() -> void
Firebase.Firestore.Util.Logger.Logger(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.LogicUtils
Firebase.Firestore.Util.LogicUtils.LogicUtils() -> void
Firebase.Firestore.Util.LogicUtils.LogicUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.Preconditions
Firebase.Firestore.Util.Preconditions.Preconditions() -> void
Firebase.Firestore.Util.Preconditions.Preconditions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.Util.Util
Firebase.Firestore.Util.Util.Util() -> void
Firebase.Firestore.Util.Util.Util(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.VectorValue
Firebase.Firestore.VectorValue.VectorValue(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Firestore.WriteBatch
Firebase.Firestore.WriteBatch.IFunction
Firebase.Firestore.WriteBatch.IFunction.Apply(Firebase.Firestore.WriteBatch! p0) -> void
Firebase.Firestore.WriteBatch.WriteBatch(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firestore.Admin.V1.IIndexOrBuilder
Firestore.Admin.V1.IIndexOrBuilder.FieldsCount.get -> int
Firestore.Admin.V1.IIndexOrBuilder.FieldsList.get -> System.Collections.Generic.IList<Firestore.Admin.V1.Index.IndexField!>?
Firestore.Admin.V1.IIndexOrBuilder.GetFields(int p0) -> Firestore.Admin.V1.Index.IndexField?
Firestore.Admin.V1.IIndexOrBuilder.Name.get -> string?
Firestore.Admin.V1.IIndexOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.IIndexOrBuilder.QueryScopeData.get -> Firestore.Admin.V1.Index.QueryScope?
Firestore.Admin.V1.IIndexOrBuilder.QueryScopeValue.get -> int
Firestore.Admin.V1.IIndexOrBuilder.StateData.get -> Firestore.Admin.V1.Index.State?
Firestore.Admin.V1.IIndexOrBuilder.StateValue.get -> int
Firestore.Admin.V1.Index
Firestore.Admin.V1.Index.Builder
Firestore.Admin.V1.Index.Builder.AddAllFields(Java.Lang.IIterable? values) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.AddFields(Firestore.Admin.V1.Index.IndexField.Builder? builderForValue) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.AddFields(Firestore.Admin.V1.Index.IndexField? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.AddFields(int index, Firestore.Admin.V1.Index.IndexField.Builder? builderForValue) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.AddFields(int index, Firestore.Admin.V1.Index.IndexField? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.ClearFields() -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.ClearName() -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.ClearQueryScope() -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.ClearState() -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.FieldsCount.get -> int
Firestore.Admin.V1.Index.Builder.FieldsList.get -> System.Collections.Generic.IList<Firestore.Admin.V1.Index.IndexField!>?
Firestore.Admin.V1.Index.Builder.GetFields(int index) -> Firestore.Admin.V1.Index.IndexField?
Firestore.Admin.V1.Index.Builder.Name.get -> string?
Firestore.Admin.V1.Index.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.Index.Builder.QueryScopeData.get -> Firestore.Admin.V1.Index.QueryScope?
Firestore.Admin.V1.Index.Builder.QueryScopeValue.get -> int
Firestore.Admin.V1.Index.Builder.RemoveFields(int index) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetFields(int index, Firestore.Admin.V1.Index.IndexField.Builder? builderForValue) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetFields(int index, Firestore.Admin.V1.Index.IndexField? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetName(string? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetQueryScope(Firestore.Admin.V1.Index.QueryScope? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetQueryScopeValue(int value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetState(Firestore.Admin.V1.Index.State? value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.SetStateValue(int value) -> Firestore.Admin.V1.Index.Builder?
Firestore.Admin.V1.Index.Builder.StateData.get -> Firestore.Admin.V1.Index.State?
Firestore.Admin.V1.Index.Builder.StateValue.get -> int
Firestore.Admin.V1.Index.FieldsCount.get -> int
Firestore.Admin.V1.Index.FieldsList.get -> System.Collections.Generic.IList<Firestore.Admin.V1.Index.IndexField!>?
Firestore.Admin.V1.Index.FieldsOrBuilderList.get -> System.Collections.Generic.IList<Firestore.Admin.V1.Index.IIndexFieldOrBuilder!>?
Firestore.Admin.V1.Index.GetFields(int index) -> Firestore.Admin.V1.Index.IndexField?
Firestore.Admin.V1.Index.GetFieldsOrBuilder(int index) -> Firestore.Admin.V1.Index.IIndexFieldOrBuilder?
Firestore.Admin.V1.Index.IIndexFieldOrBuilder
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.ArrayConfigData.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.ArrayConfigValue.get -> int
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.FieldPath.get -> string?
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.HasArrayConfig.get -> bool
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.HasOrder.get -> bool
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.OrderData.get -> Firestore.Admin.V1.Index.IndexField.Order?
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.OrderValue.get -> int
Firestore.Admin.V1.Index.IIndexFieldOrBuilder.ValueModeCaseData.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
Firestore.Admin.V1.Index.IndexField
Firestore.Admin.V1.Index.IndexField.ArrayConfig
Firestore.Admin.V1.Index.IndexField.ArrayConfig.Number.get -> int
Firestore.Admin.V1.Index.IndexField.ArrayConfigData.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
Firestore.Admin.V1.Index.IndexField.ArrayConfigValue.get -> int
Firestore.Admin.V1.Index.IndexField.Builder
Firestore.Admin.V1.Index.IndexField.Builder.ArrayConfigData.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
Firestore.Admin.V1.Index.IndexField.Builder.ArrayConfigValue.get -> int
Firestore.Admin.V1.Index.IndexField.Builder.ClearArrayConfig() -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.ClearFieldPath() -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.ClearOrder() -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.ClearValueMode() -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.FieldPath.get -> string?
Firestore.Admin.V1.Index.IndexField.Builder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.Index.IndexField.Builder.HasArrayConfig.get -> bool
Firestore.Admin.V1.Index.IndexField.Builder.HasOrder.get -> bool
Firestore.Admin.V1.Index.IndexField.Builder.OrderData.get -> Firestore.Admin.V1.Index.IndexField.Order?
Firestore.Admin.V1.Index.IndexField.Builder.OrderValue.get -> int
Firestore.Admin.V1.Index.IndexField.Builder.SetArrayConfig(Firestore.Admin.V1.Index.IndexField.ArrayConfig? value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.SetArrayConfigValue(int value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.SetFieldPath(string? value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.SetFieldPathBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.SetOrder(Firestore.Admin.V1.Index.IndexField.Order? value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.SetOrderValue(int value) -> Firestore.Admin.V1.Index.IndexField.Builder?
Firestore.Admin.V1.Index.IndexField.Builder.ValueModeCaseData.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
Firestore.Admin.V1.Index.IndexField.FieldPath.get -> string?
Firestore.Admin.V1.Index.IndexField.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.Index.IndexField.HasArrayConfig.get -> bool
Firestore.Admin.V1.Index.IndexField.HasOrder.get -> bool
Firestore.Admin.V1.Index.IndexField.Order
Firestore.Admin.V1.Index.IndexField.Order.Number.get -> int
Firestore.Admin.V1.Index.IndexField.OrderData.get -> Firestore.Admin.V1.Index.IndexField.Order?
Firestore.Admin.V1.Index.IndexField.OrderValue.get -> int
Firestore.Admin.V1.Index.IndexField.ValueModeCase
Firestore.Admin.V1.Index.IndexField.ValueModeCase.Number.get -> int
Firestore.Admin.V1.Index.IndexField.ValueModeCaseData.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
Firestore.Admin.V1.Index.Name.get -> string?
Firestore.Admin.V1.Index.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Admin.V1.Index.QueryScope
Firestore.Admin.V1.Index.QueryScope.Number.get -> int
Firestore.Admin.V1.Index.QueryScopeData.get -> Firestore.Admin.V1.Index.QueryScope?
Firestore.Admin.V1.Index.QueryScopeValue.get -> int
Firestore.Admin.V1.Index.State
Firestore.Admin.V1.Index.State.Number.get -> int
Firestore.Admin.V1.Index.StateData.get -> Firestore.Admin.V1.Index.State?
Firestore.Admin.V1.Index.StateValue.get -> int
Firestore.Admin.V1.IndexProto
Firestore.Bundle.BundleElement
Firestore.Bundle.BundleElement.Builder
Firestore.Bundle.BundleElement.Builder.ClearDocument() -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.ClearDocumentMetadata() -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.ClearElementType() -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.ClearMetadata() -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.ClearNamedQuery() -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.Document.get -> Google.Firestore.V1.Document?
Firestore.Bundle.BundleElement.Builder.DocumentMetadata.get -> Firestore.Bundle.BundledDocumentMetadata?
Firestore.Bundle.BundleElement.Builder.ElementTypeCaseData.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
Firestore.Bundle.BundleElement.Builder.HasDocument.get -> bool
Firestore.Bundle.BundleElement.Builder.HasDocumentMetadata.get -> bool
Firestore.Bundle.BundleElement.Builder.HasMetadata.get -> bool
Firestore.Bundle.BundleElement.Builder.HasNamedQuery.get -> bool
Firestore.Bundle.BundleElement.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.MergeDocumentMetadata(Firestore.Bundle.BundledDocumentMetadata? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.MergeMetadata(Firestore.Bundle.BundleMetadata? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.MergeNamedQuery(Firestore.Bundle.NamedQuery? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.Metadata.get -> Firestore.Bundle.BundleMetadata?
Firestore.Bundle.BundleElement.Builder.NamedQuery.get -> Firestore.Bundle.NamedQuery?
Firestore.Bundle.BundleElement.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetDocumentMetadata(Firestore.Bundle.BundledDocumentMetadata.Builder? builderForValue) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetDocumentMetadata(Firestore.Bundle.BundledDocumentMetadata? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetMetadata(Firestore.Bundle.BundleMetadata.Builder? builderForValue) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetMetadata(Firestore.Bundle.BundleMetadata? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetNamedQuery(Firestore.Bundle.NamedQuery.Builder? builderForValue) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Builder.SetNamedQuery(Firestore.Bundle.NamedQuery? value) -> Firestore.Bundle.BundleElement.Builder?
Firestore.Bundle.BundleElement.Document.get -> Google.Firestore.V1.Document?
Firestore.Bundle.BundleElement.DocumentMetadata.get -> Firestore.Bundle.BundledDocumentMetadata?
Firestore.Bundle.BundleElement.ElementTypeCase
Firestore.Bundle.BundleElement.ElementTypeCase.Number.get -> int
Firestore.Bundle.BundleElement.ElementTypeCaseData.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
Firestore.Bundle.BundleElement.HasDocument.get -> bool
Firestore.Bundle.BundleElement.HasDocumentMetadata.get -> bool
Firestore.Bundle.BundleElement.HasMetadata.get -> bool
Firestore.Bundle.BundleElement.HasNamedQuery.get -> bool
Firestore.Bundle.BundleElement.Metadata.get -> Firestore.Bundle.BundleMetadata?
Firestore.Bundle.BundleElement.NamedQuery.get -> Firestore.Bundle.NamedQuery?
Firestore.Bundle.BundleMetadata
Firestore.Bundle.BundleMetadata.Builder
Firestore.Bundle.BundleMetadata.Builder.ClearCreateTime() -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.ClearId() -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.ClearTotalBytes() -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.ClearTotalDocuments() -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.ClearVersion() -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.BundleMetadata.Builder.HasCreateTime.get -> bool
Firestore.Bundle.BundleMetadata.Builder.Id.get -> string?
Firestore.Bundle.BundleMetadata.Builder.IdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundleMetadata.Builder.MergeCreateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetCreateTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetCreateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetId(string? value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetTotalBytes(long value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetTotalDocuments(int value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.SetVersion(int value) -> Firestore.Bundle.BundleMetadata.Builder?
Firestore.Bundle.BundleMetadata.Builder.TotalBytes.get -> long
Firestore.Bundle.BundleMetadata.Builder.TotalDocuments.get -> int
Firestore.Bundle.BundleMetadata.Builder.Version.get -> int
Firestore.Bundle.BundleMetadata.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.BundleMetadata.HasCreateTime.get -> bool
Firestore.Bundle.BundleMetadata.Id.get -> string?
Firestore.Bundle.BundleMetadata.IdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundleMetadata.TotalBytes.get -> long
Firestore.Bundle.BundleMetadata.TotalDocuments.get -> int
Firestore.Bundle.BundleMetadata.Version.get -> int
Firestore.Bundle.BundleProto
Firestore.Bundle.BundledDocumentMetadata
Firestore.Bundle.BundledDocumentMetadata.Builder
Firestore.Bundle.BundledDocumentMetadata.Builder.AddAllQueries(Java.Lang.IIterable? values) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.AddQueries(string? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.AddQueriesBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.ClearExists() -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.ClearName() -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.ClearQueries() -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.ClearReadTime() -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.Exists.get -> bool
Firestore.Bundle.BundledDocumentMetadata.Builder.GetQueries(int index) -> string?
Firestore.Bundle.BundledDocumentMetadata.Builder.GetQueriesBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledDocumentMetadata.Builder.HasReadTime.get -> bool
Firestore.Bundle.BundledDocumentMetadata.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.Name.get -> string?
Firestore.Bundle.BundledDocumentMetadata.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledDocumentMetadata.Builder.QueriesCount.get -> int
Firestore.Bundle.BundledDocumentMetadata.Builder.QueriesList.get -> System.Collections.Generic.IList<string!>?
Firestore.Bundle.BundledDocumentMetadata.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetExists(bool value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetName(string? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetQueries(int index, string? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
Firestore.Bundle.BundledDocumentMetadata.Exists.get -> bool
Firestore.Bundle.BundledDocumentMetadata.GetQueries(int index) -> string?
Firestore.Bundle.BundledDocumentMetadata.GetQueriesBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledDocumentMetadata.HasReadTime.get -> bool
Firestore.Bundle.BundledDocumentMetadata.Name.get -> string?
Firestore.Bundle.BundledDocumentMetadata.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledDocumentMetadata.QueriesCount.get -> int
Firestore.Bundle.BundledDocumentMetadata.QueriesList.get -> System.Collections.Generic.IList<string!>?
Firestore.Bundle.BundledDocumentMetadata.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.BundledQuery
Firestore.Bundle.BundledQuery.Builder
Firestore.Bundle.BundledQuery.Builder.ClearLimitType() -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.ClearParent() -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.ClearQueryType() -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.ClearStructuredQuery() -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.HasStructuredQuery.get -> bool
Firestore.Bundle.BundledQuery.Builder.LimitTypeData.get -> Firestore.Bundle.BundledQuery.LimitType?
Firestore.Bundle.BundledQuery.Builder.LimitTypeValue.get -> int
Firestore.Bundle.BundledQuery.Builder.MergeStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.Parent.get -> string?
Firestore.Bundle.BundledQuery.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledQuery.Builder.QueryTypeCaseData.get -> Firestore.Bundle.BundledQuery.QueryTypeCase?
Firestore.Bundle.BundledQuery.Builder.SetLimitType(Firestore.Bundle.BundledQuery.LimitType? value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.SetLimitTypeValue(int value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.SetParent(string? value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery.Builder? builderForValue) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Firestore.Bundle.BundledQuery.Builder?
Firestore.Bundle.BundledQuery.Builder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Firestore.Bundle.BundledQuery.HasStructuredQuery.get -> bool
Firestore.Bundle.BundledQuery.LimitType
Firestore.Bundle.BundledQuery.LimitType.Number.get -> int
Firestore.Bundle.BundledQuery.LimitTypeData.get -> Firestore.Bundle.BundledQuery.LimitType?
Firestore.Bundle.BundledQuery.LimitTypeValue.get -> int
Firestore.Bundle.BundledQuery.Parent.get -> string?
Firestore.Bundle.BundledQuery.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.BundledQuery.QueryTypeCase
Firestore.Bundle.BundledQuery.QueryTypeCase.Number.get -> int
Firestore.Bundle.BundledQuery.QueryTypeCaseData.get -> Firestore.Bundle.BundledQuery.QueryTypeCase?
Firestore.Bundle.BundledQuery.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Firestore.Bundle.IBundleElementOrBuilder
Firestore.Bundle.IBundleElementOrBuilder.Document.get -> Google.Firestore.V1.Document?
Firestore.Bundle.IBundleElementOrBuilder.DocumentMetadata.get -> Firestore.Bundle.BundledDocumentMetadata?
Firestore.Bundle.IBundleElementOrBuilder.ElementTypeCaseData.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
Firestore.Bundle.IBundleElementOrBuilder.HasDocument.get -> bool
Firestore.Bundle.IBundleElementOrBuilder.HasDocumentMetadata.get -> bool
Firestore.Bundle.IBundleElementOrBuilder.HasMetadata.get -> bool
Firestore.Bundle.IBundleElementOrBuilder.HasNamedQuery.get -> bool
Firestore.Bundle.IBundleElementOrBuilder.Metadata.get -> Firestore.Bundle.BundleMetadata?
Firestore.Bundle.IBundleElementOrBuilder.NamedQuery.get -> Firestore.Bundle.NamedQuery?
Firestore.Bundle.IBundleMetadataOrBuilder
Firestore.Bundle.IBundleMetadataOrBuilder.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.IBundleMetadataOrBuilder.HasCreateTime.get -> bool
Firestore.Bundle.IBundleMetadataOrBuilder.Id.get -> string?
Firestore.Bundle.IBundleMetadataOrBuilder.IdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.IBundleMetadataOrBuilder.TotalBytes.get -> long
Firestore.Bundle.IBundleMetadataOrBuilder.TotalDocuments.get -> int
Firestore.Bundle.IBundleMetadataOrBuilder.Version.get -> int
Firestore.Bundle.IBundledDocumentMetadataOrBuilder
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.Exists.get -> bool
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.GetQueries(int p0) -> string?
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.GetQueriesBytes(int p0) -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.HasReadTime.get -> bool
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.Name.get -> string?
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.QueriesCount.get -> int
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.QueriesList.get -> System.Collections.Generic.IList<string!>?
Firestore.Bundle.IBundledDocumentMetadataOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.IBundledQueryOrBuilder
Firestore.Bundle.IBundledQueryOrBuilder.HasStructuredQuery.get -> bool
Firestore.Bundle.IBundledQueryOrBuilder.LimitTypeData.get -> Firestore.Bundle.BundledQuery.LimitType?
Firestore.Bundle.IBundledQueryOrBuilder.LimitTypeValue.get -> int
Firestore.Bundle.IBundledQueryOrBuilder.Parent.get -> string?
Firestore.Bundle.IBundledQueryOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.IBundledQueryOrBuilder.QueryTypeCaseData.get -> Firestore.Bundle.BundledQuery.QueryTypeCase?
Firestore.Bundle.IBundledQueryOrBuilder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Firestore.Bundle.INamedQueryOrBuilder
Firestore.Bundle.INamedQueryOrBuilder.BundledQuery.get -> Firestore.Bundle.BundledQuery?
Firestore.Bundle.INamedQueryOrBuilder.HasBundledQuery.get -> bool
Firestore.Bundle.INamedQueryOrBuilder.HasReadTime.get -> bool
Firestore.Bundle.INamedQueryOrBuilder.Name.get -> string?
Firestore.Bundle.INamedQueryOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.INamedQueryOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.NamedQuery
Firestore.Bundle.NamedQuery.Builder
Firestore.Bundle.NamedQuery.Builder.BundledQuery.get -> Firestore.Bundle.BundledQuery?
Firestore.Bundle.NamedQuery.Builder.ClearBundledQuery() -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.ClearName() -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.ClearReadTime() -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.HasBundledQuery.get -> bool
Firestore.Bundle.NamedQuery.Builder.HasReadTime.get -> bool
Firestore.Bundle.NamedQuery.Builder.MergeBundledQuery(Firestore.Bundle.BundledQuery? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.Name.get -> string?
Firestore.Bundle.NamedQuery.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.NamedQuery.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Firestore.Bundle.NamedQuery.Builder.SetBundledQuery(Firestore.Bundle.BundledQuery.Builder? builderForValue) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.SetBundledQuery(Firestore.Bundle.BundledQuery? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.SetName(string? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Firestore.Bundle.NamedQuery.Builder?
Firestore.Bundle.NamedQuery.BundledQuery.get -> Firestore.Bundle.BundledQuery?
Firestore.Bundle.NamedQuery.HasBundledQuery.get -> bool
Firestore.Bundle.NamedQuery.HasReadTime.get -> bool
Firestore.Bundle.NamedQuery.Name.get -> string?
Firestore.Bundle.NamedQuery.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Firestore.Bundle.NamedQuery.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.Number.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ActionId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ClearAction() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ClearActionId() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ClearFirestoreV1Action() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ClearValidationRule() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.FirestoreV1Action.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.HasFirestoreV1Action.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.HasValidationRule.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.MergeFirestoreV1Action(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.MergeValidationRule(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.SetActionId(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.SetFirestoreV1Action(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.SetFirestoreV1Action(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.SetValidationRule(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.SetValidationRule(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.ValidationRule.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.FirestoreV1Action.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.HasFirestoreV1Action.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.HasValidationRule.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ValidationRule.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.Number.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.AddAllResponse(Java.Lang.IIterable? values) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.AddResponse(Google.Firestore.V1.BatchGetDocumentsResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.AddResponse(Google.Firestore.V1.BatchGetDocumentsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.AddResponse(int index, Google.Firestore.V1.BatchGetDocumentsResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.AddResponse(int index, Google.Firestore.V1.BatchGetDocumentsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.GetResponse(int index) -> Google.Firestore.V1.BatchGetDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.MergeRequest(Google.Firestore.V1.BatchGetDocumentsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.RemoveResponse(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.Request.get -> Google.Firestore.V1.BatchGetDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.BatchGetDocumentsResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.SetRequest(Google.Firestore.V1.BatchGetDocumentsRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.SetRequest(Google.Firestore.V1.BatchGetDocumentsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.SetResponse(int index, Google.Firestore.V1.BatchGetDocumentsResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.SetResponse(int index, Google.Firestore.V1.BatchGetDocumentsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.GetResponse(int index) -> Google.Firestore.V1.BatchGetDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.GetResponseOrBuilder(int index) -> Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Request.get -> Google.Firestore.V1.BatchGetDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.BatchGetDocumentsResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ResponseOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.MergeRequest(Google.Firestore.V1.BeginTransactionRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.MergeResponse(Google.Firestore.V1.BeginTransactionResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.Request.get -> Google.Firestore.V1.BeginTransactionRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.Response.get -> Google.Firestore.V1.BeginTransactionResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.SetRequest(Google.Firestore.V1.BeginTransactionRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.SetRequest(Google.Firestore.V1.BeginTransactionRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.SetResponse(Google.Firestore.V1.BeginTransactionResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.SetResponse(Google.Firestore.V1.BeginTransactionResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Request.get -> Google.Firestore.V1.BeginTransactionRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Response.get -> Google.Firestore.V1.BeginTransactionResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransactionData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.AddAllMatchingDocuments(Java.Lang.IIterable? values) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.AddMatchingDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.AddMatchingDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.AddMatchingDocuments(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.AddMatchingDocuments(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.BatchGetDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.BeginTransactionData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearAction() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearBatchGetDocuments() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearBeginTransaction() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearCommit() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearCreateDocument() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearDatabaseContentsBeforeAction() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearDeleteDocument() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearGetDocument() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearListCollectionIds() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearListDocuments() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearListen() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearMatchingDocuments() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearRemoveListen() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearRollback() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearRunQuery() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearStatus() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ClearUpdateDocument() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.CommitData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.CreateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.DatabaseContentsBeforeAction.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.DeleteDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.GetDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.GetMatchingDocuments(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasBatchGetDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasBeginTransaction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasCommit.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasCreateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasDatabaseContentsBeforeAction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasDeleteDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasGetDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasListCollectionIds.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasListDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasRemoveListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasRollback.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasRunQuery.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasStatus.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.HasUpdateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ListCollectionIdsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ListDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.ListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MatchingDocumentsCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MatchingDocumentsList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeBatchGetDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeBeginTransaction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeCommit(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeCreateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeDatabaseContentsBeforeAction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeDeleteDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeGetDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeListCollectionIds(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeListDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeRemoveListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeRollback(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeRunQuery(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeStatus(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.MergeUpdateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.RemoveListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.RemoveMatchingDocuments(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.RollbackData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.RunQueryData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetBatchGetDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetBatchGetDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetBeginTransaction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetBeginTransaction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetCommit(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetCommit(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetCreateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetCreateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetDatabaseContentsBeforeAction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetDatabaseContentsBeforeAction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetDeleteDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetDeleteDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetGetDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetGetDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListCollectionIds(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListCollectionIds(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListDocuments(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetMatchingDocuments(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetMatchingDocuments(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRemoveListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRemoveListen(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRollback(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRollback(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRunQuery(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetRunQuery(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetStatus(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetStatus(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetUpdateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.SetUpdateDocument(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.Status.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.UpdateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.MergeRequest(Google.Firestore.V1.CommitRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.MergeResponse(Google.Firestore.V1.CommitResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.Request.get -> Google.Firestore.V1.CommitRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.Response.get -> Google.Firestore.V1.CommitResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.SetRequest(Google.Firestore.V1.CommitRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.SetRequest(Google.Firestore.V1.CommitRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.SetResponse(Google.Firestore.V1.CommitResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.SetResponse(Google.Firestore.V1.CommitResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Request.get -> Google.Firestore.V1.CommitRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Response.get -> Google.Firestore.V1.CommitResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CommitData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.MergeRequest(Google.Firestore.V1.CreateDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.MergeResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.Request.get -> Google.Firestore.V1.CreateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.SetRequest(Google.Firestore.V1.CreateDocumentRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.SetRequest(Google.Firestore.V1.CreateDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.SetResponse(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.SetResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Request.get -> Google.Firestore.V1.CreateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DatabaseContentsBeforeAction.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.MergeRequest(Google.Firestore.V1.DeleteDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.MergeResponse(Xamarin.Protobuf.Lite.Empty? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.Request.get -> Google.Firestore.V1.DeleteDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.SetRequest(Google.Firestore.V1.DeleteDocumentRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.SetRequest(Google.Firestore.V1.DeleteDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.SetResponse(Xamarin.Protobuf.Lite.Empty.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.SetResponse(Xamarin.Protobuf.Lite.Empty? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Request.get -> Google.Firestore.V1.DeleteDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.MergeRequest(Google.Firestore.V1.GetDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.MergeResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.Request.get -> Google.Firestore.V1.GetDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.SetRequest(Google.Firestore.V1.GetDocumentRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.SetRequest(Google.Firestore.V1.GetDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.SetResponse(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.SetResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Request.get -> Google.Firestore.V1.GetDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetMatchingDocuments(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetMatchingDocumentsOrBuilder(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasBatchGetDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasBeginTransaction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasCommit.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasCreateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasDatabaseContentsBeforeAction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasDeleteDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasGetDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasListCollectionIds.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasListDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasRemoveListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasRollback.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasRunQuery.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasStatus.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.HasUpdateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder.GetResponse(int p0) -> Google.Firestore.V1.BatchGetDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder.Request.get -> Google.Firestore.V1.BatchGetDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBatchGetDocumentsOrBuilder.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.BatchGetDocumentsResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBeginTransactionOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBeginTransactionOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBeginTransactionOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBeginTransactionOrBuilder.Request.get -> Google.Firestore.V1.BeginTransactionRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IBeginTransactionOrBuilder.Response.get -> Google.Firestore.V1.BeginTransactionResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICommitOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICommitOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICommitOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICommitOrBuilder.Request.get -> Google.Firestore.V1.CommitRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICommitOrBuilder.Response.get -> Google.Firestore.V1.CommitResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICreateDocumentOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICreateDocumentOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICreateDocumentOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICreateDocumentOrBuilder.Request.get -> Google.Firestore.V1.CreateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ICreateDocumentOrBuilder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IDeleteDocumentOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IDeleteDocumentOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IDeleteDocumentOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IDeleteDocumentOrBuilder.Request.get -> Google.Firestore.V1.DeleteDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IDeleteDocumentOrBuilder.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IGetDocumentOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IGetDocumentOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IGetDocumentOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IGetDocumentOrBuilder.Request.get -> Google.Firestore.V1.GetDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IGetDocumentOrBuilder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListCollectionIdsOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListCollectionIdsOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListCollectionIdsOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListCollectionIdsOrBuilder.Request.get -> Google.Firestore.V1.ListCollectionIdsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListCollectionIdsOrBuilder.Response.get -> Google.Firestore.V1.ListCollectionIdsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListDocumentsOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListDocumentsOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListDocumentsOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListDocumentsOrBuilder.Request.get -> Google.Firestore.V1.ListDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListDocumentsOrBuilder.Response.get -> Google.Firestore.V1.ListDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListenOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListenOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListenOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListenOrBuilder.Request.get -> Google.Firestore.V1.ListenRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IListenOrBuilder.Response.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder.HasListenResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder.HasMatchingDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder.ListenResponse.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder.MatchingDocumentsData.get -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRemoveListenOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRemoveListenOrBuilder.TargetId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRollbackOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRollbackOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRollbackOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRollbackOrBuilder.Request.get -> Google.Firestore.V1.RollbackRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRollbackOrBuilder.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder.GetResponse(int p0) -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder.Request.get -> Google.Firestore.V1.RunQueryRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IRunQueryOrBuilder.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.RunQueryResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IUpdateDocumentOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IUpdateDocumentOrBuilder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IUpdateDocumentOrBuilder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IUpdateDocumentOrBuilder.Request.get -> Google.Firestore.V1.UpdateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IUpdateDocumentOrBuilder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.MergeRequest(Google.Firestore.V1.ListCollectionIdsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.MergeResponse(Google.Firestore.V1.ListCollectionIdsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.Request.get -> Google.Firestore.V1.ListCollectionIdsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.Response.get -> Google.Firestore.V1.ListCollectionIdsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.SetRequest(Google.Firestore.V1.ListCollectionIdsRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.SetRequest(Google.Firestore.V1.ListCollectionIdsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.SetResponse(Google.Firestore.V1.ListCollectionIdsResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.SetResponse(Google.Firestore.V1.ListCollectionIdsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Request.get -> Google.Firestore.V1.ListCollectionIdsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Response.get -> Google.Firestore.V1.ListCollectionIdsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIdsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.MergeRequest(Google.Firestore.V1.ListDocumentsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.MergeResponse(Google.Firestore.V1.ListDocumentsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.Request.get -> Google.Firestore.V1.ListDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.Response.get -> Google.Firestore.V1.ListDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.SetRequest(Google.Firestore.V1.ListDocumentsRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.SetRequest(Google.Firestore.V1.ListDocumentsRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.SetResponse(Google.Firestore.V1.ListDocumentsResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.SetResponse(Google.Firestore.V1.ListDocumentsResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Request.get -> Google.Firestore.V1.ListDocumentsRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Response.get -> Google.Firestore.V1.ListDocumentsResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.MergeRequest(Google.Firestore.V1.ListenRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.MergeResponse(Google.Firestore.V1.ListenResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.Request.get -> Google.Firestore.V1.ListenRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.Response.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.SetRequest(Google.Firestore.V1.ListenRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.SetRequest(Google.Firestore.V1.ListenRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.SetResponse(Google.Firestore.V1.ListenResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.SetResponse(Google.Firestore.V1.ListenResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Request.get -> Google.Firestore.V1.ListenRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Response.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.ClearListenResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.ClearMatchingDocuments() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.HasListenResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.HasMatchingDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.ListenResponse.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.MatchingDocumentsData.get -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.MergeListenResponse(Google.Firestore.V1.ListenResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.MergeMatchingDocuments(Google.Firestore.V1.RunQueryResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.SetListenResponse(Google.Firestore.V1.ListenResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.SetListenResponse(Google.Firestore.V1.ListenResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.SetMatchingDocuments(Google.Firestore.V1.RunQueryResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.SetMatchingDocuments(Google.Firestore.V1.RunQueryResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.HasListenResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.HasMatchingDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ListenResponse.get -> Google.Firestore.V1.ListenResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.MatchingDocumentsData.get -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocumentsCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocumentsList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocumentsOrBuilderList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.IMatchingDocumentsOrBuilder!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder.ClearTargetId() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder.SetTargetId(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder.TargetId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.TargetId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.MergeRequest(Google.Firestore.V1.RollbackRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.MergeResponse(Xamarin.Protobuf.Lite.Empty? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.Request.get -> Google.Firestore.V1.RollbackRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.SetRequest(Google.Firestore.V1.RollbackRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.SetRequest(Google.Firestore.V1.RollbackRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.SetResponse(Xamarin.Protobuf.Lite.Empty.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.SetResponse(Xamarin.Protobuf.Lite.Empty? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Request.get -> Google.Firestore.V1.RollbackRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Response.get -> Xamarin.Protobuf.Lite.Empty?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RollbackData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.AddAllResponse(Java.Lang.IIterable? values) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.AddResponse(Google.Firestore.V1.RunQueryResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.AddResponse(Google.Firestore.V1.RunQueryResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.AddResponse(int index, Google.Firestore.V1.RunQueryResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.AddResponse(int index, Google.Firestore.V1.RunQueryResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.GetResponse(int index) -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.MergeRequest(Google.Firestore.V1.RunQueryRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.RemoveResponse(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.Request.get -> Google.Firestore.V1.RunQueryRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.RunQueryResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.SetRequest(Google.Firestore.V1.RunQueryRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.SetRequest(Google.Firestore.V1.RunQueryRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.SetResponse(int index, Google.Firestore.V1.RunQueryResponse.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.SetResponse(int index, Google.Firestore.V1.RunQueryResponse? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.GetResponse(int index) -> Google.Firestore.V1.RunQueryResponse?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.GetResponseOrBuilder(int index) -> Google.Firestore.V1.IRunQueryResponseOrBuilder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Request.get -> Google.Firestore.V1.RunQueryRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ResponseCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ResponseList.get -> System.Collections.Generic.IList<Google.Firestore.V1.RunQueryResponse!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ResponseOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IRunQueryResponseOrBuilder!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQueryData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Status.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.ClearRequest() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.ClearResponse() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.MergeRequest(Google.Firestore.V1.UpdateDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.MergeResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.Request.get -> Google.Firestore.V1.UpdateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.SetRequest(Google.Firestore.V1.UpdateDocumentRequest.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.SetRequest(Google.Firestore.V1.UpdateDocumentRequest? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.SetResponse(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.SetResponse(Google.Firestore.V1.Document? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.HasRequest.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.HasResponse.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Request.get -> Google.Firestore.V1.UpdateDocumentRequest?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Response.get -> Google.Firestore.V1.Document?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.ActionId.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.FirestoreV1Action.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.HasFirestoreV1Action.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.HasValidationRule.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder.ValidationRule.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.ActionCaseData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.BatchGetDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.BeginTransactionData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.CommitData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.CreateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.DatabaseContentsBeforeAction.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.DeleteDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.GetDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.GetMatchingDocuments(int p0) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasBatchGetDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasBeginTransaction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasCommit.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasCreateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasDatabaseContentsBeforeAction.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasDeleteDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasGetDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasListCollectionIds.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasListDocuments.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasRemoveListen.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasRollback.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasRunQuery.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasStatus.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.HasUpdateDocument.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.ListCollectionIdsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.ListDocumentsData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.ListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.MatchingDocumentsCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.MatchingDocumentsList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.RemoveListenData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.RollbackData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.RunQueryData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.Status.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IFirestoreV1ActionOrBuilder.UpdateDocumentData.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IParallelTestTraceOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IParallelTestTraceOrBuilder.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IParallelTestTraceOrBuilder.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.CanonicalCode.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.Code.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.Message.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.MessageBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.Space.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IStatusProtoOrBuilder.SpaceBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.ActionCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.ActionList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.GetAction(int p0) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.TraceDescription.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.TraceDescriptionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.TraceId.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITestTraceOrBuilder.TraceIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITimelineTestTraceOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITimelineTestTraceOrBuilder.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ITimelineTestTraceOrBuilder.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IValidationRuleOrBuilder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IValidationRuleOrBuilder.ValidateQueryIndexes.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IValidationRuleOrBuilder.ValidateQueryResultOrder.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.ClearTestTrace() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.MergeTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.SetTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.SetTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.CanonicalCode.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.ClearCanonicalCode() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.ClearCode() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.ClearMessage() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.ClearSpace() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.Code.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.Message.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.MessageBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetCanonicalCode(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetCode(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetMessage(string? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetMessageBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetSpace(string? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SetSpaceBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.Space.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.SpaceBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.CanonicalCode.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Code.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Message.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.MessageBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Space.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.SpaceBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ActionCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ActionList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ActionOrBuilderList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.ActionCount.get -> int
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.ActionList.get -> System.Collections.Generic.IList<Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction!>?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.AddAction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.AddAction(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.AddAction(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.AddAction(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.AddAllAction(Java.Lang.IIterable? values) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.ClearAction() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.ClearTraceDescription() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.ClearTraceId() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.GetAction(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.RemoveAction(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetAction(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetAction(int index, Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetTraceDescription(string? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetTraceDescriptionBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetTraceId(string? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.SetTraceIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.TraceDescription.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.TraceDescriptionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.TraceId.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.TraceIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.GetAction(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.GetActionOrBuilder(int index) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.IDatastoreActionOrBuilder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceDescription.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceDescriptionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceId.get -> string?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.ClearTestTrace() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.MergeTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.SetTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder? builderForValue) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.SetTestTrace(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace? value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.HasTestTrace.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.TestTrace.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.ClearValidateQueryIndexes() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.ClearValidateQueryResultOrder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.SetValidateQueryIndexes(bool value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.SetValidateQueryResultOrder(bool value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.ValidateQueryIndexes.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.ValidateQueryResultOrder.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ValidateQueryIndexes.get -> bool
Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ValidateQueryResultOrder.get -> bool
Google.Cloud.Datastore.Core.Number.NumberComparisonHelper
Google.Firestore.V1.AggregationResult
Google.Firestore.V1.AggregationResult.AggregateFields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.AggregationResult.AggregateFieldsCount.get -> int
Google.Firestore.V1.AggregationResult.AggregateFieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.AggregationResult.Builder
Google.Firestore.V1.AggregationResult.Builder.AggregateFields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.AggregationResult.Builder.AggregateFieldsCount.get -> int
Google.Firestore.V1.AggregationResult.Builder.AggregateFieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.AggregationResult.Builder.ClearAggregateFields() -> Google.Firestore.V1.AggregationResult.Builder?
Google.Firestore.V1.AggregationResult.Builder.ContainsAggregateFields(string? key) -> bool
Google.Firestore.V1.AggregationResult.Builder.GetAggregateFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.AggregationResult.Builder.GetAggregateFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.AggregationResult.Builder.PutAggregateFields(string? key, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.AggregationResult.Builder?
Google.Firestore.V1.AggregationResult.Builder.PutAllAggregateFields(System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>? values) -> Google.Firestore.V1.AggregationResult.Builder?
Google.Firestore.V1.AggregationResult.Builder.RemoveAggregateFields(string? key) -> Google.Firestore.V1.AggregationResult.Builder?
Google.Firestore.V1.AggregationResult.ContainsAggregateFields(string? key) -> bool
Google.Firestore.V1.AggregationResult.GetAggregateFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.AggregationResult.GetAggregateFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.AggregationResultProto
Google.Firestore.V1.ArrayValue
Google.Firestore.V1.ArrayValue.Builder
Google.Firestore.V1.ArrayValue.Builder.AddAllValues(Java.Lang.IIterable? values) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.AddValues(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.AddValues(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.AddValues(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.AddValues(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.ClearValues() -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.GetValues(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.ArrayValue.Builder.RemoveValues(int index) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.SetValues(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.SetValues(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.ArrayValue.Builder?
Google.Firestore.V1.ArrayValue.Builder.ValuesCount.get -> int
Google.Firestore.V1.ArrayValue.Builder.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.ArrayValue.GetValues(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.ArrayValue.GetValuesOrBuilder(int index) -> Google.Firestore.V1.IValueOrBuilder?
Google.Firestore.V1.ArrayValue.ValuesCount.get -> int
Google.Firestore.V1.ArrayValue.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.ArrayValue.ValuesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IValueOrBuilder!>?
Google.Firestore.V1.BatchGetDocumentsRequest
Google.Firestore.V1.BatchGetDocumentsRequest.Builder
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.AddAllDocuments(Java.Lang.IIterable? values) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.AddDocuments(string? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.AddDocumentsBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearConsistencySelector() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearDatabase() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearDocuments() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearMask() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearNewTransaction() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearReadTime() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ClearTransaction() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.Database.get -> string?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.DocumentsCount.get -> int
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.GetDocuments(int index) -> string?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.GetDocumentsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.HasMask.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.HasNewTransaction.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.HasReadTime.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.HasTransaction.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.MergeMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.MergeNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetDocuments(int index, string? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions.Builder? builderForValue) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
Google.Firestore.V1.BatchGetDocumentsRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase
Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCaseData.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.BatchGetDocumentsRequest.Database.get -> string?
Google.Firestore.V1.BatchGetDocumentsRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsRequest.DocumentsCount.get -> int
Google.Firestore.V1.BatchGetDocumentsRequest.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.BatchGetDocumentsRequest.GetDocuments(int index) -> string?
Google.Firestore.V1.BatchGetDocumentsRequest.GetDocumentsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsRequest.HasMask.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.HasNewTransaction.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.HasReadTime.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.HasTransaction.get -> bool
Google.Firestore.V1.BatchGetDocumentsRequest.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.BatchGetDocumentsRequest.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.BatchGetDocumentsRequest.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.BatchGetDocumentsRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsResponse
Google.Firestore.V1.BatchGetDocumentsResponse.Builder
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ClearFound() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ClearMissing() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ClearReadTime() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ClearResult() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ClearTransaction() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.Found.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.HasFound.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.HasMissing.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.HasReadTime.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.MergeFound(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.Missing.get -> string?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.MissingBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.ResultCaseData.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetFound(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetFound(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetMissing(string? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetMissingBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
Google.Firestore.V1.BatchGetDocumentsResponse.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsResponse.Found.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.BatchGetDocumentsResponse.HasFound.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.HasMissing.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.HasReadTime.get -> bool
Google.Firestore.V1.BatchGetDocumentsResponse.Missing.get -> string?
Google.Firestore.V1.BatchGetDocumentsResponse.MissingBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BatchGetDocumentsResponse.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase
Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.Number.get -> int
Google.Firestore.V1.BatchGetDocumentsResponse.ResultCaseData.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
Google.Firestore.V1.BatchGetDocumentsResponse.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BeginTransactionRequest
Google.Firestore.V1.BeginTransactionRequest.Builder
Google.Firestore.V1.BeginTransactionRequest.Builder.ClearDatabase() -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.ClearOptions() -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.Database.get -> string?
Google.Firestore.V1.BeginTransactionRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BeginTransactionRequest.Builder.HasOptions.get -> bool
Google.Firestore.V1.BeginTransactionRequest.Builder.MergeOptions(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.Options.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.BeginTransactionRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.SetOptions(Google.Firestore.V1.TransactionOptions.Builder? builderForValue) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Builder.SetOptions(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
Google.Firestore.V1.BeginTransactionRequest.Database.get -> string?
Google.Firestore.V1.BeginTransactionRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BeginTransactionRequest.HasOptions.get -> bool
Google.Firestore.V1.BeginTransactionRequest.Options.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.BeginTransactionResponse
Google.Firestore.V1.BeginTransactionResponse.Builder
Google.Firestore.V1.BeginTransactionResponse.Builder.ClearTransaction() -> Google.Firestore.V1.BeginTransactionResponse.Builder?
Google.Firestore.V1.BeginTransactionResponse.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BeginTransactionResponse.Builder?
Google.Firestore.V1.BeginTransactionResponse.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BeginTransactionResponse.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BitSequence
Google.Firestore.V1.BitSequence.Bitmap.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BitSequence.Builder
Google.Firestore.V1.BitSequence.Builder.Bitmap.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.BitSequence.Builder.ClearBitmap() -> Google.Firestore.V1.BitSequence.Builder?
Google.Firestore.V1.BitSequence.Builder.ClearPadding() -> Google.Firestore.V1.BitSequence.Builder?
Google.Firestore.V1.BitSequence.Builder.Padding.get -> int
Google.Firestore.V1.BitSequence.Builder.SetBitmap(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.BitSequence.Builder?
Google.Firestore.V1.BitSequence.Builder.SetPadding(int value) -> Google.Firestore.V1.BitSequence.Builder?
Google.Firestore.V1.BitSequence.Padding.get -> int
Google.Firestore.V1.BloomFilter
Google.Firestore.V1.BloomFilter.Bits.get -> Google.Firestore.V1.BitSequence?
Google.Firestore.V1.BloomFilter.Builder
Google.Firestore.V1.BloomFilter.Builder.Bits.get -> Google.Firestore.V1.BitSequence?
Google.Firestore.V1.BloomFilter.Builder.ClearBits() -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.Builder.ClearHashCount() -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.Builder.HasBits.get -> bool
Google.Firestore.V1.BloomFilter.Builder.HashCount.get -> int
Google.Firestore.V1.BloomFilter.Builder.MergeBits(Google.Firestore.V1.BitSequence? value) -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.Builder.SetBits(Google.Firestore.V1.BitSequence.Builder? builderForValue) -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.Builder.SetBits(Google.Firestore.V1.BitSequence? value) -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.Builder.SetHashCount(int value) -> Google.Firestore.V1.BloomFilter.Builder?
Google.Firestore.V1.BloomFilter.HasBits.get -> bool
Google.Firestore.V1.BloomFilter.HashCount.get -> int
Google.Firestore.V1.BloomFilterProto
Google.Firestore.V1.CommitRequest
Google.Firestore.V1.CommitRequest.Builder
Google.Firestore.V1.CommitRequest.Builder.AddAllWrites(Java.Lang.IIterable? values) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.AddWrites(Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.AddWrites(Google.Firestore.V1.Write? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.AddWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.AddWrites(int index, Google.Firestore.V1.Write? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.ClearDatabase() -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.ClearTransaction() -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.ClearWrites() -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.Database.get -> string?
Google.Firestore.V1.CommitRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CommitRequest.Builder.GetWrites(int index) -> Google.Firestore.V1.Write?
Google.Firestore.V1.CommitRequest.Builder.RemoveWrites(int index) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.SetWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.SetWrites(int index, Google.Firestore.V1.Write? value) -> Google.Firestore.V1.CommitRequest.Builder?
Google.Firestore.V1.CommitRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CommitRequest.Builder.WritesCount.get -> int
Google.Firestore.V1.CommitRequest.Builder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.CommitRequest.Database.get -> string?
Google.Firestore.V1.CommitRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CommitRequest.GetWrites(int index) -> Google.Firestore.V1.Write?
Google.Firestore.V1.CommitRequest.GetWritesOrBuilder(int index) -> Google.Firestore.V1.IWriteOrBuilder?
Google.Firestore.V1.CommitRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CommitRequest.WritesCount.get -> int
Google.Firestore.V1.CommitRequest.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.CommitRequest.WritesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteOrBuilder!>?
Google.Firestore.V1.CommitResponse
Google.Firestore.V1.CommitResponse.Builder
Google.Firestore.V1.CommitResponse.Builder.AddAllWriteResults(Java.Lang.IIterable? values) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.AddWriteResults(Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.AddWriteResults(Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.AddWriteResults(int index, Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.AddWriteResults(int index, Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.ClearCommitTime() -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.ClearWriteResults() -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.CommitResponse.Builder.GetWriteResults(int index) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.CommitResponse.Builder.HasCommitTime.get -> bool
Google.Firestore.V1.CommitResponse.Builder.MergeCommitTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.RemoveWriteResults(int index) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.SetCommitTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.SetCommitTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.SetWriteResults(int index, Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.SetWriteResults(int index, Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.CommitResponse.Builder?
Google.Firestore.V1.CommitResponse.Builder.WriteResultsCount.get -> int
Google.Firestore.V1.CommitResponse.Builder.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.CommitResponse.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.CommitResponse.GetWriteResults(int index) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.CommitResponse.GetWriteResultsOrBuilder(int index) -> Google.Firestore.V1.IWriteResultOrBuilder?
Google.Firestore.V1.CommitResponse.HasCommitTime.get -> bool
Google.Firestore.V1.CommitResponse.WriteResultsCount.get -> int
Google.Firestore.V1.CommitResponse.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.CommitResponse.WriteResultsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteResultOrBuilder!>?
Google.Firestore.V1.CommonProto
Google.Firestore.V1.CreateDocumentRequest
Google.Firestore.V1.CreateDocumentRequest.Builder
Google.Firestore.V1.CreateDocumentRequest.Builder.ClearCollectionId() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.ClearDocument() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.ClearDocumentId() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.ClearMask() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.ClearParent() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.CollectionId.get -> string?
Google.Firestore.V1.CreateDocumentRequest.Builder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CreateDocumentRequest.Builder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.CreateDocumentRequest.Builder.DocumentId.get -> string?
Google.Firestore.V1.CreateDocumentRequest.Builder.DocumentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CreateDocumentRequest.Builder.HasDocument.get -> bool
Google.Firestore.V1.CreateDocumentRequest.Builder.HasMask.get -> bool
Google.Firestore.V1.CreateDocumentRequest.Builder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.CreateDocumentRequest.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.MergeMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.Parent.get -> string?
Google.Firestore.V1.CreateDocumentRequest.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetCollectionId(string? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetCollectionIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetDocumentId(string? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetDocumentIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetParent(string? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
Google.Firestore.V1.CreateDocumentRequest.CollectionId.get -> string?
Google.Firestore.V1.CreateDocumentRequest.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CreateDocumentRequest.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.CreateDocumentRequest.DocumentId.get -> string?
Google.Firestore.V1.CreateDocumentRequest.DocumentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.CreateDocumentRequest.HasDocument.get -> bool
Google.Firestore.V1.CreateDocumentRequest.HasMask.get -> bool
Google.Firestore.V1.CreateDocumentRequest.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.CreateDocumentRequest.Parent.get -> string?
Google.Firestore.V1.CreateDocumentRequest.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Cursor
Google.Firestore.V1.Cursor.Before.get -> bool
Google.Firestore.V1.Cursor.Builder
Google.Firestore.V1.Cursor.Builder.AddAllValues(Java.Lang.IIterable? values) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.AddValues(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.AddValues(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.AddValues(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.AddValues(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.Before.get -> bool
Google.Firestore.V1.Cursor.Builder.ClearBefore() -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.ClearValues() -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.GetValues(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Cursor.Builder.RemoveValues(int index) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.SetBefore(bool value) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.SetValues(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.SetValues(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Cursor.Builder?
Google.Firestore.V1.Cursor.Builder.ValuesCount.get -> int
Google.Firestore.V1.Cursor.Builder.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.Cursor.GetValues(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Cursor.GetValuesOrBuilder(int index) -> Google.Firestore.V1.IValueOrBuilder?
Google.Firestore.V1.Cursor.ValuesCount.get -> int
Google.Firestore.V1.Cursor.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.Cursor.ValuesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IValueOrBuilder!>?
Google.Firestore.V1.DeleteDocumentRequest
Google.Firestore.V1.DeleteDocumentRequest.Builder
Google.Firestore.V1.DeleteDocumentRequest.Builder.ClearCurrentDocument() -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.ClearName() -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.DeleteDocumentRequest.Builder.HasCurrentDocument.get -> bool
Google.Firestore.V1.DeleteDocumentRequest.Builder.MergeCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.Name.get -> string?
Google.Firestore.V1.DeleteDocumentRequest.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DeleteDocumentRequest.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition.Builder? builderForValue) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.SetName(string? value) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
Google.Firestore.V1.DeleteDocumentRequest.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.DeleteDocumentRequest.HasCurrentDocument.get -> bool
Google.Firestore.V1.DeleteDocumentRequest.Name.get -> string?
Google.Firestore.V1.DeleteDocumentRequest.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Document
Google.Firestore.V1.Document.Builder
Google.Firestore.V1.Document.Builder.ClearCreateTime() -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.ClearFields() -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.ClearName() -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.ClearUpdateTime() -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.ContainsFields(string? key) -> bool
Google.Firestore.V1.Document.Builder.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Document.Builder.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.Document.Builder.FieldsCount.get -> int
Google.Firestore.V1.Document.Builder.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.Document.Builder.GetFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Document.Builder.GetFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Document.Builder.HasCreateTime.get -> bool
Google.Firestore.V1.Document.Builder.HasUpdateTime.get -> bool
Google.Firestore.V1.Document.Builder.MergeCreateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.MergeUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.Name.get -> string?
Google.Firestore.V1.Document.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Document.Builder.PutAllFields(System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>? values) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.PutFields(string? key, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.RemoveFields(string? key) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetCreateTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetCreateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetName(string? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Document.Builder?
Google.Firestore.V1.Document.Builder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Document.ContainsFields(string? key) -> bool
Google.Firestore.V1.Document.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Document.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.Document.FieldsCount.get -> int
Google.Firestore.V1.Document.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.Document.GetFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Document.GetFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Document.HasCreateTime.get -> bool
Google.Firestore.V1.Document.HasUpdateTime.get -> bool
Google.Firestore.V1.Document.Name.get -> string?
Google.Firestore.V1.Document.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Document.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.DocumentChange
Google.Firestore.V1.DocumentChange.Builder
Google.Firestore.V1.DocumentChange.Builder.AddAllRemovedTargetIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.AddAllTargetIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.AddRemovedTargetIds(int value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.AddTargetIds(int value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.ClearDocument() -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.ClearRemovedTargetIds() -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.ClearTargetIds() -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.DocumentChange.Builder.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentChange.Builder.GetTargetIds(int index) -> int
Google.Firestore.V1.DocumentChange.Builder.HasDocument.get -> bool
Google.Firestore.V1.DocumentChange.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentChange.Builder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentChange.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.SetRemovedTargetIds(int index, int value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.SetTargetIds(int index, int value) -> Google.Firestore.V1.DocumentChange.Builder?
Google.Firestore.V1.DocumentChange.Builder.TargetIdsCount.get -> int
Google.Firestore.V1.DocumentChange.Builder.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentChange.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.DocumentChange.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentChange.GetTargetIds(int index) -> int
Google.Firestore.V1.DocumentChange.HasDocument.get -> bool
Google.Firestore.V1.DocumentChange.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentChange.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentChange.TargetIdsCount.get -> int
Google.Firestore.V1.DocumentChange.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentDelete
Google.Firestore.V1.DocumentDelete.Builder
Google.Firestore.V1.DocumentDelete.Builder.AddAllRemovedTargetIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.AddRemovedTargetIds(int value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.ClearDocument() -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.ClearReadTime() -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.ClearRemovedTargetIds() -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.Document.get -> string?
Google.Firestore.V1.DocumentDelete.Builder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentDelete.Builder.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentDelete.Builder.HasReadTime.get -> bool
Google.Firestore.V1.DocumentDelete.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.DocumentDelete.Builder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentDelete.Builder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentDelete.Builder.SetDocument(string? value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.SetDocumentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Builder.SetRemovedTargetIds(int index, int value) -> Google.Firestore.V1.DocumentDelete.Builder?
Google.Firestore.V1.DocumentDelete.Document.get -> string?
Google.Firestore.V1.DocumentDelete.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentDelete.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentDelete.HasReadTime.get -> bool
Google.Firestore.V1.DocumentDelete.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.DocumentDelete.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentDelete.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentMask
Google.Firestore.V1.DocumentMask.Builder
Google.Firestore.V1.DocumentMask.Builder.AddAllFieldPaths(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentMask.Builder?
Google.Firestore.V1.DocumentMask.Builder.AddFieldPaths(string? value) -> Google.Firestore.V1.DocumentMask.Builder?
Google.Firestore.V1.DocumentMask.Builder.AddFieldPathsBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DocumentMask.Builder?
Google.Firestore.V1.DocumentMask.Builder.ClearFieldPaths() -> Google.Firestore.V1.DocumentMask.Builder?
Google.Firestore.V1.DocumentMask.Builder.FieldPathsCount.get -> int
Google.Firestore.V1.DocumentMask.Builder.FieldPathsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.DocumentMask.Builder.GetFieldPaths(int index) -> string?
Google.Firestore.V1.DocumentMask.Builder.GetFieldPathsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentMask.Builder.SetFieldPaths(int index, string? value) -> Google.Firestore.V1.DocumentMask.Builder?
Google.Firestore.V1.DocumentMask.FieldPathsCount.get -> int
Google.Firestore.V1.DocumentMask.FieldPathsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.DocumentMask.GetFieldPaths(int index) -> string?
Google.Firestore.V1.DocumentMask.GetFieldPathsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentProto
Google.Firestore.V1.DocumentRemove
Google.Firestore.V1.DocumentRemove.Builder
Google.Firestore.V1.DocumentRemove.Builder.AddAllRemovedTargetIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.AddRemovedTargetIds(int value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.ClearDocument() -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.ClearReadTime() -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.ClearRemovedTargetIds() -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.Document.get -> string?
Google.Firestore.V1.DocumentRemove.Builder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentRemove.Builder.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentRemove.Builder.HasReadTime.get -> bool
Google.Firestore.V1.DocumentRemove.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.DocumentRemove.Builder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentRemove.Builder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentRemove.Builder.SetDocument(string? value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.SetDocumentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Builder.SetRemovedTargetIds(int index, int value) -> Google.Firestore.V1.DocumentRemove.Builder?
Google.Firestore.V1.DocumentRemove.Document.get -> string?
Google.Firestore.V1.DocumentRemove.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentRemove.GetRemovedTargetIds(int index) -> int
Google.Firestore.V1.DocumentRemove.HasReadTime.get -> bool
Google.Firestore.V1.DocumentRemove.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.DocumentRemove.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.DocumentRemove.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.DocumentTransform
Google.Firestore.V1.DocumentTransform.Builder
Google.Firestore.V1.DocumentTransform.Builder.AddAllFieldTransforms(Java.Lang.IIterable? values) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.AddFieldTransforms(Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.AddFieldTransforms(Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.AddFieldTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.AddFieldTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.ClearDocument() -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.ClearFieldTransforms() -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.Document.get -> string?
Google.Firestore.V1.DocumentTransform.Builder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentTransform.Builder.FieldTransformsCount.get -> int
Google.Firestore.V1.DocumentTransform.Builder.FieldTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.DocumentTransform.Builder.GetFieldTransforms(int index) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.DocumentTransform.Builder.RemoveFieldTransforms(int index) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.SetDocument(string? value) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.SetDocumentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.SetFieldTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Builder.SetFieldTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.DocumentTransform.Builder?
Google.Firestore.V1.DocumentTransform.Document.get -> string?
Google.Firestore.V1.DocumentTransform.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentTransform.FieldTransform
Google.Firestore.V1.DocumentTransform.FieldTransform.AppendMissingElements.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.AppendMissingElements.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearAppendMissingElements() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearFieldPath() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearIncrement() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearMaximum() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearMinimum() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearRemoveAllFromArray() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearSetToServerValue() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.ClearTransformType() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.FieldPath.get -> string?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasAppendMissingElements.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasIncrement.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasMaximum.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasMinimum.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasRemoveAllFromArray.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.HasSetToServerValue.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.Increment.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.Maximum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.MergeAppendMissingElements(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.MergeIncrement(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.MergeMaximum(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.MergeMinimum(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.MergeRemoveAllFromArray(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.Minimum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.RemoveAllFromArray.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetAppendMissingElements(Google.Firestore.V1.ArrayValue.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetAppendMissingElements(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetFieldPath(string? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetFieldPathBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetIncrement(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetIncrement(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetMaximum(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetMaximum(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetMinimum(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetMinimum(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetRemoveAllFromArray(Google.Firestore.V1.ArrayValue.Builder? builderForValue) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetRemoveAllFromArray(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetSetToServerValue(Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue? value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetSetToServerValueValue(int value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetToServerValue.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.SetToServerValueValue.get -> int
Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.TransformTypeCaseData.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
Google.Firestore.V1.DocumentTransform.FieldTransform.FieldPath.get -> string?
Google.Firestore.V1.DocumentTransform.FieldTransform.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentTransform.FieldTransform.HasAppendMissingElements.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.HasIncrement.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.HasMaximum.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.HasMinimum.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.HasRemoveAllFromArray.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.HasSetToServerValue.get -> bool
Google.Firestore.V1.DocumentTransform.FieldTransform.Increment.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.Maximum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.Minimum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.FieldTransform.RemoveAllFromArray.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue
Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.Number.get -> int
Google.Firestore.V1.DocumentTransform.FieldTransform.SetToServerValue.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
Google.Firestore.V1.DocumentTransform.FieldTransform.SetToServerValueValue.get -> int
Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase
Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.Number.get -> int
Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCaseData.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
Google.Firestore.V1.DocumentTransform.FieldTransformsCount.get -> int
Google.Firestore.V1.DocumentTransform.FieldTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.DocumentTransform.FieldTransformsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder!>?
Google.Firestore.V1.DocumentTransform.GetFieldTransforms(int index) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.DocumentTransform.GetFieldTransformsOrBuilder(int index) -> Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.AppendMissingElements.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.FieldPath.get -> string?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasAppendMissingElements.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasIncrement.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasMaximum.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasMinimum.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasRemoveAllFromArray.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.HasSetToServerValue.get -> bool
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.Increment.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.Maximum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.Minimum.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.RemoveAllFromArray.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.SetToServerValue.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.SetToServerValueValue.get -> int
Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder.TransformTypeCaseData.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
Google.Firestore.V1.ExistenceFilter
Google.Firestore.V1.ExistenceFilter.Builder
Google.Firestore.V1.ExistenceFilter.Builder.ClearCount() -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.ClearTargetId() -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.ClearUnchangedNames() -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.Count.get -> int
Google.Firestore.V1.ExistenceFilter.Builder.HasUnchangedNames.get -> bool
Google.Firestore.V1.ExistenceFilter.Builder.MergeUnchangedNames(Google.Firestore.V1.BloomFilter? value) -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.SetCount(int value) -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.SetTargetId(int value) -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.SetUnchangedNames(Google.Firestore.V1.BloomFilter.Builder? builderForValue) -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.SetUnchangedNames(Google.Firestore.V1.BloomFilter? value) -> Google.Firestore.V1.ExistenceFilter.Builder?
Google.Firestore.V1.ExistenceFilter.Builder.TargetId.get -> int
Google.Firestore.V1.ExistenceFilter.Builder.UnchangedNames.get -> Google.Firestore.V1.BloomFilter?
Google.Firestore.V1.ExistenceFilter.Count.get -> int
Google.Firestore.V1.ExistenceFilter.HasUnchangedNames.get -> bool
Google.Firestore.V1.ExistenceFilter.TargetId.get -> int
Google.Firestore.V1.ExistenceFilter.UnchangedNames.get -> Google.Firestore.V1.BloomFilter?
Google.Firestore.V1.FirestoreGrpc
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.BatchGetDocuments(Google.Firestore.V1.BatchGetDocumentsRequest? request) -> Java.Util.IIterator?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.BeginTransaction(Google.Firestore.V1.BeginTransactionRequest? request) -> Google.Firestore.V1.BeginTransactionResponse?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.Commit(Google.Firestore.V1.CommitRequest? request) -> Google.Firestore.V1.CommitResponse?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.CreateDocument(Google.Firestore.V1.CreateDocumentRequest? request) -> Google.Firestore.V1.Document?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.DeleteDocument(Google.Firestore.V1.DeleteDocumentRequest? request) -> Xamarin.Protobuf.Lite.Empty?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.GetDocument(Google.Firestore.V1.GetDocumentRequest? request) -> Google.Firestore.V1.Document?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.ListCollectionIds(Google.Firestore.V1.ListCollectionIdsRequest? request) -> Google.Firestore.V1.ListCollectionIdsResponse?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.ListDocuments(Google.Firestore.V1.ListDocumentsRequest? request) -> Google.Firestore.V1.ListDocumentsResponse?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.Rollback(Google.Firestore.V1.RollbackRequest? request) -> Xamarin.Protobuf.Lite.Empty?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.RunAggregationQuery(Google.Firestore.V1.RunAggregationQueryRequest? request) -> Java.Util.IIterator?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.RunQuery(Google.Firestore.V1.RunQueryRequest? request) -> Java.Util.IIterator?
Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.UpdateDocument(Google.Firestore.V1.UpdateDocumentRequest? request) -> Google.Firestore.V1.Document?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.BeginTransaction(Google.Firestore.V1.BeginTransactionRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.Commit(Google.Firestore.V1.CommitRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.CreateDocument(Google.Firestore.V1.CreateDocumentRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.DeleteDocument(Google.Firestore.V1.DeleteDocumentRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.GetDocument(Google.Firestore.V1.GetDocumentRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.ListCollectionIds(Google.Firestore.V1.ListCollectionIdsRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.ListDocuments(Google.Firestore.V1.ListDocumentsRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.Rollback(Google.Firestore.V1.RollbackRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.UpdateDocument(Google.Firestore.V1.UpdateDocumentRequest? request) -> Google.Common.Util.Concurrent.IListenableFuture?
Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase
Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.BindService() -> Xamarin.Grpc.ServerServiceDefinition?
Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.FirestoreImplBase() -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.FirestoreImplBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.BatchGetDocuments(Google.Firestore.V1.BatchGetDocumentsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.BeginTransaction(Google.Firestore.V1.BeginTransactionRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.Commit(Google.Firestore.V1.CommitRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.CreateDocument(Google.Firestore.V1.CreateDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.DeleteDocument(Google.Firestore.V1.DeleteDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.GetDocument(Google.Firestore.V1.GetDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.ListCollectionIds(Google.Firestore.V1.ListCollectionIdsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.ListDocuments(Google.Firestore.V1.ListDocumentsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.Listen(Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> Xamarin.Grpc.Stub.IStreamObserver?
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.Rollback(Google.Firestore.V1.RollbackRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.RunAggregationQuery(Google.Firestore.V1.RunAggregationQueryRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.RunQuery(Google.Firestore.V1.RunQueryRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.UpdateDocument(Google.Firestore.V1.UpdateDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.FirestoreStub.Write(Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> Xamarin.Grpc.Stub.IStreamObserver?
Google.Firestore.V1.FirestoreGrpc.IAsyncService
Google.Firestore.V1.FirestoreGrpc.IAsyncService.BatchGetDocuments(Google.Firestore.V1.BatchGetDocumentsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.BeginTransaction(Google.Firestore.V1.BeginTransactionRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.Commit(Google.Firestore.V1.CommitRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.CreateDocument(Google.Firestore.V1.CreateDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.DeleteDocument(Google.Firestore.V1.DeleteDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.GetDocument(Google.Firestore.V1.GetDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.ListCollectionIds(Google.Firestore.V1.ListCollectionIdsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.ListDocuments(Google.Firestore.V1.ListDocumentsRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.Listen(Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> Xamarin.Grpc.Stub.IStreamObserver?
Google.Firestore.V1.FirestoreGrpc.IAsyncService.Rollback(Google.Firestore.V1.RollbackRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.RunAggregationQuery(Google.Firestore.V1.RunAggregationQueryRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.RunQuery(Google.Firestore.V1.RunQueryRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.UpdateDocument(Google.Firestore.V1.UpdateDocumentRequest? request, Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> void
Google.Firestore.V1.FirestoreGrpc.IAsyncService.Write(Xamarin.Grpc.Stub.IStreamObserver? responseObserver) -> Xamarin.Grpc.Stub.IStreamObserver?
Google.Firestore.V1.FirestoreProto
Google.Firestore.V1.GetDocumentRequest
Google.Firestore.V1.GetDocumentRequest.Builder
Google.Firestore.V1.GetDocumentRequest.Builder.ClearConsistencySelector() -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.ClearMask() -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.ClearName() -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.ClearReadTime() -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.ClearTransaction() -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
Google.Firestore.V1.GetDocumentRequest.Builder.HasMask.get -> bool
Google.Firestore.V1.GetDocumentRequest.Builder.HasReadTime.get -> bool
Google.Firestore.V1.GetDocumentRequest.Builder.HasTransaction.get -> bool
Google.Firestore.V1.GetDocumentRequest.Builder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.GetDocumentRequest.Builder.MergeMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.Name.get -> string?
Google.Firestore.V1.GetDocumentRequest.Builder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.GetDocumentRequest.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.GetDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetName(string? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetNameBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.GetDocumentRequest.Builder?
Google.Firestore.V1.GetDocumentRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase
Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCaseData.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
Google.Firestore.V1.GetDocumentRequest.HasMask.get -> bool
Google.Firestore.V1.GetDocumentRequest.HasReadTime.get -> bool
Google.Firestore.V1.GetDocumentRequest.HasTransaction.get -> bool
Google.Firestore.V1.GetDocumentRequest.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.GetDocumentRequest.Name.get -> string?
Google.Firestore.V1.GetDocumentRequest.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.GetDocumentRequest.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.GetDocumentRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IAggregationResultOrBuilder
Google.Firestore.V1.IAggregationResultOrBuilder.AggregateFields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IAggregationResultOrBuilder.AggregateFieldsCount.get -> int
Google.Firestore.V1.IAggregationResultOrBuilder.AggregateFieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IAggregationResultOrBuilder.ContainsAggregateFields(string? p0) -> bool
Google.Firestore.V1.IAggregationResultOrBuilder.GetAggregateFieldsOrDefault(string? p0, Google.Firestore.V1.Value? p1) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IAggregationResultOrBuilder.GetAggregateFieldsOrThrow(string? p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IArrayValueOrBuilder
Google.Firestore.V1.IArrayValueOrBuilder.GetValues(int p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IArrayValueOrBuilder.ValuesCount.get -> int
Google.Firestore.V1.IArrayValueOrBuilder.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.DocumentsCount.get -> int
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.GetDocuments(int p0) -> string?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.GetDocumentsBytes(int p0) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.HasMask.get -> bool
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.HasNewTransaction.get -> bool
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.HasTransaction.get -> bool
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IBatchGetDocumentsRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.Found.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.HasFound.get -> bool
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.HasMissing.get -> bool
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.Missing.get -> string?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.MissingBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.ResultCaseData.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
Google.Firestore.V1.IBatchGetDocumentsResponseOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBeginTransactionRequestOrBuilder
Google.Firestore.V1.IBeginTransactionRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.IBeginTransactionRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBeginTransactionRequestOrBuilder.HasOptions.get -> bool
Google.Firestore.V1.IBeginTransactionRequestOrBuilder.Options.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.IBeginTransactionResponseOrBuilder
Google.Firestore.V1.IBeginTransactionResponseOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBitSequenceOrBuilder
Google.Firestore.V1.IBitSequenceOrBuilder.Bitmap.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IBitSequenceOrBuilder.Padding.get -> int
Google.Firestore.V1.IBloomFilterOrBuilder
Google.Firestore.V1.IBloomFilterOrBuilder.Bits.get -> Google.Firestore.V1.BitSequence?
Google.Firestore.V1.IBloomFilterOrBuilder.HasBits.get -> bool
Google.Firestore.V1.IBloomFilterOrBuilder.HashCount.get -> int
Google.Firestore.V1.ICommitRequestOrBuilder
Google.Firestore.V1.ICommitRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.ICommitRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ICommitRequestOrBuilder.GetWrites(int p0) -> Google.Firestore.V1.Write?
Google.Firestore.V1.ICommitRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ICommitRequestOrBuilder.WritesCount.get -> int
Google.Firestore.V1.ICommitRequestOrBuilder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.ICommitResponseOrBuilder
Google.Firestore.V1.ICommitResponseOrBuilder.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ICommitResponseOrBuilder.GetWriteResults(int p0) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.ICommitResponseOrBuilder.HasCommitTime.get -> bool
Google.Firestore.V1.ICommitResponseOrBuilder.WriteResultsCount.get -> int
Google.Firestore.V1.ICommitResponseOrBuilder.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.CollectionId.get -> string?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.DocumentId.get -> string?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.DocumentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.HasDocument.get -> bool
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.HasMask.get -> bool
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.Parent.get -> string?
Google.Firestore.V1.ICreateDocumentRequestOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ICursorOrBuilder
Google.Firestore.V1.ICursorOrBuilder.Before.get -> bool
Google.Firestore.V1.ICursorOrBuilder.GetValues(int p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.ICursorOrBuilder.ValuesCount.get -> int
Google.Firestore.V1.ICursorOrBuilder.ValuesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.IDeleteDocumentRequestOrBuilder
Google.Firestore.V1.IDeleteDocumentRequestOrBuilder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.IDeleteDocumentRequestOrBuilder.HasCurrentDocument.get -> bool
Google.Firestore.V1.IDeleteDocumentRequestOrBuilder.Name.get -> string?
Google.Firestore.V1.IDeleteDocumentRequestOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentChangeOrBuilder
Google.Firestore.V1.IDocumentChangeOrBuilder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.IDocumentChangeOrBuilder.GetRemovedTargetIds(int p0) -> int
Google.Firestore.V1.IDocumentChangeOrBuilder.GetTargetIds(int p0) -> int
Google.Firestore.V1.IDocumentChangeOrBuilder.HasDocument.get -> bool
Google.Firestore.V1.IDocumentChangeOrBuilder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.IDocumentChangeOrBuilder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.IDocumentChangeOrBuilder.TargetIdsCount.get -> int
Google.Firestore.V1.IDocumentChangeOrBuilder.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.IDocumentDeleteOrBuilder
Google.Firestore.V1.IDocumentDeleteOrBuilder.Document.get -> string?
Google.Firestore.V1.IDocumentDeleteOrBuilder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentDeleteOrBuilder.GetRemovedTargetIds(int p0) -> int
Google.Firestore.V1.IDocumentDeleteOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IDocumentDeleteOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IDocumentDeleteOrBuilder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.IDocumentDeleteOrBuilder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.IDocumentMaskOrBuilder
Google.Firestore.V1.IDocumentMaskOrBuilder.FieldPathsCount.get -> int
Google.Firestore.V1.IDocumentMaskOrBuilder.FieldPathsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.IDocumentMaskOrBuilder.GetFieldPaths(int p0) -> string?
Google.Firestore.V1.IDocumentMaskOrBuilder.GetFieldPathsBytes(int p0) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentOrBuilder
Google.Firestore.V1.IDocumentOrBuilder.ContainsFields(string? p0) -> bool
Google.Firestore.V1.IDocumentOrBuilder.CreateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IDocumentOrBuilder.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IDocumentOrBuilder.FieldsCount.get -> int
Google.Firestore.V1.IDocumentOrBuilder.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IDocumentOrBuilder.GetFieldsOrDefault(string? p0, Google.Firestore.V1.Value? p1) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IDocumentOrBuilder.GetFieldsOrThrow(string? p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IDocumentOrBuilder.HasCreateTime.get -> bool
Google.Firestore.V1.IDocumentOrBuilder.HasUpdateTime.get -> bool
Google.Firestore.V1.IDocumentOrBuilder.Name.get -> string?
Google.Firestore.V1.IDocumentOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentOrBuilder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IDocumentRemoveOrBuilder
Google.Firestore.V1.IDocumentRemoveOrBuilder.Document.get -> string?
Google.Firestore.V1.IDocumentRemoveOrBuilder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentRemoveOrBuilder.GetRemovedTargetIds(int p0) -> int
Google.Firestore.V1.IDocumentRemoveOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IDocumentRemoveOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IDocumentRemoveOrBuilder.RemovedTargetIdsCount.get -> int
Google.Firestore.V1.IDocumentRemoveOrBuilder.RemovedTargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.IDocumentTransformOrBuilder
Google.Firestore.V1.IDocumentTransformOrBuilder.Document.get -> string?
Google.Firestore.V1.IDocumentTransformOrBuilder.DocumentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IDocumentTransformOrBuilder.FieldTransformsCount.get -> int
Google.Firestore.V1.IDocumentTransformOrBuilder.FieldTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.IDocumentTransformOrBuilder.GetFieldTransforms(int p0) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.IExistenceFilterOrBuilder
Google.Firestore.V1.IExistenceFilterOrBuilder.Count.get -> int
Google.Firestore.V1.IExistenceFilterOrBuilder.HasUnchangedNames.get -> bool
Google.Firestore.V1.IExistenceFilterOrBuilder.TargetId.get -> int
Google.Firestore.V1.IExistenceFilterOrBuilder.UnchangedNames.get -> Google.Firestore.V1.BloomFilter?
Google.Firestore.V1.IGetDocumentRequestOrBuilder
Google.Firestore.V1.IGetDocumentRequestOrBuilder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
Google.Firestore.V1.IGetDocumentRequestOrBuilder.HasMask.get -> bool
Google.Firestore.V1.IGetDocumentRequestOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IGetDocumentRequestOrBuilder.HasTransaction.get -> bool
Google.Firestore.V1.IGetDocumentRequestOrBuilder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IGetDocumentRequestOrBuilder.Name.get -> string?
Google.Firestore.V1.IGetDocumentRequestOrBuilder.NameBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IGetDocumentRequestOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IGetDocumentRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder.PageSize.get -> int
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder.PageToken.get -> string?
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder.Parent.get -> string?
Google.Firestore.V1.IListCollectionIdsRequestOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.CollectionIdsCount.get -> int
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.CollectionIdsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.GetCollectionIds(int p0) -> string?
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.GetCollectionIdsBytes(int p0) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.NextPageToken.get -> string?
Google.Firestore.V1.IListCollectionIdsResponseOrBuilder.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsRequestOrBuilder
Google.Firestore.V1.IListDocumentsRequestOrBuilder.CollectionId.get -> string?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.HasMask.get -> bool
Google.Firestore.V1.IListDocumentsRequestOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IListDocumentsRequestOrBuilder.HasTransaction.get -> bool
Google.Firestore.V1.IListDocumentsRequestOrBuilder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.OrderBy.get -> string?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.OrderByBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.PageSize.get -> int
Google.Firestore.V1.IListDocumentsRequestOrBuilder.PageToken.get -> string?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.Parent.get -> string?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IListDocumentsRequestOrBuilder.ShowMissing.get -> bool
Google.Firestore.V1.IListDocumentsRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListDocumentsResponseOrBuilder
Google.Firestore.V1.IListDocumentsResponseOrBuilder.DocumentsCount.get -> int
Google.Firestore.V1.IListDocumentsResponseOrBuilder.DocumentsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Document!>?
Google.Firestore.V1.IListDocumentsResponseOrBuilder.GetDocuments(int p0) -> Google.Firestore.V1.Document?
Google.Firestore.V1.IListDocumentsResponseOrBuilder.NextPageToken.get -> string?
Google.Firestore.V1.IListDocumentsResponseOrBuilder.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListenRequestOrBuilder
Google.Firestore.V1.IListenRequestOrBuilder.AddTarget.get -> Google.Firestore.V1.Target?
Google.Firestore.V1.IListenRequestOrBuilder.ContainsLabels(string? p0) -> bool
Google.Firestore.V1.IListenRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.IListenRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IListenRequestOrBuilder.GetLabelsOrDefault(string? p0, string? p1) -> string?
Google.Firestore.V1.IListenRequestOrBuilder.GetLabelsOrThrow(string? p0) -> string?
Google.Firestore.V1.IListenRequestOrBuilder.HasAddTarget.get -> bool
Google.Firestore.V1.IListenRequestOrBuilder.HasRemoveTarget.get -> bool
Google.Firestore.V1.IListenRequestOrBuilder.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.IListenRequestOrBuilder.LabelsCount.get -> int
Google.Firestore.V1.IListenRequestOrBuilder.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.IListenRequestOrBuilder.RemoveTarget.get -> int
Google.Firestore.V1.IListenRequestOrBuilder.TargetChangeCaseData.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
Google.Firestore.V1.IListenResponseOrBuilder
Google.Firestore.V1.IListenResponseOrBuilder.DocumentChange.get -> Google.Firestore.V1.DocumentChange?
Google.Firestore.V1.IListenResponseOrBuilder.DocumentDelete.get -> Google.Firestore.V1.DocumentDelete?
Google.Firestore.V1.IListenResponseOrBuilder.DocumentRemove.get -> Google.Firestore.V1.DocumentRemove?
Google.Firestore.V1.IListenResponseOrBuilder.Filter.get -> Google.Firestore.V1.ExistenceFilter?
Google.Firestore.V1.IListenResponseOrBuilder.HasDocumentChange.get -> bool
Google.Firestore.V1.IListenResponseOrBuilder.HasDocumentDelete.get -> bool
Google.Firestore.V1.IListenResponseOrBuilder.HasDocumentRemove.get -> bool
Google.Firestore.V1.IListenResponseOrBuilder.HasFilter.get -> bool
Google.Firestore.V1.IListenResponseOrBuilder.HasTargetChange.get -> bool
Google.Firestore.V1.IListenResponseOrBuilder.ResponseTypeCaseData.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
Google.Firestore.V1.IListenResponseOrBuilder.TargetChange.get -> Google.Firestore.V1.TargetChange?
Google.Firestore.V1.IMapValueOrBuilder
Google.Firestore.V1.IMapValueOrBuilder.ContainsFields(string? p0) -> bool
Google.Firestore.V1.IMapValueOrBuilder.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IMapValueOrBuilder.FieldsCount.get -> int
Google.Firestore.V1.IMapValueOrBuilder.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.IMapValueOrBuilder.GetFieldsOrDefault(string? p0, Google.Firestore.V1.Value? p1) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IMapValueOrBuilder.GetFieldsOrThrow(string? p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IPreconditionOrBuilder
Google.Firestore.V1.IPreconditionOrBuilder.ConditionTypeCaseData.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
Google.Firestore.V1.IPreconditionOrBuilder.Exists.get -> bool
Google.Firestore.V1.IPreconditionOrBuilder.HasExists.get -> bool
Google.Firestore.V1.IPreconditionOrBuilder.HasUpdateTime.get -> bool
Google.Firestore.V1.IPreconditionOrBuilder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IRollbackRequestOrBuilder
Google.Firestore.V1.IRollbackRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.IRollbackRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRollbackRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.GetConsistencySelectorCase() -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.HasNewTransaction.get -> bool
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.HasStructuredAggregationQuery.get -> bool
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.HasTransaction.get -> bool
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.Parent.get -> string?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.QueryTypeCaseData.get -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.StructuredAggregationQuery.get -> Google.Firestore.V1.StructuredAggregationQuery?
Google.Firestore.V1.IRunAggregationQueryRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder.HasResult.get -> bool
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder.Result.get -> Google.Firestore.V1.AggregationResult?
Google.Firestore.V1.IRunAggregationQueryResponseOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunQueryRequestOrBuilder
Google.Firestore.V1.IRunQueryRequestOrBuilder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.IRunQueryRequestOrBuilder.HasNewTransaction.get -> bool
Google.Firestore.V1.IRunQueryRequestOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IRunQueryRequestOrBuilder.HasStructuredQuery.get -> bool
Google.Firestore.V1.IRunQueryRequestOrBuilder.HasTransaction.get -> bool
Google.Firestore.V1.IRunQueryRequestOrBuilder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.IRunQueryRequestOrBuilder.Parent.get -> string?
Google.Firestore.V1.IRunQueryRequestOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunQueryRequestOrBuilder.QueryTypeCaseData.get -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
Google.Firestore.V1.IRunQueryRequestOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IRunQueryRequestOrBuilder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.IRunQueryRequestOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IRunQueryResponseOrBuilder
Google.Firestore.V1.IRunQueryResponseOrBuilder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.IRunQueryResponseOrBuilder.HasDocument.get -> bool
Google.Firestore.V1.IRunQueryResponseOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.IRunQueryResponseOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IRunQueryResponseOrBuilder.SkippedResults.get -> int
Google.Firestore.V1.IRunQueryResponseOrBuilder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.AggregationsCount.get -> int
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.AggregationsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredAggregationQuery.Aggregation!>?
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.GetAggregations(int p0) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.HasStructuredQuery.get -> bool
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.QueryTypeCaseData.get -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
Google.Firestore.V1.IStructuredAggregationQueryOrBuilder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.IStructuredQueryOrBuilder
Google.Firestore.V1.IStructuredQueryOrBuilder.EndAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.IStructuredQueryOrBuilder.FromCount.get -> int
Google.Firestore.V1.IStructuredQueryOrBuilder.FromList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.CollectionSelector!>?
Google.Firestore.V1.IStructuredQueryOrBuilder.GetFrom(int p0) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
Google.Firestore.V1.IStructuredQueryOrBuilder.GetOrderBy(int p0) -> Google.Firestore.V1.StructuredQuery.Order?
Google.Firestore.V1.IStructuredQueryOrBuilder.HasEndAt.get -> bool
Google.Firestore.V1.IStructuredQueryOrBuilder.HasLimit.get -> bool
Google.Firestore.V1.IStructuredQueryOrBuilder.HasSelect.get -> bool
Google.Firestore.V1.IStructuredQueryOrBuilder.HasStartAt.get -> bool
Google.Firestore.V1.IStructuredQueryOrBuilder.HasWhere.get -> bool
Google.Firestore.V1.IStructuredQueryOrBuilder.Limit.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.IStructuredQueryOrBuilder.Offset.get -> int
Google.Firestore.V1.IStructuredQueryOrBuilder.OrderByCount.get -> int
Google.Firestore.V1.IStructuredQueryOrBuilder.OrderByList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Order!>?
Google.Firestore.V1.IStructuredQueryOrBuilder.Select.get -> Google.Firestore.V1.StructuredQuery.Projection?
Google.Firestore.V1.IStructuredQueryOrBuilder.StartAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.IStructuredQueryOrBuilder.Where.get -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.ITargetChangeOrBuilder
Google.Firestore.V1.ITargetChangeOrBuilder.Cause.get -> Google.Rpc.Status?
Google.Firestore.V1.ITargetChangeOrBuilder.GetTargetIds(int p0) -> int
Google.Firestore.V1.ITargetChangeOrBuilder.HasCause.get -> bool
Google.Firestore.V1.ITargetChangeOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.ITargetChangeOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ITargetChangeOrBuilder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ITargetChangeOrBuilder.TargetChangeTypeData.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
Google.Firestore.V1.ITargetChangeOrBuilder.TargetChangeTypeValue.get -> int
Google.Firestore.V1.ITargetChangeOrBuilder.TargetIdsCount.get -> int
Google.Firestore.V1.ITargetChangeOrBuilder.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.ITargetOrBuilder
Google.Firestore.V1.ITargetOrBuilder.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Google.Firestore.V1.ITargetOrBuilder.ExpectedCount.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.ITargetOrBuilder.HasDocuments.get -> bool
Google.Firestore.V1.ITargetOrBuilder.HasExpectedCount.get -> bool
Google.Firestore.V1.ITargetOrBuilder.HasQuery.get -> bool
Google.Firestore.V1.ITargetOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.ITargetOrBuilder.HasResumeToken.get -> bool
Google.Firestore.V1.ITargetOrBuilder.Once.get -> bool
Google.Firestore.V1.ITargetOrBuilder.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Google.Firestore.V1.ITargetOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ITargetOrBuilder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ITargetOrBuilder.ResumeTypeCaseData.get -> Google.Firestore.V1.Target.ResumeTypeCase?
Google.Firestore.V1.ITargetOrBuilder.TargetId.get -> int
Google.Firestore.V1.ITargetOrBuilder.TargetTypeCaseData.get -> Google.Firestore.V1.Target.TargetTypeCase?
Google.Firestore.V1.ITransactionOptionsOrBuilder
Google.Firestore.V1.ITransactionOptionsOrBuilder.HasReadOnly.get -> bool
Google.Firestore.V1.ITransactionOptionsOrBuilder.HasReadWrite.get -> bool
Google.Firestore.V1.ITransactionOptionsOrBuilder.ModeCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
Google.Firestore.V1.ITransactionOptionsOrBuilder.ReadOnlyDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly?
Google.Firestore.V1.ITransactionOptionsOrBuilder.ReadWriteDataData.get -> Google.Firestore.V1.TransactionOptions.ReadWrite?
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.HasCurrentDocument.get -> bool
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.HasDocument.get -> bool
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.HasMask.get -> bool
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.HasUpdateMask.get -> bool
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IUpdateDocumentRequestOrBuilder.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IValueOrBuilder
Google.Firestore.V1.IValueOrBuilder.ArrayValue.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.IValueOrBuilder.BooleanValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IValueOrBuilder.DoubleValue.get -> double
Google.Firestore.V1.IValueOrBuilder.GeoPointValue.get -> Google.Type.LatLng?
Google.Firestore.V1.IValueOrBuilder.HasArrayValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasBooleanValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasBytesValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasDoubleValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasGeoPointValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasIntegerValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasMapValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasNullValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasReferenceValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasStringValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.HasTimestampValue.get -> bool
Google.Firestore.V1.IValueOrBuilder.IntegerValue.get -> long
Google.Firestore.V1.IValueOrBuilder.MapValue.get -> Google.Firestore.V1.MapValue?
Google.Firestore.V1.IValueOrBuilder.NullValue.get -> Xamarin.Protobuf.Lite.NullValue?
Google.Firestore.V1.IValueOrBuilder.NullValueValue.get -> int
Google.Firestore.V1.IValueOrBuilder.ReferenceValue.get -> string?
Google.Firestore.V1.IValueOrBuilder.ReferenceValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IValueOrBuilder.StringValue.get -> string?
Google.Firestore.V1.IValueOrBuilder.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IValueOrBuilder.TimestampValue.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IValueOrBuilder.ValueTypeCaseData.get -> Google.Firestore.V1.Value.ValueTypeCase?
Google.Firestore.V1.IWriteOrBuilder
Google.Firestore.V1.IWriteOrBuilder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.IWriteOrBuilder.Delete.get -> string?
Google.Firestore.V1.IWriteOrBuilder.DeleteBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteOrBuilder.GetUpdateTransforms(int p0) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.IWriteOrBuilder.HasCurrentDocument.get -> bool
Google.Firestore.V1.IWriteOrBuilder.HasDelete.get -> bool
Google.Firestore.V1.IWriteOrBuilder.HasTransform.get -> bool
Google.Firestore.V1.IWriteOrBuilder.HasUpdate.get -> bool
Google.Firestore.V1.IWriteOrBuilder.HasUpdateMask.get -> bool
Google.Firestore.V1.IWriteOrBuilder.HasVerify.get -> bool
Google.Firestore.V1.IWriteOrBuilder.OperationCaseData.get -> Google.Firestore.V1.Write.OperationCase?
Google.Firestore.V1.IWriteOrBuilder.Transform.get -> Google.Firestore.V1.DocumentTransform?
Google.Firestore.V1.IWriteOrBuilder.Update.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.IWriteOrBuilder.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.IWriteOrBuilder.UpdateTransformsCount.get -> int
Google.Firestore.V1.IWriteOrBuilder.UpdateTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.IWriteOrBuilder.Verify.get -> string?
Google.Firestore.V1.IWriteOrBuilder.VerifyBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteRequestOrBuilder
Google.Firestore.V1.IWriteRequestOrBuilder.ContainsLabels(string? p0) -> bool
Google.Firestore.V1.IWriteRequestOrBuilder.Database.get -> string?
Google.Firestore.V1.IWriteRequestOrBuilder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteRequestOrBuilder.GetLabelsOrDefault(string? p0, string? p1) -> string?
Google.Firestore.V1.IWriteRequestOrBuilder.GetLabelsOrThrow(string? p0) -> string?
Google.Firestore.V1.IWriteRequestOrBuilder.GetWrites(int p0) -> Google.Firestore.V1.Write?
Google.Firestore.V1.IWriteRequestOrBuilder.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.IWriteRequestOrBuilder.LabelsCount.get -> int
Google.Firestore.V1.IWriteRequestOrBuilder.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.IWriteRequestOrBuilder.StreamId.get -> string?
Google.Firestore.V1.IWriteRequestOrBuilder.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteRequestOrBuilder.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteRequestOrBuilder.WritesCount.get -> int
Google.Firestore.V1.IWriteRequestOrBuilder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.IWriteResponseOrBuilder
Google.Firestore.V1.IWriteResponseOrBuilder.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.IWriteResponseOrBuilder.GetWriteResults(int p0) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.IWriteResponseOrBuilder.HasCommitTime.get -> bool
Google.Firestore.V1.IWriteResponseOrBuilder.StreamId.get -> string?
Google.Firestore.V1.IWriteResponseOrBuilder.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteResponseOrBuilder.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.IWriteResponseOrBuilder.WriteResultsCount.get -> int
Google.Firestore.V1.IWriteResponseOrBuilder.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.IWriteResultOrBuilder
Google.Firestore.V1.IWriteResultOrBuilder.GetTransformResults(int p0) -> Google.Firestore.V1.Value?
Google.Firestore.V1.IWriteResultOrBuilder.HasUpdateTime.get -> bool
Google.Firestore.V1.IWriteResultOrBuilder.TransformResultsCount.get -> int
Google.Firestore.V1.IWriteResultOrBuilder.TransformResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.IWriteResultOrBuilder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ListCollectionIdsRequest
Google.Firestore.V1.ListCollectionIdsRequest.Builder
Google.Firestore.V1.ListCollectionIdsRequest.Builder.ClearPageSize() -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.ClearPageToken() -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.ClearParent() -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.PageSize.get -> int
Google.Firestore.V1.ListCollectionIdsRequest.Builder.PageToken.get -> string?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.Parent.get -> string?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.SetPageSize(int value) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.SetPageToken(string? value) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.SetPageTokenBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.SetParent(string? value) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
Google.Firestore.V1.ListCollectionIdsRequest.PageSize.get -> int
Google.Firestore.V1.ListCollectionIdsRequest.PageToken.get -> string?
Google.Firestore.V1.ListCollectionIdsRequest.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsRequest.Parent.get -> string?
Google.Firestore.V1.ListCollectionIdsRequest.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsResponse
Google.Firestore.V1.ListCollectionIdsResponse.Builder
Google.Firestore.V1.ListCollectionIdsResponse.Builder.AddAllCollectionIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.AddCollectionIds(string? value) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.AddCollectionIdsBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.ClearCollectionIds() -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.ClearNextPageToken() -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.CollectionIdsCount.get -> int
Google.Firestore.V1.ListCollectionIdsResponse.Builder.CollectionIdsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.GetCollectionIds(int index) -> string?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.GetCollectionIdsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.NextPageToken.get -> string?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.SetCollectionIds(int index, string? value) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.SetNextPageToken(string? value) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.Builder.SetNextPageTokenBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
Google.Firestore.V1.ListCollectionIdsResponse.CollectionIdsCount.get -> int
Google.Firestore.V1.ListCollectionIdsResponse.CollectionIdsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.ListCollectionIdsResponse.GetCollectionIds(int index) -> string?
Google.Firestore.V1.ListCollectionIdsResponse.GetCollectionIdsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListCollectionIdsResponse.NextPageToken.get -> string?
Google.Firestore.V1.ListCollectionIdsResponse.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest
Google.Firestore.V1.ListDocumentsRequest.Builder
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearCollectionId() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearConsistencySelector() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearMask() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearOrderBy() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearPageSize() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearPageToken() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearParent() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearReadTime() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearShowMissing() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ClearTransaction() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.CollectionId.get -> string?
Google.Firestore.V1.ListDocumentsRequest.Builder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.Builder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.ListDocumentsRequest.Builder.HasMask.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Builder.HasReadTime.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Builder.HasTransaction.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Builder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.ListDocumentsRequest.Builder.MergeMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.OrderBy.get -> string?
Google.Firestore.V1.ListDocumentsRequest.Builder.OrderByBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.Builder.PageSize.get -> int
Google.Firestore.V1.ListDocumentsRequest.Builder.PageToken.get -> string?
Google.Firestore.V1.ListDocumentsRequest.Builder.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.Builder.Parent.get -> string?
Google.Firestore.V1.ListDocumentsRequest.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetCollectionId(string? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetCollectionIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetOrderBy(string? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetOrderByBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetPageSize(int value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetPageToken(string? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetPageTokenBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetParent(string? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetShowMissing(bool value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
Google.Firestore.V1.ListDocumentsRequest.Builder.ShowMissing.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.CollectionId.get -> string?
Google.Firestore.V1.ListDocumentsRequest.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase
Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCaseData.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
Google.Firestore.V1.ListDocumentsRequest.HasMask.get -> bool
Google.Firestore.V1.ListDocumentsRequest.HasReadTime.get -> bool
Google.Firestore.V1.ListDocumentsRequest.HasTransaction.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.ListDocumentsRequest.OrderBy.get -> string?
Google.Firestore.V1.ListDocumentsRequest.OrderByBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.PageSize.get -> int
Google.Firestore.V1.ListDocumentsRequest.PageToken.get -> string?
Google.Firestore.V1.ListDocumentsRequest.PageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.Parent.get -> string?
Google.Firestore.V1.ListDocumentsRequest.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsRequest.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.ListDocumentsRequest.ShowMissing.get -> bool
Google.Firestore.V1.ListDocumentsRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsResponse
Google.Firestore.V1.ListDocumentsResponse.Builder
Google.Firestore.V1.ListDocumentsResponse.Builder.AddAllDocuments(Java.Lang.IIterable? values) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.AddDocuments(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.AddDocuments(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.AddDocuments(int index, Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.AddDocuments(int index, Google.Firestore.V1.Document? value) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.ClearDocuments() -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.ClearNextPageToken() -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.DocumentsCount.get -> int
Google.Firestore.V1.ListDocumentsResponse.Builder.DocumentsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Document!>?
Google.Firestore.V1.ListDocumentsResponse.Builder.GetDocuments(int index) -> Google.Firestore.V1.Document?
Google.Firestore.V1.ListDocumentsResponse.Builder.NextPageToken.get -> string?
Google.Firestore.V1.ListDocumentsResponse.Builder.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListDocumentsResponse.Builder.RemoveDocuments(int index) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.SetDocuments(int index, Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.SetDocuments(int index, Google.Firestore.V1.Document? value) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.SetNextPageToken(string? value) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.Builder.SetNextPageTokenBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
Google.Firestore.V1.ListDocumentsResponse.DocumentsCount.get -> int
Google.Firestore.V1.ListDocumentsResponse.DocumentsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Document!>?
Google.Firestore.V1.ListDocumentsResponse.DocumentsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IDocumentOrBuilder!>?
Google.Firestore.V1.ListDocumentsResponse.GetDocuments(int index) -> Google.Firestore.V1.Document?
Google.Firestore.V1.ListDocumentsResponse.GetDocumentsOrBuilder(int index) -> Google.Firestore.V1.IDocumentOrBuilder?
Google.Firestore.V1.ListDocumentsResponse.NextPageToken.get -> string?
Google.Firestore.V1.ListDocumentsResponse.NextPageTokenBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListenRequest
Google.Firestore.V1.ListenRequest.AddTarget.get -> Google.Firestore.V1.Target?
Google.Firestore.V1.ListenRequest.Builder
Google.Firestore.V1.ListenRequest.Builder.AddTarget.get -> Google.Firestore.V1.Target?
Google.Firestore.V1.ListenRequest.Builder.ClearAddTarget() -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.ClearDatabase() -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.ClearLabels() -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.ClearRemoveTarget() -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.ClearTargetChange() -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.ContainsLabels(string? key) -> bool
Google.Firestore.V1.ListenRequest.Builder.Database.get -> string?
Google.Firestore.V1.ListenRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListenRequest.Builder.GetLabelsOrDefault(string? key, string? defaultValue) -> string?
Google.Firestore.V1.ListenRequest.Builder.GetLabelsOrThrow(string? key) -> string?
Google.Firestore.V1.ListenRequest.Builder.HasAddTarget.get -> bool
Google.Firestore.V1.ListenRequest.Builder.HasRemoveTarget.get -> bool
Google.Firestore.V1.ListenRequest.Builder.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.ListenRequest.Builder.LabelsCount.get -> int
Google.Firestore.V1.ListenRequest.Builder.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.ListenRequest.Builder.MergeAddTarget(Google.Firestore.V1.Target? value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.PutAllLabels(System.Collections.Generic.IDictionary<string!, string!>? values) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.PutLabels(string? key, string? value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.RemoveLabels(string? key) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.RemoveTarget.get -> int
Google.Firestore.V1.ListenRequest.Builder.SetAddTarget(Google.Firestore.V1.Target.Builder? builderForValue) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.SetAddTarget(Google.Firestore.V1.Target? value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.SetRemoveTarget(int value) -> Google.Firestore.V1.ListenRequest.Builder?
Google.Firestore.V1.ListenRequest.Builder.TargetChangeCaseData.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
Google.Firestore.V1.ListenRequest.ContainsLabels(string? key) -> bool
Google.Firestore.V1.ListenRequest.Database.get -> string?
Google.Firestore.V1.ListenRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.ListenRequest.GetLabelsOrDefault(string? key, string? defaultValue) -> string?
Google.Firestore.V1.ListenRequest.GetLabelsOrThrow(string? key) -> string?
Google.Firestore.V1.ListenRequest.HasAddTarget.get -> bool
Google.Firestore.V1.ListenRequest.HasRemoveTarget.get -> bool
Google.Firestore.V1.ListenRequest.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.ListenRequest.LabelsCount.get -> int
Google.Firestore.V1.ListenRequest.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.ListenRequest.RemoveTarget.get -> int
Google.Firestore.V1.ListenRequest.TargetChangeCase
Google.Firestore.V1.ListenRequest.TargetChangeCase.Number.get -> int
Google.Firestore.V1.ListenRequest.TargetChangeCaseData.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
Google.Firestore.V1.ListenResponse
Google.Firestore.V1.ListenResponse.Builder
Google.Firestore.V1.ListenResponse.Builder.ClearDocumentChange() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ClearDocumentDelete() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ClearDocumentRemove() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ClearFilter() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ClearResponseType() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ClearTargetChange() -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.DocumentChange.get -> Google.Firestore.V1.DocumentChange?
Google.Firestore.V1.ListenResponse.Builder.DocumentDelete.get -> Google.Firestore.V1.DocumentDelete?
Google.Firestore.V1.ListenResponse.Builder.DocumentRemove.get -> Google.Firestore.V1.DocumentRemove?
Google.Firestore.V1.ListenResponse.Builder.Filter.get -> Google.Firestore.V1.ExistenceFilter?
Google.Firestore.V1.ListenResponse.Builder.HasDocumentChange.get -> bool
Google.Firestore.V1.ListenResponse.Builder.HasDocumentDelete.get -> bool
Google.Firestore.V1.ListenResponse.Builder.HasDocumentRemove.get -> bool
Google.Firestore.V1.ListenResponse.Builder.HasFilter.get -> bool
Google.Firestore.V1.ListenResponse.Builder.HasTargetChange.get -> bool
Google.Firestore.V1.ListenResponse.Builder.MergeDocumentChange(Google.Firestore.V1.DocumentChange? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.MergeDocumentDelete(Google.Firestore.V1.DocumentDelete? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.MergeDocumentRemove(Google.Firestore.V1.DocumentRemove? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.MergeFilter(Google.Firestore.V1.ExistenceFilter? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.MergeTargetChange(Google.Firestore.V1.TargetChange? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.ResponseTypeCaseData.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentChange(Google.Firestore.V1.DocumentChange.Builder? builderForValue) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentChange(Google.Firestore.V1.DocumentChange? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentDelete(Google.Firestore.V1.DocumentDelete.Builder? builderForValue) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentDelete(Google.Firestore.V1.DocumentDelete? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentRemove(Google.Firestore.V1.DocumentRemove.Builder? builderForValue) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetDocumentRemove(Google.Firestore.V1.DocumentRemove? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetFilter(Google.Firestore.V1.ExistenceFilter.Builder? builderForValue) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetFilter(Google.Firestore.V1.ExistenceFilter? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetTargetChange(Google.Firestore.V1.TargetChange.Builder? builderForValue) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.SetTargetChange(Google.Firestore.V1.TargetChange? value) -> Google.Firestore.V1.ListenResponse.Builder?
Google.Firestore.V1.ListenResponse.Builder.TargetChange.get -> Google.Firestore.V1.TargetChange?
Google.Firestore.V1.ListenResponse.DocumentChange.get -> Google.Firestore.V1.DocumentChange?
Google.Firestore.V1.ListenResponse.DocumentDelete.get -> Google.Firestore.V1.DocumentDelete?
Google.Firestore.V1.ListenResponse.DocumentRemove.get -> Google.Firestore.V1.DocumentRemove?
Google.Firestore.V1.ListenResponse.Filter.get -> Google.Firestore.V1.ExistenceFilter?
Google.Firestore.V1.ListenResponse.HasDocumentChange.get -> bool
Google.Firestore.V1.ListenResponse.HasDocumentDelete.get -> bool
Google.Firestore.V1.ListenResponse.HasDocumentRemove.get -> bool
Google.Firestore.V1.ListenResponse.HasFilter.get -> bool
Google.Firestore.V1.ListenResponse.HasTargetChange.get -> bool
Google.Firestore.V1.ListenResponse.ResponseTypeCase
Google.Firestore.V1.ListenResponse.ResponseTypeCase.Number.get -> int
Google.Firestore.V1.ListenResponse.ResponseTypeCaseData.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
Google.Firestore.V1.ListenResponse.TargetChange.get -> Google.Firestore.V1.TargetChange?
Google.Firestore.V1.MapValue
Google.Firestore.V1.MapValue.Builder
Google.Firestore.V1.MapValue.Builder.ClearFields() -> Google.Firestore.V1.MapValue.Builder?
Google.Firestore.V1.MapValue.Builder.ContainsFields(string? key) -> bool
Google.Firestore.V1.MapValue.Builder.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.MapValue.Builder.FieldsCount.get -> int
Google.Firestore.V1.MapValue.Builder.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.MapValue.Builder.GetFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.MapValue.Builder.GetFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.MapValue.Builder.PutAllFields(System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>? values) -> Google.Firestore.V1.MapValue.Builder?
Google.Firestore.V1.MapValue.Builder.PutFields(string? key, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.MapValue.Builder?
Google.Firestore.V1.MapValue.Builder.RemoveFields(string? key) -> Google.Firestore.V1.MapValue.Builder?
Google.Firestore.V1.MapValue.ContainsFields(string? key) -> bool
Google.Firestore.V1.MapValue.Fields.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.MapValue.FieldsCount.get -> int
Google.Firestore.V1.MapValue.FieldsMap.get -> System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>?
Google.Firestore.V1.MapValue.GetFieldsOrDefault(string? key, Google.Firestore.V1.Value? defaultValue) -> Google.Firestore.V1.Value?
Google.Firestore.V1.MapValue.GetFieldsOrThrow(string? key) -> Google.Firestore.V1.Value?
Google.Firestore.V1.Precondition
Google.Firestore.V1.Precondition.Builder
Google.Firestore.V1.Precondition.Builder.ClearConditionType() -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.ClearExists() -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.ClearUpdateTime() -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.ConditionTypeCaseData.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
Google.Firestore.V1.Precondition.Builder.Exists.get -> bool
Google.Firestore.V1.Precondition.Builder.HasExists.get -> bool
Google.Firestore.V1.Precondition.Builder.HasUpdateTime.get -> bool
Google.Firestore.V1.Precondition.Builder.MergeUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.SetExists(bool value) -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Precondition.Builder?
Google.Firestore.V1.Precondition.Builder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Precondition.ConditionTypeCase
Google.Firestore.V1.Precondition.ConditionTypeCase.Number.get -> int
Google.Firestore.V1.Precondition.ConditionTypeCaseData.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
Google.Firestore.V1.Precondition.Exists.get -> bool
Google.Firestore.V1.Precondition.HasExists.get -> bool
Google.Firestore.V1.Precondition.HasUpdateTime.get -> bool
Google.Firestore.V1.Precondition.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.QueryProto
Google.Firestore.V1.RollbackRequest
Google.Firestore.V1.RollbackRequest.Builder
Google.Firestore.V1.RollbackRequest.Builder.ClearDatabase() -> Google.Firestore.V1.RollbackRequest.Builder?
Google.Firestore.V1.RollbackRequest.Builder.ClearTransaction() -> Google.Firestore.V1.RollbackRequest.Builder?
Google.Firestore.V1.RollbackRequest.Builder.Database.get -> string?
Google.Firestore.V1.RollbackRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RollbackRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.RollbackRequest.Builder?
Google.Firestore.V1.RollbackRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RollbackRequest.Builder?
Google.Firestore.V1.RollbackRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RollbackRequest.Builder?
Google.Firestore.V1.RollbackRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RollbackRequest.Database.get -> string?
Google.Firestore.V1.RollbackRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RollbackRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryRequest
Google.Firestore.V1.RunAggregationQueryRequest.Builder
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearConsistencySelector() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearNewTransaction() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearParent() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearQueryType() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearReadTime() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearStructuredAggregationQuery() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ClearTransaction() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.GetConsistencySelectorCase() -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.HasNewTransaction.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.Builder.HasReadTime.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.Builder.HasStructuredAggregationQuery.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.Builder.HasTransaction.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.Builder.MergeNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.MergeStructuredAggregationQuery(Google.Firestore.V1.StructuredAggregationQuery? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.Parent.get -> string?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.QueryTypeCaseData.get -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions.Builder? builderForValue) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetParent(string? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetStructuredAggregationQuery(Google.Firestore.V1.StructuredAggregationQuery.Builder? builderForValue) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetStructuredAggregationQuery(Google.Firestore.V1.StructuredAggregationQuery? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.StructuredAggregationQuery.get -> Google.Firestore.V1.StructuredAggregationQuery?
Google.Firestore.V1.RunAggregationQueryRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase
Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.RunAggregationQueryRequest.GetConsistencySelectorCase() -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.RunAggregationQueryRequest.HasNewTransaction.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.HasReadTime.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.HasStructuredAggregationQuery.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.HasTransaction.get -> bool
Google.Firestore.V1.RunAggregationQueryRequest.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.RunAggregationQueryRequest.Parent.get -> string?
Google.Firestore.V1.RunAggregationQueryRequest.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase
Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.Number.get -> int
Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCaseData.get -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
Google.Firestore.V1.RunAggregationQueryRequest.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunAggregationQueryRequest.StructuredAggregationQuery.get -> Google.Firestore.V1.StructuredAggregationQuery?
Google.Firestore.V1.RunAggregationQueryRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryResponse
Google.Firestore.V1.RunAggregationQueryResponse.Builder
Google.Firestore.V1.RunAggregationQueryResponse.Builder.ClearReadTime() -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.ClearResult() -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.ClearTransaction() -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.HasReadTime.get -> bool
Google.Firestore.V1.RunAggregationQueryResponse.Builder.HasResult.get -> bool
Google.Firestore.V1.RunAggregationQueryResponse.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.MergeResult(Google.Firestore.V1.AggregationResult? value) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.Result.get -> Google.Firestore.V1.AggregationResult?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.SetResult(Google.Firestore.V1.AggregationResult.Builder? builderForValue) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.SetResult(Google.Firestore.V1.AggregationResult? value) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
Google.Firestore.V1.RunAggregationQueryResponse.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunAggregationQueryResponse.HasReadTime.get -> bool
Google.Firestore.V1.RunAggregationQueryResponse.HasResult.get -> bool
Google.Firestore.V1.RunAggregationQueryResponse.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunAggregationQueryResponse.Result.get -> Google.Firestore.V1.AggregationResult?
Google.Firestore.V1.RunAggregationQueryResponse.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryRequest
Google.Firestore.V1.RunQueryRequest.Builder
Google.Firestore.V1.RunQueryRequest.Builder.ClearConsistencySelector() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearNewTransaction() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearParent() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearQueryType() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearReadTime() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearStructuredQuery() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ClearTransaction() -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.ConsistencySelectorCaseData.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.RunQueryRequest.Builder.HasNewTransaction.get -> bool
Google.Firestore.V1.RunQueryRequest.Builder.HasReadTime.get -> bool
Google.Firestore.V1.RunQueryRequest.Builder.HasStructuredQuery.get -> bool
Google.Firestore.V1.RunQueryRequest.Builder.HasTransaction.get -> bool
Google.Firestore.V1.RunQueryRequest.Builder.MergeNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.MergeStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.RunQueryRequest.Builder.Parent.get -> string?
Google.Firestore.V1.RunQueryRequest.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryRequest.Builder.QueryTypeCaseData.get -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
Google.Firestore.V1.RunQueryRequest.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunQueryRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions.Builder? builderForValue) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetNewTransaction(Google.Firestore.V1.TransactionOptions? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetParent(string? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery.Builder? builderForValue) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunQueryRequest.Builder?
Google.Firestore.V1.RunQueryRequest.Builder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.RunQueryRequest.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase
Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCaseData.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
Google.Firestore.V1.RunQueryRequest.HasNewTransaction.get -> bool
Google.Firestore.V1.RunQueryRequest.HasReadTime.get -> bool
Google.Firestore.V1.RunQueryRequest.HasStructuredQuery.get -> bool
Google.Firestore.V1.RunQueryRequest.HasTransaction.get -> bool
Google.Firestore.V1.RunQueryRequest.NewTransaction.get -> Google.Firestore.V1.TransactionOptions?
Google.Firestore.V1.RunQueryRequest.Parent.get -> string?
Google.Firestore.V1.RunQueryRequest.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryRequest.QueryTypeCase
Google.Firestore.V1.RunQueryRequest.QueryTypeCase.Number.get -> int
Google.Firestore.V1.RunQueryRequest.QueryTypeCaseData.get -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
Google.Firestore.V1.RunQueryRequest.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunQueryRequest.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.RunQueryRequest.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryResponse
Google.Firestore.V1.RunQueryResponse.Builder
Google.Firestore.V1.RunQueryResponse.Builder.ClearDocument() -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.ClearReadTime() -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.ClearSkippedResults() -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.ClearTransaction() -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.RunQueryResponse.Builder.HasDocument.get -> bool
Google.Firestore.V1.RunQueryResponse.Builder.HasReadTime.get -> bool
Google.Firestore.V1.RunQueryResponse.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunQueryResponse.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SetSkippedResults(int value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SetTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.RunQueryResponse.Builder?
Google.Firestore.V1.RunQueryResponse.Builder.SkippedResults.get -> int
Google.Firestore.V1.RunQueryResponse.Builder.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.RunQueryResponse.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.RunQueryResponse.HasDocument.get -> bool
Google.Firestore.V1.RunQueryResponse.HasReadTime.get -> bool
Google.Firestore.V1.RunQueryResponse.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.RunQueryResponse.SkippedResults.get -> int
Google.Firestore.V1.RunQueryResponse.Transaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredAggregationQuery
Google.Firestore.V1.StructuredAggregationQuery.Aggregation
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Alias.get -> string?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.AliasBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.ClearField() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.MergeField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.AvgData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.Alias.get -> string?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.AliasBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.AvgData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.ClearAlias() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.ClearAvg() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.ClearCount() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.ClearOperator() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.ClearSum() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.GetCount() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.GetOperatorCase() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.HasAvg.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.HasCount.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.HasSum.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.MergeAvg(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.MergeCount(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.MergeSum(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetAlias(string? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetAliasBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetAvg(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetAvg(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetCount(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetCount(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetSum(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SetSum(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.SumData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.ClearUpTo() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.HasUpTo.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.MergeUpTo(Xamarin.Protobuf.Lite.Int64Value? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.SetUpTo(Xamarin.Protobuf.Lite.Int64Value.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.SetUpTo(Xamarin.Protobuf.Lite.Int64Value? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.UpTo.get -> Xamarin.Protobuf.Lite.Int64Value?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.HasUpTo.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.UpTo.get -> Xamarin.Protobuf.Lite.Int64Value?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.GetCount() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.GetOperatorCase() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.HasAvg.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.HasCount.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.HasSum.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.IAvgOrBuilder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.IAvgOrBuilder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.IAvgOrBuilder.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ICountOrBuilder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ICountOrBuilder.HasUpTo.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ICountOrBuilder.UpTo.get -> Xamarin.Protobuf.Lite.Int64Value?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ISumOrBuilder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ISumOrBuilder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ISumOrBuilder.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.Number.get -> int
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.ClearField() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.MergeField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.HasField.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Aggregation.SumData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
Google.Firestore.V1.StructuredAggregationQuery.AggregationsCount.get -> int
Google.Firestore.V1.StructuredAggregationQuery.AggregationsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredAggregationQuery.Aggregation!>?
Google.Firestore.V1.StructuredAggregationQuery.AggregationsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder!>?
Google.Firestore.V1.StructuredAggregationQuery.Builder
Google.Firestore.V1.StructuredAggregationQuery.Builder.AddAggregations(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.AddAggregations(Google.Firestore.V1.StructuredAggregationQuery.Aggregation? value) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.AddAggregations(int index, Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.AddAggregations(int index, Google.Firestore.V1.StructuredAggregationQuery.Aggregation? value) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.AddAllAggregations(Java.Lang.IIterable? values) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.AggregationsCount.get -> int
Google.Firestore.V1.StructuredAggregationQuery.Builder.AggregationsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredAggregationQuery.Aggregation!>?
Google.Firestore.V1.StructuredAggregationQuery.Builder.ClearAggregations() -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.ClearQueryType() -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.ClearStructuredQuery() -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.GetAggregations(int index) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
Google.Firestore.V1.StructuredAggregationQuery.Builder.HasStructuredQuery.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.Builder.MergeStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.QueryTypeCaseData.get -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
Google.Firestore.V1.StructuredAggregationQuery.Builder.RemoveAggregations(int index) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.SetAggregations(int index, Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.SetAggregations(int index, Google.Firestore.V1.StructuredAggregationQuery.Aggregation? value) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery.Builder? builderForValue) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
Google.Firestore.V1.StructuredAggregationQuery.Builder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.StructuredAggregationQuery.GetAggregations(int index) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
Google.Firestore.V1.StructuredAggregationQuery.GetAggregationsOrBuilder(int index) -> Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder?
Google.Firestore.V1.StructuredAggregationQuery.HasStructuredQuery.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.Alias.get -> string?
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.AliasBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.AvgData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.GetCount() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.GetOperatorCase() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.HasAvg.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.HasCount.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.HasSum.get -> bool
Google.Firestore.V1.StructuredAggregationQuery.IAggregationOrBuilder.SumData.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase
Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.Number.get -> int
Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCaseData.get -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
Google.Firestore.V1.StructuredAggregationQuery.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.StructuredQuery
Google.Firestore.V1.StructuredQuery.Builder
Google.Firestore.V1.StructuredQuery.Builder.AddAllFrom(Java.Lang.IIterable? values) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddAllOrderBy(Java.Lang.IIterable? values) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddFrom(Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddFrom(Google.Firestore.V1.StructuredQuery.CollectionSelector? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddFrom(int index, Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddFrom(int index, Google.Firestore.V1.StructuredQuery.CollectionSelector? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddOrderBy(Google.Firestore.V1.StructuredQuery.Order.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddOrderBy(Google.Firestore.V1.StructuredQuery.Order? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddOrderBy(int index, Google.Firestore.V1.StructuredQuery.Order.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.AddOrderBy(int index, Google.Firestore.V1.StructuredQuery.Order? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearEndAt() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearFrom() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearLimit() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearOffset() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearOrderBy() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearSelect() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearStartAt() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.ClearWhere() -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.EndAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.StructuredQuery.Builder.FromCount.get -> int
Google.Firestore.V1.StructuredQuery.Builder.FromList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.CollectionSelector!>?
Google.Firestore.V1.StructuredQuery.Builder.GetFrom(int index) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
Google.Firestore.V1.StructuredQuery.Builder.GetOrderBy(int index) -> Google.Firestore.V1.StructuredQuery.Order?
Google.Firestore.V1.StructuredQuery.Builder.HasEndAt.get -> bool
Google.Firestore.V1.StructuredQuery.Builder.HasLimit.get -> bool
Google.Firestore.V1.StructuredQuery.Builder.HasSelect.get -> bool
Google.Firestore.V1.StructuredQuery.Builder.HasStartAt.get -> bool
Google.Firestore.V1.StructuredQuery.Builder.HasWhere.get -> bool
Google.Firestore.V1.StructuredQuery.Builder.Limit.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.StructuredQuery.Builder.MergeEndAt(Google.Firestore.V1.Cursor? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.MergeLimit(Xamarin.Protobuf.Lite.Int32Value? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.MergeSelect(Google.Firestore.V1.StructuredQuery.Projection? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.MergeStartAt(Google.Firestore.V1.Cursor? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.MergeWhere(Google.Firestore.V1.StructuredQuery.Filter? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.Offset.get -> int
Google.Firestore.V1.StructuredQuery.Builder.OrderByCount.get -> int
Google.Firestore.V1.StructuredQuery.Builder.OrderByList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Order!>?
Google.Firestore.V1.StructuredQuery.Builder.RemoveFrom(int index) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.RemoveOrderBy(int index) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.Select.get -> Google.Firestore.V1.StructuredQuery.Projection?
Google.Firestore.V1.StructuredQuery.Builder.SetEndAt(Google.Firestore.V1.Cursor.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetEndAt(Google.Firestore.V1.Cursor? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetFrom(int index, Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetFrom(int index, Google.Firestore.V1.StructuredQuery.CollectionSelector? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetLimit(Xamarin.Protobuf.Lite.Int32Value.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetLimit(Xamarin.Protobuf.Lite.Int32Value? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetOffset(int value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetOrderBy(int index, Google.Firestore.V1.StructuredQuery.Order.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetOrderBy(int index, Google.Firestore.V1.StructuredQuery.Order? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetSelect(Google.Firestore.V1.StructuredQuery.Projection.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetSelect(Google.Firestore.V1.StructuredQuery.Projection? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetStartAt(Google.Firestore.V1.Cursor.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetStartAt(Google.Firestore.V1.Cursor? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetWhere(Google.Firestore.V1.StructuredQuery.Filter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.SetWhere(Google.Firestore.V1.StructuredQuery.Filter? value) -> Google.Firestore.V1.StructuredQuery.Builder?
Google.Firestore.V1.StructuredQuery.Builder.StartAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.StructuredQuery.Builder.Where.get -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.StructuredQuery.CollectionSelector
Google.Firestore.V1.StructuredQuery.CollectionSelector.AllDescendants.get -> bool
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.AllDescendants.get -> bool
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.ClearAllDescendants() -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.ClearCollectionId() -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.CollectionId.get -> string?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.SetAllDescendants(bool value) -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.SetCollectionId(string? value) -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.SetCollectionIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
Google.Firestore.V1.StructuredQuery.CollectionSelector.CollectionId.get -> string?
Google.Firestore.V1.StructuredQuery.CollectionSelector.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.CompositeFilter
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.AddAllFilters(Java.Lang.IIterable? values) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.AddFilters(Google.Firestore.V1.StructuredQuery.Filter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.AddFilters(Google.Firestore.V1.StructuredQuery.Filter? value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.AddFilters(int index, Google.Firestore.V1.StructuredQuery.Filter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.AddFilters(int index, Google.Firestore.V1.StructuredQuery.Filter? value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.ClearFilters() -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.ClearOp() -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.FiltersCount.get -> int
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.FiltersList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Filter!>?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.GetFilters(int index) -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.Op.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.RemoveFilters(int index) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.SetFilters(int index, Google.Firestore.V1.StructuredQuery.Filter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.SetFilters(int index, Google.Firestore.V1.StructuredQuery.Filter? value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.SetOp(Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator? value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.SetOpValue(int value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.FiltersCount.get -> int
Google.Firestore.V1.StructuredQuery.CompositeFilter.FiltersList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Filter!>?
Google.Firestore.V1.StructuredQuery.CompositeFilter.FiltersOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.IFilterOrBuilder!>?
Google.Firestore.V1.StructuredQuery.CompositeFilter.GetFilters(int index) -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.StructuredQuery.CompositeFilter.GetFiltersOrBuilder(int index) -> Google.Firestore.V1.StructuredQuery.IFilterOrBuilder?
Google.Firestore.V1.StructuredQuery.CompositeFilter.Op.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
Google.Firestore.V1.StructuredQuery.CompositeFilter.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator
Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.Number.get -> int
Google.Firestore.V1.StructuredQuery.Direction
Google.Firestore.V1.StructuredQuery.Direction.Number.get -> int
Google.Firestore.V1.StructuredQuery.EndAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.StructuredQuery.FieldFilter
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.ClearField() -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.ClearOp() -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.ClearValue() -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.HasValue.get -> bool
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.MergeField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.MergeValue(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.Op.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetOp(Google.Firestore.V1.StructuredQuery.FieldFilter.Operator? value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetOpValue(int value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetValue(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.SetValue(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.Value.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.StructuredQuery.FieldFilter.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.FieldFilter.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.FieldFilter.HasValue.get -> bool
Google.Firestore.V1.StructuredQuery.FieldFilter.Op.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
Google.Firestore.V1.StructuredQuery.FieldFilter.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.FieldFilter.Operator
Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.Number.get -> int
Google.Firestore.V1.StructuredQuery.FieldFilter.Value.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.StructuredQuery.FieldReference
Google.Firestore.V1.StructuredQuery.FieldReference.Builder
Google.Firestore.V1.StructuredQuery.FieldReference.Builder.ClearFieldPath() -> Google.Firestore.V1.StructuredQuery.FieldReference.Builder?
Google.Firestore.V1.StructuredQuery.FieldReference.Builder.FieldPath.get -> string?
Google.Firestore.V1.StructuredQuery.FieldReference.Builder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.FieldReference.Builder.SetFieldPath(string? value) -> Google.Firestore.V1.StructuredQuery.FieldReference.Builder?
Google.Firestore.V1.StructuredQuery.FieldReference.Builder.SetFieldPathBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.StructuredQuery.FieldReference.Builder?
Google.Firestore.V1.StructuredQuery.FieldReference.FieldPath.get -> string?
Google.Firestore.V1.StructuredQuery.FieldReference.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.Filter
Google.Firestore.V1.StructuredQuery.Filter.Builder
Google.Firestore.V1.StructuredQuery.Filter.Builder.ClearCompositeFilter() -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.ClearFieldFilter() -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.ClearFilterType() -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.ClearUnaryFilter() -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.CompositeFilter.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
Google.Firestore.V1.StructuredQuery.Filter.Builder.FieldFilter.get -> Google.Firestore.V1.StructuredQuery.FieldFilter?
Google.Firestore.V1.StructuredQuery.Filter.Builder.FilterTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
Google.Firestore.V1.StructuredQuery.Filter.Builder.HasCompositeFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.Builder.HasFieldFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.Builder.HasUnaryFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.Builder.MergeCompositeFilter(Google.Firestore.V1.StructuredQuery.CompositeFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.MergeFieldFilter(Google.Firestore.V1.StructuredQuery.FieldFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.MergeUnaryFilter(Google.Firestore.V1.StructuredQuery.UnaryFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetCompositeFilter(Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetCompositeFilter(Google.Firestore.V1.StructuredQuery.CompositeFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetFieldFilter(Google.Firestore.V1.StructuredQuery.FieldFilter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetFieldFilter(Google.Firestore.V1.StructuredQuery.FieldFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetUnaryFilter(Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.SetUnaryFilter(Google.Firestore.V1.StructuredQuery.UnaryFilter? value) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
Google.Firestore.V1.StructuredQuery.Filter.Builder.UnaryFilter.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
Google.Firestore.V1.StructuredQuery.Filter.CompositeFilter.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
Google.Firestore.V1.StructuredQuery.Filter.FieldFilter.get -> Google.Firestore.V1.StructuredQuery.FieldFilter?
Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase
Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.Number.get -> int
Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
Google.Firestore.V1.StructuredQuery.Filter.HasCompositeFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.HasFieldFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.HasUnaryFilter.get -> bool
Google.Firestore.V1.StructuredQuery.Filter.UnaryFilter.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
Google.Firestore.V1.StructuredQuery.FromCount.get -> int
Google.Firestore.V1.StructuredQuery.FromList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.CollectionSelector!>?
Google.Firestore.V1.StructuredQuery.FromOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder!>?
Google.Firestore.V1.StructuredQuery.GetFrom(int index) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
Google.Firestore.V1.StructuredQuery.GetFromOrBuilder(int index) -> Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder?
Google.Firestore.V1.StructuredQuery.GetOrderBy(int index) -> Google.Firestore.V1.StructuredQuery.Order?
Google.Firestore.V1.StructuredQuery.GetOrderByOrBuilder(int index) -> Google.Firestore.V1.StructuredQuery.IOrderOrBuilder?
Google.Firestore.V1.StructuredQuery.HasEndAt.get -> bool
Google.Firestore.V1.StructuredQuery.HasLimit.get -> bool
Google.Firestore.V1.StructuredQuery.HasSelect.get -> bool
Google.Firestore.V1.StructuredQuery.HasStartAt.get -> bool
Google.Firestore.V1.StructuredQuery.HasWhere.get -> bool
Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder
Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder.AllDescendants.get -> bool
Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder.CollectionId.get -> string?
Google.Firestore.V1.StructuredQuery.ICollectionSelectorOrBuilder.CollectionIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder.FiltersCount.get -> int
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder.FiltersList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Filter!>?
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder.GetFilters(int p0) -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder.Op.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
Google.Firestore.V1.StructuredQuery.ICompositeFilterOrBuilder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.HasValue.get -> bool
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.Op.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.IFieldFilterOrBuilder.Value.get -> Google.Firestore.V1.Value?
Google.Firestore.V1.StructuredQuery.IFieldReferenceOrBuilder
Google.Firestore.V1.StructuredQuery.IFieldReferenceOrBuilder.FieldPath.get -> string?
Google.Firestore.V1.StructuredQuery.IFieldReferenceOrBuilder.FieldPathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.CompositeFilter.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.FieldFilter.get -> Google.Firestore.V1.StructuredQuery.FieldFilter?
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.FilterTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.HasCompositeFilter.get -> bool
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.HasFieldFilter.get -> bool
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.HasUnaryFilter.get -> bool
Google.Firestore.V1.StructuredQuery.IFilterOrBuilder.UnaryFilter.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
Google.Firestore.V1.StructuredQuery.IOrderOrBuilder
Google.Firestore.V1.StructuredQuery.IOrderOrBuilder.Direction.get -> Google.Firestore.V1.StructuredQuery.Direction?
Google.Firestore.V1.StructuredQuery.IOrderOrBuilder.DirectionValue.get -> int
Google.Firestore.V1.StructuredQuery.IOrderOrBuilder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.IOrderOrBuilder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.IProjectionOrBuilder
Google.Firestore.V1.StructuredQuery.IProjectionOrBuilder.FieldsCount.get -> int
Google.Firestore.V1.StructuredQuery.IProjectionOrBuilder.FieldsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.FieldReference!>?
Google.Firestore.V1.StructuredQuery.IProjectionOrBuilder.GetFields(int p0) -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder.Op.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.IUnaryFilterOrBuilder.OperandTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
Google.Firestore.V1.StructuredQuery.Limit.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.StructuredQuery.Offset.get -> int
Google.Firestore.V1.StructuredQuery.Order
Google.Firestore.V1.StructuredQuery.Order.Builder
Google.Firestore.V1.StructuredQuery.Order.Builder.ClearDirection() -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.ClearField() -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.Direction.get -> Google.Firestore.V1.StructuredQuery.Direction?
Google.Firestore.V1.StructuredQuery.Order.Builder.DirectionValue.get -> int
Google.Firestore.V1.StructuredQuery.Order.Builder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.Order.Builder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.Order.Builder.MergeField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.SetDirection(Google.Firestore.V1.StructuredQuery.Direction? value) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.SetDirectionValue(int value) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
Google.Firestore.V1.StructuredQuery.Order.Direction.get -> Google.Firestore.V1.StructuredQuery.Direction?
Google.Firestore.V1.StructuredQuery.Order.DirectionValue.get -> int
Google.Firestore.V1.StructuredQuery.Order.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.Order.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.OrderByCount.get -> int
Google.Firestore.V1.StructuredQuery.OrderByList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.Order!>?
Google.Firestore.V1.StructuredQuery.OrderByOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.IOrderOrBuilder!>?
Google.Firestore.V1.StructuredQuery.Projection
Google.Firestore.V1.StructuredQuery.Projection.Builder
Google.Firestore.V1.StructuredQuery.Projection.Builder.AddAllFields(Java.Lang.IIterable? values) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.AddFields(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.AddFields(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.AddFields(int index, Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.AddFields(int index, Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.ClearFields() -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.FieldsCount.get -> int
Google.Firestore.V1.StructuredQuery.Projection.Builder.FieldsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.FieldReference!>?
Google.Firestore.V1.StructuredQuery.Projection.Builder.GetFields(int index) -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.Projection.Builder.RemoveFields(int index) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.SetFields(int index, Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.Builder.SetFields(int index, Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
Google.Firestore.V1.StructuredQuery.Projection.FieldsCount.get -> int
Google.Firestore.V1.StructuredQuery.Projection.FieldsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.FieldReference!>?
Google.Firestore.V1.StructuredQuery.Projection.FieldsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.StructuredQuery.IFieldReferenceOrBuilder!>?
Google.Firestore.V1.StructuredQuery.Projection.GetFields(int index) -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.Projection.GetFieldsOrBuilder(int index) -> Google.Firestore.V1.StructuredQuery.IFieldReferenceOrBuilder?
Google.Firestore.V1.StructuredQuery.Select.get -> Google.Firestore.V1.StructuredQuery.Projection?
Google.Firestore.V1.StructuredQuery.StartAt.get -> Google.Firestore.V1.Cursor?
Google.Firestore.V1.StructuredQuery.UnaryFilter
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.ClearField() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.ClearOp() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.ClearOperandType() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.MergeField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.Op.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.OperandTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference.Builder? builderForValue) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.SetField(Google.Firestore.V1.StructuredQuery.FieldReference? value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.SetOp(Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator? value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.SetOpValue(int value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Field.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
Google.Firestore.V1.StructuredQuery.UnaryFilter.HasField.get -> bool
Google.Firestore.V1.StructuredQuery.UnaryFilter.Op.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
Google.Firestore.V1.StructuredQuery.UnaryFilter.OpValue.get -> int
Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase
Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.Number.get -> int
Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCaseData.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator
Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.Number.get -> int
Google.Firestore.V1.StructuredQuery.Where.get -> Google.Firestore.V1.StructuredQuery.Filter?
Google.Firestore.V1.Target
Google.Firestore.V1.Target.Builder
Google.Firestore.V1.Target.Builder.ClearDocuments() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearExpectedCount() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearOnce() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearQuery() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearReadTime() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearResumeToken() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearResumeType() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearTargetId() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.ClearTargetType() -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Google.Firestore.V1.Target.Builder.ExpectedCount.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.Target.Builder.HasDocuments.get -> bool
Google.Firestore.V1.Target.Builder.HasExpectedCount.get -> bool
Google.Firestore.V1.Target.Builder.HasQuery.get -> bool
Google.Firestore.V1.Target.Builder.HasReadTime.get -> bool
Google.Firestore.V1.Target.Builder.HasResumeToken.get -> bool
Google.Firestore.V1.Target.Builder.MergeDocuments(Google.Firestore.V1.Target.DocumentsTarget? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.MergeExpectedCount(Xamarin.Protobuf.Lite.Int32Value? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.MergeQuery(Google.Firestore.V1.Target.QueryTarget? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.Once.get -> bool
Google.Firestore.V1.Target.Builder.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Google.Firestore.V1.Target.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Target.Builder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.Builder.ResumeTypeCaseData.get -> Google.Firestore.V1.Target.ResumeTypeCase?
Google.Firestore.V1.Target.Builder.SetDocuments(Google.Firestore.V1.Target.DocumentsTarget.Builder? builderForValue) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetDocuments(Google.Firestore.V1.Target.DocumentsTarget? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetExpectedCount(Xamarin.Protobuf.Lite.Int32Value.Builder? builderForValue) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetExpectedCount(Xamarin.Protobuf.Lite.Int32Value? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetOnce(bool value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetQuery(Google.Firestore.V1.Target.QueryTarget.Builder? builderForValue) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetQuery(Google.Firestore.V1.Target.QueryTarget? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetResumeToken(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.SetTargetId(int value) -> Google.Firestore.V1.Target.Builder?
Google.Firestore.V1.Target.Builder.TargetId.get -> int
Google.Firestore.V1.Target.Builder.TargetTypeCaseData.get -> Google.Firestore.V1.Target.TargetTypeCase?
Google.Firestore.V1.Target.Documents.get -> Google.Firestore.V1.Target.DocumentsTarget?
Google.Firestore.V1.Target.DocumentsTarget
Google.Firestore.V1.Target.DocumentsTarget.Builder
Google.Firestore.V1.Target.DocumentsTarget.Builder.AddAllDocuments(Java.Lang.IIterable? values) -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
Google.Firestore.V1.Target.DocumentsTarget.Builder.AddDocuments(string? value) -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
Google.Firestore.V1.Target.DocumentsTarget.Builder.AddDocumentsBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
Google.Firestore.V1.Target.DocumentsTarget.Builder.ClearDocuments() -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
Google.Firestore.V1.Target.DocumentsTarget.Builder.DocumentsCount.get -> int
Google.Firestore.V1.Target.DocumentsTarget.Builder.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.Target.DocumentsTarget.Builder.GetDocuments(int index) -> string?
Google.Firestore.V1.Target.DocumentsTarget.Builder.GetDocumentsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.DocumentsTarget.Builder.SetDocuments(int index, string? value) -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
Google.Firestore.V1.Target.DocumentsTarget.DocumentsCount.get -> int
Google.Firestore.V1.Target.DocumentsTarget.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.Target.DocumentsTarget.GetDocuments(int index) -> string?
Google.Firestore.V1.Target.DocumentsTarget.GetDocumentsBytes(int index) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.ExpectedCount.get -> Xamarin.Protobuf.Lite.Int32Value?
Google.Firestore.V1.Target.HasDocuments.get -> bool
Google.Firestore.V1.Target.HasExpectedCount.get -> bool
Google.Firestore.V1.Target.HasQuery.get -> bool
Google.Firestore.V1.Target.HasReadTime.get -> bool
Google.Firestore.V1.Target.HasResumeToken.get -> bool
Google.Firestore.V1.Target.IDocumentsTargetOrBuilder
Google.Firestore.V1.Target.IDocumentsTargetOrBuilder.DocumentsCount.get -> int
Google.Firestore.V1.Target.IDocumentsTargetOrBuilder.DocumentsList.get -> System.Collections.Generic.IList<string!>?
Google.Firestore.V1.Target.IDocumentsTargetOrBuilder.GetDocuments(int p0) -> string?
Google.Firestore.V1.Target.IDocumentsTargetOrBuilder.GetDocumentsBytes(int p0) -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.IQueryTargetOrBuilder
Google.Firestore.V1.Target.IQueryTargetOrBuilder.HasStructuredQuery.get -> bool
Google.Firestore.V1.Target.IQueryTargetOrBuilder.Parent.get -> string?
Google.Firestore.V1.Target.IQueryTargetOrBuilder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.IQueryTargetOrBuilder.QueryTypeCaseData.get -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
Google.Firestore.V1.Target.IQueryTargetOrBuilder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.Target.Once.get -> bool
Google.Firestore.V1.Target.Query.get -> Google.Firestore.V1.Target.QueryTarget?
Google.Firestore.V1.Target.QueryTarget
Google.Firestore.V1.Target.QueryTarget.Builder
Google.Firestore.V1.Target.QueryTarget.Builder.ClearParent() -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.ClearQueryType() -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.ClearStructuredQuery() -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.HasStructuredQuery.get -> bool
Google.Firestore.V1.Target.QueryTarget.Builder.MergeStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.Parent.get -> string?
Google.Firestore.V1.Target.QueryTarget.Builder.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.QueryTarget.Builder.QueryTypeCaseData.get -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
Google.Firestore.V1.Target.QueryTarget.Builder.SetParent(string? value) -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.SetParentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery.Builder? builderForValue) -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.SetStructuredQuery(Google.Firestore.V1.StructuredQuery? value) -> Google.Firestore.V1.Target.QueryTarget.Builder?
Google.Firestore.V1.Target.QueryTarget.Builder.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.Target.QueryTarget.HasStructuredQuery.get -> bool
Google.Firestore.V1.Target.QueryTarget.Parent.get -> string?
Google.Firestore.V1.Target.QueryTarget.ParentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.QueryTarget.QueryTypeCase
Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.Number.get -> int
Google.Firestore.V1.Target.QueryTarget.QueryTypeCaseData.get -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
Google.Firestore.V1.Target.QueryTarget.StructuredQuery.get -> Google.Firestore.V1.StructuredQuery?
Google.Firestore.V1.Target.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Target.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Target.ResumeTypeCase
Google.Firestore.V1.Target.ResumeTypeCase.Number.get -> int
Google.Firestore.V1.Target.ResumeTypeCaseData.get -> Google.Firestore.V1.Target.ResumeTypeCase?
Google.Firestore.V1.Target.TargetId.get -> int
Google.Firestore.V1.Target.TargetTypeCase
Google.Firestore.V1.Target.TargetTypeCase.Number.get -> int
Google.Firestore.V1.Target.TargetTypeCaseData.get -> Google.Firestore.V1.Target.TargetTypeCase?
Google.Firestore.V1.TargetChange
Google.Firestore.V1.TargetChange.Builder
Google.Firestore.V1.TargetChange.Builder.AddAllTargetIds(Java.Lang.IIterable? values) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.AddTargetIds(int value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.Cause.get -> Google.Rpc.Status?
Google.Firestore.V1.TargetChange.Builder.ClearCause() -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.ClearReadTime() -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.ClearResumeToken() -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.ClearTargetChangeType() -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.ClearTargetIds() -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.GetTargetIds(int index) -> int
Google.Firestore.V1.TargetChange.Builder.HasCause.get -> bool
Google.Firestore.V1.TargetChange.Builder.HasReadTime.get -> bool
Google.Firestore.V1.TargetChange.Builder.MergeCause(Google.Rpc.Status? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.TargetChange.Builder.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.TargetChange.Builder.SetCause(Google.Rpc.Status.Builder? builderForValue) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetCause(Google.Rpc.Status? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetResumeToken(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetTargetChangeType(Google.Firestore.V1.TargetChange.TargetChangeType? value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetTargetChangeTypeValue(int value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.SetTargetIds(int index, int value) -> Google.Firestore.V1.TargetChange.Builder?
Google.Firestore.V1.TargetChange.Builder.TargetChangeTypeData.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
Google.Firestore.V1.TargetChange.Builder.TargetChangeTypeValue.get -> int
Google.Firestore.V1.TargetChange.Builder.TargetIdsCount.get -> int
Google.Firestore.V1.TargetChange.Builder.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.TargetChange.Cause.get -> Google.Rpc.Status?
Google.Firestore.V1.TargetChange.GetTargetIds(int index) -> int
Google.Firestore.V1.TargetChange.HasCause.get -> bool
Google.Firestore.V1.TargetChange.HasReadTime.get -> bool
Google.Firestore.V1.TargetChange.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.TargetChange.ResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.TargetChange.TargetChangeType
Google.Firestore.V1.TargetChange.TargetChangeType.Number.get -> int
Google.Firestore.V1.TargetChange.TargetChangeTypeData.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
Google.Firestore.V1.TargetChange.TargetChangeTypeValue.get -> int
Google.Firestore.V1.TargetChange.TargetIdsCount.get -> int
Google.Firestore.V1.TargetChange.TargetIdsList.get -> System.Collections.Generic.IList<Java.Lang.Integer!>?
Google.Firestore.V1.TransactionOptions
Google.Firestore.V1.TransactionOptions.Builder
Google.Firestore.V1.TransactionOptions.Builder.ClearMode() -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.ClearReadOnly() -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.ClearReadWrite() -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.HasReadOnly.get -> bool
Google.Firestore.V1.TransactionOptions.Builder.HasReadWrite.get -> bool
Google.Firestore.V1.TransactionOptions.Builder.MergeReadOnly(Google.Firestore.V1.TransactionOptions.ReadOnly? value) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.MergeReadWrite(Google.Firestore.V1.TransactionOptions.ReadWrite? value) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.ModeCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
Google.Firestore.V1.TransactionOptions.Builder.ReadOnlyDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly?
Google.Firestore.V1.TransactionOptions.Builder.ReadWriteDataData.get -> Google.Firestore.V1.TransactionOptions.ReadWrite?
Google.Firestore.V1.TransactionOptions.Builder.SetReadOnly(Google.Firestore.V1.TransactionOptions.ReadOnly.Builder? builderForValue) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.SetReadOnly(Google.Firestore.V1.TransactionOptions.ReadOnly? value) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.SetReadWrite(Google.Firestore.V1.TransactionOptions.ReadWrite.Builder? builderForValue) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.Builder.SetReadWrite(Google.Firestore.V1.TransactionOptions.ReadWrite? value) -> Google.Firestore.V1.TransactionOptions.Builder?
Google.Firestore.V1.TransactionOptions.HasReadOnly.get -> bool
Google.Firestore.V1.TransactionOptions.HasReadWrite.get -> bool
Google.Firestore.V1.TransactionOptions.IReadOnlyOrBuilder
Google.Firestore.V1.TransactionOptions.IReadOnlyOrBuilder.ConsistencySelectorCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
Google.Firestore.V1.TransactionOptions.IReadOnlyOrBuilder.HasReadTime.get -> bool
Google.Firestore.V1.TransactionOptions.IReadOnlyOrBuilder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.TransactionOptions.IReadWriteOrBuilder
Google.Firestore.V1.TransactionOptions.IReadWriteOrBuilder.RetryTransaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.TransactionOptions.ModeCase
Google.Firestore.V1.TransactionOptions.ModeCase.Number.get -> int
Google.Firestore.V1.TransactionOptions.ModeCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
Google.Firestore.V1.TransactionOptions.ReadOnly
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.ClearConsistencySelector() -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.ClearReadTime() -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.ConsistencySelectorCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.HasReadTime.get -> bool
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.MergeReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.SetReadTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase
Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.Number.get -> int
Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCaseDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
Google.Firestore.V1.TransactionOptions.ReadOnly.HasReadTime.get -> bool
Google.Firestore.V1.TransactionOptions.ReadOnly.ReadTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.TransactionOptions.ReadOnlyDataData.get -> Google.Firestore.V1.TransactionOptions.ReadOnly?
Google.Firestore.V1.TransactionOptions.ReadWrite
Google.Firestore.V1.TransactionOptions.ReadWrite.Builder
Google.Firestore.V1.TransactionOptions.ReadWrite.Builder.ClearRetryTransaction() -> Google.Firestore.V1.TransactionOptions.ReadWrite.Builder?
Google.Firestore.V1.TransactionOptions.ReadWrite.Builder.RetryTransaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.TransactionOptions.ReadWrite.Builder.SetRetryTransaction(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.TransactionOptions.ReadWrite.Builder?
Google.Firestore.V1.TransactionOptions.ReadWrite.RetryTransaction.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.TransactionOptions.ReadWriteDataData.get -> Google.Firestore.V1.TransactionOptions.ReadWrite?
Google.Firestore.V1.UpdateDocumentRequest
Google.Firestore.V1.UpdateDocumentRequest.Builder
Google.Firestore.V1.UpdateDocumentRequest.Builder.ClearCurrentDocument() -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.ClearDocument() -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.ClearMask() -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.ClearUpdateMask() -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.UpdateDocumentRequest.Builder.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.UpdateDocumentRequest.Builder.HasCurrentDocument.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.Builder.HasDocument.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.Builder.HasMask.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.Builder.HasUpdateMask.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.Builder.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.UpdateDocumentRequest.Builder.MergeCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.MergeDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.MergeMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.MergeUpdateMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition.Builder? builderForValue) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetDocument(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetDocument(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetUpdateMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.SetUpdateMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
Google.Firestore.V1.UpdateDocumentRequest.Builder.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.UpdateDocumentRequest.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.UpdateDocumentRequest.Document.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.UpdateDocumentRequest.HasCurrentDocument.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.HasDocument.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.HasMask.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.HasUpdateMask.get -> bool
Google.Firestore.V1.UpdateDocumentRequest.Mask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.UpdateDocumentRequest.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.Value
Google.Firestore.V1.Value.ArrayValue.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.Value.BooleanValue.get -> bool
Google.Firestore.V1.Value.Builder
Google.Firestore.V1.Value.Builder.ArrayValue.get -> Google.Firestore.V1.ArrayValue?
Google.Firestore.V1.Value.Builder.BooleanValue.get -> bool
Google.Firestore.V1.Value.Builder.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.Builder.ClearArrayValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearBooleanValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearBytesValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearDoubleValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearGeoPointValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearIntegerValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearMapValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearNullValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearReferenceValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearStringValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearTimestampValue() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.ClearValueType() -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.DoubleValue.get -> double
Google.Firestore.V1.Value.Builder.GeoPointValue.get -> Google.Type.LatLng?
Google.Firestore.V1.Value.Builder.HasArrayValue.get -> bool
Google.Firestore.V1.Value.Builder.HasBooleanValue.get -> bool
Google.Firestore.V1.Value.Builder.HasBytesValue.get -> bool
Google.Firestore.V1.Value.Builder.HasDoubleValue.get -> bool
Google.Firestore.V1.Value.Builder.HasGeoPointValue.get -> bool
Google.Firestore.V1.Value.Builder.HasIntegerValue.get -> bool
Google.Firestore.V1.Value.Builder.HasMapValue.get -> bool
Google.Firestore.V1.Value.Builder.HasNullValue.get -> bool
Google.Firestore.V1.Value.Builder.HasReferenceValue.get -> bool
Google.Firestore.V1.Value.Builder.HasStringValue.get -> bool
Google.Firestore.V1.Value.Builder.HasTimestampValue.get -> bool
Google.Firestore.V1.Value.Builder.IntegerValue.get -> long
Google.Firestore.V1.Value.Builder.MapValue.get -> Google.Firestore.V1.MapValue?
Google.Firestore.V1.Value.Builder.MergeArrayValue(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.MergeGeoPointValue(Google.Type.LatLng? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.MergeMapValue(Google.Firestore.V1.MapValue? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.MergeTimestampValue(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.NullValue.get -> Xamarin.Protobuf.Lite.NullValue?
Google.Firestore.V1.Value.Builder.NullValueValue.get -> int
Google.Firestore.V1.Value.Builder.ReferenceValue.get -> string?
Google.Firestore.V1.Value.Builder.ReferenceValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.Builder.SetArrayValue(Google.Firestore.V1.ArrayValue.Builder? builderForValue) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetArrayValue(Google.Firestore.V1.ArrayValue? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetBooleanValue(bool value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetBytesValue(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetDoubleValue(double value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetGeoPointValue(Google.Type.LatLng.Builder? builderForValue) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetGeoPointValue(Google.Type.LatLng? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetIntegerValue(long value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetMapValue(Google.Firestore.V1.MapValue.Builder? builderForValue) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetMapValue(Google.Firestore.V1.MapValue? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetNullValue(Xamarin.Protobuf.Lite.NullValue? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetNullValueValue(int value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetReferenceValue(string? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetReferenceValueBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetStringValue(string? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetStringValueBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetTimestampValue(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.SetTimestampValue(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.Value.Builder?
Google.Firestore.V1.Value.Builder.StringValue.get -> string?
Google.Firestore.V1.Value.Builder.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.Builder.TimestampValue.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Value.Builder.ValueTypeCaseData.get -> Google.Firestore.V1.Value.ValueTypeCase?
Google.Firestore.V1.Value.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.DoubleValue.get -> double
Google.Firestore.V1.Value.GeoPointValue.get -> Google.Type.LatLng?
Google.Firestore.V1.Value.HasArrayValue.get -> bool
Google.Firestore.V1.Value.HasBooleanValue.get -> bool
Google.Firestore.V1.Value.HasBytesValue.get -> bool
Google.Firestore.V1.Value.HasDoubleValue.get -> bool
Google.Firestore.V1.Value.HasGeoPointValue.get -> bool
Google.Firestore.V1.Value.HasIntegerValue.get -> bool
Google.Firestore.V1.Value.HasMapValue.get -> bool
Google.Firestore.V1.Value.HasNullValue.get -> bool
Google.Firestore.V1.Value.HasReferenceValue.get -> bool
Google.Firestore.V1.Value.HasStringValue.get -> bool
Google.Firestore.V1.Value.HasTimestampValue.get -> bool
Google.Firestore.V1.Value.IntegerValue.get -> long
Google.Firestore.V1.Value.MapValue.get -> Google.Firestore.V1.MapValue?
Google.Firestore.V1.Value.NullValue.get -> Xamarin.Protobuf.Lite.NullValue?
Google.Firestore.V1.Value.NullValueValue.get -> int
Google.Firestore.V1.Value.ReferenceValue.get -> string?
Google.Firestore.V1.Value.ReferenceValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.StringValue.get -> string?
Google.Firestore.V1.Value.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Value.TimestampValue.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.Value.ValueTypeCase
Google.Firestore.V1.Value.ValueTypeCase.Number.get -> int
Google.Firestore.V1.Value.ValueTypeCaseData.get -> Google.Firestore.V1.Value.ValueTypeCase?
Google.Firestore.V1.Write
Google.Firestore.V1.Write.Builder
Google.Firestore.V1.Write.Builder.AddAllUpdateTransforms(Java.Lang.IIterable? values) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.AddUpdateTransforms(Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.AddUpdateTransforms(Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.AddUpdateTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.AddUpdateTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearCurrentDocument() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearDelete() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearOperation() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearTransform() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearUpdate() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearUpdateMask() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearUpdateTransforms() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.ClearVerify() -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.Write.Builder.Delete.get -> string?
Google.Firestore.V1.Write.Builder.DeleteBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Write.Builder.GetUpdateTransforms(int index) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.Write.Builder.HasCurrentDocument.get -> bool
Google.Firestore.V1.Write.Builder.HasDelete.get -> bool
Google.Firestore.V1.Write.Builder.HasTransform.get -> bool
Google.Firestore.V1.Write.Builder.HasUpdate.get -> bool
Google.Firestore.V1.Write.Builder.HasUpdateMask.get -> bool
Google.Firestore.V1.Write.Builder.HasVerify.get -> bool
Google.Firestore.V1.Write.Builder.MergeCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.MergeTransform(Google.Firestore.V1.DocumentTransform? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.MergeUpdate(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.MergeUpdateMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.OperationCaseData.get -> Google.Firestore.V1.Write.OperationCase?
Google.Firestore.V1.Write.Builder.RemoveUpdateTransforms(int index) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetCurrentDocument(Google.Firestore.V1.Precondition? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetDelete(string? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetDeleteBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetTransform(Google.Firestore.V1.DocumentTransform.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetTransform(Google.Firestore.V1.DocumentTransform? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdate(Google.Firestore.V1.Document.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdate(Google.Firestore.V1.Document? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdateMask(Google.Firestore.V1.DocumentMask.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdateMask(Google.Firestore.V1.DocumentMask? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdateTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform.Builder? builderForValue) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetUpdateTransforms(int index, Google.Firestore.V1.DocumentTransform.FieldTransform? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetVerify(string? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.SetVerifyBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.Write.Builder?
Google.Firestore.V1.Write.Builder.Transform.get -> Google.Firestore.V1.DocumentTransform?
Google.Firestore.V1.Write.Builder.Update.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.Write.Builder.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.Write.Builder.UpdateTransformsCount.get -> int
Google.Firestore.V1.Write.Builder.UpdateTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.Write.Builder.Verify.get -> string?
Google.Firestore.V1.Write.Builder.VerifyBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Write.CurrentDocument.get -> Google.Firestore.V1.Precondition?
Google.Firestore.V1.Write.Delete.get -> string?
Google.Firestore.V1.Write.DeleteBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.Write.GetUpdateTransforms(int index) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
Google.Firestore.V1.Write.GetUpdateTransformsOrBuilder(int index) -> Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder?
Google.Firestore.V1.Write.HasCurrentDocument.get -> bool
Google.Firestore.V1.Write.HasDelete.get -> bool
Google.Firestore.V1.Write.HasTransform.get -> bool
Google.Firestore.V1.Write.HasUpdate.get -> bool
Google.Firestore.V1.Write.HasUpdateMask.get -> bool
Google.Firestore.V1.Write.HasVerify.get -> bool
Google.Firestore.V1.Write.OperationCase
Google.Firestore.V1.Write.OperationCase.Number.get -> int
Google.Firestore.V1.Write.OperationCaseData.get -> Google.Firestore.V1.Write.OperationCase?
Google.Firestore.V1.Write.Transform.get -> Google.Firestore.V1.DocumentTransform?
Google.Firestore.V1.Write.Update.get -> Google.Firestore.V1.Document?
Google.Firestore.V1.Write.UpdateMask.get -> Google.Firestore.V1.DocumentMask?
Google.Firestore.V1.Write.UpdateTransformsCount.get -> int
Google.Firestore.V1.Write.UpdateTransformsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.FieldTransform!>?
Google.Firestore.V1.Write.UpdateTransformsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.DocumentTransform.IFieldTransformOrBuilder!>?
Google.Firestore.V1.Write.Verify.get -> string?
Google.Firestore.V1.Write.VerifyBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteProto
Google.Firestore.V1.WriteRequest
Google.Firestore.V1.WriteRequest.Builder
Google.Firestore.V1.WriteRequest.Builder.AddAllWrites(Java.Lang.IIterable? values) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.AddWrites(Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.AddWrites(Google.Firestore.V1.Write? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.AddWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.AddWrites(int index, Google.Firestore.V1.Write? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ClearDatabase() -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ClearLabels() -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ClearStreamId() -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ClearStreamToken() -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ClearWrites() -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.ContainsLabels(string? key) -> bool
Google.Firestore.V1.WriteRequest.Builder.Database.get -> string?
Google.Firestore.V1.WriteRequest.Builder.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.Builder.GetLabelsOrDefault(string? key, string? defaultValue) -> string?
Google.Firestore.V1.WriteRequest.Builder.GetLabelsOrThrow(string? key) -> string?
Google.Firestore.V1.WriteRequest.Builder.GetWrites(int index) -> Google.Firestore.V1.Write?
Google.Firestore.V1.WriteRequest.Builder.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.WriteRequest.Builder.LabelsCount.get -> int
Google.Firestore.V1.WriteRequest.Builder.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.WriteRequest.Builder.PutAllLabels(System.Collections.Generic.IDictionary<string!, string!>? values) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.PutLabels(string? key, string? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.RemoveLabels(string? key) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.RemoveWrites(int index) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetDatabase(string? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetDatabaseBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetStreamId(string? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetStreamIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetStreamToken(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetWrites(int index, Google.Firestore.V1.Write.Builder? builderForValue) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.SetWrites(int index, Google.Firestore.V1.Write? value) -> Google.Firestore.V1.WriteRequest.Builder?
Google.Firestore.V1.WriteRequest.Builder.StreamId.get -> string?
Google.Firestore.V1.WriteRequest.Builder.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.Builder.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.Builder.WritesCount.get -> int
Google.Firestore.V1.WriteRequest.Builder.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.WriteRequest.ContainsLabels(string? key) -> bool
Google.Firestore.V1.WriteRequest.Database.get -> string?
Google.Firestore.V1.WriteRequest.DatabaseBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.GetLabelsOrDefault(string? key, string? defaultValue) -> string?
Google.Firestore.V1.WriteRequest.GetLabelsOrThrow(string? key) -> string?
Google.Firestore.V1.WriteRequest.GetWrites(int index) -> Google.Firestore.V1.Write?
Google.Firestore.V1.WriteRequest.GetWritesOrBuilder(int index) -> Google.Firestore.V1.IWriteOrBuilder?
Google.Firestore.V1.WriteRequest.Labels.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.WriteRequest.LabelsCount.get -> int
Google.Firestore.V1.WriteRequest.LabelsMap.get -> System.Collections.Generic.IDictionary<string!, string!>?
Google.Firestore.V1.WriteRequest.StreamId.get -> string?
Google.Firestore.V1.WriteRequest.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteRequest.WritesCount.get -> int
Google.Firestore.V1.WriteRequest.WritesList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Write!>?
Google.Firestore.V1.WriteRequest.WritesOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteOrBuilder!>?
Google.Firestore.V1.WriteResponse
Google.Firestore.V1.WriteResponse.Builder
Google.Firestore.V1.WriteResponse.Builder.AddAllWriteResults(Java.Lang.IIterable? values) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.AddWriteResults(Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.AddWriteResults(Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.AddWriteResults(int index, Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.AddWriteResults(int index, Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.ClearCommitTime() -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.ClearStreamId() -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.ClearStreamToken() -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.ClearWriteResults() -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.WriteResponse.Builder.GetWriteResults(int index) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.WriteResponse.Builder.HasCommitTime.get -> bool
Google.Firestore.V1.WriteResponse.Builder.MergeCommitTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.RemoveWriteResults(int index) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetCommitTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetCommitTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetStreamId(string? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetStreamIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetStreamToken(Xamarin.Protobuf.Lite.ByteString? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetWriteResults(int index, Google.Firestore.V1.WriteResult.Builder? builderForValue) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.SetWriteResults(int index, Google.Firestore.V1.WriteResult? value) -> Google.Firestore.V1.WriteResponse.Builder?
Google.Firestore.V1.WriteResponse.Builder.StreamId.get -> string?
Google.Firestore.V1.WriteResponse.Builder.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteResponse.Builder.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteResponse.Builder.WriteResultsCount.get -> int
Google.Firestore.V1.WriteResponse.Builder.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.WriteResponse.CommitTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.WriteResponse.GetWriteResults(int index) -> Google.Firestore.V1.WriteResult?
Google.Firestore.V1.WriteResponse.GetWriteResultsOrBuilder(int index) -> Google.Firestore.V1.IWriteResultOrBuilder?
Google.Firestore.V1.WriteResponse.HasCommitTime.get -> bool
Google.Firestore.V1.WriteResponse.StreamId.get -> string?
Google.Firestore.V1.WriteResponse.StreamIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteResponse.StreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
Google.Firestore.V1.WriteResponse.WriteResultsCount.get -> int
Google.Firestore.V1.WriteResponse.WriteResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.WriteResult!>?
Google.Firestore.V1.WriteResponse.WriteResultsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IWriteResultOrBuilder!>?
Google.Firestore.V1.WriteResult
Google.Firestore.V1.WriteResult.Builder
Google.Firestore.V1.WriteResult.Builder.AddAllTransformResults(Java.Lang.IIterable? values) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.AddTransformResults(Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.AddTransformResults(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.AddTransformResults(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.AddTransformResults(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.ClearTransformResults() -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.ClearUpdateTime() -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.GetTransformResults(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.WriteResult.Builder.HasUpdateTime.get -> bool
Google.Firestore.V1.WriteResult.Builder.MergeUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.RemoveTransformResults(int index) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.SetTransformResults(int index, Google.Firestore.V1.Value.Builder? builderForValue) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.SetTransformResults(int index, Google.Firestore.V1.Value? value) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp.Builder? builderForValue) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.SetUpdateTime(Xamarin.Protobuf.Lite.Timestamp? value) -> Google.Firestore.V1.WriteResult.Builder?
Google.Firestore.V1.WriteResult.Builder.TransformResultsCount.get -> int
Google.Firestore.V1.WriteResult.Builder.TransformResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.WriteResult.Builder.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
Google.Firestore.V1.WriteResult.GetTransformResults(int index) -> Google.Firestore.V1.Value?
Google.Firestore.V1.WriteResult.GetTransformResultsOrBuilder(int index) -> Google.Firestore.V1.IValueOrBuilder?
Google.Firestore.V1.WriteResult.HasUpdateTime.get -> bool
Google.Firestore.V1.WriteResult.TransformResultsCount.get -> int
Google.Firestore.V1.WriteResult.TransformResultsList.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
Google.Firestore.V1.WriteResult.TransformResultsOrBuilderList.get -> System.Collections.Generic.IList<Google.Firestore.V1.IValueOrBuilder!>?
Google.Firestore.V1.WriteResult.UpdateTime.get -> Xamarin.Protobuf.Lite.Timestamp?
abstract Firebase.Firestore.Auth.CredentialsProvider.GetToken() -> Android.Gms.Tasks.Task?
abstract Firebase.Firestore.Auth.CredentialsProvider.InvalidateToken() -> void
abstract Firebase.Firestore.Auth.CredentialsProvider.RemoveChangeListener() -> void
abstract Firebase.Firestore.Auth.CredentialsProvider.SetChangeListener(Firebase.Firestore.Util.IListener? p0) -> void
abstract Firebase.Firestore.Core.ComponentProvider.CreateEventManager(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Core.EventManager?
abstract Firebase.Firestore.Core.ComponentProvider.CreateGarbageCollectionScheduler(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Local.IScheduler?
abstract Firebase.Firestore.Core.ComponentProvider.CreateIndexBackfiller(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Local.IndexBackfiller?
abstract Firebase.Firestore.Core.ComponentProvider.CreateLocalStore(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Local.LocalStore?
abstract Firebase.Firestore.Core.ComponentProvider.CreatePersistence(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Local.Persistence?
abstract Firebase.Firestore.Core.ComponentProvider.CreateRemoteStore(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Remote.RemoteStore?
abstract Firebase.Firestore.Core.ComponentProvider.CreateSyncEngine(Firebase.Firestore.Core.ComponentProvider.Configuration? p0) -> Firebase.Firestore.Core.SyncEngine?
abstract Firebase.Firestore.Core.Filter.CanonicalId.get -> string?
abstract Firebase.Firestore.Core.Filter.Filters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
abstract Firebase.Firestore.Core.Filter.FlattenedFilters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.FieldFilter!>?
abstract Firebase.Firestore.Core.Filter.Matches(Firebase.Firestore.Model.IDocument? p0) -> bool
abstract Firebase.Firestore.Index.DirectionalIndexByteEncoder.WriteBytes(Xamarin.Protobuf.Lite.ByteString? p0) -> void
abstract Firebase.Firestore.Index.DirectionalIndexByteEncoder.WriteDouble(double p0) -> void
abstract Firebase.Firestore.Index.DirectionalIndexByteEncoder.WriteInfinity() -> void
abstract Firebase.Firestore.Index.DirectionalIndexByteEncoder.WriteLong(long p0) -> void
abstract Firebase.Firestore.Index.DirectionalIndexByteEncoder.WriteString(string? p0) -> void
abstract Firebase.Firestore.Index.IndexEntry.CompareTo(Java.Lang.Object! o) -> int
abstract Firebase.Firestore.Index.IndexEntry.DocumentKey.get -> Firebase.Firestore.Model.DocumentKey?
abstract Firebase.Firestore.Index.IndexEntry.GetArrayValue() -> byte[]?
abstract Firebase.Firestore.Index.IndexEntry.GetDirectionalValue() -> byte[]?
abstract Firebase.Firestore.Index.IndexEntry.IndexId.get -> int
abstract Firebase.Firestore.Local.Persistence.IsStarted.get -> bool
abstract Firebase.Firestore.Local.Persistence.ReferenceDelegate.get -> Java.Lang.Object?
abstract Firebase.Firestore.Local.Persistence.Shutdown() -> void
abstract Firebase.Firestore.Local.Persistence.Start() -> void
abstract Firebase.Firestore.Model.BasePath.CanonicalString() -> string?
abstract Firebase.Firestore.Model.FieldIndex.CollectionGroup.get -> string?
abstract Firebase.Firestore.Model.FieldIndex.GetIndexState() -> Firebase.Firestore.Model.FieldIndex.IndexState?
abstract Firebase.Firestore.Model.FieldIndex.IndexId.get -> int
abstract Firebase.Firestore.Model.FieldIndex.IndexOffset.CompareTo(Java.Lang.Object! o) -> int
abstract Firebase.Firestore.Model.FieldIndex.IndexOffset.DocumentKey.get -> Firebase.Firestore.Model.DocumentKey?
abstract Firebase.Firestore.Model.FieldIndex.IndexOffset.LargestBatchId.get -> int
abstract Firebase.Firestore.Model.FieldIndex.IndexOffset.ReadTime.get -> Firebase.Firestore.Model.SnapshotVersion?
abstract Firebase.Firestore.Model.FieldIndex.IndexState.Offset.get -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
abstract Firebase.Firestore.Model.FieldIndex.IndexState.SequenceNumber.get -> long
abstract Firebase.Firestore.Model.FieldIndex.Segment.CompareTo(Java.Lang.Object! o) -> int
abstract Firebase.Firestore.Model.FieldIndex.Segment.FieldPath.get -> Firebase.Firestore.Model.FieldPath?
abstract Firebase.Firestore.Model.FieldIndex.Segment.GetKind() -> Firebase.Firestore.Model.FieldIndex.Segment.Kind?
abstract Firebase.Firestore.Model.FieldIndex.Segments.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex.Segment!>?
abstract Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Apply(Google.Firestore.V1.Value? p0) -> Google.Firestore.V1.Value?
abstract Firebase.Firestore.Model.Mutation.Mutation.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? p0, Firebase.Firestore.Model.Mutation.FieldMask? p1, Firebase.Timestamp? p2) -> Firebase.Firestore.Model.Mutation.FieldMask?
abstract Firebase.Firestore.Model.Mutation.Mutation.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? p0, Firebase.Firestore.Model.Mutation.MutationResult? p1) -> void
abstract Firebase.Firestore.Model.Mutation.Mutation.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
abstract Firebase.Firestore.Model.Mutation.Overlay.LargestBatchId.get -> int
abstract Firebase.Firestore.Model.Mutation.Overlay.Mutation.get -> Firebase.Firestore.Model.Mutation.Mutation?
const Firebase.Firestore.BuildConfig.BuildType = "release" -> string!
const Firebase.Firestore.BuildConfig.Debug = false -> bool
const Firebase.Firestore.BuildConfig.LibraryPackageName = "com.google.firebase.firestore" -> string!
const Firebase.Firestore.BuildConfig.TargetBackend = "emulator" -> string!
const Firebase.Firestore.BuildConfig.TargetDatabaseId = "(default)" -> string!
const Firebase.Firestore.BuildConfig.VersionName = "25.1.4" -> string!
const Firebase.Firestore.Bundle.BundleReader.BufferCapacity = 1024 -> int
const Firebase.Firestore.Core.ListenSequence.Invalid = -1 -> long
const Firebase.Firestore.Core.Target.NoLimit = -1 -> long
const Firebase.Firestore.FirebaseFirestoreSettings.CacheSizeUnlimited = -1 -> long
const Firebase.Firestore.FirebaseFirestoreSettings.DefaultHost = "firestore.googleapis.com" -> string!
const Firebase.Firestore.Index.FirestoreIndexValueWriter.DocumentNameOffset = 5 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeArray = 50 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeBlob = 30 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeBoolean = 10 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeGeopoint = 45 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeMap = 55 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeNan = 13 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeNull = 5 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeNumber = 15 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeReference = 37 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeReferenceSegment = 60 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeString = 25 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeTimestamp = 20 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.IndexTypeVector = 53 -> int
const Firebase.Firestore.Index.FirestoreIndexValueWriter.NotTruncated = 2 -> int
const Firebase.Firestore.Index.OrderedCodeWriter.DoubleAllBits = -1 -> long
const Firebase.Firestore.Index.OrderedCodeWriter.DoubleSignMask = -9223372036854775808 -> long
const Firebase.Firestore.Index.OrderedCodeWriter.Escape1 = 0 -> sbyte
const Firebase.Firestore.Index.OrderedCodeWriter.Escape2 = -1 -> sbyte
const Firebase.Firestore.Index.OrderedCodeWriter.FfByte = 0 -> sbyte
const Firebase.Firestore.Index.OrderedCodeWriter.Infinity = -1 -> sbyte
const Firebase.Firestore.Index.OrderedCodeWriter.NullByte = -1 -> sbyte
const Firebase.Firestore.Index.OrderedCodeWriter.Separator = 1 -> sbyte
const Firebase.Firestore.Local.SQLitePersistence.MaxArgs = 900 -> int
const Firebase.Firestore.Model.DatabaseId.DefaultDatabaseId = "(default)" -> string!
const Firebase.Firestore.Model.DocumentKey.KeyFieldName = "__name__" -> string!
const Firebase.Firestore.Model.FieldIndex.InitialLargestBatchId = -1 -> int
const Firebase.Firestore.Model.FieldIndex.InitialSequenceNumber = 0 -> int
const Firebase.Firestore.Model.FieldIndex.UnknownId = -1 -> int
const Firebase.Firestore.Model.Mutation.MutationBatch.Unknown = -1 -> int
const Firebase.Firestore.Model.Values.TypeKey = "__type__" -> string!
const Firebase.Firestore.Model.Values.TypeOrderArray = 9 -> int
const Firebase.Firestore.Model.Values.TypeOrderBlob = 6 -> int
const Firebase.Firestore.Model.Values.TypeOrderBoolean = 1 -> int
const Firebase.Firestore.Model.Values.TypeOrderGeopoint = 8 -> int
const Firebase.Firestore.Model.Values.TypeOrderMap = 11 -> int
const Firebase.Firestore.Model.Values.TypeOrderMaxValue = 2147483647 -> int
const Firebase.Firestore.Model.Values.TypeOrderNull = 0 -> int
const Firebase.Firestore.Model.Values.TypeOrderNumber = 2 -> int
const Firebase.Firestore.Model.Values.TypeOrderReference = 7 -> int
const Firebase.Firestore.Model.Values.TypeOrderServerTimestamp = 4 -> int
const Firebase.Firestore.Model.Values.TypeOrderString = 5 -> int
const Firebase.Firestore.Model.Values.TypeOrderTimestamp = 3 -> int
const Firebase.Firestore.Model.Values.TypeOrderVector = 10 -> int
const Firebase.Firestore.Model.Values.VectorMapVectorsKey = "value" -> string!
const Firebase.Firestore.Proto.MaybeDocument.DocumentFieldNumber = 2 -> int
const Firebase.Firestore.Proto.MaybeDocument.HasCommittedMutationsFieldNumber = 4 -> int
const Firebase.Firestore.Proto.MaybeDocument.NoDocumentFieldNumber = 1 -> int
const Firebase.Firestore.Proto.MaybeDocument.UnknownDocumentFieldNumber = 3 -> int
const Firebase.Firestore.Proto.MutationQueue.LastAcknowledgedBatchIdFieldNumber = 1 -> int
const Firebase.Firestore.Proto.MutationQueue.LastStreamTokenFieldNumber = 2 -> int
const Firebase.Firestore.Proto.NoDocument.NameFieldNumber = 1 -> int
const Firebase.Firestore.Proto.NoDocument.ReadTimeFieldNumber = 2 -> int
const Firebase.Firestore.Proto.Target.DocumentsFieldNumber = 6 -> int
const Firebase.Firestore.Proto.Target.LastLimboFreeSnapshotVersionFieldNumber = 7 -> int
const Firebase.Firestore.Proto.Target.LastListenSequenceNumberFieldNumber = 4 -> int
const Firebase.Firestore.Proto.Target.QueryFieldNumber = 5 -> int
const Firebase.Firestore.Proto.Target.ResumeTokenFieldNumber = 3 -> int
const Firebase.Firestore.Proto.Target.SnapshotVersionFieldNumber = 2 -> int
const Firebase.Firestore.Proto.Target.TargetIdFieldNumber = 1 -> int
const Firebase.Firestore.Proto.TargetGlobal.HighestListenSequenceNumberFieldNumber = 2 -> int
const Firebase.Firestore.Proto.TargetGlobal.HighestTargetIdFieldNumber = 1 -> int
const Firebase.Firestore.Proto.TargetGlobal.LastRemoteSnapshotVersionFieldNumber = 3 -> int
const Firebase.Firestore.Proto.TargetGlobal.TargetCountFieldNumber = 4 -> int
const Firebase.Firestore.Proto.UnknownDocument.NameFieldNumber = 1 -> int
const Firebase.Firestore.Proto.UnknownDocument.VersionFieldNumber = 2 -> int
const Firebase.Firestore.Proto.WriteBatch.BaseWritesFieldNumber = 4 -> int
const Firebase.Firestore.Proto.WriteBatch.BatchIdFieldNumber = 1 -> int
const Firebase.Firestore.Proto.WriteBatch.LocalWriteTimeFieldNumber = 3 -> int
const Firebase.Firestore.Proto.WriteBatch.WritesFieldNumber = 2 -> int
const Firebase.Firestore.Util.ExponentialBackoff.DefaultBackoffFactor = 1.5 -> double
const Firebase.Firestore.Util.ExponentialBackoff.DefaultBackoffInitialDelayMs = 1000 -> long
const Firebase.Firestore.Util.ExponentialBackoff.DefaultBackoffMaxDelayMs = 60000 -> long
const Firestore.Admin.V1.Index.FieldsFieldNumber = 3 -> int
const Firestore.Admin.V1.Index.IndexField.ArrayConfig.ArrayConfigUnspecifiedValue = 0 -> int
const Firestore.Admin.V1.Index.IndexField.ArrayConfig.ContainsValue = 1 -> int
const Firestore.Admin.V1.Index.IndexField.ArrayConfigFieldNumber = 3 -> int
const Firestore.Admin.V1.Index.IndexField.FieldPathFieldNumber = 1 -> int
const Firestore.Admin.V1.Index.IndexField.Order.AscendingValue = 1 -> int
const Firestore.Admin.V1.Index.IndexField.Order.DescendingValue = 2 -> int
const Firestore.Admin.V1.Index.IndexField.Order.OrderUnspecifiedValue = 0 -> int
const Firestore.Admin.V1.Index.IndexField.OrderFieldNumber = 2 -> int
const Firestore.Admin.V1.Index.NameFieldNumber = 1 -> int
const Firestore.Admin.V1.Index.QueryScope.CollectionGroupValue = 2 -> int
const Firestore.Admin.V1.Index.QueryScope.CollectionValue = 1 -> int
const Firestore.Admin.V1.Index.QueryScope.QueryScopeUnspecifiedValue = 0 -> int
const Firestore.Admin.V1.Index.QueryScopeFieldNumber = 2 -> int
const Firestore.Admin.V1.Index.State.CreatingValue = 1 -> int
const Firestore.Admin.V1.Index.State.NeedsRepairValue = 3 -> int
const Firestore.Admin.V1.Index.State.ReadyValue = 2 -> int
const Firestore.Admin.V1.Index.State.StateUnspecifiedValue = 0 -> int
const Firestore.Admin.V1.Index.StateFieldNumber = 4 -> int
const Firestore.Bundle.BundleElement.DocumentFieldNumber = 4 -> int
const Firestore.Bundle.BundleElement.DocumentMetadataFieldNumber = 3 -> int
const Firestore.Bundle.BundleElement.MetadataFieldNumber = 1 -> int
const Firestore.Bundle.BundleElement.NamedQueryFieldNumber = 2 -> int
const Firestore.Bundle.BundleMetadata.CreateTimeFieldNumber = 2 -> int
const Firestore.Bundle.BundleMetadata.IdFieldNumber = 1 -> int
const Firestore.Bundle.BundleMetadata.TotalBytesFieldNumber = 5 -> int
const Firestore.Bundle.BundleMetadata.TotalDocumentsFieldNumber = 4 -> int
const Firestore.Bundle.BundleMetadata.VersionFieldNumber = 3 -> int
const Firestore.Bundle.BundledDocumentMetadata.ExistsFieldNumber = 3 -> int
const Firestore.Bundle.BundledDocumentMetadata.NameFieldNumber = 1 -> int
const Firestore.Bundle.BundledDocumentMetadata.QueriesFieldNumber = 4 -> int
const Firestore.Bundle.BundledDocumentMetadata.ReadTimeFieldNumber = 2 -> int
const Firestore.Bundle.BundledQuery.LimitType.FirstValue = 0 -> int
const Firestore.Bundle.BundledQuery.LimitType.LastValue = 1 -> int
const Firestore.Bundle.BundledQuery.LimitTypeFieldNumber = 3 -> int
const Firestore.Bundle.BundledQuery.ParentFieldNumber = 1 -> int
const Firestore.Bundle.BundledQuery.StructuredQueryFieldNumber = 2 -> int
const Firestore.Bundle.NamedQuery.BundledQueryFieldNumber = 2 -> int
const Firestore.Bundle.NamedQuery.NameFieldNumber = 1 -> int
const Firestore.Bundle.NamedQuery.ReadTimeFieldNumber = 3 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionIdFieldNumber = 200 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.FirestoreV1ActionFieldNumber = 3 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ValidationRuleFieldNumber = 201 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocumentsFieldNumber = 10 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransactionFieldNumber = 6 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CommitFieldNumber = 7 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocumentFieldNumber = 3 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DatabaseContentsBeforeActionFieldNumber = 202 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocumentFieldNumber = 5 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocumentFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIdsFieldNumber = 9 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocumentsFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListenFieldNumber = 12 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ListenResponseFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.MatchingDocumentsFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocumentsFieldNumber = 203 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.TargetIdFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListenFieldNumber = 13 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RollbackFieldNumber = 8 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQueryFieldNumber = 11 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.StatusFieldNumber = 201 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.RequestFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ResponseFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocumentFieldNumber = 4 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.TestTraceFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.CanonicalCodeFieldNumber = 6 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.CodeFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.MessageFieldNumber = 3 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.SpaceFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ActionFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceDescriptionFieldNumber = 3 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.TraceIdFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.TestTraceFieldNumber = 1 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ValidateQueryIndexesFieldNumber = 2 -> int
const Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ValidateQueryResultOrderFieldNumber = 1 -> int
const Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.LongExclusiveUpperBoundAsDouble = 9.223372036854776E+18 -> double
const Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.LongInclusiveLowerBoundAsDouble = -9.223372036854776E+18 -> double
const Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.MaxSafeLong = 9007199254740992 -> long
const Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.MinSafeLong = -9007199254740992 -> long
const Google.Firestore.V1.AggregationResult.AggregateFieldsFieldNumber = 2 -> int
const Google.Firestore.V1.ArrayValue.ValuesFieldNumber = 1 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.DocumentsFieldNumber = 2 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.MaskFieldNumber = 3 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.NewTransactionFieldNumber = 5 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.ReadTimeFieldNumber = 7 -> int
const Google.Firestore.V1.BatchGetDocumentsRequest.TransactionFieldNumber = 4 -> int
const Google.Firestore.V1.BatchGetDocumentsResponse.FoundFieldNumber = 1 -> int
const Google.Firestore.V1.BatchGetDocumentsResponse.MissingFieldNumber = 2 -> int
const Google.Firestore.V1.BatchGetDocumentsResponse.ReadTimeFieldNumber = 4 -> int
const Google.Firestore.V1.BatchGetDocumentsResponse.TransactionFieldNumber = 3 -> int
const Google.Firestore.V1.BeginTransactionRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.BeginTransactionRequest.OptionsFieldNumber = 2 -> int
const Google.Firestore.V1.BeginTransactionResponse.TransactionFieldNumber = 1 -> int
const Google.Firestore.V1.BitSequence.BitmapFieldNumber = 1 -> int
const Google.Firestore.V1.BitSequence.PaddingFieldNumber = 2 -> int
const Google.Firestore.V1.BloomFilter.BitsFieldNumber = 1 -> int
const Google.Firestore.V1.BloomFilter.HashCountFieldNumber = 2 -> int
const Google.Firestore.V1.CommitRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.CommitRequest.TransactionFieldNumber = 3 -> int
const Google.Firestore.V1.CommitRequest.WritesFieldNumber = 2 -> int
const Google.Firestore.V1.CommitResponse.CommitTimeFieldNumber = 2 -> int
const Google.Firestore.V1.CommitResponse.WriteResultsFieldNumber = 1 -> int
const Google.Firestore.V1.CreateDocumentRequest.CollectionIdFieldNumber = 2 -> int
const Google.Firestore.V1.CreateDocumentRequest.DocumentFieldNumber = 4 -> int
const Google.Firestore.V1.CreateDocumentRequest.DocumentIdFieldNumber = 3 -> int
const Google.Firestore.V1.CreateDocumentRequest.MaskFieldNumber = 5 -> int
const Google.Firestore.V1.CreateDocumentRequest.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.Cursor.BeforeFieldNumber = 2 -> int
const Google.Firestore.V1.Cursor.ValuesFieldNumber = 1 -> int
const Google.Firestore.V1.DeleteDocumentRequest.CurrentDocumentFieldNumber = 2 -> int
const Google.Firestore.V1.DeleteDocumentRequest.NameFieldNumber = 1 -> int
const Google.Firestore.V1.Document.CreateTimeFieldNumber = 3 -> int
const Google.Firestore.V1.Document.FieldsFieldNumber = 2 -> int
const Google.Firestore.V1.Document.NameFieldNumber = 1 -> int
const Google.Firestore.V1.Document.UpdateTimeFieldNumber = 4 -> int
const Google.Firestore.V1.DocumentChange.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentChange.RemovedTargetIdsFieldNumber = 6 -> int
const Google.Firestore.V1.DocumentChange.TargetIdsFieldNumber = 5 -> int
const Google.Firestore.V1.DocumentDelete.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentDelete.ReadTimeFieldNumber = 4 -> int
const Google.Firestore.V1.DocumentDelete.RemovedTargetIdsFieldNumber = 6 -> int
const Google.Firestore.V1.DocumentMask.FieldPathsFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentRemove.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentRemove.ReadTimeFieldNumber = 4 -> int
const Google.Firestore.V1.DocumentRemove.RemovedTargetIdsFieldNumber = 2 -> int
const Google.Firestore.V1.DocumentTransform.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.AppendMissingElementsFieldNumber = 6 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.FieldPathFieldNumber = 1 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.IncrementFieldNumber = 3 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.MaximumFieldNumber = 4 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.MinimumFieldNumber = 5 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.RemoveAllFromArrayFieldNumber = 7 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.RequestTimeValue = 1 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.ServerValueUnspecifiedValue = 0 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransform.SetToServerValueFieldNumber = 2 -> int
const Google.Firestore.V1.DocumentTransform.FieldTransformsFieldNumber = 2 -> int
const Google.Firestore.V1.ExistenceFilter.CountFieldNumber = 2 -> int
const Google.Firestore.V1.ExistenceFilter.TargetIdFieldNumber = 1 -> int
const Google.Firestore.V1.ExistenceFilter.UnchangedNamesFieldNumber = 3 -> int
const Google.Firestore.V1.FirestoreGrpc.ServiceName = "google.firestore.v1.Firestore" -> string!
const Google.Firestore.V1.GetDocumentRequest.MaskFieldNumber = 2 -> int
const Google.Firestore.V1.GetDocumentRequest.NameFieldNumber = 1 -> int
const Google.Firestore.V1.GetDocumentRequest.ReadTimeFieldNumber = 5 -> int
const Google.Firestore.V1.GetDocumentRequest.TransactionFieldNumber = 3 -> int
const Google.Firestore.V1.ListCollectionIdsRequest.PageSizeFieldNumber = 2 -> int
const Google.Firestore.V1.ListCollectionIdsRequest.PageTokenFieldNumber = 3 -> int
const Google.Firestore.V1.ListCollectionIdsRequest.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.ListCollectionIdsResponse.CollectionIdsFieldNumber = 1 -> int
const Google.Firestore.V1.ListCollectionIdsResponse.NextPageTokenFieldNumber = 2 -> int
const Google.Firestore.V1.ListDocumentsRequest.CollectionIdFieldNumber = 2 -> int
const Google.Firestore.V1.ListDocumentsRequest.MaskFieldNumber = 7 -> int
const Google.Firestore.V1.ListDocumentsRequest.OrderByFieldNumber = 6 -> int
const Google.Firestore.V1.ListDocumentsRequest.PageSizeFieldNumber = 3 -> int
const Google.Firestore.V1.ListDocumentsRequest.PageTokenFieldNumber = 4 -> int
const Google.Firestore.V1.ListDocumentsRequest.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.ListDocumentsRequest.ReadTimeFieldNumber = 10 -> int
const Google.Firestore.V1.ListDocumentsRequest.ShowMissingFieldNumber = 12 -> int
const Google.Firestore.V1.ListDocumentsRequest.TransactionFieldNumber = 8 -> int
const Google.Firestore.V1.ListDocumentsResponse.DocumentsFieldNumber = 1 -> int
const Google.Firestore.V1.ListDocumentsResponse.NextPageTokenFieldNumber = 2 -> int
const Google.Firestore.V1.ListenRequest.AddTargetFieldNumber = 2 -> int
const Google.Firestore.V1.ListenRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.ListenRequest.LabelsFieldNumber = 4 -> int
const Google.Firestore.V1.ListenRequest.RemoveTargetFieldNumber = 3 -> int
const Google.Firestore.V1.ListenResponse.DocumentChangeFieldNumber = 3 -> int
const Google.Firestore.V1.ListenResponse.DocumentDeleteFieldNumber = 4 -> int
const Google.Firestore.V1.ListenResponse.DocumentRemoveFieldNumber = 6 -> int
const Google.Firestore.V1.ListenResponse.FilterFieldNumber = 5 -> int
const Google.Firestore.V1.ListenResponse.TargetChangeFieldNumber = 2 -> int
const Google.Firestore.V1.MapValue.FieldsFieldNumber = 1 -> int
const Google.Firestore.V1.Precondition.ExistsFieldNumber = 1 -> int
const Google.Firestore.V1.Precondition.UpdateTimeFieldNumber = 2 -> int
const Google.Firestore.V1.RollbackRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.RollbackRequest.TransactionFieldNumber = 2 -> int
const Google.Firestore.V1.RunAggregationQueryRequest.NewTransactionFieldNumber = 5 -> int
const Google.Firestore.V1.RunAggregationQueryRequest.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.RunAggregationQueryRequest.ReadTimeFieldNumber = 6 -> int
const Google.Firestore.V1.RunAggregationQueryRequest.StructuredAggregationQueryFieldNumber = 2 -> int
const Google.Firestore.V1.RunAggregationQueryRequest.TransactionFieldNumber = 4 -> int
const Google.Firestore.V1.RunAggregationQueryResponse.ReadTimeFieldNumber = 3 -> int
const Google.Firestore.V1.RunAggregationQueryResponse.ResultFieldNumber = 1 -> int
const Google.Firestore.V1.RunAggregationQueryResponse.TransactionFieldNumber = 2 -> int
const Google.Firestore.V1.RunQueryRequest.NewTransactionFieldNumber = 6 -> int
const Google.Firestore.V1.RunQueryRequest.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.RunQueryRequest.ReadTimeFieldNumber = 7 -> int
const Google.Firestore.V1.RunQueryRequest.StructuredQueryFieldNumber = 2 -> int
const Google.Firestore.V1.RunQueryRequest.TransactionFieldNumber = 5 -> int
const Google.Firestore.V1.RunQueryResponse.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.RunQueryResponse.ReadTimeFieldNumber = 3 -> int
const Google.Firestore.V1.RunQueryResponse.SkippedResultsFieldNumber = 4 -> int
const Google.Firestore.V1.RunQueryResponse.TransactionFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.AliasFieldNumber = 7 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.FieldFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.AvgFieldNumber = 3 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.UpToFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.CountFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.FieldFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredAggregationQuery.Aggregation.SumFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredAggregationQuery.AggregationsFieldNumber = 3 -> int
const Google.Firestore.V1.StructuredAggregationQuery.StructuredQueryFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.CollectionSelector.AllDescendantsFieldNumber = 3 -> int
const Google.Firestore.V1.StructuredQuery.CollectionSelector.CollectionIdFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.CompositeFilter.FiltersFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.CompositeFilter.OpFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.AndValue = 1 -> int
const Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.OperatorUnspecifiedValue = 0 -> int
const Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.OrValue = 2 -> int
const Google.Firestore.V1.StructuredQuery.Direction.AscendingValue = 1 -> int
const Google.Firestore.V1.StructuredQuery.Direction.DescendingValue = 2 -> int
const Google.Firestore.V1.StructuredQuery.Direction.DirectionUnspecifiedValue = 0 -> int
const Google.Firestore.V1.StructuredQuery.EndAtFieldNumber = 8 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.FieldFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.OpFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ArrayContainsAnyValue = 9 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ArrayContainsValue = 7 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.EqualValue = 5 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.GreaterThanOrEqualValue = 4 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.GreaterThanValue = 3 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.InValue = 8 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.LessThanOrEqualValue = 2 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.LessThanValue = 1 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.NotEqualValue = 6 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.NotInValue = 10 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.OperatorUnspecifiedValue = 0 -> int
const Google.Firestore.V1.StructuredQuery.FieldFilter.ValueFieldNumber = 3 -> int
const Google.Firestore.V1.StructuredQuery.FieldReference.FieldPathFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.Filter.CompositeFilterFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.Filter.FieldFilterFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.Filter.UnaryFilterFieldNumber = 3 -> int
const Google.Firestore.V1.StructuredQuery.FromFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.LimitFieldNumber = 5 -> int
const Google.Firestore.V1.StructuredQuery.OffsetFieldNumber = 6 -> int
const Google.Firestore.V1.StructuredQuery.Order.DirectionFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.Order.FieldFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.OrderByFieldNumber = 4 -> int
const Google.Firestore.V1.StructuredQuery.Projection.FieldsFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.SelectFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.StartAtFieldNumber = 7 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.FieldFieldNumber = 2 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.OpFieldNumber = 1 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNanValue = 2 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNotNanValue = 4 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNotNullValue = 5 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNullValue = 3 -> int
const Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.OperatorUnspecifiedValue = 0 -> int
const Google.Firestore.V1.StructuredQuery.WhereFieldNumber = 3 -> int
const Google.Firestore.V1.Target.DocumentsFieldNumber = 3 -> int
const Google.Firestore.V1.Target.DocumentsTarget.DocumentsFieldNumber = 2 -> int
const Google.Firestore.V1.Target.ExpectedCountFieldNumber = 12 -> int
const Google.Firestore.V1.Target.OnceFieldNumber = 6 -> int
const Google.Firestore.V1.Target.QueryFieldNumber = 2 -> int
const Google.Firestore.V1.Target.QueryTarget.ParentFieldNumber = 1 -> int
const Google.Firestore.V1.Target.QueryTarget.StructuredQueryFieldNumber = 2 -> int
const Google.Firestore.V1.Target.ReadTimeFieldNumber = 11 -> int
const Google.Firestore.V1.Target.ResumeTokenFieldNumber = 4 -> int
const Google.Firestore.V1.Target.TargetIdFieldNumber = 5 -> int
const Google.Firestore.V1.TargetChange.CauseFieldNumber = 3 -> int
const Google.Firestore.V1.TargetChange.ReadTimeFieldNumber = 6 -> int
const Google.Firestore.V1.TargetChange.ResumeTokenFieldNumber = 4 -> int
const Google.Firestore.V1.TargetChange.TargetChangeType.AddValue = 1 -> int
const Google.Firestore.V1.TargetChange.TargetChangeType.CurrentValue = 3 -> int
const Google.Firestore.V1.TargetChange.TargetChangeType.NoChangeValue = 0 -> int
const Google.Firestore.V1.TargetChange.TargetChangeType.RemoveValue = 2 -> int
const Google.Firestore.V1.TargetChange.TargetChangeType.ResetValue = 4 -> int
const Google.Firestore.V1.TargetChange.TargetChangeTypeFieldNumber = 1 -> int
const Google.Firestore.V1.TargetChange.TargetIdsFieldNumber = 2 -> int
const Google.Firestore.V1.TransactionOptions.ReadOnly.ReadTimeFieldNumber = 2 -> int
const Google.Firestore.V1.TransactionOptions.ReadOnlyFieldNumber = 2 -> int
const Google.Firestore.V1.TransactionOptions.ReadWrite.RetryTransactionFieldNumber = 1 -> int
const Google.Firestore.V1.TransactionOptions.ReadWriteFieldNumber = 3 -> int
const Google.Firestore.V1.UpdateDocumentRequest.CurrentDocumentFieldNumber = 4 -> int
const Google.Firestore.V1.UpdateDocumentRequest.DocumentFieldNumber = 1 -> int
const Google.Firestore.V1.UpdateDocumentRequest.MaskFieldNumber = 3 -> int
const Google.Firestore.V1.UpdateDocumentRequest.UpdateMaskFieldNumber = 2 -> int
const Google.Firestore.V1.Value.ArrayValueFieldNumber = 9 -> int
const Google.Firestore.V1.Value.BooleanValueFieldNumber = 1 -> int
const Google.Firestore.V1.Value.BytesValueFieldNumber = 18 -> int
const Google.Firestore.V1.Value.DoubleValueFieldNumber = 3 -> int
const Google.Firestore.V1.Value.GeoPointValueFieldNumber = 8 -> int
const Google.Firestore.V1.Value.IntegerValueFieldNumber = 2 -> int
const Google.Firestore.V1.Value.MapValueFieldNumber = 6 -> int
const Google.Firestore.V1.Value.NullValueFieldNumber = 11 -> int
const Google.Firestore.V1.Value.ReferenceValueFieldNumber = 5 -> int
const Google.Firestore.V1.Value.StringValueFieldNumber = 17 -> int
const Google.Firestore.V1.Value.TimestampValueFieldNumber = 10 -> int
const Google.Firestore.V1.Write.CurrentDocumentFieldNumber = 4 -> int
const Google.Firestore.V1.Write.DeleteFieldNumber = 2 -> int
const Google.Firestore.V1.Write.TransformFieldNumber = 6 -> int
const Google.Firestore.V1.Write.UpdateFieldNumber = 1 -> int
const Google.Firestore.V1.Write.UpdateMaskFieldNumber = 3 -> int
const Google.Firestore.V1.Write.UpdateTransformsFieldNumber = 7 -> int
const Google.Firestore.V1.Write.VerifyFieldNumber = 5 -> int
const Google.Firestore.V1.WriteRequest.DatabaseFieldNumber = 1 -> int
const Google.Firestore.V1.WriteRequest.LabelsFieldNumber = 5 -> int
const Google.Firestore.V1.WriteRequest.StreamIdFieldNumber = 2 -> int
const Google.Firestore.V1.WriteRequest.StreamTokenFieldNumber = 4 -> int
const Google.Firestore.V1.WriteRequest.WritesFieldNumber = 3 -> int
const Google.Firestore.V1.WriteResponse.CommitTimeFieldNumber = 4 -> int
const Google.Firestore.V1.WriteResponse.StreamIdFieldNumber = 1 -> int
const Google.Firestore.V1.WriteResponse.StreamTokenFieldNumber = 2 -> int
const Google.Firestore.V1.WriteResponse.WriteResultsFieldNumber = 3 -> int
const Google.Firestore.V1.WriteResult.TransformResultsFieldNumber = 2 -> int
const Google.Firestore.V1.WriteResult.UpdateTimeFieldNumber = 1 -> int
override Firebase.Firestore.AggregateField.AverageAggregateField.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateField.AverageAggregateField.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateField.AverageAggregateField.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateField.CountAggregateField.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateField.CountAggregateField.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateField.CountAggregateField.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateField.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateField.SumAggregateField.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateField.SumAggregateField.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateField.SumAggregateField.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateField.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateField.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateQuery.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateQuery.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateQuerySnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.AggregateQuerySnapshot.ThresholdClass.get -> nint
override Firebase.Firestore.AggregateQuerySnapshot.ThresholdType.get -> System.Type!
override Firebase.Firestore.AggregateSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Auth.CredentialsProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Auth.CredentialsProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Auth.CredentialsProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.GetToken() -> Android.Gms.Tasks.Task?
override Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.InvalidateToken() -> void
override Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.RemoveChangeListener() -> void
override Firebase.Firestore.Auth.FirebaseAppCheckTokenProvider.SetChangeListener(Firebase.Firestore.Util.IListener! changeListener) -> void
override Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.GetToken() -> Android.Gms.Tasks.Task?
override Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.InvalidateToken() -> void
override Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.RemoveChangeListener() -> void
override Firebase.Firestore.Auth.FirebaseAuthCredentialsProvider.SetChangeListener(Firebase.Firestore.Util.IListener! changeListener) -> void
override Firebase.Firestore.Auth.Token.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Auth.User.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Blob.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Blob.ThresholdClass.get -> nint
override Firebase.Firestore.Blob.ThresholdType.get -> System.Type!
override Firebase.Firestore.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleDocument.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundleDocument.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundleLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleLoader.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundleLoader.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundleMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleMetadata.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundleMetadata.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundleReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleReader.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundleReader.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundleSerializer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundleSerializer.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundleSerializer.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundledDocumentMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundledDocumentMetadata.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundledDocumentMetadata.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.BundledQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.BundledQuery.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.BundledQuery.ThresholdType.get -> System.Type!
override Firebase.Firestore.Bundle.NamedQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Bundle.NamedQuery.ThresholdClass.get -> nint
override Firebase.Firestore.Bundle.NamedQuery.ThresholdType.get -> System.Type!
override Firebase.Firestore.CollectionReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.CollectionReference.ThresholdClass.get -> nint
override Firebase.Firestore.CollectionReference.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ActivityScope.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ActivityScope.StopListenerFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ActivityScope.StopListenerFragment.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ActivityScope.StopListenerFragment.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ActivityScope.StopListenerSupportFragment.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ActivityScope.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ActivityScope.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ArrayContainsAnyFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ArrayContainsAnyFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ArrayContainsAnyFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ArrayContainsFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ArrayContainsFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ArrayContainsFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.AsyncEventListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.AsyncEventListener.ThresholdClass.get -> nint
override Firebase.Firestore.Core.AsyncEventListener.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.Bound.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ComponentProvider.Configuration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ComponentProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ComponentProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ComponentProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.CompositeFilter.CanonicalId.get -> string?
override Firebase.Firestore.Core.CompositeFilter.Filters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
override Firebase.Firestore.Core.CompositeFilter.FlattenedFilters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.FieldFilter!>?
override Firebase.Firestore.Core.CompositeFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.CompositeFilter.Matches(Firebase.Firestore.Model.IDocument? doc) -> bool
override Firebase.Firestore.Core.CompositeFilter.Operator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.CompositeFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.CompositeFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.DatabaseInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.DocumentViewChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.DocumentViewChange.ThresholdClass.get -> nint
override Firebase.Firestore.Core.DocumentViewChange.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.DocumentViewChange.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.DocumentViewChangeSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.DocumentViewChangeSet.ThresholdClass.get -> nint
override Firebase.Firestore.Core.DocumentViewChangeSet.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.EventManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.EventManager.ListenOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.EventManager.ListenOptions.ThresholdClass.get -> nint
override Firebase.Firestore.Core.EventManager.ListenOptions.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.FieldFilter.CanonicalId.get -> string?
override Firebase.Firestore.Core.FieldFilter.Filters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
override Firebase.Firestore.Core.FieldFilter.FlattenedFilters.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.FieldFilter!>?
override Firebase.Firestore.Core.FieldFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.FieldFilter.Matches(Firebase.Firestore.Model.IDocument? doc) -> bool
override Firebase.Firestore.Core.FieldFilter.Operator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.FieldFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.FieldFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.Filter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.Filter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.Filter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.FirestoreClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.InFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.InFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.InFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.KeyFieldFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.KeyFieldFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.KeyFieldFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.KeyFieldInFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.KeyFieldInFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.KeyFieldInFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.KeyFieldNotInFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.KeyFieldNotInFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.KeyFieldNotInFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.LimboDocumentChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.LimboDocumentChange.ThresholdClass.get -> nint
override Firebase.Firestore.Core.LimboDocumentChange.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.LimboDocumentChange.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ListenSequence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ListenSequence.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ListenSequence.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.MemoryComponentProvider.CreateEventManager(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Core.EventManager?
override Firebase.Firestore.Core.MemoryComponentProvider.CreateGarbageCollectionScheduler(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Local.IScheduler?
override Firebase.Firestore.Core.MemoryComponentProvider.CreateIndexBackfiller(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Local.IndexBackfiller?
override Firebase.Firestore.Core.MemoryComponentProvider.CreateLocalStore(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Local.LocalStore?
override Firebase.Firestore.Core.MemoryComponentProvider.CreatePersistence(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Local.Persistence?
override Firebase.Firestore.Core.MemoryComponentProvider.CreateRemoteStore(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.RemoteStore?
override Firebase.Firestore.Core.MemoryComponentProvider.CreateSyncEngine(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Core.SyncEngine?
override Firebase.Firestore.Core.MemoryComponentProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.MemoryComponentProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Core.MemoryComponentProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.NotInFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.NotInFilter.ThresholdClass.get -> nint
override Firebase.Firestore.Core.NotInFilter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.OnlineState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.OrderBy.Direction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.OrderBy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.OrderBy.ThresholdClass.get -> nint
override Firebase.Firestore.Core.OrderBy.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.Query.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.Query.LimitType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.QueryListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.QueryListener.ThresholdClass.get -> nint
override Firebase.Firestore.Core.QueryListener.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.SQLiteComponentProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.SQLiteComponentProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Core.SQLiteComponentProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.SyncEngine.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.SyncEngine.ThresholdClass.get -> nint
override Firebase.Firestore.Core.SyncEngine.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.Target.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.TargetIdGenerator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.TargetIdGenerator.ThresholdClass.get -> nint
override Firebase.Firestore.Core.TargetIdGenerator.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.Transaction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.Transaction.ThresholdClass.get -> nint
override Firebase.Firestore.Core.Transaction.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.TransactionRunner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.TransactionRunner.ThresholdClass.get -> nint
override Firebase.Firestore.Core.TransactionRunner.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.UserData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ParseAccumulator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ParseAccumulator.ThresholdClass.get -> nint
override Firebase.Firestore.Core.UserData.ParseAccumulator.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.UserData.ParseContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ParseContext.ThresholdClass.get -> nint
override Firebase.Firestore.Core.UserData.ParseContext.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.UserData.ParsedSetData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ParsedSetData.ThresholdClass.get -> nint
override Firebase.Firestore.Core.UserData.ParsedSetData.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.UserData.ParsedUpdateData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ParsedUpdateData.ThresholdClass.get -> nint
override Firebase.Firestore.Core.UserData.ParsedUpdateData.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.UserData.Source.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.UserData.ThresholdClass.get -> nint
override Firebase.Firestore.Core.UserData.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.View.DocumentChanges.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.View.DocumentChanges.ThresholdClass.get -> nint
override Firebase.Firestore.Core.View.DocumentChanges.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.View.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.View.ThresholdClass.get -> nint
override Firebase.Firestore.Core.View.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ViewChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ViewChange.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ViewChange.ThresholdType.get -> System.Type!
override Firebase.Firestore.Core.ViewSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ViewSnapshot.SyncState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Core.ViewSnapshot.ThresholdClass.get -> nint
override Firebase.Firestore.Core.ViewSnapshot.ThresholdType.get -> System.Type!
override Firebase.Firestore.DocumentChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.DocumentChange.ThresholdClass.get -> nint
override Firebase.Firestore.DocumentChange.ThresholdType.get -> System.Type!
override Firebase.Firestore.DocumentChange.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.DocumentReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.DocumentReference.ThresholdClass.get -> nint
override Firebase.Firestore.DocumentReference.ThresholdType.get -> System.Type!
override Firebase.Firestore.DocumentSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.DocumentSnapshot.ThresholdClass.get -> nint
override Firebase.Firestore.DocumentSnapshot.ThresholdType.get -> System.Type!
override Firebase.Firestore.FieldPath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FieldValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FieldValue.ThresholdClass.get -> nint
override Firebase.Firestore.FieldValue.ThresholdType.get -> System.Type!
override Firebase.Firestore.Filter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Filter.ThresholdClass.get -> nint
override Firebase.Firestore.Filter.ThresholdType.get -> System.Type!
override Firebase.Firestore.FirebaseFirestore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirebaseFirestore.ThresholdClass.get -> nint
override Firebase.Firestore.FirebaseFirestore.ThresholdType.get -> System.Type!
override Firebase.Firestore.FirebaseFirestoreException.Code.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirebaseFirestoreException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirebaseFirestoreException.ThresholdClass.get -> nint
override Firebase.Firestore.FirebaseFirestoreException.ThresholdType.get -> System.Type!
override Firebase.Firestore.FirebaseFirestoreKtxRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirebaseFirestoreSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirebaseFirestoreSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirestoreKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirestoreRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.FirestoreRegistrar.ThresholdClass.get -> nint
override Firebase.Firestore.FirestoreRegistrar.ThresholdType.get -> System.Type!
override Firebase.Firestore.GeoPoint.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.GeoPoint.ThresholdClass.get -> nint
override Firebase.Firestore.GeoPoint.ThresholdType.get -> System.Type!
override Firebase.Firestore.Index.DirectionalIndexByteEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.DirectionalIndexByteEncoder.ThresholdClass.get -> nint
override Firebase.Firestore.Index.DirectionalIndexByteEncoder.ThresholdType.get -> System.Type!
override Firebase.Firestore.Index.FirestoreIndexValueWriter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.FirestoreIndexValueWriter.ThresholdClass.get -> nint
override Firebase.Firestore.Index.FirestoreIndexValueWriter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Index.IndexByteEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.IndexByteEncoder.ThresholdClass.get -> nint
override Firebase.Firestore.Index.IndexByteEncoder.ThresholdType.get -> System.Type!
override Firebase.Firestore.Index.IndexEntry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.IndexEntry.ThresholdClass.get -> nint
override Firebase.Firestore.Index.IndexEntry.ThresholdType.get -> System.Type!
override Firebase.Firestore.Index.IntMath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.OrderedCodeWriter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Index.OrderedCodeWriter.ThresholdClass.get -> nint
override Firebase.Firestore.Index.OrderedCodeWriter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Ktx.FirebaseFirestoreKtxRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Ktx.FirestoreKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.ListenSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.LoadBundleTask.AddOnCompleteListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnCompleteListener! onCompleteListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnCompleteListener(Android.Gms.Tasks.IOnCompleteListener! onCompleteListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnCompleteListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnCompleteListener! onCompleteListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnFailureListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnFailureListener! onFailureListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnFailureListener(Android.Gms.Tasks.IOnFailureListener! onFailureListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnFailureListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnFailureListener! onFailureListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnSuccessListener(Android.App.Activity! activity, Android.Gms.Tasks.IOnSuccessListener! onSuccessListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnSuccessListener(Android.Gms.Tasks.IOnSuccessListener! onSuccessListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.AddOnSuccessListener(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IOnSuccessListener! onSuccessListener) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.ContinueWith(Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.ContinueWith(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.ContinueWithTask(Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.ContinueWithTask(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.IContinuation! continuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.Exception.get -> Java.Lang.Exception?
override Firebase.Firestore.LoadBundleTask.GetResult(Java.Lang.Class! exceptionType) -> Java.Lang.Object!
override Firebase.Firestore.LoadBundleTask.IsCanceled.get -> bool
override Firebase.Firestore.LoadBundleTask.IsComplete.get -> bool
override Firebase.Firestore.LoadBundleTask.IsSuccessful.get -> bool
override Firebase.Firestore.LoadBundleTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.LoadBundleTask.OnSuccessTask(Android.Gms.Tasks.ISuccessContinuation! successContinuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.OnSuccessTask(Java.Util.Concurrent.IExecutor! executor, Android.Gms.Tasks.ISuccessContinuation! successContinuation) -> Android.Gms.Tasks.Task!
override Firebase.Firestore.LoadBundleTask.RawResult.get -> Firebase.Firestore.LoadBundleTaskProgress!
override Firebase.Firestore.LoadBundleTask.ThresholdClass.get -> nint
override Firebase.Firestore.LoadBundleTask.ThresholdType.get -> System.Type!
override Firebase.Firestore.LoadBundleTaskProgress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.LoadBundleTaskProgress.TaskState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.IndexBackfiller.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.IndexBackfiller.Scheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.IndexBackfiller.Scheduler.ThresholdClass.get -> nint
override Firebase.Firestore.Local.IndexBackfiller.Scheduler.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.IndexBackfiller.ThresholdClass.get -> nint
override Firebase.Firestore.Local.IndexBackfiller.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.IndexManagerIndexType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LocalDocumentsResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LocalSerializer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LocalStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LocalViewChanges.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.ThresholdClass.get -> nint
override Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.LruGarbageCollector.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LruGarbageCollector.Params.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LruGarbageCollector.Params.ThresholdClass.get -> nint
override Firebase.Firestore.Local.LruGarbageCollector.Params.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.LruGarbageCollector.Results.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.LruGarbageCollector.Results.ThresholdClass.get -> nint
override Firebase.Firestore.Local.LruGarbageCollector.Results.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.LruGarbageCollector.ThresholdClass.get -> nint
override Firebase.Firestore.Local.LruGarbageCollector.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.MemoryDocumentOverlayCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.MemoryDocumentOverlayCache.ThresholdClass.get -> nint
override Firebase.Firestore.Local.MemoryDocumentOverlayCache.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.MemoryOverlayMigrationManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.MemoryOverlayMigrationManager.ThresholdClass.get -> nint
override Firebase.Firestore.Local.MemoryOverlayMigrationManager.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.MemoryPersistence.IsStarted.get -> bool
override Firebase.Firestore.Local.MemoryPersistence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.MemoryPersistence.ReferenceDelegate.get -> Java.Lang.Object?
override Firebase.Firestore.Local.MemoryPersistence.Shutdown() -> void
override Firebase.Firestore.Local.MemoryPersistence.Start() -> void
override Firebase.Firestore.Local.OverlayedDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.OverlayedDocument.ThresholdClass.get -> nint
override Firebase.Firestore.Local.OverlayedDocument.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.Persistence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.Persistence.ThresholdClass.get -> nint
override Firebase.Firestore.Local.Persistence.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.QueryContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.QueryContext.ThresholdClass.get -> nint
override Firebase.Firestore.Local.QueryContext.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.QueryEngine.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.QueryEngine.ThresholdClass.get -> nint
override Firebase.Firestore.Local.QueryEngine.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.QueryPurpose.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.QueryResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.QueryResult.ThresholdClass.get -> nint
override Firebase.Firestore.Local.QueryResult.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.ReferenceSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.ReferenceSet.ThresholdClass.get -> nint
override Firebase.Firestore.Local.ReferenceSet.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.SQLiteDocumentOverlayCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.SQLiteDocumentOverlayCache.ThresholdClass.get -> nint
override Firebase.Firestore.Local.SQLiteDocumentOverlayCache.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.SQLiteGlobalsCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.SQLiteGlobalsCache.ThresholdClass.get -> nint
override Firebase.Firestore.Local.SQLiteGlobalsCache.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.SQLiteOverlayMigrationManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.SQLiteOverlayMigrationManager.ThresholdClass.get -> nint
override Firebase.Firestore.Local.SQLiteOverlayMigrationManager.ThresholdType.get -> System.Type!
override Firebase.Firestore.Local.SQLitePersistence.IsStarted.get -> bool
override Firebase.Firestore.Local.SQLitePersistence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Local.SQLitePersistence.ReferenceDelegate.get -> Java.Lang.Object?
override Firebase.Firestore.Local.SQLitePersistence.Shutdown() -> void
override Firebase.Firestore.Local.SQLitePersistence.Start() -> void
override Firebase.Firestore.Local.TargetData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryCacheSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryCacheSettings.Builder.ThresholdClass.get -> nint
override Firebase.Firestore.MemoryCacheSettings.Builder.ThresholdType.get -> System.Type!
override Firebase.Firestore.MemoryCacheSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryEagerGcSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryEagerGcSettings.Builder.ThresholdClass.get -> nint
override Firebase.Firestore.MemoryEagerGcSettings.Builder.ThresholdType.get -> System.Type!
override Firebase.Firestore.MemoryEagerGcSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryLruGcSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MemoryLruGcSettings.Builder.ThresholdClass.get -> nint
override Firebase.Firestore.MemoryLruGcSettings.Builder.ThresholdType.get -> System.Type!
override Firebase.Firestore.MemoryLruGcSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.MetadataChanges.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.BasePath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.BasePath.ThresholdClass.get -> nint
override Firebase.Firestore.Model.BasePath.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.DatabaseId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.DocumentCollections.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.DocumentCollections.ThresholdClass.get -> nint
override Firebase.Firestore.Model.DocumentCollections.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.DocumentKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.DocumentSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.IndexOffset.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.IndexOffset.ThresholdClass.get -> nint
override Firebase.Firestore.Model.FieldIndex.IndexOffset.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.FieldIndex.IndexState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.IndexState.ThresholdClass.get -> nint
override Firebase.Firestore.Model.FieldIndex.IndexState.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.FieldIndex.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.Segment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.Segment.Kind.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.FieldIndex.Segment.ThresholdClass.get -> nint
override Firebase.Firestore.Model.FieldIndex.Segment.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.FieldIndex.ThresholdClass.get -> nint
override Firebase.Firestore.Model.FieldIndex.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.FieldPath.CanonicalString() -> string?
override Firebase.Firestore.Model.FieldPath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.MutableDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.Apply(Google.Firestore.V1.Value? previousValue) -> Google.Firestore.V1.Value?
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Remove.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.Apply(Google.Firestore.V1.Value? previousValue) -> Google.Firestore.V1.Value?
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Union.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.DeleteMutation.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.FieldMask? previousMask, Firebase.Timestamp? localWriteTime) -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.DeleteMutation.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.MutationResult? mutationResult) -> void
override Firebase.Firestore.Model.Mutation.DeleteMutation.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.DeleteMutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.FieldMask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.FieldTransform.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.Mutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.Mutation.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.Mutation.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.MutationBatch.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.MutationBatchResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.MutationResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.Overlay.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.Overlay.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.Overlay.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.PatchMutation.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.FieldMask? previousMask, Firebase.Timestamp? localWriteTime) -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.PatchMutation.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.MutationResult? mutationResult) -> void
override Firebase.Firestore.Model.Mutation.PatchMutation.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.PatchMutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.Precondition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ServerTimestampOperation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Mutation.SetMutation.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.FieldMask? previousMask, Firebase.Timestamp? localWriteTime) -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.SetMutation.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.MutationResult? mutationResult) -> void
override Firebase.Firestore.Model.Mutation.SetMutation.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.SetMutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Mutation.VerifyMutation.ApplyToLocalView(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.FieldMask? previousMask, Firebase.Timestamp? localWriteTime) -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.VerifyMutation.ApplyToRemoteDocument(Firebase.Firestore.Model.MutableDocument? document, Firebase.Firestore.Model.Mutation.MutationResult? mutationResult) -> void
override Firebase.Firestore.Model.Mutation.VerifyMutation.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
override Firebase.Firestore.Model.Mutation.VerifyMutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.ObjectValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.ResourcePath.CanonicalString() -> string?
override Firebase.Firestore.Model.ResourcePath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.ServerTimestamps.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.SnapshotVersion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.TargetIndexMatcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.TargetIndexMatcher.ThresholdClass.get -> nint
override Firebase.Firestore.Model.TargetIndexMatcher.ThresholdType.get -> System.Type!
override Firebase.Firestore.Model.Values.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Model.Values.ThresholdClass.get -> nint
override Firebase.Firestore.Model.Values.ThresholdType.get -> System.Type!
override Firebase.Firestore.PersistentCacheIndexManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.PersistentCacheSettings.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.PersistentCacheSettings.Builder.ThresholdClass.get -> nint
override Firebase.Firestore.PersistentCacheSettings.Builder.ThresholdType.get -> System.Type!
override Firebase.Firestore.PersistentCacheSettings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MaybeDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MaybeDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MaybeDocumentOuterClass.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.Mutation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MutationQueue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.MutationQueue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.NoDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.NoDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.Target.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.Target.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.Target.TargetTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.TargetGlobal.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.TargetGlobal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.TargetOuterClass.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.UnknownDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.UnknownDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.WriteBatch.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Proto.WriteBatch.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Query.Direction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Query.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Query.ThresholdClass.get -> nint
override Firebase.Firestore.Query.ThresholdType.get -> System.Type!
override Firebase.Firestore.QueryDocumentSnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.QueryDocumentSnapshot.ThresholdClass.get -> nint
override Firebase.Firestore.QueryDocumentSnapshot.ThresholdType.get -> System.Type!
override Firebase.Firestore.QuerySnapshot.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.QuerySnapshot.ThresholdClass.get -> nint
override Firebase.Firestore.QuerySnapshot.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.BloomFilter.BloomFilterCreateException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.BloomFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.Datastore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.Datastore.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.Datastore.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.ExistenceFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.FirestoreChannel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.FirestoreChannel.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.FirestoreChannel.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.GrpcCallProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.GrpcCallProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.GrpcCallProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.RemoteComponenetProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.RemoteComponenetProvider.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.RemoteComponenetProvider.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.RemoteEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.RemoteSerializer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.RemoteStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.StreamState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.TargetChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChange.DocumentChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChange.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.WatchChange.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.WatchChange.WatchTargetChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChangeAggregator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchChangeAggregator.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.WatchChangeAggregator.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.WatchStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WatchStream.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.WatchStream.ThresholdType.get -> System.Type!
override Firebase.Firestore.Remote.WriteStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Remote.WriteStream.ThresholdClass.get -> nint
override Firebase.Firestore.Remote.WriteStream.ThresholdType.get -> System.Type!
override Firebase.Firestore.SetOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.SnapshotListenOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.SnapshotListenOptions.Builder.ThresholdClass.get -> nint
override Firebase.Firestore.SnapshotListenOptions.Builder.ThresholdType.get -> System.Type!
override Firebase.Firestore.SnapshotListenOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.SnapshotMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.SnapshotMetadata.ThresholdClass.get -> nint
override Firebase.Firestore.SnapshotMetadata.ThresholdType.get -> System.Type!
override Firebase.Firestore.Source.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Transaction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Transaction.ThresholdClass.get -> nint
override Firebase.Firestore.Transaction.ThresholdType.get -> System.Type!
override Firebase.Firestore.TransactionOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.TransactionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.UserDataReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.UserDataWriter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.UserDataWriter.ThresholdClass.get -> nint
override Firebase.Firestore.UserDataWriter.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.ApiUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.ApiUtil.ThresholdClass.get -> nint
override Firebase.Firestore.Util.ApiUtil.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.Assert.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.Assert.ThresholdClass.get -> nint
override Firebase.Firestore.Util.Assert.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.AsyncQueue.DelayedTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.AsyncQueue.DelayedTask.ThresholdClass.get -> nint
override Firebase.Firestore.Util.AsyncQueue.DelayedTask.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.AsyncQueue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.AsyncQueue.ThresholdClass.get -> nint
override Firebase.Firestore.Util.AsyncQueue.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.AsyncQueue.TimerId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.BackgroundQueue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.BackgroundQueue.ThresholdClass.get -> nint
override Firebase.Firestore.Util.BackgroundQueue.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.ByteBufferInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.ByteBufferInputStream.Read() -> int
override Firebase.Firestore.Util.ByteBufferInputStream.ThresholdClass.get -> nint
override Firebase.Firestore.Util.ByteBufferInputStream.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.CustomClassMapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.CustomClassMapper.ThresholdClass.get -> nint
override Firebase.Firestore.Util.CustomClassMapper.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.Executors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.ExponentialBackoff.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.ExponentialBackoff.ThresholdClass.get -> nint
override Firebase.Firestore.Util.ExponentialBackoff.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.FileUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.FileUtil.ThresholdClass.get -> nint
override Firebase.Firestore.Util.FileUtil.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.Logger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.Logger.Level.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.Logger.ThresholdClass.get -> nint
override Firebase.Firestore.Util.Logger.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.LogicUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.LogicUtils.ThresholdClass.get -> nint
override Firebase.Firestore.Util.LogicUtils.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.Preconditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.Preconditions.ThresholdClass.get -> nint
override Firebase.Firestore.Util.Preconditions.ThresholdType.get -> System.Type!
override Firebase.Firestore.Util.Util.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.Util.Util.ThresholdClass.get -> nint
override Firebase.Firestore.Util.Util.ThresholdType.get -> System.Type!
override Firebase.Firestore.VectorValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.VectorValue.ThresholdClass.get -> nint
override Firebase.Firestore.VectorValue.ThresholdType.get -> System.Type!
override Firebase.Firestore.WriteBatch.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Firestore.WriteBatch.ThresholdClass.get -> nint
override Firebase.Firestore.WriteBatch.ThresholdType.get -> System.Type!
override Firestore.Admin.V1.Index.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.IndexField.ArrayConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.IndexField.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.IndexField.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.IndexField.Order.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.IndexField.ValueModeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.QueryScope.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.Index.State.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Admin.V1.IndexProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleElement.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleElement.ElementTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleElement.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundleProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledDocumentMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledDocumentMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledQuery.LimitType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.BundledQuery.QueryTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.NamedQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firestore.Bundle.NamedQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.AggregationResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.AggregationResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.AggregationResultProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ArrayValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ArrayValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BeginTransactionRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BeginTransactionRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BeginTransactionResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BeginTransactionResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BitSequence.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BitSequence.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BloomFilter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BloomFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.BloomFilterProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CommitRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CommitRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CommitResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CommitResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CommonProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CreateDocumentRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.CreateDocumentRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Cursor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Cursor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DeleteDocumentRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DeleteDocumentRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Document.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Document.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentChange.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentDelete.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentDelete.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentMask.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentMask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentRemove.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentRemove.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.FieldTransform.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.FieldTransform.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.DocumentTransform.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ExistenceFilter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ExistenceFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.ThresholdClass.get -> nint
override Google.Firestore.V1.FirestoreGrpc.FirestoreImplBase.ThresholdType.get -> System.Type!
override Google.Firestore.V1.FirestoreGrpc.FirestoreStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreGrpc.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.FirestoreProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.GetDocumentRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.GetDocumentRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListCollectionIdsRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListCollectionIdsRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListCollectionIdsResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListCollectionIdsResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListDocumentsRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListDocumentsRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListDocumentsResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListDocumentsResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenRequest.TargetChangeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.ListenResponse.ResponseTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.MapValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.MapValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Precondition.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Precondition.ConditionTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Precondition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.QueryProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RollbackRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RollbackRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunAggregationQueryResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryRequest.QueryTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.RunQueryResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.CollectionSelector.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.CompositeFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Direction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.FieldFilter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.FieldFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.FieldReference.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.FieldReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Filter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Filter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Order.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Order.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Projection.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.Projection.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.UnaryFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.DocumentsTarget.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.DocumentsTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.QueryTarget.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.QueryTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.ResumeTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Target.TargetTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TargetChange.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TargetChange.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TargetChange.TargetChangeType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ModeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ReadOnly.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ReadOnly.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ReadWrite.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.TransactionOptions.ReadWrite.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.UpdateDocumentRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.UpdateDocumentRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Value.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Value.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Value.ValueTypeCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Write.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Write.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.Write.OperationCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteProto.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteResponse.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteResponse.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteResult.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Google.Firestore.V1.WriteResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Firebase.Firestore.Core.ViewSnapshot.Equals(Java.Lang.Object? o) -> bool
override sealed Firebase.Firestore.Model.BasePath.Equals(Java.Lang.Object? o) -> bool
static Firebase.Firestore.AggregateField.Average(Firebase.Firestore.FieldPath! fieldPath) -> Firebase.Firestore.AggregateField.AverageAggregateField!
static Firebase.Firestore.AggregateField.Average(string! field) -> Firebase.Firestore.AggregateField.AverageAggregateField!
static Firebase.Firestore.AggregateField.Count() -> Firebase.Firestore.AggregateField.CountAggregateField!
static Firebase.Firestore.AggregateField.Sum(Firebase.Firestore.FieldPath! fieldPath) -> Firebase.Firestore.AggregateField.SumAggregateField!
static Firebase.Firestore.AggregateField.Sum(string! field) -> Firebase.Firestore.AggregateField.SumAggregateField!
static Firebase.Firestore.AggregateSource.Server.get -> Firebase.Firestore.AggregateSource?
static Firebase.Firestore.AggregateSource.ValueOf(string? name) -> Firebase.Firestore.AggregateSource?
static Firebase.Firestore.AggregateSource.Values() -> Firebase.Firestore.AggregateSource![]?
static Firebase.Firestore.Auth.User.Unauthenticated.get -> Firebase.Firestore.Auth.User?
static Firebase.Firestore.Blob.FromByteString(Xamarin.Protobuf.Lite.ByteString! bytes) -> Firebase.Firestore.Blob!
static Firebase.Firestore.Blob.FromBytes(byte[]! bytes) -> Firebase.Firestore.Blob!
static Firebase.Firestore.Core.ActivityScope.Bind(Android.App.Activity? activity, Firebase.Firestore.IListenerRegistration? registration) -> Firebase.Firestore.IListenerRegistration?
static Firebase.Firestore.Core.ComponentProvider.DefaultFactory(Firebase.Firestore.FirebaseFirestoreSettings! settings) -> Firebase.Firestore.Core.ComponentProvider!
static Firebase.Firestore.Core.CompositeFilter.Operator.And.get -> Firebase.Firestore.Core.CompositeFilter.Operator?
static Firebase.Firestore.Core.CompositeFilter.Operator.Or.get -> Firebase.Firestore.Core.CompositeFilter.Operator?
static Firebase.Firestore.Core.CompositeFilter.Operator.ValueOf(string? name) -> Firebase.Firestore.Core.CompositeFilter.Operator?
static Firebase.Firestore.Core.CompositeFilter.Operator.Values() -> Firebase.Firestore.Core.CompositeFilter.Operator![]?
static Firebase.Firestore.Core.DocumentViewChange.Create(Firebase.Firestore.Core.DocumentViewChange.Type? type, Firebase.Firestore.Model.IDocument? document) -> Firebase.Firestore.Core.DocumentViewChange?
static Firebase.Firestore.Core.DocumentViewChange.Type.Added.get -> Firebase.Firestore.Core.DocumentViewChange.Type?
static Firebase.Firestore.Core.DocumentViewChange.Type.Metadata.get -> Firebase.Firestore.Core.DocumentViewChange.Type?
static Firebase.Firestore.Core.DocumentViewChange.Type.Modified.get -> Firebase.Firestore.Core.DocumentViewChange.Type?
static Firebase.Firestore.Core.DocumentViewChange.Type.Removed.get -> Firebase.Firestore.Core.DocumentViewChange.Type?
static Firebase.Firestore.Core.DocumentViewChange.Type.ValueOf(string? name) -> Firebase.Firestore.Core.DocumentViewChange.Type?
static Firebase.Firestore.Core.DocumentViewChange.Type.Values() -> Firebase.Firestore.Core.DocumentViewChange.Type![]?
static Firebase.Firestore.Core.FieldFilter.Create(Firebase.Firestore.Model.FieldPath? path, Firebase.Firestore.Core.FieldFilter.Operator? operator, Google.Firestore.V1.Value? value) -> Firebase.Firestore.Core.FieldFilter?
static Firebase.Firestore.Core.FieldFilter.Operator.ArrayContains.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.ArrayContainsAny.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.Equal.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.GreaterThan.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.GreaterThanOrEqual.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.In.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.LessThan.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.LessThanOrEqual.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.NotEqual.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.NotIn.get -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.ValueOf(string? name) -> Firebase.Firestore.Core.FieldFilter.Operator?
static Firebase.Firestore.Core.FieldFilter.Operator.Values() -> Firebase.Firestore.Core.FieldFilter.Operator![]?
static Firebase.Firestore.Core.LimboDocumentChange.Type.Added.get -> Firebase.Firestore.Core.LimboDocumentChange.Type?
static Firebase.Firestore.Core.LimboDocumentChange.Type.Removed.get -> Firebase.Firestore.Core.LimboDocumentChange.Type?
static Firebase.Firestore.Core.LimboDocumentChange.Type.ValueOf(string? name) -> Firebase.Firestore.Core.LimboDocumentChange.Type?
static Firebase.Firestore.Core.LimboDocumentChange.Type.Values() -> Firebase.Firestore.Core.LimboDocumentChange.Type![]?
static Firebase.Firestore.Core.OnlineState.Offline.get -> Firebase.Firestore.Core.OnlineState?
static Firebase.Firestore.Core.OnlineState.Online.get -> Firebase.Firestore.Core.OnlineState?
static Firebase.Firestore.Core.OnlineState.Unknown.get -> Firebase.Firestore.Core.OnlineState?
static Firebase.Firestore.Core.OnlineState.ValueOf(string? name) -> Firebase.Firestore.Core.OnlineState?
static Firebase.Firestore.Core.OnlineState.Values() -> Firebase.Firestore.Core.OnlineState![]?
static Firebase.Firestore.Core.OrderBy.Direction.Ascending.get -> Firebase.Firestore.Core.OrderBy.Direction?
static Firebase.Firestore.Core.OrderBy.Direction.Descending.get -> Firebase.Firestore.Core.OrderBy.Direction?
static Firebase.Firestore.Core.OrderBy.Direction.ValueOf(string? name) -> Firebase.Firestore.Core.OrderBy.Direction?
static Firebase.Firestore.Core.OrderBy.Direction.Values() -> Firebase.Firestore.Core.OrderBy.Direction![]?
static Firebase.Firestore.Core.OrderBy.GetInstance(Firebase.Firestore.Core.OrderBy.Direction? direction, Firebase.Firestore.Model.FieldPath? path) -> Firebase.Firestore.Core.OrderBy?
static Firebase.Firestore.Core.Query.AtPath(Firebase.Firestore.Model.ResourcePath? path) -> Firebase.Firestore.Core.Query?
static Firebase.Firestore.Core.Query.LimitType.LimitToFirst.get -> Firebase.Firestore.Core.Query.LimitType?
static Firebase.Firestore.Core.Query.LimitType.LimitToLast.get -> Firebase.Firestore.Core.Query.LimitType?
static Firebase.Firestore.Core.Query.LimitType.ValueOf(string? name) -> Firebase.Firestore.Core.Query.LimitType?
static Firebase.Firestore.Core.Query.LimitType.Values() -> Firebase.Firestore.Core.Query.LimitType![]?
static Firebase.Firestore.Core.TargetIdGenerator.ForSyncEngine() -> Firebase.Firestore.Core.TargetIdGenerator?
static Firebase.Firestore.Core.TargetIdGenerator.ForTargetCache(int after) -> Firebase.Firestore.Core.TargetIdGenerator?
static Firebase.Firestore.Core.Transaction.DefaultExecutor.get -> Java.Util.Concurrent.IExecutor?
static Firebase.Firestore.Core.UserData.Source.Argument.get -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.ArrayArgument.get -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.MergeSet.get -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.Set.get -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.Update.get -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.ValueOf(string? name) -> Firebase.Firestore.Core.UserData.Source?
static Firebase.Firestore.Core.UserData.Source.Values() -> Firebase.Firestore.Core.UserData.Source![]?
static Firebase.Firestore.Core.ViewSnapshot.FromInitialDocuments(Firebase.Firestore.Core.Query? query, Firebase.Firestore.Model.DocumentSet? documents, Firebase.Database.Collection.ImmutableSortedSet? mutatedKeys, bool fromCache, bool excludesMetadataChanges, bool hasCachedResults) -> Firebase.Firestore.Core.ViewSnapshot?
static Firebase.Firestore.Core.ViewSnapshot.SyncState.Local.get -> Firebase.Firestore.Core.ViewSnapshot.SyncState?
static Firebase.Firestore.Core.ViewSnapshot.SyncState.None.get -> Firebase.Firestore.Core.ViewSnapshot.SyncState?
static Firebase.Firestore.Core.ViewSnapshot.SyncState.Synced.get -> Firebase.Firestore.Core.ViewSnapshot.SyncState?
static Firebase.Firestore.Core.ViewSnapshot.SyncState.ValueOf(string? name) -> Firebase.Firestore.Core.ViewSnapshot.SyncState?
static Firebase.Firestore.Core.ViewSnapshot.SyncState.Values() -> Firebase.Firestore.Core.ViewSnapshot.SyncState![]?
static Firebase.Firestore.DocumentChange.Type.Added.get -> Firebase.Firestore.DocumentChange.Type?
static Firebase.Firestore.DocumentChange.Type.Modified.get -> Firebase.Firestore.DocumentChange.Type?
static Firebase.Firestore.DocumentChange.Type.Removed.get -> Firebase.Firestore.DocumentChange.Type?
static Firebase.Firestore.DocumentChange.Type.ValueOf(string? name) -> Firebase.Firestore.DocumentChange.Type?
static Firebase.Firestore.DocumentChange.Type.Values() -> Firebase.Firestore.DocumentChange.Type![]?
static Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.Estimate.get -> Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior?
static Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.None.get -> Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior?
static Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.Previous.get -> Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior?
static Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.ValueOf(string? name) -> Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior?
static Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior.Values() -> Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior![]?
static Firebase.Firestore.FieldPath.DocumentId() -> Firebase.Firestore.FieldPath!
static Firebase.Firestore.FieldPath.Of(params string![]? fieldNames) -> Firebase.Firestore.FieldPath!
static Firebase.Firestore.FieldValue.ArrayRemove(params Java.Lang.Object![]? elements) -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.ArrayUnion(params Java.Lang.Object![]? elements) -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.Delete() -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.Increment(double l) -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.Increment(long l) -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.ServerTimestamp() -> Firebase.Firestore.FieldValue!
static Firebase.Firestore.FieldValue.Vector(double[]! values) -> Firebase.Firestore.VectorValue!
static Firebase.Firestore.Filter.And(params Firebase.Firestore.Filter![]? filters) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.ArrayContains(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.ArrayContains(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.ArrayContainsAny(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.ArrayContainsAny(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.EqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.EqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.GreaterThan(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.GreaterThan(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.GreaterThanOrEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.GreaterThanOrEqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.InArray(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.InArray(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.LessThan(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.LessThan(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.LessThanOrEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.LessThanOrEqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.NotEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.NotEqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.NotInArray(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.NotInArray(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Filter!
static Firebase.Firestore.Filter.Or(params Firebase.Firestore.Filter![]? filters) -> Firebase.Firestore.Filter!
static Firebase.Firestore.FirebaseFirestore.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirebaseFirestore.GetInstance(Firebase.FirebaseApp! app, string! database) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirebaseFirestore.GetInstance(string! database) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirebaseFirestore.Instance.get -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirebaseFirestore.SetLoggingEnabled(bool loggingEnabled) -> void
static Firebase.Firestore.FirebaseFirestoreException.Code.Aborted.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.AlreadyExists.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Cancelled.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.DataLoss.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.DeadlineExceeded.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.FailedPrecondition.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.FromValue(int value) -> Firebase.Firestore.FirebaseFirestoreException.Code!
static Firebase.Firestore.FirebaseFirestoreException.Code.Internal.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.InvalidArgument.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.NotFound.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Ok.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.OutOfRange.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.PermissionDenied.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.ResourceExhausted.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Unauthenticated.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Unavailable.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Unimplemented.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Unknown.get -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.ValueOf(string? name) -> Firebase.Firestore.FirebaseFirestoreException.Code?
static Firebase.Firestore.FirebaseFirestoreException.Code.Values() -> Firebase.Firestore.FirebaseFirestoreException.Code![]?
static Firebase.Firestore.FirestoreKt.Firestore(Firebase.Firebase! obj, Firebase.FirebaseApp! app) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirestoreKt.Firestore(Firebase.Firebase! obj, Firebase.FirebaseApp! app, string! database) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirestoreKt.Firestore(Firebase.Firebase! obj, string! database) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirestoreKt.FirestoreSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.FirebaseFirestoreSettings!
static Firebase.Firestore.FirestoreKt.GetFirestore(Firebase.Firebase! obj) -> Firebase.Firestore.FirebaseFirestore!
static Firebase.Firestore.FirestoreKt.MemoryCacheSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryCacheSettings!
static Firebase.Firestore.FirestoreKt.MemoryEagerGcSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryEagerGcSettings!
static Firebase.Firestore.FirestoreKt.MemoryLruGcSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryLruGcSettings!
static Firebase.Firestore.FirestoreKt.PersistentCacheSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.PersistentCacheSettings!
static Firebase.Firestore.FirestoreKt.Snapshots(Firebase.Firestore.DocumentReference! obj, Firebase.Firestore.MetadataChanges! metadataChanges) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Firebase.Firestore.FirestoreKt.Snapshots(Firebase.Firestore.Query! obj, Firebase.Firestore.MetadataChanges! metadataChanges) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Firebase.Firestore.Index.FirestoreIndexValueWriter.Instance.get -> Firebase.Firestore.Index.FirestoreIndexValueWriter?
static Firebase.Firestore.Index.IndexEntry.Create(int indexId, Firebase.Firestore.Model.DocumentKey? documentKey, byte[]? arrayValue, byte[]? directionalValue) -> Firebase.Firestore.Index.IndexEntry?
static Firebase.Firestore.Index.IntMath.Divide(int p, int q, Java.Math.RoundingMode? mode) -> int
static Firebase.Firestore.Ktx.FirestoreKt.FirestoreSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.FirebaseFirestoreSettings!
static Firebase.Firestore.Ktx.FirestoreKt.MemoryCacheSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryCacheSettings!
static Firebase.Firestore.Ktx.FirestoreKt.MemoryEagerGcSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryEagerGcSettings!
static Firebase.Firestore.Ktx.FirestoreKt.MemoryLruGcSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.MemoryLruGcSettings!
static Firebase.Firestore.Ktx.FirestoreKt.PersistentCacheSettings(Kotlin.Jvm.Functions.IFunction1! init) -> Firebase.Firestore.PersistentCacheSettings!
static Firebase.Firestore.Ktx.FirestoreKt.Snapshots(Firebase.Firestore.DocumentReference! obj, Firebase.Firestore.MetadataChanges! metadataChanges) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Firebase.Firestore.Ktx.FirestoreKt.Snapshots(Firebase.Firestore.Query! obj, Firebase.Firestore.MetadataChanges! metadataChanges) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Firebase.Firestore.ListenSource.Cache.get -> Firebase.Firestore.ListenSource?
static Firebase.Firestore.ListenSource.Default.get -> Firebase.Firestore.ListenSource?
static Firebase.Firestore.ListenSource.ValueOf(string? name) -> Firebase.Firestore.ListenSource?
static Firebase.Firestore.ListenSource.Values() -> Firebase.Firestore.ListenSource![]?
static Firebase.Firestore.LoadBundleTaskProgress.ForInitial(Firebase.Firestore.Bundle.BundleMetadata! bundleMetadata) -> Firebase.Firestore.LoadBundleTaskProgress!
static Firebase.Firestore.LoadBundleTaskProgress.ForSuccess(Firebase.Firestore.Bundle.BundleMetadata! bundleMetadata) -> Firebase.Firestore.LoadBundleTaskProgress!
static Firebase.Firestore.LoadBundleTaskProgress.TaskState.Error.get -> Firebase.Firestore.LoadBundleTaskProgress.TaskState?
static Firebase.Firestore.LoadBundleTaskProgress.TaskState.Running.get -> Firebase.Firestore.LoadBundleTaskProgress.TaskState?
static Firebase.Firestore.LoadBundleTaskProgress.TaskState.Success.get -> Firebase.Firestore.LoadBundleTaskProgress.TaskState?
static Firebase.Firestore.LoadBundleTaskProgress.TaskState.ValueOf(string? name) -> Firebase.Firestore.LoadBundleTaskProgress.TaskState?
static Firebase.Firestore.LoadBundleTaskProgress.TaskState.Values() -> Firebase.Firestore.LoadBundleTaskProgress.TaskState![]?
static Firebase.Firestore.Local.IndexManagerIndexType.Full.get -> Firebase.Firestore.Local.IndexManagerIndexType?
static Firebase.Firestore.Local.IndexManagerIndexType.None.get -> Firebase.Firestore.Local.IndexManagerIndexType?
static Firebase.Firestore.Local.IndexManagerIndexType.Partial.get -> Firebase.Firestore.Local.IndexManagerIndexType?
static Firebase.Firestore.Local.IndexManagerIndexType.ValueOf(string? name) -> Firebase.Firestore.Local.IndexManagerIndexType?
static Firebase.Firestore.Local.IndexManagerIndexType.Values() -> Firebase.Firestore.Local.IndexManagerIndexType![]?
static Firebase.Firestore.Local.LocalDocumentsResult.FromOverlayedDocuments(int batchId, System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Local.OverlayedDocument!>? overlays) -> Firebase.Firestore.Local.LocalDocumentsResult?
static Firebase.Firestore.Local.LocalViewChanges.FromViewSnapshot(int targetId, Firebase.Firestore.Core.ViewSnapshot? snapshot) -> Firebase.Firestore.Local.LocalViewChanges?
static Firebase.Firestore.Local.LruGarbageCollector.Params.Default() -> Firebase.Firestore.Local.LruGarbageCollector.Params?
static Firebase.Firestore.Local.LruGarbageCollector.Params.Disabled() -> Firebase.Firestore.Local.LruGarbageCollector.Params?
static Firebase.Firestore.Local.LruGarbageCollector.Params.WithCacheSizeBytes(long cacheSizeBytes) -> Firebase.Firestore.Local.LruGarbageCollector.Params?
static Firebase.Firestore.Local.MemoryPersistence.CreateEagerGcMemoryPersistence() -> Firebase.Firestore.Local.MemoryPersistence?
static Firebase.Firestore.Local.MemoryPersistence.CreateLruGcMemoryPersistence(Firebase.Firestore.Local.LruGarbageCollector.Params? params, Firebase.Firestore.Local.LocalSerializer? serializer) -> Firebase.Firestore.Local.MemoryPersistence?
static Firebase.Firestore.Local.Persistence.DataMigrationBuildOverlays.get -> string?
static Firebase.Firestore.Local.Persistence.DataMigrationBuildOverlays.set -> void
static Firebase.Firestore.Local.QueryPurpose.ExistenceFilterMismatch.get -> Firebase.Firestore.Local.QueryPurpose?
static Firebase.Firestore.Local.QueryPurpose.ExistenceFilterMismatchBloom.get -> Firebase.Firestore.Local.QueryPurpose?
static Firebase.Firestore.Local.QueryPurpose.LimboResolution.get -> Firebase.Firestore.Local.QueryPurpose?
static Firebase.Firestore.Local.QueryPurpose.Listen.get -> Firebase.Firestore.Local.QueryPurpose?
static Firebase.Firestore.Local.QueryPurpose.ValueOf(string? name) -> Firebase.Firestore.Local.QueryPurpose?
static Firebase.Firestore.Local.QueryPurpose.Values() -> Firebase.Firestore.Local.QueryPurpose![]?
static Firebase.Firestore.Local.SQLitePersistence.ClearPersistence(Android.Content.Context? context, Firebase.Firestore.Model.DatabaseId? databaseId, string? persistenceKey) -> void
static Firebase.Firestore.Local.SQLitePersistence.DatabaseName(string? persistenceKey, Firebase.Firestore.Model.DatabaseId? databaseId) -> string?
static Firebase.Firestore.MemoryCacheSettings.NewBuilder() -> Firebase.Firestore.MemoryCacheSettings.Builder!
static Firebase.Firestore.MemoryEagerGcSettings.NewBuilder() -> Firebase.Firestore.MemoryEagerGcSettings.Builder!
static Firebase.Firestore.MemoryLruGcSettings.NewBuilder() -> Firebase.Firestore.MemoryLruGcSettings.Builder!
static Firebase.Firestore.MetadataChanges.Exclude.get -> Firebase.Firestore.MetadataChanges?
static Firebase.Firestore.MetadataChanges.Include.get -> Firebase.Firestore.MetadataChanges?
static Firebase.Firestore.MetadataChanges.ValueOf(string? name) -> Firebase.Firestore.MetadataChanges?
static Firebase.Firestore.MetadataChanges.Values() -> Firebase.Firestore.MetadataChanges![]?
static Firebase.Firestore.Model.DatabaseId.Empty.get -> Firebase.Firestore.Model.DatabaseId?
static Firebase.Firestore.Model.DatabaseId.ForDatabase(string? projectId, string? databaseId) -> Firebase.Firestore.Model.DatabaseId?
static Firebase.Firestore.Model.DatabaseId.ForProject(string? projectId) -> Firebase.Firestore.Model.DatabaseId?
static Firebase.Firestore.Model.DatabaseId.FromName(string? name) -> Firebase.Firestore.Model.DatabaseId?
static Firebase.Firestore.Model.Document.KeyComparator.get -> Java.Util.IComparator?
static Firebase.Firestore.Model.DocumentCollections.EmptyDocumentMap() -> Firebase.Database.Collection.ImmutableSortedMap?
static Firebase.Firestore.Model.DocumentCollections.EmptyMutableDocumentMap() -> Firebase.Database.Collection.ImmutableSortedMap?
static Firebase.Firestore.Model.DocumentCollections.EmptyVersionMap() -> Firebase.Database.Collection.ImmutableSortedMap?
static Firebase.Firestore.Model.DocumentKey.Comparator() -> Java.Util.IComparator?
static Firebase.Firestore.Model.DocumentKey.Empty() -> Firebase.Firestore.Model.DocumentKey?
static Firebase.Firestore.Model.DocumentKey.EmptyKeySet() -> Firebase.Database.Collection.ImmutableSortedSet?
static Firebase.Firestore.Model.DocumentKey.FromName(string? name) -> Firebase.Firestore.Model.DocumentKey?
static Firebase.Firestore.Model.DocumentKey.FromPath(Firebase.Firestore.Model.ResourcePath? path) -> Firebase.Firestore.Model.DocumentKey?
static Firebase.Firestore.Model.DocumentKey.FromPathString(string? path) -> Firebase.Firestore.Model.DocumentKey?
static Firebase.Firestore.Model.DocumentKey.FromSegments(System.Collections.Generic.IList<string!>? segments) -> Firebase.Firestore.Model.DocumentKey?
static Firebase.Firestore.Model.DocumentKey.IsDocumentKey(Firebase.Firestore.Model.ResourcePath? path) -> bool
static Firebase.Firestore.Model.DocumentSet.EmptySet(Java.Util.IComparator? comparator) -> Firebase.Firestore.Model.DocumentSet?
static Firebase.Firestore.Model.FieldIndex.Create(int indexId, string? collectionGroup, System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex.Segment!>? segments, Firebase.Firestore.Model.FieldIndex.IndexState? indexState) -> Firebase.Firestore.Model.FieldIndex?
static Firebase.Firestore.Model.FieldIndex.IndexOffset.Create(Firebase.Firestore.Model.SnapshotVersion? readTime, Firebase.Firestore.Model.DocumentKey? key, int largestBatchId) -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
static Firebase.Firestore.Model.FieldIndex.IndexOffset.CreateSuccessor(Firebase.Firestore.Model.SnapshotVersion? readTime, int largestBatchId) -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
static Firebase.Firestore.Model.FieldIndex.IndexOffset.DocumentComparator.get -> Java.Util.IComparator?
static Firebase.Firestore.Model.FieldIndex.IndexOffset.FromDocument(Firebase.Firestore.Model.IDocument? document) -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
static Firebase.Firestore.Model.FieldIndex.IndexOffset.None.get -> Firebase.Firestore.Model.FieldIndex.IndexOffset?
static Firebase.Firestore.Model.FieldIndex.IndexState.Create(long sequenceNumber, Firebase.Firestore.Model.FieldIndex.IndexOffset? offset) -> Firebase.Firestore.Model.FieldIndex.IndexState?
static Firebase.Firestore.Model.FieldIndex.IndexState.Create(long sequenceNumber, Firebase.Firestore.Model.SnapshotVersion? readTime, Firebase.Firestore.Model.DocumentKey? documentKey, int largestBatchId) -> Firebase.Firestore.Model.FieldIndex.IndexState?
static Firebase.Firestore.Model.FieldIndex.InitialState.get -> Firebase.Firestore.Model.FieldIndex.IndexState?
static Firebase.Firestore.Model.FieldIndex.InitialState.set -> void
static Firebase.Firestore.Model.FieldIndex.Segment.Create(Firebase.Firestore.Model.FieldPath? fieldPath, Firebase.Firestore.Model.FieldIndex.Segment.Kind? kind) -> Firebase.Firestore.Model.FieldIndex.Segment?
static Firebase.Firestore.Model.FieldIndex.Segment.Kind.Ascending.get -> Firebase.Firestore.Model.FieldIndex.Segment.Kind?
static Firebase.Firestore.Model.FieldIndex.Segment.Kind.Contains.get -> Firebase.Firestore.Model.FieldIndex.Segment.Kind?
static Firebase.Firestore.Model.FieldIndex.Segment.Kind.Descending.get -> Firebase.Firestore.Model.FieldIndex.Segment.Kind?
static Firebase.Firestore.Model.FieldIndex.Segment.Kind.ValueOf(string? name) -> Firebase.Firestore.Model.FieldIndex.Segment.Kind?
static Firebase.Firestore.Model.FieldIndex.Segment.Kind.Values() -> Firebase.Firestore.Model.FieldIndex.Segment.Kind![]?
static Firebase.Firestore.Model.FieldIndex.SemanticComparator.get -> Java.Util.IComparator?
static Firebase.Firestore.Model.FieldPath.EmptyPath.get -> Firebase.Firestore.Model.FieldPath?
static Firebase.Firestore.Model.FieldPath.FromSegments(System.Collections.Generic.IList<string!>? segments) -> Firebase.Firestore.Model.FieldPath?
static Firebase.Firestore.Model.FieldPath.FromServerFormat(string? path) -> Firebase.Firestore.Model.FieldPath?
static Firebase.Firestore.Model.FieldPath.FromSingleSegment(string? fieldName) -> Firebase.Firestore.Model.FieldPath?
static Firebase.Firestore.Model.FieldPath.KeyPath.get -> Firebase.Firestore.Model.FieldPath?
static Firebase.Firestore.Model.MutableDocument.InterfaceConsts.KeyComparator.get -> Java.Util.IComparator?
static Firebase.Firestore.Model.MutableDocument.NewFoundDocument(Firebase.Firestore.Model.DocumentKey? documentKey, Firebase.Firestore.Model.SnapshotVersion? version, Firebase.Firestore.Model.ObjectValue? value) -> Firebase.Firestore.Model.MutableDocument?
static Firebase.Firestore.Model.MutableDocument.NewInvalidDocument(Firebase.Firestore.Model.DocumentKey? documentKey) -> Firebase.Firestore.Model.MutableDocument?
static Firebase.Firestore.Model.MutableDocument.NewNoDocument(Firebase.Firestore.Model.DocumentKey? documentKey, Firebase.Firestore.Model.SnapshotVersion? version) -> Firebase.Firestore.Model.MutableDocument?
static Firebase.Firestore.Model.MutableDocument.NewUnknownDocument(Firebase.Firestore.Model.DocumentKey? documentKey, Firebase.Firestore.Model.SnapshotVersion? version) -> Firebase.Firestore.Model.MutableDocument?
static Firebase.Firestore.Model.Mutation.FieldMask.Empty.get -> Firebase.Firestore.Model.Mutation.FieldMask?
static Firebase.Firestore.Model.Mutation.FieldMask.Empty.set -> void
static Firebase.Firestore.Model.Mutation.FieldMask.FromSet(System.Collections.Generic.ICollection<Firebase.Firestore.Model.FieldPath!>? mask) -> Firebase.Firestore.Model.Mutation.FieldMask?
static Firebase.Firestore.Model.Mutation.Mutation.CalculateOverlayMutation(Firebase.Firestore.Model.MutableDocument? doc, Firebase.Firestore.Model.Mutation.FieldMask? mask) -> Firebase.Firestore.Model.Mutation.Mutation?
static Firebase.Firestore.Model.Mutation.MutationBatchResult.Create(Firebase.Firestore.Model.Mutation.MutationBatch? batch, Firebase.Firestore.Model.SnapshotVersion? commitVersion, System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.MutationResult!>? mutationResults, Xamarin.Protobuf.Lite.ByteString? streamToken) -> Firebase.Firestore.Model.Mutation.MutationBatchResult?
static Firebase.Firestore.Model.Mutation.Overlay.Create(int largestBatchId, Firebase.Firestore.Model.Mutation.Mutation? mutation) -> Firebase.Firestore.Model.Mutation.Overlay?
static Firebase.Firestore.Model.Mutation.Precondition.InvokeExists(bool exists) -> Firebase.Firestore.Model.Mutation.Precondition?
static Firebase.Firestore.Model.Mutation.Precondition.InvokeUpdateTime(Firebase.Firestore.Model.SnapshotVersion? version) -> Firebase.Firestore.Model.Mutation.Precondition?
static Firebase.Firestore.Model.Mutation.Precondition.None.get -> Firebase.Firestore.Model.Mutation.Precondition?
static Firebase.Firestore.Model.Mutation.ServerTimestampOperation.Instance.get -> Firebase.Firestore.Model.Mutation.ServerTimestampOperation?
static Firebase.Firestore.Model.ObjectValue.FromMap(System.Collections.Generic.IDictionary<string!, Google.Firestore.V1.Value!>? value) -> Firebase.Firestore.Model.ObjectValue?
static Firebase.Firestore.Model.ResourcePath.Empty.get -> Firebase.Firestore.Model.ResourcePath?
static Firebase.Firestore.Model.ResourcePath.FromSegments(System.Collections.Generic.IList<string!>? segments) -> Firebase.Firestore.Model.ResourcePath?
static Firebase.Firestore.Model.ResourcePath.FromString(string? path) -> Firebase.Firestore.Model.ResourcePath?
static Firebase.Firestore.Model.ServerTimestamps.GetLocalWriteTime(Google.Firestore.V1.Value? serverTimestampValue) -> Xamarin.Protobuf.Lite.Timestamp?
static Firebase.Firestore.Model.ServerTimestamps.GetPreviousValue(Google.Firestore.V1.Value? serverTimestampValue) -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.ServerTimestamps.IsServerTimestamp(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.ServerTimestamps.ValueOf(Firebase.Timestamp? localWriteTime, Google.Firestore.V1.Value? previousValue) -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.SnapshotVersion.None.get -> Firebase.Firestore.Model.SnapshotVersion?
static Firebase.Firestore.Model.Values.CanonicalId(Google.Firestore.V1.Value? value) -> string?
static Firebase.Firestore.Model.Values.Compare(Google.Firestore.V1.Value? left, Google.Firestore.V1.Value? right) -> int
static Firebase.Firestore.Model.Values.Contains(Google.Firestore.V1.IArrayValueOrBuilder? haystack, Google.Firestore.V1.Value? needle) -> bool
static Firebase.Firestore.Model.Values.Equals(Google.Firestore.V1.Value? left, Google.Firestore.V1.Value? right) -> bool
static Firebase.Firestore.Model.Values.GetLowerBound(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.GetUpperBound(Google.Firestore.V1.Value? value) -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.IsArray(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsDouble(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsInteger(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsMapValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsMaxValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsNanValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsNullValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsNumber(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsReferenceValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.IsVectorValue(Google.Firestore.V1.Value? value) -> bool
static Firebase.Firestore.Model.Values.LowerBoundCompare(Google.Firestore.V1.Value? left, bool leftInclusive, Google.Firestore.V1.Value? right, bool rightInclusive) -> int
static Firebase.Firestore.Model.Values.MaxValue.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MaxValueType.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinArray.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinArray.set -> void
static Firebase.Firestore.Model.Values.MinBoolean.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinBoolean.set -> void
static Firebase.Firestore.Model.Values.MinBytes.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinBytes.set -> void
static Firebase.Firestore.Model.Values.MinGeoPoint.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinGeoPoint.set -> void
static Firebase.Firestore.Model.Values.MinMap.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinMap.set -> void
static Firebase.Firestore.Model.Values.MinNumber.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinNumber.set -> void
static Firebase.Firestore.Model.Values.MinReference.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinReference.set -> void
static Firebase.Firestore.Model.Values.MinString.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinString.set -> void
static Firebase.Firestore.Model.Values.MinTimestamp.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.MinTimestamp.set -> void
static Firebase.Firestore.Model.Values.MinValue.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.NanValue.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.NullValue.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.RefValue(Firebase.Firestore.Model.DatabaseId? databaseId, Firebase.Firestore.Model.DocumentKey? key) -> Google.Firestore.V1.Value?
static Firebase.Firestore.Model.Values.TypeOrder(Google.Firestore.V1.Value? value) -> int
static Firebase.Firestore.Model.Values.UpperBoundCompare(Google.Firestore.V1.Value? left, bool leftInclusive, Google.Firestore.V1.Value? right, bool rightInclusive) -> int
static Firebase.Firestore.Model.Values.VectorValueType.get -> Google.Firestore.V1.Value?
static Firebase.Firestore.PersistentCacheSettings.NewBuilder() -> Firebase.Firestore.PersistentCacheSettings.Builder!
static Firebase.Firestore.Proto.MaybeDocument.DefaultInstance.get -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.Document.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.DocumenttypeNotSet.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.ForNumber(int value) -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.NoDocument.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.UnknownDocument.get -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.ValueOf(int value) -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.ValueOf(string? name) -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase?
static Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase.Values() -> Firebase.Firestore.Proto.MaybeDocument.DocumentTypeCase![]?
static Firebase.Firestore.Proto.MaybeDocument.NewBuilder() -> Firebase.Firestore.Proto.MaybeDocument.Builder?
static Firebase.Firestore.Proto.MaybeDocument.NewBuilder(Firebase.Firestore.Proto.MaybeDocument? prototype) -> Firebase.Firestore.Proto.MaybeDocument.Builder?
static Firebase.Firestore.Proto.MaybeDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MaybeDocument?
static Firebase.Firestore.Proto.MaybeDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.MaybeDocumentOuterClass.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Firebase.Firestore.Proto.Mutation.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Firebase.Firestore.Proto.MutationQueue.DefaultInstance.get -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.NewBuilder() -> Firebase.Firestore.Proto.MutationQueue.Builder?
static Firebase.Firestore.Proto.MutationQueue.NewBuilder(Firebase.Firestore.Proto.MutationQueue? prototype) -> Firebase.Firestore.Proto.MutationQueue.Builder?
static Firebase.Firestore.Proto.MutationQueue.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.MutationQueue?
static Firebase.Firestore.Proto.MutationQueue.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.NoDocument.DefaultInstance.get -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.NewBuilder() -> Firebase.Firestore.Proto.NoDocument.Builder?
static Firebase.Firestore.Proto.NoDocument.NewBuilder(Firebase.Firestore.Proto.NoDocument? prototype) -> Firebase.Firestore.Proto.NoDocument.Builder?
static Firebase.Firestore.Proto.NoDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.NoDocument?
static Firebase.Firestore.Proto.NoDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.Target.DefaultInstance.get -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.NewBuilder() -> Firebase.Firestore.Proto.Target.Builder?
static Firebase.Firestore.Proto.Target.NewBuilder(Firebase.Firestore.Proto.Target? prototype) -> Firebase.Firestore.Proto.Target.Builder?
static Firebase.Firestore.Proto.Target.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.Target?
static Firebase.Firestore.Proto.Target.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.Target.TargetTypeCase.Documents.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.ForNumber(int value) -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.Query.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.TargettypeNotSet.get -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.ValueOf(int value) -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.ValueOf(string? name) -> Firebase.Firestore.Proto.Target.TargetTypeCase?
static Firebase.Firestore.Proto.Target.TargetTypeCase.Values() -> Firebase.Firestore.Proto.Target.TargetTypeCase![]?
static Firebase.Firestore.Proto.TargetGlobal.DefaultInstance.get -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.NewBuilder() -> Firebase.Firestore.Proto.TargetGlobal.Builder?
static Firebase.Firestore.Proto.TargetGlobal.NewBuilder(Firebase.Firestore.Proto.TargetGlobal? prototype) -> Firebase.Firestore.Proto.TargetGlobal.Builder?
static Firebase.Firestore.Proto.TargetGlobal.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.TargetGlobal?
static Firebase.Firestore.Proto.TargetGlobal.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.TargetOuterClass.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Firebase.Firestore.Proto.UnknownDocument.DefaultInstance.get -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.NewBuilder() -> Firebase.Firestore.Proto.UnknownDocument.Builder?
static Firebase.Firestore.Proto.UnknownDocument.NewBuilder(Firebase.Firestore.Proto.UnknownDocument? prototype) -> Firebase.Firestore.Proto.UnknownDocument.Builder?
static Firebase.Firestore.Proto.UnknownDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.UnknownDocument?
static Firebase.Firestore.Proto.UnknownDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Proto.WriteBatch.DefaultInstance.get -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.NewBuilder() -> Firebase.Firestore.Proto.WriteBatch.Builder?
static Firebase.Firestore.Proto.WriteBatch.NewBuilder(Firebase.Firestore.Proto.WriteBatch? prototype) -> Firebase.Firestore.Proto.WriteBatch.Builder?
static Firebase.Firestore.Proto.WriteBatch.ParseDelimitedFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Java.Nio.ByteBuffer? data) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(System.IO.Stream? input) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(byte[]? data) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firebase.Firestore.Proto.WriteBatch?
static Firebase.Firestore.Proto.WriteBatch.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firebase.Firestore.Query.Direction.Ascending.get -> Firebase.Firestore.Query.Direction?
static Firebase.Firestore.Query.Direction.Descending.get -> Firebase.Firestore.Query.Direction?
static Firebase.Firestore.Query.Direction.ValueOf(string? name) -> Firebase.Firestore.Query.Direction?
static Firebase.Firestore.Query.Direction.Values() -> Firebase.Firestore.Query.Direction![]?
static Firebase.Firestore.Remote.BloomFilter.Create(Xamarin.Protobuf.Lite.ByteString! bitmap, int padding, int hashCount) -> Firebase.Firestore.Remote.BloomFilter?
static Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus.Reachable.get -> Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus?
static Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus.Unreachable.get -> Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus?
static Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus.ValueOf(string? name) -> Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus?
static Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus.Values() -> Firebase.Firestore.Remote.ConnectivityMonitorNetworkStatus![]?
static Firebase.Firestore.Remote.Datastore.IsMissingSslCiphers(Xamarin.Grpc.Status? status) -> bool
static Firebase.Firestore.Remote.Datastore.IsPermanentError(Firebase.Firestore.FirebaseFirestoreException.Code? code) -> bool
static Firebase.Firestore.Remote.Datastore.IsPermanentError(Xamarin.Grpc.Status? status) -> bool
static Firebase.Firestore.Remote.Datastore.IsPermanentWriteError(Xamarin.Grpc.Status? status) -> bool
static Firebase.Firestore.Remote.FirestoreChannel.SetClientLanguage(string? languageToken) -> void
static Firebase.Firestore.Remote.StreamState.Backoff.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Error.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Healthy.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Initial.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Open.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Starting.get -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.ValueOf(string? name) -> Firebase.Firestore.Remote.StreamState?
static Firebase.Firestore.Remote.StreamState.Values() -> Firebase.Firestore.Remote.StreamState![]?
static Firebase.Firestore.Remote.TargetChange.CreateSynthesizedTargetChangeForCurrentChange(bool isCurrent, Xamarin.Protobuf.Lite.ByteString? resumeToken) -> Firebase.Firestore.Remote.TargetChange?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.Added.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.Current.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.NoChange.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.Removed.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.Reset.get -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.ValueOf(string? name) -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType?
static Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType.Values() -> Firebase.Firestore.Remote.WatchChange.WatchTargetChangeType![]?
static Firebase.Firestore.Remote.WatchStream.EmptyResumeToken.get -> Xamarin.Protobuf.Lite.ByteString?
static Firebase.Firestore.Remote.WriteStream.EmptyStreamToken.get -> Xamarin.Protobuf.Lite.ByteString?
static Firebase.Firestore.SetOptions.Merge() -> Firebase.Firestore.SetOptions!
static Firebase.Firestore.SetOptions.MergeFieldPaths(System.Collections.Generic.IList<Firebase.Firestore.FieldPath!>! fields) -> Firebase.Firestore.SetOptions!
static Firebase.Firestore.SetOptions.MergeFields(System.Collections.Generic.IList<string!>! fields) -> Firebase.Firestore.SetOptions!
static Firebase.Firestore.SetOptions.MergeFields(params string![]? fields) -> Firebase.Firestore.SetOptions!
static Firebase.Firestore.Source.Cache.get -> Firebase.Firestore.Source?
static Firebase.Firestore.Source.Default.get -> Firebase.Firestore.Source?
static Firebase.Firestore.Source.Server.get -> Firebase.Firestore.Source?
static Firebase.Firestore.Source.ValueOf(string? name) -> Firebase.Firestore.Source?
static Firebase.Firestore.Source.Values() -> Firebase.Firestore.Source![]?
static Firebase.Firestore.Util.ApiUtil.NewAssertionError(string? message, Java.Lang.Throwable? cause) -> Java.Lang.AssertionError?
static Firebase.Firestore.Util.Assert.Fail(Java.Lang.Throwable? cause, string? messageFormat, params Java.Lang.Object![]? args) -> Java.Lang.AssertionError?
static Firebase.Firestore.Util.Assert.Fail(string? messageFormat, params Java.Lang.Object![]? args) -> Java.Lang.AssertionError?
static Firebase.Firestore.Util.Assert.HardAssert(bool condition, string? messageFormat, params Java.Lang.Object![]? args) -> void
static Firebase.Firestore.Util.Assert.HardAssertNonNull(Java.Lang.Object? obj, string? messageFormat, params Java.Lang.Object![]? args) -> Java.Lang.Object?
static Firebase.Firestore.Util.AsyncQueue.CallTask(Java.Util.Concurrent.IExecutor? executor, Java.Util.Concurrent.ICallable? task) -> Android.Gms.Tasks.Task?
static Firebase.Firestore.Util.AsyncQueue.TimerId.All.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.ConnectivityAttemptTimer.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.GarbageCollection.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.HealthCheckTimeout.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.IndexBackfill.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.ListenStreamConnectionBackoff.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.ListenStreamIdle.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.OnlineStateTimeout.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.RetryTransaction.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.ValueOf(string? name) -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.Values() -> Firebase.Firestore.Util.AsyncQueue.TimerId![]?
static Firebase.Firestore.Util.AsyncQueue.TimerId.WriteStreamConnectionBackoff.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.AsyncQueue.TimerId.WriteStreamIdle.get -> Firebase.Firestore.Util.AsyncQueue.TimerId?
static Firebase.Firestore.Util.CustomClassMapper.ConvertToCustomClass(Java.Lang.Object? object, Java.Lang.Class? clazz, Firebase.Firestore.DocumentReference? docRef) -> Java.Lang.Object?
static Firebase.Firestore.Util.CustomClassMapper.ConvertToPlainJavaTypes(Java.Lang.Object? object) -> Java.Lang.Object?
static Firebase.Firestore.Util.CustomClassMapper.ConvertToPlainJavaTypes(System.Collections.Generic.IDictionary<object!, Java.Lang.Object!>? update) -> System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>?
static Firebase.Firestore.Util.Executors.BackgroundExecutor.get -> Java.Util.Concurrent.IExecutor?
static Firebase.Firestore.Util.Executors.DefaultCallbackExecutor.get -> Java.Util.Concurrent.IExecutor?
static Firebase.Firestore.Util.Executors.DirectExecutor.get -> Java.Util.Concurrent.IExecutor?
static Firebase.Firestore.Util.FileUtil.Delete(Java.IO.File? file) -> void
static Firebase.Firestore.Util.Logger.Debug(string? tag, string? toLog, params Java.Lang.Object![]? values) -> void
static Firebase.Firestore.Util.Logger.IsDebugEnabled.get -> bool
static Firebase.Firestore.Util.Logger.Level.Debug.get -> Firebase.Firestore.Util.Logger.Level?
static Firebase.Firestore.Util.Logger.Level.None.get -> Firebase.Firestore.Util.Logger.Level?
static Firebase.Firestore.Util.Logger.Level.ValueOf(string? name) -> Firebase.Firestore.Util.Logger.Level?
static Firebase.Firestore.Util.Logger.Level.Values() -> Firebase.Firestore.Util.Logger.Level![]?
static Firebase.Firestore.Util.Logger.Level.Warn.get -> Firebase.Firestore.Util.Logger.Level?
static Firebase.Firestore.Util.Logger.SetLogLevel(Firebase.Firestore.Util.Logger.Level? level) -> void
static Firebase.Firestore.Util.Logger.Warn(string? tag, string? toLog, params Java.Lang.Object![]? values) -> void
static Firebase.Firestore.Util.LogicUtils.ApplyAssociation(Firebase.Firestore.Core.Filter? filter) -> Firebase.Firestore.Core.Filter?
static Firebase.Firestore.Util.LogicUtils.ApplyDistribution(Firebase.Firestore.Core.Filter? lhs, Firebase.Firestore.Core.Filter? rhs) -> Firebase.Firestore.Core.Filter?
static Firebase.Firestore.Util.LogicUtils.ComputeDistributedNormalForm(Firebase.Firestore.Core.Filter? filter) -> Firebase.Firestore.Core.Filter?
static Firebase.Firestore.Util.LogicUtils.ComputeInExpansion(Firebase.Firestore.Core.Filter? filter) -> Firebase.Firestore.Core.Filter?
static Firebase.Firestore.Util.LogicUtils.GetDnfTerms(Firebase.Firestore.Core.CompositeFilter? filter) -> System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>?
static Firebase.Firestore.Util.Preconditions.CheckArgument(bool expression, string? errorMessageTemplate, params Java.Lang.Object![]? errorMessageArgs) -> void
static Firebase.Firestore.Util.Preconditions.CheckNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static Firebase.Firestore.Util.Preconditions.CheckNotNull(Java.Lang.Object? reference, Java.Lang.Object? errorMessage) -> Java.Lang.Object?
static Firebase.Firestore.Util.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorFormatString, params Java.Lang.Object![]? formatArgs) -> Java.Lang.Object?
static Firebase.Firestore.Util.Preconditions.CheckState(bool expression) -> void
static Firebase.Firestore.Util.Preconditions.CheckState(bool expression, string? message) -> void
static Firebase.Firestore.Util.Util.AutoId() -> string?
static Firebase.Firestore.Util.Util.CollectUpdateArguments(int fieldPathOffset, Java.Lang.Object? field, Java.Lang.Object? val, params Java.Lang.Object![]? fieldsAndValues) -> System.Collections.Generic.IList<Java.Lang.Object!>?
static Firebase.Firestore.Util.Util.Comparator() -> Java.Util.IComparator?
static Firebase.Firestore.Util.Util.CompareBooleans(bool b1, bool b2) -> int
static Firebase.Firestore.Util.Util.CompareByteArrays(byte[]? left, byte[]? right) -> int
static Firebase.Firestore.Util.Util.CompareByteStrings(Xamarin.Protobuf.Lite.ByteString? left, Xamarin.Protobuf.Lite.ByteString? right) -> int
static Firebase.Firestore.Util.Util.CompareDoubles(double i1, double i2) -> int
static Firebase.Firestore.Util.Util.CompareIntegers(int i1, int i2) -> int
static Firebase.Firestore.Util.Util.CompareLongs(long i1, long i2) -> int
static Firebase.Firestore.Util.Util.CompareMixed(double doubleValue, long longValue) -> int
static Firebase.Firestore.Util.Util.CompareUtf8Strings(string? left, string? right) -> int
static Firebase.Firestore.Util.Util.ConvertThrowableToException(Java.Lang.Throwable? t) -> Java.Lang.Exception?
static Firebase.Firestore.Util.Util.CrashMainThread(Java.Lang.RuntimeException? exception) -> void
static Firebase.Firestore.Util.Util.DiffCollections(Java.Util.ISortedSet? before, Java.Util.ISortedSet? after, Firebase.Firestore.Util.IConsumer? onAdd, Firebase.Firestore.Util.IConsumer? onRemove) -> void
static Firebase.Firestore.Util.Util.DiffCollections(System.Collections.ICollection? before, System.Collections.ICollection? after, Java.Util.IComparator? comparator, Firebase.Firestore.Util.IConsumer? onAdd, Firebase.Firestore.Util.IConsumer? onRemove) -> void
static Firebase.Firestore.Util.Util.ExceptionFromStatus(Xamarin.Grpc.Status? error) -> Firebase.Firestore.FirebaseFirestoreException?
static Firebase.Firestore.Util.Util.FirstNEntries(System.Collections.IDictionary? data, int n, Java.Util.IComparator? comp) -> System.Collections.IDictionary?
static Firebase.Firestore.Util.Util.RepeatSequence(Java.Lang.ICharSequence? sequence, int count, Java.Lang.ICharSequence? delimiter) -> Java.Lang.StringBuilder?
static Firebase.Firestore.Util.Util.RepeatSequence(string? sequence, int count, string? delimiter) -> Java.Lang.StringBuilder?
static Firebase.Firestore.Util.Util.ToDebugString(Xamarin.Protobuf.Lite.ByteString? bytes) -> string?
static Firebase.Firestore.Util.Util.TypeName(Java.Lang.Object? obj) -> string?
static Firebase.Firestore.Util.Util.Values(Java.Lang.IIterable? map) -> Java.Lang.IIterable?
static Firebase.Firestore.Util.Util.VoidErrorTransformer() -> Android.Gms.Tasks.IContinuation?
static Firestore.Admin.V1.Index.DefaultInstance.get -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.ArrayConfigUnspecified.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.Contains.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.ForNumber(int value) -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.Unrecognized.get -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.ValueOf(int value) -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.ValueOf(string? name) -> Firestore.Admin.V1.Index.IndexField.ArrayConfig?
static Firestore.Admin.V1.Index.IndexField.ArrayConfig.Values() -> Firestore.Admin.V1.Index.IndexField.ArrayConfig![]?
static Firestore.Admin.V1.Index.IndexField.DefaultInstance.get -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.NewBuilder() -> Firestore.Admin.V1.Index.IndexField.Builder?
static Firestore.Admin.V1.Index.IndexField.NewBuilder(Firestore.Admin.V1.Index.IndexField? prototype) -> Firestore.Admin.V1.Index.IndexField.Builder?
static Firestore.Admin.V1.Index.IndexField.Order.Ascending.get -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.Descending.get -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.ForNumber(int value) -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Firestore.Admin.V1.Index.IndexField.Order.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Firestore.Admin.V1.Index.IndexField.Order.OrderUnspecified.get -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.Unrecognized.get -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.ValueOf(int value) -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.ValueOf(string? name) -> Firestore.Admin.V1.Index.IndexField.Order?
static Firestore.Admin.V1.Index.IndexField.Order.Values() -> Firestore.Admin.V1.Index.IndexField.Order![]?
static Firestore.Admin.V1.Index.IndexField.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(System.IO.Stream? input) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(byte[]? data) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index.IndexField?
static Firestore.Admin.V1.Index.IndexField.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.ArrayConfig.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.ForNumber(int value) -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.Order.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.ValueOf(int value) -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.ValueOf(string? name) -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.ValuemodeNotSet.get -> Firestore.Admin.V1.Index.IndexField.ValueModeCase?
static Firestore.Admin.V1.Index.IndexField.ValueModeCase.Values() -> Firestore.Admin.V1.Index.IndexField.ValueModeCase![]?
static Firestore.Admin.V1.Index.NewBuilder() -> Firestore.Admin.V1.Index.Builder?
static Firestore.Admin.V1.Index.NewBuilder(Firestore.Admin.V1.Index? prototype) -> Firestore.Admin.V1.Index.Builder?
static Firestore.Admin.V1.Index.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(System.IO.Stream? input) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(byte[]? data) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Admin.V1.Index?
static Firestore.Admin.V1.Index.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Admin.V1.Index.QueryScope.Collection.get -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.CollectionGroup.get -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.ForNumber(int value) -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Firestore.Admin.V1.Index.QueryScope.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Firestore.Admin.V1.Index.QueryScope.QueryScopeUnspecified.get -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.Unrecognized.get -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.ValueOf(int value) -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.ValueOf(string? name) -> Firestore.Admin.V1.Index.QueryScope?
static Firestore.Admin.V1.Index.QueryScope.Values() -> Firestore.Admin.V1.Index.QueryScope![]?
static Firestore.Admin.V1.Index.State.Creating.get -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.ForNumber(int value) -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Firestore.Admin.V1.Index.State.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Firestore.Admin.V1.Index.State.NeedsRepair.get -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.Ready.get -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.StateUnspecified.get -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.Unrecognized.get -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.ValueOf(int value) -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.ValueOf(string? name) -> Firestore.Admin.V1.Index.State?
static Firestore.Admin.V1.Index.State.Values() -> Firestore.Admin.V1.Index.State![]?
static Firestore.Admin.V1.IndexProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Firestore.Bundle.BundleElement.DefaultInstance.get -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ElementTypeCase.Document.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.DocumentMetadata.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.ElementtypeNotSet.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.ForNumber(int value) -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.Metadata.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.NamedQuery.get -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.ValueOf(int value) -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.ValueOf(string? name) -> Firestore.Bundle.BundleElement.ElementTypeCase?
static Firestore.Bundle.BundleElement.ElementTypeCase.Values() -> Firestore.Bundle.BundleElement.ElementTypeCase![]?
static Firestore.Bundle.BundleElement.NewBuilder() -> Firestore.Bundle.BundleElement.Builder?
static Firestore.Bundle.BundleElement.NewBuilder(Firestore.Bundle.BundleElement? prototype) -> Firestore.Bundle.BundleElement.Builder?
static Firestore.Bundle.BundleElement.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(System.IO.Stream? input) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(byte[]? data) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleElement?
static Firestore.Bundle.BundleElement.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Bundle.BundleMetadata.DefaultInstance.get -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.NewBuilder() -> Firestore.Bundle.BundleMetadata.Builder?
static Firestore.Bundle.BundleMetadata.NewBuilder(Firestore.Bundle.BundleMetadata? prototype) -> Firestore.Bundle.BundleMetadata.Builder?
static Firestore.Bundle.BundleMetadata.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(System.IO.Stream? input) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(byte[]? data) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundleMetadata?
static Firestore.Bundle.BundleMetadata.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Bundle.BundleProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Firestore.Bundle.BundledDocumentMetadata.DefaultInstance.get -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.NewBuilder() -> Firestore.Bundle.BundledDocumentMetadata.Builder?
static Firestore.Bundle.BundledDocumentMetadata.NewBuilder(Firestore.Bundle.BundledDocumentMetadata? prototype) -> Firestore.Bundle.BundledDocumentMetadata.Builder?
static Firestore.Bundle.BundledDocumentMetadata.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(System.IO.Stream? input) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(byte[]? data) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledDocumentMetadata?
static Firestore.Bundle.BundledDocumentMetadata.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Bundle.BundledQuery.DefaultInstance.get -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.LimitType.First.get -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.ForNumber(int value) -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Firestore.Bundle.BundledQuery.LimitType.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Firestore.Bundle.BundledQuery.LimitType.Last.get -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.Unrecognized.get -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.ValueOf(int value) -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.ValueOf(string? name) -> Firestore.Bundle.BundledQuery.LimitType?
static Firestore.Bundle.BundledQuery.LimitType.Values() -> Firestore.Bundle.BundledQuery.LimitType![]?
static Firestore.Bundle.BundledQuery.NewBuilder() -> Firestore.Bundle.BundledQuery.Builder?
static Firestore.Bundle.BundledQuery.NewBuilder(Firestore.Bundle.BundledQuery? prototype) -> Firestore.Bundle.BundledQuery.Builder?
static Firestore.Bundle.BundledQuery.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(System.IO.Stream? input) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(byte[]? data) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.BundledQuery?
static Firestore.Bundle.BundledQuery.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Firestore.Bundle.BundledQuery.QueryTypeCase.ForNumber(int value) -> Firestore.Bundle.BundledQuery.QueryTypeCase?
static Firestore.Bundle.BundledQuery.QueryTypeCase.QuerytypeNotSet.get -> Firestore.Bundle.BundledQuery.QueryTypeCase?
static Firestore.Bundle.BundledQuery.QueryTypeCase.StructuredQuery.get -> Firestore.Bundle.BundledQuery.QueryTypeCase?
static Firestore.Bundle.BundledQuery.QueryTypeCase.ValueOf(int value) -> Firestore.Bundle.BundledQuery.QueryTypeCase?
static Firestore.Bundle.BundledQuery.QueryTypeCase.ValueOf(string? name) -> Firestore.Bundle.BundledQuery.QueryTypeCase?
static Firestore.Bundle.BundledQuery.QueryTypeCase.Values() -> Firestore.Bundle.BundledQuery.QueryTypeCase![]?
static Firestore.Bundle.NamedQuery.DefaultInstance.get -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.NewBuilder() -> Firestore.Bundle.NamedQuery.Builder?
static Firestore.Bundle.NamedQuery.NewBuilder(Firestore.Bundle.NamedQuery? prototype) -> Firestore.Bundle.NamedQuery.Builder?
static Firestore.Bundle.NamedQuery.ParseDelimitedFrom(System.IO.Stream? input) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Java.Nio.ByteBuffer? data) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(System.IO.Stream? input) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(byte[]? data) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Firestore.Bundle.NamedQuery?
static Firestore.Bundle.NamedQuery.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.ActionNotSet.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.FirestoreV1Action.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.ForNumber(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.ValueOf(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.ValueOf(string? name) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase.Values() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ActionCase![]?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.DatastoreAction.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ActionNotSet.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.BatchGetDocuments.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.BeginTransaction.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.Commit.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.CreateDocument.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.DeleteDocument.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ForNumber(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.GetDocument.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ListCollectionIds.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ListDocuments.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.Listen.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.RemoveListen.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.Rollback.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.RunQuery.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.UpdateDocument.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ValueOf(int value) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.ValueOf(string? name) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase.Values() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ActionCase![]?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BatchGetDocuments.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.BeginTransaction.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Commit.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.CreateDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.DeleteDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.GetDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListCollectionIds.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ListDocuments.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Listen.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.MatchingDocuments.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RemoveListen.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.Rollback.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.RunQuery.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.FirestoreV1Action.UpdateDocument.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ParallelTestTrace.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.StatusProto.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TestTrace.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.TimelineTestTrace.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.DefaultInstance.get -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.NewBuilder() -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.NewBuilder(Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule? prototype) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Builder?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(System.IO.Stream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(byte[]? data) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule?
static Google.Apphosting.DataStore.Testing.DatastoreTestTrace.ValidationRule.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.CompareLongs(long leftLong, long rightLong) -> int
static Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.FirestoreCompareDoubleWithLong(double doubleValue, long longValue) -> int
static Google.Cloud.Datastore.Core.Number.NumberComparisonHelper.FirestoreCompareDoubles(double leftDouble, double rightDouble) -> int
static Google.Firestore.V1.AggregationResult.DefaultInstance.get -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.NewBuilder() -> Google.Firestore.V1.AggregationResult.Builder?
static Google.Firestore.V1.AggregationResult.NewBuilder(Google.Firestore.V1.AggregationResult? prototype) -> Google.Firestore.V1.AggregationResult.Builder?
static Google.Firestore.V1.AggregationResult.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(byte[]? data) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.AggregationResult?
static Google.Firestore.V1.AggregationResult.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.AggregationResultProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.ArrayValue.DefaultInstance.get -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.NewBuilder() -> Google.Firestore.V1.ArrayValue.Builder?
static Google.Firestore.V1.ArrayValue.NewBuilder(Google.Firestore.V1.ArrayValue? prototype) -> Google.Firestore.V1.ArrayValue.Builder?
static Google.Firestore.V1.ArrayValue.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(byte[]? data) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ArrayValue?
static Google.Firestore.V1.ArrayValue.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.NewTransaction.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.Transaction.get -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase.Values() -> Google.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorCase![]?
static Google.Firestore.V1.BatchGetDocumentsRequest.DefaultInstance.get -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.NewBuilder() -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
static Google.Firestore.V1.BatchGetDocumentsRequest.NewBuilder(Google.Firestore.V1.BatchGetDocumentsRequest? prototype) -> Google.Firestore.V1.BatchGetDocumentsRequest.Builder?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsRequest?
static Google.Firestore.V1.BatchGetDocumentsRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BatchGetDocumentsResponse.DefaultInstance.get -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.NewBuilder() -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
static Google.Firestore.V1.BatchGetDocumentsResponse.NewBuilder(Google.Firestore.V1.BatchGetDocumentsResponse? prototype) -> Google.Firestore.V1.BatchGetDocumentsResponse.Builder?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BatchGetDocumentsResponse?
static Google.Firestore.V1.BatchGetDocumentsResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.ForNumber(int value) -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.Found.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.Missing.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.ResultNotSet.get -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.ValueOf(int value) -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.ValueOf(string? name) -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase?
static Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase.Values() -> Google.Firestore.V1.BatchGetDocumentsResponse.ResultCase![]?
static Google.Firestore.V1.BeginTransactionRequest.DefaultInstance.get -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.NewBuilder() -> Google.Firestore.V1.BeginTransactionRequest.Builder?
static Google.Firestore.V1.BeginTransactionRequest.NewBuilder(Google.Firestore.V1.BeginTransactionRequest? prototype) -> Google.Firestore.V1.BeginTransactionRequest.Builder?
static Google.Firestore.V1.BeginTransactionRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionRequest?
static Google.Firestore.V1.BeginTransactionRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BeginTransactionResponse.DefaultInstance.get -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.NewBuilder() -> Google.Firestore.V1.BeginTransactionResponse.Builder?
static Google.Firestore.V1.BeginTransactionResponse.NewBuilder(Google.Firestore.V1.BeginTransactionResponse? prototype) -> Google.Firestore.V1.BeginTransactionResponse.Builder?
static Google.Firestore.V1.BeginTransactionResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BeginTransactionResponse?
static Google.Firestore.V1.BeginTransactionResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BitSequence.DefaultInstance.get -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.NewBuilder() -> Google.Firestore.V1.BitSequence.Builder?
static Google.Firestore.V1.BitSequence.NewBuilder(Google.Firestore.V1.BitSequence? prototype) -> Google.Firestore.V1.BitSequence.Builder?
static Google.Firestore.V1.BitSequence.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(byte[]? data) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BitSequence?
static Google.Firestore.V1.BitSequence.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BloomFilter.DefaultInstance.get -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.NewBuilder() -> Google.Firestore.V1.BloomFilter.Builder?
static Google.Firestore.V1.BloomFilter.NewBuilder(Google.Firestore.V1.BloomFilter? prototype) -> Google.Firestore.V1.BloomFilter.Builder?
static Google.Firestore.V1.BloomFilter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(byte[]? data) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.BloomFilter?
static Google.Firestore.V1.BloomFilter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.BloomFilterProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.CommitRequest.DefaultInstance.get -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.NewBuilder() -> Google.Firestore.V1.CommitRequest.Builder?
static Google.Firestore.V1.CommitRequest.NewBuilder(Google.Firestore.V1.CommitRequest? prototype) -> Google.Firestore.V1.CommitRequest.Builder?
static Google.Firestore.V1.CommitRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitRequest?
static Google.Firestore.V1.CommitRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.CommitResponse.DefaultInstance.get -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.NewBuilder() -> Google.Firestore.V1.CommitResponse.Builder?
static Google.Firestore.V1.CommitResponse.NewBuilder(Google.Firestore.V1.CommitResponse? prototype) -> Google.Firestore.V1.CommitResponse.Builder?
static Google.Firestore.V1.CommitResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CommitResponse?
static Google.Firestore.V1.CommitResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.CommonProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.CreateDocumentRequest.DefaultInstance.get -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.NewBuilder() -> Google.Firestore.V1.CreateDocumentRequest.Builder?
static Google.Firestore.V1.CreateDocumentRequest.NewBuilder(Google.Firestore.V1.CreateDocumentRequest? prototype) -> Google.Firestore.V1.CreateDocumentRequest.Builder?
static Google.Firestore.V1.CreateDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.CreateDocumentRequest?
static Google.Firestore.V1.CreateDocumentRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Cursor.DefaultInstance.get -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.NewBuilder() -> Google.Firestore.V1.Cursor.Builder?
static Google.Firestore.V1.Cursor.NewBuilder(Google.Firestore.V1.Cursor? prototype) -> Google.Firestore.V1.Cursor.Builder?
static Google.Firestore.V1.Cursor.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(byte[]? data) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Cursor?
static Google.Firestore.V1.Cursor.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DeleteDocumentRequest.DefaultInstance.get -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.NewBuilder() -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
static Google.Firestore.V1.DeleteDocumentRequest.NewBuilder(Google.Firestore.V1.DeleteDocumentRequest? prototype) -> Google.Firestore.V1.DeleteDocumentRequest.Builder?
static Google.Firestore.V1.DeleteDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DeleteDocumentRequest?
static Google.Firestore.V1.DeleteDocumentRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Document.DefaultInstance.get -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.NewBuilder() -> Google.Firestore.V1.Document.Builder?
static Google.Firestore.V1.Document.NewBuilder(Google.Firestore.V1.Document? prototype) -> Google.Firestore.V1.Document.Builder?
static Google.Firestore.V1.Document.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(byte[]? data) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Document?
static Google.Firestore.V1.Document.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentChange.DefaultInstance.get -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.NewBuilder() -> Google.Firestore.V1.DocumentChange.Builder?
static Google.Firestore.V1.DocumentChange.NewBuilder(Google.Firestore.V1.DocumentChange? prototype) -> Google.Firestore.V1.DocumentChange.Builder?
static Google.Firestore.V1.DocumentChange.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentChange?
static Google.Firestore.V1.DocumentChange.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentDelete.DefaultInstance.get -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.NewBuilder() -> Google.Firestore.V1.DocumentDelete.Builder?
static Google.Firestore.V1.DocumentDelete.NewBuilder(Google.Firestore.V1.DocumentDelete? prototype) -> Google.Firestore.V1.DocumentDelete.Builder?
static Google.Firestore.V1.DocumentDelete.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentDelete?
static Google.Firestore.V1.DocumentDelete.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentMask.DefaultInstance.get -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.NewBuilder() -> Google.Firestore.V1.DocumentMask.Builder?
static Google.Firestore.V1.DocumentMask.NewBuilder(Google.Firestore.V1.DocumentMask? prototype) -> Google.Firestore.V1.DocumentMask.Builder?
static Google.Firestore.V1.DocumentMask.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentMask?
static Google.Firestore.V1.DocumentMask.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.DocumentRemove.DefaultInstance.get -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.NewBuilder() -> Google.Firestore.V1.DocumentRemove.Builder?
static Google.Firestore.V1.DocumentRemove.NewBuilder(Google.Firestore.V1.DocumentRemove? prototype) -> Google.Firestore.V1.DocumentRemove.Builder?
static Google.Firestore.V1.DocumentRemove.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentRemove?
static Google.Firestore.V1.DocumentRemove.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentTransform.DefaultInstance.get -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.DefaultInstance.get -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.NewBuilder() -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
static Google.Firestore.V1.DocumentTransform.FieldTransform.NewBuilder(Google.Firestore.V1.DocumentTransform.FieldTransform? prototype) -> Google.Firestore.V1.DocumentTransform.FieldTransform.Builder?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform.FieldTransform?
static Google.Firestore.V1.DocumentTransform.FieldTransform.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.ForNumber(int value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.RequestTime.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.ServerValueUnspecified.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.Unrecognized.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.ValueOf(int value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.ValueOf(string? name) -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue?
static Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue.Values() -> Google.Firestore.V1.DocumentTransform.FieldTransform.ServerValue![]?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.AppendMissingElements.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.ForNumber(int value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.Increment.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.Maximum.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.Minimum.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.RemoveAllFromArray.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.SetToServerValue.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.TransformtypeNotSet.get -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.ValueOf(int value) -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.ValueOf(string? name) -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase?
static Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase.Values() -> Google.Firestore.V1.DocumentTransform.FieldTransform.TransformTypeCase![]?
static Google.Firestore.V1.DocumentTransform.NewBuilder() -> Google.Firestore.V1.DocumentTransform.Builder?
static Google.Firestore.V1.DocumentTransform.NewBuilder(Google.Firestore.V1.DocumentTransform? prototype) -> Google.Firestore.V1.DocumentTransform.Builder?
static Google.Firestore.V1.DocumentTransform.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(byte[]? data) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.DocumentTransform?
static Google.Firestore.V1.DocumentTransform.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ExistenceFilter.DefaultInstance.get -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.NewBuilder() -> Google.Firestore.V1.ExistenceFilter.Builder?
static Google.Firestore.V1.ExistenceFilter.NewBuilder(Google.Firestore.V1.ExistenceFilter? prototype) -> Google.Firestore.V1.ExistenceFilter.Builder?
static Google.Firestore.V1.ExistenceFilter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(byte[]? data) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ExistenceFilter?
static Google.Firestore.V1.ExistenceFilter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.FirestoreGrpc.BatchGetDocumentsMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.BeginTransactionMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.BindService(Google.Firestore.V1.FirestoreGrpc.IAsyncService? service) -> Xamarin.Grpc.ServerServiceDefinition?
static Google.Firestore.V1.FirestoreGrpc.CommitMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.CreateDocumentMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.DeleteDocumentMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.GetDocumentMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.ListCollectionIdsMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.ListDocumentsMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.ListenMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.NewBlockingStub(Xamarin.Grpc.Channel? channel) -> Google.Firestore.V1.FirestoreGrpc.FirestoreBlockingStub?
static Google.Firestore.V1.FirestoreGrpc.NewFutureStub(Xamarin.Grpc.Channel? channel) -> Google.Firestore.V1.FirestoreGrpc.FirestoreFutureStub?
static Google.Firestore.V1.FirestoreGrpc.NewStub(Xamarin.Grpc.Channel? channel) -> Google.Firestore.V1.FirestoreGrpc.FirestoreStub?
static Google.Firestore.V1.FirestoreGrpc.RollbackMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.RunAggregationQueryMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.RunQueryMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.ServiceDescriptor.get -> Xamarin.Grpc.ServiceDescriptor?
static Google.Firestore.V1.FirestoreGrpc.UpdateDocumentMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreGrpc.WriteMethod.get -> Xamarin.Grpc.MethodDescriptor?
static Google.Firestore.V1.FirestoreProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.Transaction.get -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase?
static Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase.Values() -> Google.Firestore.V1.GetDocumentRequest.ConsistencySelectorCase![]?
static Google.Firestore.V1.GetDocumentRequest.DefaultInstance.get -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.NewBuilder() -> Google.Firestore.V1.GetDocumentRequest.Builder?
static Google.Firestore.V1.GetDocumentRequest.NewBuilder(Google.Firestore.V1.GetDocumentRequest? prototype) -> Google.Firestore.V1.GetDocumentRequest.Builder?
static Google.Firestore.V1.GetDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.GetDocumentRequest?
static Google.Firestore.V1.GetDocumentRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListCollectionIdsRequest.DefaultInstance.get -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.NewBuilder() -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
static Google.Firestore.V1.ListCollectionIdsRequest.NewBuilder(Google.Firestore.V1.ListCollectionIdsRequest? prototype) -> Google.Firestore.V1.ListCollectionIdsRequest.Builder?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsRequest?
static Google.Firestore.V1.ListCollectionIdsRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListCollectionIdsResponse.DefaultInstance.get -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.NewBuilder() -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
static Google.Firestore.V1.ListCollectionIdsResponse.NewBuilder(Google.Firestore.V1.ListCollectionIdsResponse? prototype) -> Google.Firestore.V1.ListCollectionIdsResponse.Builder?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListCollectionIdsResponse?
static Google.Firestore.V1.ListCollectionIdsResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.Transaction.get -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase?
static Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase.Values() -> Google.Firestore.V1.ListDocumentsRequest.ConsistencySelectorCase![]?
static Google.Firestore.V1.ListDocumentsRequest.DefaultInstance.get -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.NewBuilder() -> Google.Firestore.V1.ListDocumentsRequest.Builder?
static Google.Firestore.V1.ListDocumentsRequest.NewBuilder(Google.Firestore.V1.ListDocumentsRequest? prototype) -> Google.Firestore.V1.ListDocumentsRequest.Builder?
static Google.Firestore.V1.ListDocumentsRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsRequest?
static Google.Firestore.V1.ListDocumentsRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListDocumentsResponse.DefaultInstance.get -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.NewBuilder() -> Google.Firestore.V1.ListDocumentsResponse.Builder?
static Google.Firestore.V1.ListDocumentsResponse.NewBuilder(Google.Firestore.V1.ListDocumentsResponse? prototype) -> Google.Firestore.V1.ListDocumentsResponse.Builder?
static Google.Firestore.V1.ListDocumentsResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListDocumentsResponse?
static Google.Firestore.V1.ListDocumentsResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListenRequest.DefaultInstance.get -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.NewBuilder() -> Google.Firestore.V1.ListenRequest.Builder?
static Google.Firestore.V1.ListenRequest.NewBuilder(Google.Firestore.V1.ListenRequest? prototype) -> Google.Firestore.V1.ListenRequest.Builder?
static Google.Firestore.V1.ListenRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenRequest?
static Google.Firestore.V1.ListenRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.AddTarget.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.ForNumber(int value) -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.RemoveTarget.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.TargetchangeNotSet.get -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.ValueOf(int value) -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.ValueOf(string? name) -> Google.Firestore.V1.ListenRequest.TargetChangeCase?
static Google.Firestore.V1.ListenRequest.TargetChangeCase.Values() -> Google.Firestore.V1.ListenRequest.TargetChangeCase![]?
static Google.Firestore.V1.ListenResponse.DefaultInstance.get -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.NewBuilder() -> Google.Firestore.V1.ListenResponse.Builder?
static Google.Firestore.V1.ListenResponse.NewBuilder(Google.Firestore.V1.ListenResponse? prototype) -> Google.Firestore.V1.ListenResponse.Builder?
static Google.Firestore.V1.ListenResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.ListenResponse?
static Google.Firestore.V1.ListenResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.DocumentChange.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.DocumentDelete.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.DocumentRemove.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.Filter.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.ForNumber(int value) -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.ResponsetypeNotSet.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.TargetChange.get -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.ValueOf(int value) -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.ValueOf(string? name) -> Google.Firestore.V1.ListenResponse.ResponseTypeCase?
static Google.Firestore.V1.ListenResponse.ResponseTypeCase.Values() -> Google.Firestore.V1.ListenResponse.ResponseTypeCase![]?
static Google.Firestore.V1.MapValue.DefaultInstance.get -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.NewBuilder() -> Google.Firestore.V1.MapValue.Builder?
static Google.Firestore.V1.MapValue.NewBuilder(Google.Firestore.V1.MapValue? prototype) -> Google.Firestore.V1.MapValue.Builder?
static Google.Firestore.V1.MapValue.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(byte[]? data) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.MapValue?
static Google.Firestore.V1.MapValue.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Precondition.ConditionTypeCase.ConditiontypeNotSet.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.Exists.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.ForNumber(int value) -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.UpdateTime.get -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.ValueOf(int value) -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.ValueOf(string? name) -> Google.Firestore.V1.Precondition.ConditionTypeCase?
static Google.Firestore.V1.Precondition.ConditionTypeCase.Values() -> Google.Firestore.V1.Precondition.ConditionTypeCase![]?
static Google.Firestore.V1.Precondition.DefaultInstance.get -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.NewBuilder() -> Google.Firestore.V1.Precondition.Builder?
static Google.Firestore.V1.Precondition.NewBuilder(Google.Firestore.V1.Precondition? prototype) -> Google.Firestore.V1.Precondition.Builder?
static Google.Firestore.V1.Precondition.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(byte[]? data) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Precondition?
static Google.Firestore.V1.Precondition.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.QueryProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.RollbackRequest.DefaultInstance.get -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.NewBuilder() -> Google.Firestore.V1.RollbackRequest.Builder?
static Google.Firestore.V1.RollbackRequest.NewBuilder(Google.Firestore.V1.RollbackRequest? prototype) -> Google.Firestore.V1.RollbackRequest.Builder?
static Google.Firestore.V1.RollbackRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RollbackRequest?
static Google.Firestore.V1.RollbackRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.NewTransaction.get -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.Transaction.get -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase.Values() -> Google.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorCase![]?
static Google.Firestore.V1.RunAggregationQueryRequest.DefaultInstance.get -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.NewBuilder() -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
static Google.Firestore.V1.RunAggregationQueryRequest.NewBuilder(Google.Firestore.V1.RunAggregationQueryRequest? prototype) -> Google.Firestore.V1.RunAggregationQueryRequest.Builder?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryRequest?
static Google.Firestore.V1.RunAggregationQueryRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.ForNumber(int value) -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.QuerytypeNotSet.get -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.StructuredAggregationQuery.get -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.ValueOf(int value) -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.ValueOf(string? name) -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase.Values() -> Google.Firestore.V1.RunAggregationQueryRequest.QueryTypeCase![]?
static Google.Firestore.V1.RunAggregationQueryResponse.DefaultInstance.get -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.NewBuilder() -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
static Google.Firestore.V1.RunAggregationQueryResponse.NewBuilder(Google.Firestore.V1.RunAggregationQueryResponse? prototype) -> Google.Firestore.V1.RunAggregationQueryResponse.Builder?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunAggregationQueryResponse?
static Google.Firestore.V1.RunAggregationQueryResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.NewTransaction.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.Transaction.get -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase?
static Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase.Values() -> Google.Firestore.V1.RunQueryRequest.ConsistencySelectorCase![]?
static Google.Firestore.V1.RunQueryRequest.DefaultInstance.get -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.NewBuilder() -> Google.Firestore.V1.RunQueryRequest.Builder?
static Google.Firestore.V1.RunQueryRequest.NewBuilder(Google.Firestore.V1.RunQueryRequest? prototype) -> Google.Firestore.V1.RunQueryRequest.Builder?
static Google.Firestore.V1.RunQueryRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryRequest?
static Google.Firestore.V1.RunQueryRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.ForNumber(int value) -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.QuerytypeNotSet.get -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.StructuredQuery.get -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.ValueOf(int value) -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.ValueOf(string? name) -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase?
static Google.Firestore.V1.RunQueryRequest.QueryTypeCase.Values() -> Google.Firestore.V1.RunQueryRequest.QueryTypeCase![]?
static Google.Firestore.V1.RunQueryResponse.DefaultInstance.get -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.NewBuilder() -> Google.Firestore.V1.RunQueryResponse.Builder?
static Google.Firestore.V1.RunQueryResponse.NewBuilder(Google.Firestore.V1.RunQueryResponse? prototype) -> Google.Firestore.V1.RunQueryResponse.Builder?
static Google.Firestore.V1.RunQueryResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.RunQueryResponse?
static Google.Firestore.V1.RunQueryResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.DefaultInstance.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.NewBuilder() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.NewBuilder(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg? prototype) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Avg.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.DefaultInstance.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.NewBuilder() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.NewBuilder(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count? prototype) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Count.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.DefaultInstance.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.NewBuilder() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.NewBuilder(Google.Firestore.V1.StructuredAggregationQuery.Aggregation? prototype) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.Avg.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.Count.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.ForNumber(int value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.OperatorNotSet.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.Sum.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.ValueOf(int value) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.ValueOf(string? name) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase.Values() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.OperatorCase![]?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.DefaultInstance.get -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.NewBuilder() -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.NewBuilder(Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum? prototype) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum?
static Google.Firestore.V1.StructuredAggregationQuery.Aggregation.Sum.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.DefaultInstance.get -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.NewBuilder() -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.NewBuilder(Google.Firestore.V1.StructuredAggregationQuery? prototype) -> Google.Firestore.V1.StructuredAggregationQuery.Builder?
static Google.Firestore.V1.StructuredAggregationQuery.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredAggregationQuery?
static Google.Firestore.V1.StructuredAggregationQuery.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.ForNumber(int value) -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.QuerytypeNotSet.get -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.StructuredQuery.get -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.ValueOf(int value) -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.ValueOf(string? name) -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase?
static Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase.Values() -> Google.Firestore.V1.StructuredAggregationQuery.QueryTypeCase![]?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.NewBuilder() -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.NewBuilder(Google.Firestore.V1.StructuredQuery.CollectionSelector? prototype) -> Google.Firestore.V1.StructuredQuery.CollectionSelector.Builder?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CollectionSelector?
static Google.Firestore.V1.StructuredQuery.CollectionSelector.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.NewBuilder() -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.NewBuilder(Google.Firestore.V1.StructuredQuery.CompositeFilter? prototype) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Builder?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.And.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.OperatorUnspecified.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.Or.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.Unrecognized.get -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator.Values() -> Google.Firestore.V1.StructuredQuery.CompositeFilter.Operator![]?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.CompositeFilter?
static Google.Firestore.V1.StructuredQuery.CompositeFilter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.Direction.Ascending.get -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.Descending.get -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.DirectionUnspecified.get -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.StructuredQuery.Direction.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.StructuredQuery.Direction.Unrecognized.get -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.Direction?
static Google.Firestore.V1.StructuredQuery.Direction.Values() -> Google.Firestore.V1.StructuredQuery.Direction![]?
static Google.Firestore.V1.StructuredQuery.FieldFilter.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.NewBuilder() -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
static Google.Firestore.V1.StructuredQuery.FieldFilter.NewBuilder(Google.Firestore.V1.StructuredQuery.FieldFilter? prototype) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Builder?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ArrayContains.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ArrayContainsAny.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.Equal.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.GreaterThan.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.GreaterThanOrEqual.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.In.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.LessThan.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.LessThanOrEqual.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.NotEqual.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.NotIn.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.OperatorUnspecified.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.Unrecognized.get -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Operator.Values() -> Google.Firestore.V1.StructuredQuery.FieldFilter.Operator![]?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldFilter?
static Google.Firestore.V1.StructuredQuery.FieldFilter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.FieldReference.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.NewBuilder() -> Google.Firestore.V1.StructuredQuery.FieldReference.Builder?
static Google.Firestore.V1.StructuredQuery.FieldReference.NewBuilder(Google.Firestore.V1.StructuredQuery.FieldReference? prototype) -> Google.Firestore.V1.StructuredQuery.FieldReference.Builder?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.FieldReference?
static Google.Firestore.V1.StructuredQuery.FieldReference.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.Filter.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.CompositeFilter.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.FieldFilter.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.FiltertypeNotSet.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.UnaryFilter.get -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase?
static Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase.Values() -> Google.Firestore.V1.StructuredQuery.Filter.FilterTypeCase![]?
static Google.Firestore.V1.StructuredQuery.Filter.NewBuilder() -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
static Google.Firestore.V1.StructuredQuery.Filter.NewBuilder(Google.Firestore.V1.StructuredQuery.Filter? prototype) -> Google.Firestore.V1.StructuredQuery.Filter.Builder?
static Google.Firestore.V1.StructuredQuery.Filter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Filter?
static Google.Firestore.V1.StructuredQuery.Filter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.NewBuilder() -> Google.Firestore.V1.StructuredQuery.Builder?
static Google.Firestore.V1.StructuredQuery.NewBuilder(Google.Firestore.V1.StructuredQuery? prototype) -> Google.Firestore.V1.StructuredQuery.Builder?
static Google.Firestore.V1.StructuredQuery.Order.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.NewBuilder() -> Google.Firestore.V1.StructuredQuery.Order.Builder?
static Google.Firestore.V1.StructuredQuery.Order.NewBuilder(Google.Firestore.V1.StructuredQuery.Order? prototype) -> Google.Firestore.V1.StructuredQuery.Order.Builder?
static Google.Firestore.V1.StructuredQuery.Order.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Order?
static Google.Firestore.V1.StructuredQuery.Order.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery?
static Google.Firestore.V1.StructuredQuery.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.Projection.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.NewBuilder() -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
static Google.Firestore.V1.StructuredQuery.Projection.NewBuilder(Google.Firestore.V1.StructuredQuery.Projection? prototype) -> Google.Firestore.V1.StructuredQuery.Projection.Builder?
static Google.Firestore.V1.StructuredQuery.Projection.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.Projection?
static Google.Firestore.V1.StructuredQuery.Projection.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.DefaultInstance.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.NewBuilder() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.NewBuilder(Google.Firestore.V1.StructuredQuery.UnaryFilter? prototype) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Builder?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.Field.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.OperandtypeNotSet.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase.Values() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.OperandTypeCase![]?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.ForNumber(int value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNan.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNotNan.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNotNull.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.IsNull.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.OperatorUnspecified.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.Unrecognized.get -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.ValueOf(int value) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.ValueOf(string? name) -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator.Values() -> Google.Firestore.V1.StructuredQuery.UnaryFilter.Operator![]?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(byte[]? data) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.StructuredQuery.UnaryFilter?
static Google.Firestore.V1.StructuredQuery.UnaryFilter.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Target.DefaultInstance.get -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.DocumentsTarget.DefaultInstance.get -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.NewBuilder() -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
static Google.Firestore.V1.Target.DocumentsTarget.NewBuilder(Google.Firestore.V1.Target.DocumentsTarget? prototype) -> Google.Firestore.V1.Target.DocumentsTarget.Builder?
static Google.Firestore.V1.Target.DocumentsTarget.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(byte[]? data) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.DocumentsTarget?
static Google.Firestore.V1.Target.DocumentsTarget.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Target.NewBuilder() -> Google.Firestore.V1.Target.Builder?
static Google.Firestore.V1.Target.NewBuilder(Google.Firestore.V1.Target? prototype) -> Google.Firestore.V1.Target.Builder?
static Google.Firestore.V1.Target.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(byte[]? data) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target?
static Google.Firestore.V1.Target.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Target.QueryTarget.DefaultInstance.get -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.NewBuilder() -> Google.Firestore.V1.Target.QueryTarget.Builder?
static Google.Firestore.V1.Target.QueryTarget.NewBuilder(Google.Firestore.V1.Target.QueryTarget? prototype) -> Google.Firestore.V1.Target.QueryTarget.Builder?
static Google.Firestore.V1.Target.QueryTarget.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(byte[]? data) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Target.QueryTarget?
static Google.Firestore.V1.Target.QueryTarget.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.ForNumber(int value) -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.QuerytypeNotSet.get -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.StructuredQuery.get -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.ValueOf(int value) -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.ValueOf(string? name) -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase?
static Google.Firestore.V1.Target.QueryTarget.QueryTypeCase.Values() -> Google.Firestore.V1.Target.QueryTarget.QueryTypeCase![]?
static Google.Firestore.V1.Target.ResumeTypeCase.ForNumber(int value) -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.ReadTime.get -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.ResumeToken.get -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.ResumetypeNotSet.get -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.ValueOf(int value) -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.ValueOf(string? name) -> Google.Firestore.V1.Target.ResumeTypeCase?
static Google.Firestore.V1.Target.ResumeTypeCase.Values() -> Google.Firestore.V1.Target.ResumeTypeCase![]?
static Google.Firestore.V1.Target.TargetTypeCase.Documents.get -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.ForNumber(int value) -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.Query.get -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.TargettypeNotSet.get -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.ValueOf(int value) -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.ValueOf(string? name) -> Google.Firestore.V1.Target.TargetTypeCase?
static Google.Firestore.V1.Target.TargetTypeCase.Values() -> Google.Firestore.V1.Target.TargetTypeCase![]?
static Google.Firestore.V1.TargetChange.DefaultInstance.get -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.NewBuilder() -> Google.Firestore.V1.TargetChange.Builder?
static Google.Firestore.V1.TargetChange.NewBuilder(Google.Firestore.V1.TargetChange? prototype) -> Google.Firestore.V1.TargetChange.Builder?
static Google.Firestore.V1.TargetChange.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(byte[]? data) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TargetChange?
static Google.Firestore.V1.TargetChange.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.TargetChange.TargetChangeType.Add.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.Current.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.ForNumber(int value) -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.InternalGetValueMap() -> Xamarin.Protobuf.Lite.Internal.IEnumLiteMap?
static Google.Firestore.V1.TargetChange.TargetChangeType.InternalGetVerifier() -> Xamarin.Protobuf.Lite.Internal.IEnumVerifier?
static Google.Firestore.V1.TargetChange.TargetChangeType.NoChange.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.Remove.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.Reset.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.Unrecognized.get -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.ValueOf(int value) -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.ValueOf(string? name) -> Google.Firestore.V1.TargetChange.TargetChangeType?
static Google.Firestore.V1.TargetChange.TargetChangeType.Values() -> Google.Firestore.V1.TargetChange.TargetChangeType![]?
static Google.Firestore.V1.TransactionOptions.DefaultInstance.get -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ModeCase.ForNumber(int value) -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.ModeNotSet.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.ReadOnly.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.ReadWrite.get -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.ValueOf(int value) -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.ValueOf(string? name) -> Google.Firestore.V1.TransactionOptions.ModeCase?
static Google.Firestore.V1.TransactionOptions.ModeCase.Values() -> Google.Firestore.V1.TransactionOptions.ModeCase![]?
static Google.Firestore.V1.TransactionOptions.NewBuilder() -> Google.Firestore.V1.TransactionOptions.Builder?
static Google.Firestore.V1.TransactionOptions.NewBuilder(Google.Firestore.V1.TransactionOptions? prototype) -> Google.Firestore.V1.TransactionOptions.Builder?
static Google.Firestore.V1.TransactionOptions.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(byte[]? data) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions?
static Google.Firestore.V1.TransactionOptions.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.ConsistencyselectorNotSet.get -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.ForNumber(int value) -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.ReadTime.get -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.ValueOf(int value) -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.ValueOf(string? name) -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase.Values() -> Google.Firestore.V1.TransactionOptions.ReadOnly.ConsistencySelectorCase![]?
static Google.Firestore.V1.TransactionOptions.ReadOnly.DefaultInstance.get -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.NewBuilder() -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
static Google.Firestore.V1.TransactionOptions.ReadOnly.NewBuilder(Google.Firestore.V1.TransactionOptions.ReadOnly? prototype) -> Google.Firestore.V1.TransactionOptions.ReadOnly.Builder?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(byte[]? data) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadOnly?
static Google.Firestore.V1.TransactionOptions.ReadOnly.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.TransactionOptions.ReadWrite.DefaultInstance.get -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.NewBuilder() -> Google.Firestore.V1.TransactionOptions.ReadWrite.Builder?
static Google.Firestore.V1.TransactionOptions.ReadWrite.NewBuilder(Google.Firestore.V1.TransactionOptions.ReadWrite? prototype) -> Google.Firestore.V1.TransactionOptions.ReadWrite.Builder?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(byte[]? data) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.TransactionOptions.ReadWrite?
static Google.Firestore.V1.TransactionOptions.ReadWrite.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.UpdateDocumentRequest.DefaultInstance.get -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.NewBuilder() -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
static Google.Firestore.V1.UpdateDocumentRequest.NewBuilder(Google.Firestore.V1.UpdateDocumentRequest? prototype) -> Google.Firestore.V1.UpdateDocumentRequest.Builder?
static Google.Firestore.V1.UpdateDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.UpdateDocumentRequest?
static Google.Firestore.V1.UpdateDocumentRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Value.DefaultInstance.get -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.NewBuilder() -> Google.Firestore.V1.Value.Builder?
static Google.Firestore.V1.Value.NewBuilder(Google.Firestore.V1.Value? prototype) -> Google.Firestore.V1.Value.Builder?
static Google.Firestore.V1.Value.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(byte[]? data) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Value?
static Google.Firestore.V1.Value.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.Value.ValueTypeCase.ArrayValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.BooleanValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.BytesValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.DoubleValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.ForNumber(int value) -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.GeoPointValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.IntegerValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.MapValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.NullValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.ReferenceValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.StringValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.TimestampValue.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.ValueOf(int value) -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.ValueOf(string? name) -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Value.ValueTypeCase.Values() -> Google.Firestore.V1.Value.ValueTypeCase![]?
static Google.Firestore.V1.Value.ValueTypeCase.ValuetypeNotSet.get -> Google.Firestore.V1.Value.ValueTypeCase?
static Google.Firestore.V1.Write.DefaultInstance.get -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.NewBuilder() -> Google.Firestore.V1.Write.Builder?
static Google.Firestore.V1.Write.NewBuilder(Google.Firestore.V1.Write? prototype) -> Google.Firestore.V1.Write.Builder?
static Google.Firestore.V1.Write.OperationCase.Delete.get -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.ForNumber(int value) -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.OperationNotSet.get -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.Transform.get -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.Update.get -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.ValueOf(int value) -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.ValueOf(string? name) -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.OperationCase.Values() -> Google.Firestore.V1.Write.OperationCase![]?
static Google.Firestore.V1.Write.OperationCase.Verify.get -> Google.Firestore.V1.Write.OperationCase?
static Google.Firestore.V1.Write.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(byte[]? data) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.Write?
static Google.Firestore.V1.Write.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.WriteProto.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Google.Firestore.V1.WriteRequest.DefaultInstance.get -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.NewBuilder() -> Google.Firestore.V1.WriteRequest.Builder?
static Google.Firestore.V1.WriteRequest.NewBuilder(Google.Firestore.V1.WriteRequest? prototype) -> Google.Firestore.V1.WriteRequest.Builder?
static Google.Firestore.V1.WriteRequest.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(byte[]? data) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteRequest?
static Google.Firestore.V1.WriteRequest.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.WriteResponse.DefaultInstance.get -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.NewBuilder() -> Google.Firestore.V1.WriteResponse.Builder?
static Google.Firestore.V1.WriteResponse.NewBuilder(Google.Firestore.V1.WriteResponse? prototype) -> Google.Firestore.V1.WriteResponse.Builder?
static Google.Firestore.V1.WriteResponse.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(byte[]? data) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResponse?
static Google.Firestore.V1.WriteResponse.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Google.Firestore.V1.WriteResult.DefaultInstance.get -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.NewBuilder() -> Google.Firestore.V1.WriteResult.Builder?
static Google.Firestore.V1.WriteResult.NewBuilder(Google.Firestore.V1.WriteResult? prototype) -> Google.Firestore.V1.WriteResult.Builder?
static Google.Firestore.V1.WriteResult.ParseDelimitedFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Java.Nio.ByteBuffer? data) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(System.IO.Stream? input) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(byte[]? data) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Google.Firestore.V1.WriteResult?
static Google.Firestore.V1.WriteResult.Parser() -> Xamarin.Protobuf.Lite.IParser?
virtual Firebase.Firestore.AggregateField.Alias.get -> string!
virtual Firebase.Firestore.AggregateField.FieldPath.get -> string!
virtual Firebase.Firestore.AggregateField.Operator.get -> string!
virtual Firebase.Firestore.AggregateQuery.AggregateFields.get -> System.Collections.Generic.IList<Firebase.Firestore.AggregateField!>!
virtual Firebase.Firestore.AggregateQuery.Get(Firebase.Firestore.AggregateSource! source) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.AggregateQuery.Query.get -> Firebase.Firestore.Query!
virtual Firebase.Firestore.AggregateQuerySnapshot.Count.get -> long
virtual Firebase.Firestore.AggregateQuerySnapshot.Get(Firebase.Firestore.AggregateField! aggregateField) -> Java.Lang.Object?
virtual Firebase.Firestore.AggregateQuerySnapshot.Get(Firebase.Firestore.AggregateField.AverageAggregateField! averageAggregateField) -> Java.Lang.Double?
virtual Firebase.Firestore.AggregateQuerySnapshot.Get(Firebase.Firestore.AggregateField.CountAggregateField! countAggregateField) -> long
virtual Firebase.Firestore.AggregateQuerySnapshot.GetDouble(Firebase.Firestore.AggregateField! aggregateField) -> Java.Lang.Double?
virtual Firebase.Firestore.AggregateQuerySnapshot.GetLong(Firebase.Firestore.AggregateField! aggregateField) -> Java.Lang.Long?
virtual Firebase.Firestore.AggregateQuerySnapshot.Query.get -> Firebase.Firestore.AggregateQuery!
virtual Firebase.Firestore.Blob.CompareTo(Java.Lang.Object! other) -> int
virtual Firebase.Firestore.Blob.ToByteString() -> Xamarin.Protobuf.Lite.ByteString!
virtual Firebase.Firestore.Blob.ToBytes() -> byte[]!
virtual Firebase.Firestore.Bundle.BundleDocument.Document.get -> Firebase.Firestore.Model.MutableDocument?
virtual Firebase.Firestore.Bundle.BundleDocument.Key.get -> Firebase.Firestore.Model.DocumentKey?
virtual Firebase.Firestore.Bundle.BundleLoader.AddElement(Firebase.Firestore.Bundle.IBundleElement? bundleElement, long byteSize) -> Firebase.Firestore.LoadBundleTaskProgress?
virtual Firebase.Firestore.Bundle.BundleLoader.ApplyChanges() -> Firebase.Database.Collection.ImmutableSortedMap?
virtual Firebase.Firestore.Bundle.BundleMetadata.BundleId.get -> string?
virtual Firebase.Firestore.Bundle.BundleMetadata.CreateTime.get -> Firebase.Firestore.Model.SnapshotVersion?
virtual Firebase.Firestore.Bundle.BundleMetadata.SchemaVersion.get -> int
virtual Firebase.Firestore.Bundle.BundleMetadata.TotalBytes.get -> long
virtual Firebase.Firestore.Bundle.BundleMetadata.TotalDocuments.get -> int
virtual Firebase.Firestore.Bundle.BundleReader.BundleMetadata.get -> Firebase.Firestore.Bundle.BundleMetadata?
virtual Firebase.Firestore.Bundle.BundleReader.BytesRead.get -> long
virtual Firebase.Firestore.Bundle.BundleReader.Close() -> void
virtual Firebase.Firestore.Bundle.BundleReader.NextElement.get -> Firebase.Firestore.Bundle.IBundleElement?
virtual Firebase.Firestore.Bundle.BundleSerializer.DecodeBundleMetadata(Org.Json.JSONObject? bundleMetadata) -> Firebase.Firestore.Bundle.BundleMetadata?
virtual Firebase.Firestore.Bundle.BundleSerializer.DecodeBundledDocumentMetadata(Org.Json.JSONObject? bundledDocumentMetadata) -> Firebase.Firestore.Bundle.BundledDocumentMetadata?
virtual Firebase.Firestore.Bundle.BundleSerializer.DecodeNamedQuery(Org.Json.JSONObject? namedQuery) -> Firebase.Firestore.Bundle.NamedQuery?
virtual Firebase.Firestore.Bundle.BundledDocumentMetadata.Exists() -> bool
virtual Firebase.Firestore.Bundle.BundledDocumentMetadata.Key.get -> Firebase.Firestore.Model.DocumentKey?
virtual Firebase.Firestore.Bundle.BundledDocumentMetadata.Queries.get -> System.Collections.Generic.IList<string!>?
virtual Firebase.Firestore.Bundle.BundledDocumentMetadata.ReadTime.get -> Firebase.Firestore.Model.SnapshotVersion?
virtual Firebase.Firestore.Bundle.BundledQuery.LimitType.get -> Firebase.Firestore.Core.Query.LimitType?
virtual Firebase.Firestore.Bundle.BundledQuery.Target.get -> Firebase.Firestore.Core.Target?
virtual Firebase.Firestore.Bundle.NamedQuery.BundledQuery.get -> Firebase.Firestore.Bundle.BundledQuery?
virtual Firebase.Firestore.Bundle.NamedQuery.Name.get -> string?
virtual Firebase.Firestore.Bundle.NamedQuery.ReadTime.get -> Firebase.Firestore.Model.SnapshotVersion?
virtual Firebase.Firestore.CollectionReference.Add(Java.Lang.Object! data) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.CollectionReference.Document() -> Firebase.Firestore.DocumentReference!
virtual Firebase.Firestore.CollectionReference.Document(string! documentPath) -> Firebase.Firestore.DocumentReference!
virtual Firebase.Firestore.CollectionReference.Id.get -> string!
virtual Firebase.Firestore.CollectionReference.Parent.get -> Firebase.Firestore.DocumentReference?
virtual Firebase.Firestore.CollectionReference.Path.get -> string!
virtual Firebase.Firestore.Core.AsyncEventListener.Mute() -> void
virtual Firebase.Firestore.Core.AsyncEventListener.OnEvent(Java.Lang.Object? value, Firebase.Firestore.FirebaseFirestoreException? error) -> void
virtual Firebase.Firestore.Core.ComponentProvider.ConnectivityMonitor.get -> Firebase.Firestore.Remote.IConnectivityMonitor?
virtual Firebase.Firestore.Core.ComponentProvider.Datastore.get -> Firebase.Firestore.Remote.Datastore?
virtual Firebase.Firestore.Core.ComponentProvider.EventManager.get -> Firebase.Firestore.Core.EventManager?
virtual Firebase.Firestore.Core.ComponentProvider.GarbageCollectionScheduler.get -> Firebase.Firestore.Local.IScheduler?
virtual Firebase.Firestore.Core.ComponentProvider.IndexBackfiller.get -> Firebase.Firestore.Local.IndexBackfiller?
virtual Firebase.Firestore.Core.ComponentProvider.Initialize(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> void
virtual Firebase.Firestore.Core.ComponentProvider.LocalStore.get -> Firebase.Firestore.Local.LocalStore?
virtual Firebase.Firestore.Core.ComponentProvider.Persistence.get -> Firebase.Firestore.Local.Persistence?
virtual Firebase.Firestore.Core.ComponentProvider.RemoteSerializer.get -> Firebase.Firestore.Remote.RemoteSerializer?
virtual Firebase.Firestore.Core.ComponentProvider.RemoteStore.get -> Firebase.Firestore.Remote.RemoteStore?
virtual Firebase.Firestore.Core.ComponentProvider.SetRemoteProvider(Firebase.Firestore.Remote.RemoteComponenetProvider? remoteProvider) -> void
virtual Firebase.Firestore.Core.ComponentProvider.SyncEngine.get -> Firebase.Firestore.Core.SyncEngine?
virtual Firebase.Firestore.Core.CompositeFilter.GetOperator() -> Firebase.Firestore.Core.CompositeFilter.Operator?
virtual Firebase.Firestore.Core.CompositeFilter.IsConjunction.get -> bool
virtual Firebase.Firestore.Core.CompositeFilter.IsDisjunction.get -> bool
virtual Firebase.Firestore.Core.CompositeFilter.IsFlat.get -> bool
virtual Firebase.Firestore.Core.CompositeFilter.IsFlatConjunction.get -> bool
virtual Firebase.Firestore.Core.CompositeFilter.WithAddedFilters(System.Collections.Generic.IList<Firebase.Firestore.Core.Filter!>? otherFilters) -> Firebase.Firestore.Core.CompositeFilter?
virtual Firebase.Firestore.Core.DocumentViewChange.Document.get -> Firebase.Firestore.Model.IDocument?
virtual Firebase.Firestore.Core.DocumentViewChange.GetType() -> Firebase.Firestore.Core.DocumentViewChange.Type?
virtual Firebase.Firestore.Core.DocumentViewChangeSet.AddChange(Firebase.Firestore.Core.DocumentViewChange? change) -> void
virtual Firebase.Firestore.Core.FieldFilter.Field.get -> Firebase.Firestore.Model.FieldPath?
virtual Firebase.Firestore.Core.FieldFilter.GetOperator() -> Firebase.Firestore.Core.FieldFilter.Operator?
virtual Firebase.Firestore.Core.FieldFilter.IsInequality.get -> bool
virtual Firebase.Firestore.Core.FieldFilter.MatchesComparison(int comp) -> bool
virtual Firebase.Firestore.Core.FieldFilter.Value.get -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Core.LimboDocumentChange.GetType() -> Firebase.Firestore.Core.LimboDocumentChange.Type?
virtual Firebase.Firestore.Core.LimboDocumentChange.Key.get -> Firebase.Firestore.Model.DocumentKey?
virtual Firebase.Firestore.Core.ListenSequence.Next() -> long
virtual Firebase.Firestore.Core.OrderBy.Field.get -> Firebase.Firestore.Model.FieldPath?
virtual Firebase.Firestore.Core.OrderBy.GetDirection() -> Firebase.Firestore.Core.OrderBy.Direction?
virtual Firebase.Firestore.Core.QueryListener.ListensToRemoteStore() -> bool
virtual Firebase.Firestore.Core.QueryListener.OnError(Firebase.Firestore.FirebaseFirestoreException? error) -> void
virtual Firebase.Firestore.Core.QueryListener.OnOnlineStateChanged(Firebase.Firestore.Core.OnlineState? onlineState) -> bool
virtual Firebase.Firestore.Core.QueryListener.OnViewSnapshot(Firebase.Firestore.Core.ViewSnapshot? newSnapshot) -> bool
virtual Firebase.Firestore.Core.QueryListener.Query.get -> Firebase.Firestore.Core.Query?
virtual Firebase.Firestore.Core.SyncEngine.ActiveLimboDocumentResolutions.get -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Java.Lang.Integer!>?
virtual Firebase.Firestore.Core.SyncEngine.EnqueuedLimboDocumentResolutions.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.DocumentKey!>?
virtual Firebase.Firestore.Core.SyncEngine.GetRemoteKeysForTarget(int targetId) -> Firebase.Database.Collection.ImmutableSortedSet?
virtual Firebase.Firestore.Core.SyncEngine.HandleCredentialChange(Firebase.Firestore.Auth.User? user) -> void
virtual Firebase.Firestore.Core.SyncEngine.HandleOnlineStateChange(Firebase.Firestore.Core.OnlineState? onlineState) -> void
virtual Firebase.Firestore.Core.SyncEngine.HandleRejectedListen(int targetId, Xamarin.Grpc.Status? error) -> void
virtual Firebase.Firestore.Core.SyncEngine.HandleRejectedWrite(int batchId, Xamarin.Grpc.Status? status) -> void
virtual Firebase.Firestore.Core.SyncEngine.HandleRemoteEvent(Firebase.Firestore.Remote.RemoteEvent? e) -> void
virtual Firebase.Firestore.Core.SyncEngine.HandleSuccessfulWrite(Firebase.Firestore.Model.Mutation.MutationBatchResult? mutationBatchResult) -> void
virtual Firebase.Firestore.Core.SyncEngine.Listen(Firebase.Firestore.Core.Query? query, bool shouldListenToRemote) -> int
virtual Firebase.Firestore.Core.SyncEngine.ListenToRemoteStore(Firebase.Firestore.Core.Query? query) -> void
virtual Firebase.Firestore.Core.SyncEngine.LoadBundle(Firebase.Firestore.Bundle.BundleReader? bundleReader, Firebase.Firestore.LoadBundleTask? resultTask) -> void
virtual Firebase.Firestore.Core.SyncEngine.RegisterPendingWritesTask(Android.Gms.Tasks.TaskCompletionSource? userTask) -> void
virtual Firebase.Firestore.Core.SyncEngine.RunAggregateQuery(Firebase.Firestore.Core.Query? query, System.Collections.Generic.IList<Firebase.Firestore.AggregateField!>? aggregateFields) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Core.SyncEngine.Transaction(Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.TransactionOptions? options, Firebase.Firestore.Util.IFunction? updateFunction) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Core.SyncEngine.WriteMutations(System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? mutations, Android.Gms.Tasks.TaskCompletionSource? userTask) -> void
virtual Firebase.Firestore.Core.TargetIdGenerator.NextId() -> int
virtual Firebase.Firestore.Core.Transaction.Commit() -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Core.Transaction.Delete(Firebase.Firestore.Model.DocumentKey? key) -> void
virtual Firebase.Firestore.Core.Transaction.Lookup(System.Collections.Generic.IList<Firebase.Firestore.Model.DocumentKey!>? keys) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Core.Transaction.Set(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Core.UserData.ParsedSetData? data) -> void
virtual Firebase.Firestore.Core.Transaction.Update(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Core.UserData.ParsedUpdateData? data) -> void
virtual Firebase.Firestore.Core.TransactionRunner.Run() -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.Contains(Firebase.Firestore.Model.FieldPath? fieldPath) -> bool
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.DataSource.get -> Firebase.Firestore.Core.UserData.Source?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.FieldTransforms.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.RootContext() -> Firebase.Firestore.Core.UserData.ParseContext?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.ToMergeData(Firebase.Firestore.Model.ObjectValue? data) -> Firebase.Firestore.Core.UserData.ParsedSetData?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.ToMergeData(Firebase.Firestore.Model.ObjectValue? data, Firebase.Firestore.Model.Mutation.FieldMask? userFieldMask) -> Firebase.Firestore.Core.UserData.ParsedSetData?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.ToSetData(Firebase.Firestore.Model.ObjectValue? data) -> Firebase.Firestore.Core.UserData.ParsedSetData?
virtual Firebase.Firestore.Core.UserData.ParseAccumulator.ToUpdateData(Firebase.Firestore.Model.ObjectValue? data) -> Firebase.Firestore.Core.UserData.ParsedUpdateData?
virtual Firebase.Firestore.Core.UserData.ParseContext.AddToFieldMask(Firebase.Firestore.Model.FieldPath? fieldPath) -> void
virtual Firebase.Firestore.Core.UserData.ParseContext.AddToFieldTransforms(Firebase.Firestore.Model.FieldPath? fieldPath, Firebase.Firestore.Model.Mutation.ITransformOperation? transformOperation) -> void
virtual Firebase.Firestore.Core.UserData.ParseContext.ChildContext(Firebase.Firestore.Model.FieldPath? fieldPath) -> Firebase.Firestore.Core.UserData.ParseContext?
virtual Firebase.Firestore.Core.UserData.ParseContext.ChildContext(int arrayIndex) -> Firebase.Firestore.Core.UserData.ParseContext?
virtual Firebase.Firestore.Core.UserData.ParseContext.ChildContext(string? fieldName) -> Firebase.Firestore.Core.UserData.ParseContext?
virtual Firebase.Firestore.Core.UserData.ParseContext.CreateError(string? reason) -> Java.Lang.RuntimeException?
virtual Firebase.Firestore.Core.UserData.ParseContext.DataSource.get -> Firebase.Firestore.Core.UserData.Source?
virtual Firebase.Firestore.Core.UserData.ParseContext.IsArrayElement.get -> bool
virtual Firebase.Firestore.Core.UserData.ParseContext.IsWrite.get -> bool
virtual Firebase.Firestore.Core.UserData.ParseContext.Path.get -> Firebase.Firestore.Model.FieldPath?
virtual Firebase.Firestore.Core.UserData.ParsedSetData.Data.get -> Firebase.Firestore.Model.ObjectValue?
virtual Firebase.Firestore.Core.UserData.ParsedSetData.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
virtual Firebase.Firestore.Core.UserData.ParsedSetData.FieldTransforms.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>?
virtual Firebase.Firestore.Core.UserData.ParsedSetData.ToMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> Firebase.Firestore.Model.Mutation.Mutation?
virtual Firebase.Firestore.Core.UserData.ParsedUpdateData.Data.get -> Firebase.Firestore.Model.ObjectValue?
virtual Firebase.Firestore.Core.UserData.ParsedUpdateData.FieldMask.get -> Firebase.Firestore.Model.Mutation.FieldMask?
virtual Firebase.Firestore.Core.UserData.ParsedUpdateData.FieldTransforms.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>?
virtual Firebase.Firestore.Core.UserData.ParsedUpdateData.ToMutation(Firebase.Firestore.Model.DocumentKey? key, Firebase.Firestore.Model.Mutation.Precondition? precondition) -> Firebase.Firestore.Model.Mutation.Mutation?
virtual Firebase.Firestore.Core.View.ApplyChanges(Firebase.Firestore.Core.View.DocumentChanges? docChanges) -> Firebase.Firestore.Core.ViewChange?
virtual Firebase.Firestore.Core.View.ApplyChanges(Firebase.Firestore.Core.View.DocumentChanges? docChanges, Firebase.Firestore.Remote.TargetChange? targetChange) -> Firebase.Firestore.Core.ViewChange?
virtual Firebase.Firestore.Core.View.ApplyChanges(Firebase.Firestore.Core.View.DocumentChanges? docChanges, Firebase.Firestore.Remote.TargetChange? targetChange, bool targetIsPendingReset) -> Firebase.Firestore.Core.ViewChange?
virtual Firebase.Firestore.Core.View.ApplyOnlineStateChange(Firebase.Firestore.Core.OnlineState? onlineState) -> Firebase.Firestore.Core.ViewChange?
virtual Firebase.Firestore.Core.View.ComputeDocChanges(Firebase.Database.Collection.ImmutableSortedMap? docChanges) -> Firebase.Firestore.Core.View.DocumentChanges?
virtual Firebase.Firestore.Core.View.ComputeDocChanges(Firebase.Database.Collection.ImmutableSortedMap? docChanges, Firebase.Firestore.Core.View.DocumentChanges? previousChanges) -> Firebase.Firestore.Core.View.DocumentChanges?
virtual Firebase.Firestore.Core.View.DocumentChanges.NeedsRefill() -> bool
virtual Firebase.Firestore.Core.View.SyncState.get -> Firebase.Firestore.Core.ViewSnapshot.SyncState?
virtual Firebase.Firestore.Core.ViewChange.LimboChanges.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.LimboDocumentChange!>?
virtual Firebase.Firestore.Core.ViewChange.Snapshot.get -> Firebase.Firestore.Core.ViewSnapshot?
virtual Firebase.Firestore.Core.ViewSnapshot.Changes.get -> System.Collections.Generic.IList<Firebase.Firestore.Core.DocumentViewChange!>?
virtual Firebase.Firestore.Core.ViewSnapshot.DidSyncStateChange() -> bool
virtual Firebase.Firestore.Core.ViewSnapshot.Documents.get -> Firebase.Firestore.Model.DocumentSet?
virtual Firebase.Firestore.Core.ViewSnapshot.ExcludesMetadataChanges() -> bool
virtual Firebase.Firestore.Core.ViewSnapshot.HasCachedResults.get -> bool
virtual Firebase.Firestore.Core.ViewSnapshot.HasPendingWrites.get -> bool
virtual Firebase.Firestore.Core.ViewSnapshot.IsFromCache.get -> bool
virtual Firebase.Firestore.Core.ViewSnapshot.MutatedKeys.get -> Firebase.Database.Collection.ImmutableSortedSet?
virtual Firebase.Firestore.Core.ViewSnapshot.OldDocuments.get -> Firebase.Firestore.Model.DocumentSet?
virtual Firebase.Firestore.Core.ViewSnapshot.Query.get -> Firebase.Firestore.Core.Query?
virtual Firebase.Firestore.DocumentChange.Document.get -> Firebase.Firestore.QueryDocumentSnapshot!
virtual Firebase.Firestore.DocumentChange.GetType() -> Firebase.Firestore.DocumentChange.Type!
virtual Firebase.Firestore.DocumentChange.NewIndex.get -> int
virtual Firebase.Firestore.DocumentChange.OldIndex.get -> int
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Android.App.Activity! activity, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Android.App.Activity! activity, Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Firebase.Firestore.SnapshotListenOptions! options, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.AddSnapshotListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.DocumentReference.Collection(string! collectionPath) -> Firebase.Firestore.CollectionReference!
virtual Firebase.Firestore.DocumentReference.Delete() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Firestore.get -> Firebase.Firestore.FirebaseFirestore!
virtual Firebase.Firestore.DocumentReference.Get() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Get(Firebase.Firestore.Source! source) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Id.get -> string!
virtual Firebase.Firestore.DocumentReference.Parent.get -> Firebase.Firestore.CollectionReference!
virtual Firebase.Firestore.DocumentReference.Path.get -> string!
virtual Firebase.Firestore.DocumentReference.Set(Java.Lang.Object! data) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Set(Java.Lang.Object! data, Firebase.Firestore.SetOptions! options) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Update(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Update(System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>! data) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentReference.Update(string! field, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.DocumentSnapshot.Contains(Firebase.Firestore.FieldPath! fieldPath) -> bool
virtual Firebase.Firestore.DocumentSnapshot.Contains(string! field) -> bool
virtual Firebase.Firestore.DocumentSnapshot.Data.get -> System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>?
virtual Firebase.Firestore.DocumentSnapshot.Exists() -> bool
virtual Firebase.Firestore.DocumentSnapshot.Get(Firebase.Firestore.FieldPath! fieldPath) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(Firebase.Firestore.FieldPath! fieldPath, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Class! valueType) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Class! valueType, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(string! field) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(string! field, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(string! field, Java.Lang.Class! valueType) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.Get(string! field, Java.Lang.Class! valueType, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.GetBlob(string! field) -> Firebase.Firestore.Blob?
virtual Firebase.Firestore.DocumentSnapshot.GetBoolean(string! field) -> Java.Lang.Boolean?
virtual Firebase.Firestore.DocumentSnapshot.GetData(Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>?
virtual Firebase.Firestore.DocumentSnapshot.GetDate(string! field) -> Java.Util.Date?
virtual Firebase.Firestore.DocumentSnapshot.GetDate(string! field, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Util.Date?
virtual Firebase.Firestore.DocumentSnapshot.GetDocumentReference(string! field) -> Firebase.Firestore.DocumentReference?
virtual Firebase.Firestore.DocumentSnapshot.GetDouble(string! field) -> Java.Lang.Double?
virtual Firebase.Firestore.DocumentSnapshot.GetGeoPoint(string! field) -> Firebase.Firestore.GeoPoint?
virtual Firebase.Firestore.DocumentSnapshot.GetLong(string! field) -> Java.Lang.Long?
virtual Firebase.Firestore.DocumentSnapshot.GetString(string! field) -> string?
virtual Firebase.Firestore.DocumentSnapshot.GetTimestamp(string! field) -> Firebase.Timestamp?
virtual Firebase.Firestore.DocumentSnapshot.GetTimestamp(string! field, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Firebase.Timestamp?
virtual Firebase.Firestore.DocumentSnapshot.GetVectorValue(string! field) -> Firebase.Firestore.VectorValue?
virtual Firebase.Firestore.DocumentSnapshot.Id.get -> string!
virtual Firebase.Firestore.DocumentSnapshot.Metadata.get -> Firebase.Firestore.SnapshotMetadata!
virtual Firebase.Firestore.DocumentSnapshot.Reference.get -> Firebase.Firestore.DocumentReference!
virtual Firebase.Firestore.DocumentSnapshot.ToObject(Java.Lang.Class! valueType) -> Java.Lang.Object?
virtual Firebase.Firestore.DocumentSnapshot.ToObject(Java.Lang.Class! valueType, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> Java.Lang.Object?
virtual Firebase.Firestore.FirebaseFirestore.AddSnapshotsInSyncListener(Android.App.Activity! activity, Java.Lang.IRunnable! runnable) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.FirebaseFirestore.AddSnapshotsInSyncListener(Java.Lang.IRunnable! runnable) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.FirebaseFirestore.AddSnapshotsInSyncListener(Java.Util.Concurrent.IExecutor! executor, Java.Lang.IRunnable! runnable) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.FirebaseFirestore.App.get -> Firebase.FirebaseApp!
virtual Firebase.Firestore.FirebaseFirestore.Batch() -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.FirebaseFirestore.ClearPersistence() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.Collection(string! collectionPath) -> Firebase.Firestore.CollectionReference!
virtual Firebase.Firestore.FirebaseFirestore.CollectionGroup(string! collectionId) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.FirebaseFirestore.DisableNetwork() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.Document(string! documentPath) -> Firebase.Firestore.DocumentReference!
virtual Firebase.Firestore.FirebaseFirestore.EnableNetwork() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.FirestoreSettings.get -> Firebase.Firestore.FirebaseFirestoreSettings!
virtual Firebase.Firestore.FirebaseFirestore.FirestoreSettings.set -> void
virtual Firebase.Firestore.FirebaseFirestore.GetNamedQuery(string! name) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.LoadBundle(Java.Nio.ByteBuffer! bundleData) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.FirebaseFirestore.LoadBundle(System.IO.Stream! bundleData) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.FirebaseFirestore.LoadBundle(byte[]! bundleData) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.FirebaseFirestore.PersistentCacheIndexManager.get -> Firebase.Firestore.PersistentCacheIndexManager?
virtual Firebase.Firestore.FirebaseFirestore.RunBatch(Firebase.Firestore.WriteBatch.IFunction! batchFunction) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.RunTransaction(Firebase.Firestore.Transaction.IFunction! updateFunction) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.RunTransaction(Firebase.Firestore.TransactionOptions! options, Firebase.Firestore.Transaction.IFunction! updateFunction) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.SetIndexConfiguration(string! json) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.Terminate() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestore.UseEmulator(string! host, int port) -> void
virtual Firebase.Firestore.FirebaseFirestore.WaitForPendingWrites() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.FirebaseFirestoreException.GetCode() -> Firebase.Firestore.FirebaseFirestoreException.Code!
virtual Firebase.Firestore.FirestoreRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>?
virtual Firebase.Firestore.GeoPoint.CompareTo(Java.Lang.Object! other) -> int
virtual Firebase.Firestore.GeoPoint.Latitude.get -> double
virtual Firebase.Firestore.GeoPoint.Longitude.get -> double
virtual Firebase.Firestore.Index.FirestoreIndexValueWriter.WriteIndexValue(Google.Firestore.V1.Value? value, Firebase.Firestore.Index.DirectionalIndexByteEncoder? encoder) -> void
virtual Firebase.Firestore.Index.IndexByteEncoder.ForKind(Firebase.Firestore.Model.FieldIndex.Segment.Kind? kind) -> Firebase.Firestore.Index.DirectionalIndexByteEncoder?
virtual Firebase.Firestore.Index.IndexByteEncoder.GetEncodedBytes() -> byte[]?
virtual Firebase.Firestore.Index.IndexByteEncoder.Reset() -> void
virtual Firebase.Firestore.Index.IndexByteEncoder.Seed(byte[]? encodedBytes) -> void
virtual Firebase.Firestore.Index.IndexEntry.CompareTo(Firebase.Firestore.Index.IndexEntry? other) -> int
virtual Firebase.Firestore.Index.OrderedCodeWriter.EncodedBytes() -> byte[]?
virtual Firebase.Firestore.Index.OrderedCodeWriter.Reset() -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.Seed(byte[]? encodedBytes) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteBytesAscending(Xamarin.Protobuf.Lite.ByteString? value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteBytesDescending(Xamarin.Protobuf.Lite.ByteString? value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteDoubleAscending(double val) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteDoubleDescending(double val) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteInfinityAscending() -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteInfinityDescending() -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteSignedLongAscending(long value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteSignedLongDescending(long value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteUnsignedLongAscending(long value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteUnsignedLongDescending(long value) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteUtf8Ascending(Java.Lang.ICharSequence? sequence) -> void
virtual Firebase.Firestore.Index.OrderedCodeWriter.WriteUtf8Descending(Java.Lang.ICharSequence? sequence) -> void
virtual Firebase.Firestore.LoadBundleTask.AddOnProgressListener(Android.App.Activity! activity, Firebase.Firestore.IOnProgressListener! listener) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.LoadBundleTask.AddOnProgressListener(Firebase.Firestore.IOnProgressListener! listener) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.LoadBundleTask.AddOnProgressListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Firestore.IOnProgressListener! listener) -> Firebase.Firestore.LoadBundleTask!
virtual Firebase.Firestore.LoadBundleTask.SetException(Java.Lang.Exception! exception) -> void
virtual Firebase.Firestore.LoadBundleTask.SetResult(Firebase.Firestore.LoadBundleTaskProgress! result) -> void
virtual Firebase.Firestore.LoadBundleTask.UpdateProgress(Firebase.Firestore.LoadBundleTaskProgress! progressUpdate) -> void
virtual Firebase.Firestore.Local.IndexBackfiller.Backfill() -> int
virtual Firebase.Firestore.Local.IndexBackfiller.GetScheduler() -> Firebase.Firestore.Local.IndexBackfiller.Scheduler?
virtual Firebase.Firestore.Local.IndexBackfiller.Scheduler.Start() -> void
virtual Firebase.Firestore.Local.IndexBackfiller.Scheduler.Stop() -> void
virtual Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.Start() -> void
virtual Firebase.Firestore.Local.LruGarbageCollector.GCScheduler.Stop() -> void
virtual Firebase.Firestore.Local.LruGarbageCollector.NewScheduler(Firebase.Firestore.Util.AsyncQueue? asyncQueue, Firebase.Firestore.Local.LocalStore? localStore) -> Firebase.Firestore.Local.LruGarbageCollector.GCScheduler?
virtual Firebase.Firestore.Local.LruGarbageCollector.Results.DocumentsRemoved.get -> int
virtual Firebase.Firestore.Local.LruGarbageCollector.Results.HasRun.get -> bool
virtual Firebase.Firestore.Local.LruGarbageCollector.Results.SequenceNumbersCollected.get -> int
virtual Firebase.Firestore.Local.LruGarbageCollector.Results.TargetsRemoved.get -> int
virtual Firebase.Firestore.Local.LruGarbageCollector.WithNewThreshold(long cacheThreshold) -> Firebase.Firestore.Local.LruGarbageCollector?
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.GetOverlay(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.Mutation.Overlay?
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.GetOverlays(Firebase.Firestore.Model.ResourcePath? collection, int sinceBatchId) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.GetOverlays(Java.Util.ISortedSet? keys) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.GetOverlays(string? collectionGroup, int sinceBatchId, int count) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.RemoveOverlaysForBatchId(int batchId) -> void
virtual Firebase.Firestore.Local.MemoryDocumentOverlayCache.SaveOverlays(int largestBatchId, System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Mutation!>? overlays) -> void
virtual Firebase.Firestore.Local.MemoryOverlayMigrationManager.Run() -> void
virtual Firebase.Firestore.Local.OverlayedDocument.Document.get -> Firebase.Firestore.Model.IDocument?
virtual Firebase.Firestore.Local.OverlayedDocument.MutatedFields.get -> Firebase.Firestore.Model.Mutation.FieldMask?
virtual Firebase.Firestore.Local.QueryContext.DocumentReadCount.get -> int
virtual Firebase.Firestore.Local.QueryContext.IncrementDocumentReadCount() -> void
virtual Firebase.Firestore.Local.QueryEngine.GetDocumentsMatchingQuery(Firebase.Firestore.Core.Query? query, Firebase.Firestore.Model.SnapshotVersion? lastLimboFreeSnapshotVersion, Firebase.Database.Collection.ImmutableSortedSet? remoteKeys) -> Firebase.Database.Collection.ImmutableSortedMap?
virtual Firebase.Firestore.Local.QueryEngine.SetIndexAutoCreationEnabled(bool isEnabled) -> void
virtual Firebase.Firestore.Local.QueryResult.Documents.get -> Firebase.Database.Collection.ImmutableSortedMap?
virtual Firebase.Firestore.Local.QueryResult.RemoteKeys.get -> Firebase.Database.Collection.ImmutableSortedSet?
virtual Firebase.Firestore.Local.ReferenceSet.AddReference(Firebase.Firestore.Model.DocumentKey? key, int targetOrBatchId) -> void
virtual Firebase.Firestore.Local.ReferenceSet.AddReferences(Firebase.Database.Collection.ImmutableSortedSet? keys, int targetOrBatchId) -> void
virtual Firebase.Firestore.Local.ReferenceSet.ContainsKey(Firebase.Firestore.Model.DocumentKey? key) -> bool
virtual Firebase.Firestore.Local.ReferenceSet.IsEmpty.get -> bool
virtual Firebase.Firestore.Local.ReferenceSet.ReferencesForId(int target) -> Firebase.Database.Collection.ImmutableSortedSet?
virtual Firebase.Firestore.Local.ReferenceSet.RemoveAllReferences() -> void
virtual Firebase.Firestore.Local.ReferenceSet.RemoveReference(Firebase.Firestore.Model.DocumentKey? key, int targetOrBatchId) -> void
virtual Firebase.Firestore.Local.ReferenceSet.RemoveReferences(Firebase.Database.Collection.ImmutableSortedSet? keys, int targetOrBatchId) -> void
virtual Firebase.Firestore.Local.ReferenceSet.RemoveReferencesForId(int targetId) -> Firebase.Database.Collection.ImmutableSortedSet?
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.GetOverlay(Firebase.Firestore.Model.DocumentKey? key) -> Firebase.Firestore.Model.Mutation.Overlay?
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.GetOverlays(Firebase.Firestore.Model.ResourcePath? collection, int sinceBatchId) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.GetOverlays(Java.Util.ISortedSet? keys) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.GetOverlays(string? collectionGroup, int sinceBatchId, int count) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Overlay!>?
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.RemoveOverlaysForBatchId(int batchId) -> void
virtual Firebase.Firestore.Local.SQLiteDocumentOverlayCache.SaveOverlays(int largestBatchId, System.Collections.Generic.IDictionary<Firebase.Firestore.Model.DocumentKey!, Firebase.Firestore.Model.Mutation.Mutation!>? overlays) -> void
virtual Firebase.Firestore.Local.SQLiteGlobalsCache.SessionsToken.get -> Xamarin.Protobuf.Lite.ByteString!
virtual Firebase.Firestore.Local.SQLiteGlobalsCache.SetSessionToken(Xamarin.Protobuf.Lite.ByteString! value) -> void
virtual Firebase.Firestore.Local.SQLiteOverlayMigrationManager.Run() -> void
virtual Firebase.Firestore.MemoryCacheSettings.Builder.Build() -> Firebase.Firestore.MemoryCacheSettings!
virtual Firebase.Firestore.MemoryCacheSettings.Builder.SetGcSettings(Firebase.Firestore.IMemoryGarbageCollectorSettings! gcSettings) -> Firebase.Firestore.MemoryCacheSettings.Builder!
virtual Firebase.Firestore.MemoryEagerGcSettings.Builder.Build() -> Firebase.Firestore.MemoryEagerGcSettings!
virtual Firebase.Firestore.MemoryLruGcSettings.Builder.Build() -> Firebase.Firestore.MemoryLruGcSettings!
virtual Firebase.Firestore.MemoryLruGcSettings.Builder.SetSizeBytes(long size) -> Firebase.Firestore.MemoryLruGcSettings.Builder!
virtual Firebase.Firestore.Model.BasePath.Append(Java.Lang.Object? path) -> Java.Lang.Object?
virtual Firebase.Firestore.Model.BasePath.Append(string? segment) -> Java.Lang.Object?
virtual Firebase.Firestore.Model.BasePath.CompareTo(Java.Lang.Object! o) -> int
virtual Firebase.Firestore.Model.BasePath.FirstSegment.get -> string?
virtual Firebase.Firestore.Model.BasePath.GetSegment(int index) -> string?
virtual Firebase.Firestore.Model.BasePath.IsEmpty.get -> bool
virtual Firebase.Firestore.Model.BasePath.IsImmediateParentOf(Java.Lang.Object? potentialChild) -> bool
virtual Firebase.Firestore.Model.BasePath.IsPrefixOf(Java.Lang.Object? path) -> bool
virtual Firebase.Firestore.Model.BasePath.KeepFirst(int count) -> Java.Lang.Object?
virtual Firebase.Firestore.Model.BasePath.LastSegment.get -> string?
virtual Firebase.Firestore.Model.BasePath.Length() -> int
virtual Firebase.Firestore.Model.BasePath.PopFirst() -> Java.Lang.Object?
virtual Firebase.Firestore.Model.BasePath.PopFirst(int count) -> Java.Lang.Object?
virtual Firebase.Firestore.Model.BasePath.PopLast() -> Java.Lang.Object?
virtual Firebase.Firestore.Model.FieldIndex.ArraySegment.get -> Firebase.Firestore.Model.FieldIndex.Segment?
virtual Firebase.Firestore.Model.FieldIndex.DirectionalSegments.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.FieldIndex.Segment!>?
virtual Firebase.Firestore.Model.FieldIndex.IndexOffset.CompareTo(Firebase.Firestore.Model.FieldIndex.IndexOffset? other) -> int
virtual Firebase.Firestore.Model.FieldIndex.Segment.CompareTo(Firebase.Firestore.Model.FieldIndex.Segment? other) -> int
virtual Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ApplyToLocalView(Google.Firestore.V1.Value? previousValue, Firebase.Timestamp? localWriteTime) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ApplyToRemoteDocument(Google.Firestore.V1.Value? previousValue, Google.Firestore.V1.Value? transformResult) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.ArrayTransformOperation.ComputeBaseValue(Google.Firestore.V1.Value? currentValue) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.ArrayTransformOperation.Elements.get -> System.Collections.Generic.IList<Google.Firestore.V1.Value!>?
virtual Firebase.Firestore.Model.Mutation.Mutation.ExtractTransformBaseValue(Firebase.Firestore.Model.IDocument? document) -> Firebase.Firestore.Model.ObjectValue?
virtual Firebase.Firestore.Model.Mutation.Mutation.FieldTransforms.get -> System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.FieldTransform!>?
virtual Firebase.Firestore.Model.Mutation.Mutation.Key.get -> Firebase.Firestore.Model.DocumentKey?
virtual Firebase.Firestore.Model.Mutation.Mutation.LocalTransformResults(Firebase.Timestamp? localWriteTime, Firebase.Firestore.Model.MutableDocument? mutableDocument) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.FieldPath!, Google.Firestore.V1.Value!>?
virtual Firebase.Firestore.Model.Mutation.Mutation.Precondition.get -> Firebase.Firestore.Model.Mutation.Precondition?
virtual Firebase.Firestore.Model.Mutation.Mutation.ServerTransformResults(Firebase.Firestore.Model.MutableDocument? mutableDocument, System.Collections.Generic.IList<Google.Firestore.V1.Value!>? serverTransformResults) -> System.Collections.Generic.IDictionary<Firebase.Firestore.Model.FieldPath!, Google.Firestore.V1.Value!>?
virtual Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.ApplyToLocalView(Google.Firestore.V1.Value? previousValue, Firebase.Timestamp? localWriteTime) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.ApplyToRemoteDocument(Google.Firestore.V1.Value? previousValue, Google.Firestore.V1.Value? transformResult) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.ComputeBaseValue(Google.Firestore.V1.Value? previousValue) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.NumericIncrementTransformOperation.Operand.get -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.Overlay.Key.get -> Firebase.Firestore.Model.DocumentKey?
virtual Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ApplyToLocalView(Google.Firestore.V1.Value? previousValue, Firebase.Timestamp? localWriteTime) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ApplyToRemoteDocument(Google.Firestore.V1.Value? previousValue, Google.Firestore.V1.Value? transformResult) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.Mutation.ServerTimestampOperation.ComputeBaseValue(Google.Firestore.V1.Value? currentValue) -> Google.Firestore.V1.Value?
virtual Firebase.Firestore.Model.TargetIndexMatcher.BuildTargetIndex() -> Firebase.Firestore.Model.FieldIndex?
virtual Firebase.Firestore.Model.TargetIndexMatcher.HasMultipleInequality.get -> bool
virtual Firebase.Firestore.Model.TargetIndexMatcher.ServedByIndex(Firebase.Firestore.Model.FieldIndex? index) -> bool
virtual Firebase.Firestore.PersistentCacheSettings.Builder.Build() -> Firebase.Firestore.PersistentCacheSettings!
virtual Firebase.Firestore.PersistentCacheSettings.Builder.SetSizeBytes(long sizeBytes) -> Firebase.Firestore.PersistentCacheSettings.Builder!
virtual Firebase.Firestore.Query.AddSnapshotListener(Android.App.Activity! activity, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Android.App.Activity! activity, Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Firebase.Firestore.SnapshotListenOptions! options, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.AddSnapshotListener(Java.Util.Concurrent.IExecutor! executor, Firebase.Firestore.MetadataChanges! metadataChanges, Firebase.Firestore.IEventListener! listener) -> Firebase.Firestore.IListenerRegistration!
virtual Firebase.Firestore.Query.Aggregate(Firebase.Firestore.AggregateField! aggregateField, params Firebase.Firestore.AggregateField![]! aggregateFields) -> Firebase.Firestore.AggregateQuery!
virtual Firebase.Firestore.Query.Count() -> Firebase.Firestore.AggregateQuery!
virtual Firebase.Firestore.Query.EndAt(Firebase.Firestore.DocumentSnapshot! snapshot) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.EndAt(params Java.Lang.Object![]? fieldValues) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.EndBefore(Firebase.Firestore.DocumentSnapshot! snapshot) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.EndBefore(params Java.Lang.Object![]? fieldValues) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.Firestore.get -> Firebase.Firestore.FirebaseFirestore!
virtual Firebase.Firestore.Query.Get() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.Query.Get(Firebase.Firestore.Source! source) -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.Query.Limit(long limit) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.LimitToLast(long limit) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.OrderBy(Firebase.Firestore.FieldPath! fieldPath) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.OrderBy(Firebase.Firestore.FieldPath! fieldPath, Firebase.Firestore.Query.Direction! direction) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.OrderBy(string! field) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.OrderBy(string! field, Firebase.Firestore.Query.Direction! direction) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.StartAfter(Firebase.Firestore.DocumentSnapshot! snapshot) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.StartAfter(params Java.Lang.Object![]? fieldValues) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.StartAt(Firebase.Firestore.DocumentSnapshot! snapshot) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.StartAt(params Java.Lang.Object![]? fieldValues) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.Where(Firebase.Firestore.Filter! filter) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereArrayContains(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereArrayContains(string! field, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereArrayContainsAny(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereArrayContainsAny(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereEqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereGreaterThan(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereGreaterThan(string! field, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereGreaterThanOrEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereGreaterThanOrEqualTo(string! field, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereIn(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereIn(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereLessThan(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereLessThan(string! field, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereLessThanOrEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereLessThanOrEqualTo(string! field, Java.Lang.Object! value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereNotEqualTo(Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereNotEqualTo(string! field, Java.Lang.Object? value) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereNotIn(Firebase.Firestore.FieldPath! fieldPath, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.Query.WhereNotIn(string! field, System.Collections.Generic.IList<Java.Lang.Object!>! values) -> Firebase.Firestore.Query!
virtual Firebase.Firestore.QuerySnapshot.DocumentChanges.get -> System.Collections.Generic.IList<Firebase.Firestore.DocumentChange!>!
virtual Firebase.Firestore.QuerySnapshot.Documents.get -> System.Collections.Generic.IList<Firebase.Firestore.DocumentSnapshot!>!
virtual Firebase.Firestore.QuerySnapshot.GetDocumentChanges(Firebase.Firestore.MetadataChanges! metadataChanges) -> System.Collections.Generic.IList<Firebase.Firestore.DocumentChange!>!
virtual Firebase.Firestore.QuerySnapshot.IsEmpty.get -> bool
virtual Firebase.Firestore.QuerySnapshot.Iterator() -> Java.Util.IIterator!
virtual Firebase.Firestore.QuerySnapshot.Metadata.get -> Firebase.Firestore.SnapshotMetadata!
virtual Firebase.Firestore.QuerySnapshot.Query.get -> Firebase.Firestore.Query!
virtual Firebase.Firestore.QuerySnapshot.Size() -> int
virtual Firebase.Firestore.QuerySnapshot.ToObjects(Java.Lang.Class! clazz) -> System.Collections.IList!
virtual Firebase.Firestore.QuerySnapshot.ToObjects(Java.Lang.Class! clazz, Firebase.Firestore.DocumentSnapshot.ServerTimestampBehavior! serverTimestampBehavior) -> System.Collections.IList!
virtual Firebase.Firestore.Remote.Datastore.Commit(System.Collections.Generic.IList<Firebase.Firestore.Model.Mutation.Mutation!>? mutations) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Remote.Datastore.Lookup(System.Collections.Generic.IList<Firebase.Firestore.Model.DocumentKey!>? keys) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Remote.Datastore.RunAggregateQuery(Firebase.Firestore.Core.Query? query, System.Collections.Generic.IList<Firebase.Firestore.AggregateField!>? aggregateFields) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Remote.FirebaseClientGrpcMetadataProvider.UpdateMetadata(Xamarin.Grpc.Metadata! metadata) -> void
virtual Firebase.Firestore.Remote.FirestoreChannel.InvalidateToken() -> void
virtual Firebase.Firestore.Remote.FirestoreChannel.Shutdown() -> void
virtual Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.OnClose(Xamarin.Grpc.Status? status) -> void
virtual Firebase.Firestore.Remote.FirestoreChannel.StreamingListener.OnMessage(Java.Lang.Object? message) -> void
virtual Firebase.Firestore.Remote.GrpcCallProvider.CreateClientCall(Xamarin.Grpc.MethodDescriptor? methodDescriptor) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Remote.GrpcCallProvider.Shutdown() -> void
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.ConnectivityMonitor.get -> Firebase.Firestore.Remote.IConnectivityMonitor?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.CreateConnectivityMonitor(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.IConnectivityMonitor?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.CreateDatastore(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.Datastore?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.CreateFirestoreChannel(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.FirestoreChannel?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.CreateGrpcCallProvider(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.GrpcCallProvider?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.CreateRemoteSerializer(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> Firebase.Firestore.Remote.RemoteSerializer?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.Datastore.get -> Firebase.Firestore.Remote.Datastore?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.FirestoreChannel.get -> Firebase.Firestore.Remote.FirestoreChannel?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.GrpcCallProvider.get -> Firebase.Firestore.Remote.GrpcCallProvider?
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.Initialize(Firebase.Firestore.Core.ComponentProvider.Configuration? configuration) -> void
virtual Firebase.Firestore.Remote.RemoteComponenetProvider.RemoteSerializer.get -> Firebase.Firestore.Remote.RemoteSerializer?
virtual Firebase.Firestore.Remote.WatchChangeAggregator.CreateRemoteEvent(Firebase.Firestore.Model.SnapshotVersion? snapshotVersion) -> Firebase.Firestore.Remote.RemoteEvent?
virtual Firebase.Firestore.Remote.WatchChangeAggregator.HandleDocumentChange(Firebase.Firestore.Remote.WatchChange.DocumentChange? documentChange) -> void
virtual Firebase.Firestore.Remote.WatchChangeAggregator.HandleExistenceFilter(Firebase.Firestore.Remote.WatchChange.ExistenceFilterWatchChange? watchChange) -> void
virtual Firebase.Firestore.Remote.WatchChangeAggregator.HandleTargetChange(Firebase.Firestore.Remote.WatchChange.WatchTargetChange? targetChange) -> void
virtual Firebase.Firestore.Remote.WatchStream.InhibitBackoff() -> void
virtual Firebase.Firestore.Remote.WatchStream.IsOpen.get -> bool
virtual Firebase.Firestore.Remote.WatchStream.IsStarted.get -> bool
virtual Firebase.Firestore.Remote.WatchStream.OnFirst(Google.Firestore.V1.ListenResponse? listenResponse) -> void
virtual Firebase.Firestore.Remote.WatchStream.OnNext(Google.Firestore.V1.ListenResponse? listenResponse) -> void
virtual Firebase.Firestore.Remote.WatchStream.Start() -> void
virtual Firebase.Firestore.Remote.WatchStream.Stop() -> void
virtual Firebase.Firestore.Remote.WatchStream.TearDown() -> void
virtual Firebase.Firestore.Remote.WatchStream.UnwatchTarget(int targetId) -> void
virtual Firebase.Firestore.Remote.WatchStream.WatchQuery(Firebase.Firestore.Local.TargetData? targetData) -> void
virtual Firebase.Firestore.Remote.WriteStream.InhibitBackoff() -> void
virtual Firebase.Firestore.Remote.WriteStream.IsOpen.get -> bool
virtual Firebase.Firestore.Remote.WriteStream.IsStarted.get -> bool
virtual Firebase.Firestore.Remote.WriteStream.OnFirst(Google.Firestore.V1.WriteResponse? response) -> void
virtual Firebase.Firestore.Remote.WriteStream.OnNext(Google.Firestore.V1.WriteResponse? response) -> void
virtual Firebase.Firestore.Remote.WriteStream.Start() -> void
virtual Firebase.Firestore.Remote.WriteStream.Stop() -> void
virtual Firebase.Firestore.Remote.WriteStream.TearDown() -> void
virtual Firebase.Firestore.SnapshotListenOptions.Builder.Build() -> Firebase.Firestore.SnapshotListenOptions!
virtual Firebase.Firestore.SnapshotListenOptions.Builder.SetActivity(Android.App.Activity! activity) -> Firebase.Firestore.SnapshotListenOptions.Builder!
virtual Firebase.Firestore.SnapshotListenOptions.Builder.SetExecutor(Java.Util.Concurrent.IExecutor! executor) -> Firebase.Firestore.SnapshotListenOptions.Builder!
virtual Firebase.Firestore.SnapshotListenOptions.Builder.SetMetadataChanges(Firebase.Firestore.MetadataChanges! metadataChanges) -> Firebase.Firestore.SnapshotListenOptions.Builder!
virtual Firebase.Firestore.SnapshotListenOptions.Builder.SetSource(Firebase.Firestore.ListenSource! source) -> Firebase.Firestore.SnapshotListenOptions.Builder!
virtual Firebase.Firestore.SnapshotMetadata.HasPendingWrites.get -> bool
virtual Firebase.Firestore.SnapshotMetadata.IsFromCache.get -> bool
virtual Firebase.Firestore.Transaction.Delete(Firebase.Firestore.DocumentReference! documentRef) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.Transaction.Get(Firebase.Firestore.DocumentReference! documentRef) -> Firebase.Firestore.DocumentSnapshot!
virtual Firebase.Firestore.Transaction.Set(Firebase.Firestore.DocumentReference! documentRef, Java.Lang.Object! data) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.Transaction.Set(Firebase.Firestore.DocumentReference! documentRef, Java.Lang.Object! data, Firebase.Firestore.SetOptions! options) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.Transaction.Update(Firebase.Firestore.DocumentReference! documentRef, Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.Transaction.Update(Firebase.Firestore.DocumentReference! documentRef, System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>! data) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.Transaction.Update(Firebase.Firestore.DocumentReference! documentRef, string! field, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Firebase.Firestore.Transaction!
virtual Firebase.Firestore.UserDataWriter.ConvertValue(Google.Firestore.V1.Value? value) -> Java.Lang.Object?
virtual Firebase.Firestore.Util.AsyncQueue.ContainsDelayedTask(Firebase.Firestore.Util.AsyncQueue.TimerId? timerId) -> bool
virtual Firebase.Firestore.Util.AsyncQueue.DelayedTask.Cancel() -> void
virtual Firebase.Firestore.Util.AsyncQueue.Enqueue(Java.Lang.IRunnable? task) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Util.AsyncQueue.Enqueue(Java.Util.Concurrent.ICallable? task) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Util.AsyncQueue.EnqueueAfterDelay(Firebase.Firestore.Util.AsyncQueue.TimerId? timerId, long delayMs, Java.Lang.IRunnable? task) -> Firebase.Firestore.Util.AsyncQueue.DelayedTask?
virtual Firebase.Firestore.Util.AsyncQueue.EnqueueAndForget(Java.Lang.IRunnable? task) -> void
virtual Firebase.Firestore.Util.AsyncQueue.EnqueueAndForgetEvenAfterShutdown(Java.Lang.IRunnable? task) -> void
virtual Firebase.Firestore.Util.AsyncQueue.EnqueueAndInitiateShutdown(Java.Lang.IRunnable? task) -> Android.Gms.Tasks.Task?
virtual Firebase.Firestore.Util.AsyncQueue.Executor.get -> Java.Util.Concurrent.IExecutor?
virtual Firebase.Firestore.Util.AsyncQueue.IsShuttingDown.get -> bool
virtual Firebase.Firestore.Util.AsyncQueue.Panic(Java.Lang.Throwable? t) -> void
virtual Firebase.Firestore.Util.AsyncQueue.RunDelayedTasksUntil(Firebase.Firestore.Util.AsyncQueue.TimerId? lastTimerId) -> void
virtual Firebase.Firestore.Util.AsyncQueue.RunSync(Java.Lang.IRunnable? task) -> void
virtual Firebase.Firestore.Util.AsyncQueue.Shutdown() -> void
virtual Firebase.Firestore.Util.AsyncQueue.SkipDelaysForTimerId(Firebase.Firestore.Util.AsyncQueue.TimerId? timerId) -> void
virtual Firebase.Firestore.Util.AsyncQueue.VerifyIsCurrentThread() -> void
virtual Firebase.Firestore.Util.BackgroundQueue.Drain() -> void
virtual Firebase.Firestore.Util.BackgroundQueue.Execute(Java.Lang.IRunnable? task) -> void
virtual Firebase.Firestore.Util.ExponentialBackoff.BackoffAndRun(Java.Lang.IRunnable? task) -> void
virtual Firebase.Firestore.Util.ExponentialBackoff.Cancel() -> void
virtual Firebase.Firestore.Util.ExponentialBackoff.Reset() -> void
virtual Firebase.Firestore.Util.ExponentialBackoff.ResetToMax() -> void
virtual Firebase.Firestore.Util.ExponentialBackoff.SetTemporaryMaxDelay(long newMax) -> void
virtual Firebase.Firestore.VectorValue.ToArray() -> double[]!
virtual Firebase.Firestore.WriteBatch.Commit() -> Android.Gms.Tasks.Task!
virtual Firebase.Firestore.WriteBatch.Delete(Firebase.Firestore.DocumentReference! documentRef) -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.WriteBatch.Set(Firebase.Firestore.DocumentReference! documentRef, Java.Lang.Object! data) -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.WriteBatch.Set(Firebase.Firestore.DocumentReference! documentRef, Java.Lang.Object! data, Firebase.Firestore.SetOptions! options) -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.WriteBatch.Update(Firebase.Firestore.DocumentReference! documentRef, Firebase.Firestore.FieldPath! fieldPath, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.WriteBatch.Update(Firebase.Firestore.DocumentReference! documentRef, System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>! data) -> Firebase.Firestore.WriteBatch!
virtual Firebase.Firestore.WriteBatch.Update(Firebase.Firestore.DocumentReference! documentRef, string! field, Java.Lang.Object? value, params Java.Lang.Object![]? moreFieldsAndValues) -> Firebase.Firestore.WriteBatch!
