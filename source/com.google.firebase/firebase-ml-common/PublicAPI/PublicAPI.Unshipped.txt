#nullable enable
Firebase.ML.Common.CommonComponentRegistrar
Firebase.ML.Common.CommonComponentRegistrar.CommonComponentRegistrar() -> void
Firebase.ML.Common.CommonComponentRegistrar.CommonComponentRegistrar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.FirebaseMLException
Firebase.ML.Common.FirebaseMLException.FirebaseMLException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.FirebaseMLException.FirebaseMLException(string! p0, int p1) -> void
Firebase.ML.Common.FirebaseMLException.FirebaseMLException(string! p0, int p1, Java.Lang.Throwable? p2) -> void
Firebase.ML.Common.FirebaseMLException.ICode
Firebase.ML.Common.ModelDownload.BaseModel
Firebase.ML.Common.ModelDownload.FirebaseLocalModel
Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder
Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.Builder(string! p0) -> void
Firebase.ML.Common.ModelDownload.FirebaseLocalModel.FirebaseLocalModel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseLocalModel.FirebaseLocalModel(string! p0, string? p1, string? p2) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions
Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder
Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.Builder() -> void
Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.FirebaseModelDownloadConditions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelManager
Firebase.ML.Common.ModelDownload.FirebaseModelManager.FirebaseModelManager(System.Collections.Generic.ICollection<Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration!>? p0) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelManager.FirebaseModelManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration
Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration.RemoteModelManagerRegistration(Java.Lang.Class? p0, Firebase.Inject.IProvider? p1) -> void
Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration.RemoteModelManagerRegistration(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseRemoteModel
Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.FirebaseRemoteModel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.FirebaseRemoteModel(string? p0, Firebase.ML.Common.ModelDownload.BaseModel? p1) -> void
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface.DeleteDownloadedModel(Java.Lang.Object? p0) -> Android.Gms.Tasks.Task?
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface.Download(Java.Lang.Object? p0, Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions? p1) -> Android.Gms.Tasks.Task?
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface.GetDownloadedModels() -> Android.Gms.Tasks.Task?
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface.GetLatestModelFile(Java.Lang.Object? p0) -> Android.Gms.Tasks.Task?
Firebase.ML.Internal.ModelDownload.IRemoteModelManagerInterface.IsModelDownloaded(Java.Lang.Object? p0) -> Android.Gms.Tasks.Task?
const Firebase.ML.Common.FirebaseMLException.Aborted = 10 -> int
const Firebase.ML.Common.FirebaseMLException.AlreadyExists = 6 -> int
const Firebase.ML.Common.FirebaseMLException.Cancelled = 1 -> int
const Firebase.ML.Common.FirebaseMLException.DataLoss = 15 -> int
const Firebase.ML.Common.FirebaseMLException.DeadlineExceeded = 4 -> int
const Firebase.ML.Common.FirebaseMLException.FailedPrecondition = 9 -> int
const Firebase.ML.Common.FirebaseMLException.Internal = 13 -> int
const Firebase.ML.Common.FirebaseMLException.InvalidArgument = 3 -> int
const Firebase.ML.Common.FirebaseMLException.ModelHashMismatch = 102 -> int
const Firebase.ML.Common.FirebaseMLException.ModelIncompatibleWithTflite = 100 -> int
const Firebase.ML.Common.FirebaseMLException.NotEnoughSpace = 101 -> int
const Firebase.ML.Common.FirebaseMLException.NotFound = 5 -> int
const Firebase.ML.Common.FirebaseMLException.Ok = 0 -> int
const Firebase.ML.Common.FirebaseMLException.OutOfRange = 11 -> int
const Firebase.ML.Common.FirebaseMLException.PermissionDenied = 7 -> int
const Firebase.ML.Common.FirebaseMLException.ResourceExhausted = 8 -> int
const Firebase.ML.Common.FirebaseMLException.Unauthenticated = 16 -> int
const Firebase.ML.Common.FirebaseMLException.Unavailable = 14 -> int
const Firebase.ML.Common.FirebaseMLException.Unimplemented = 12 -> int
const Firebase.ML.Common.FirebaseMLException.Unknown = 2 -> int
override Firebase.ML.Common.CommonComponentRegistrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.CommonComponentRegistrar.ThresholdClass.get -> nint
override Firebase.ML.Common.CommonComponentRegistrar.ThresholdType.get -> System.Type!
override Firebase.ML.Common.FirebaseMLException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.FirebaseMLException.ThresholdClass.get -> nint
override Firebase.ML.Common.FirebaseMLException.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.BaseModel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseLocalModel.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.RemoteModelManagerRegistration.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseModelManager.ThresholdType.get -> System.Type!
override Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ThresholdClass.get -> nint
override Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ThresholdType.get -> System.Type!
static Firebase.ML.Common.ModelDownload.BaseModel.Translate.get -> Firebase.ML.Common.ModelDownload.BaseModel?
static Firebase.ML.Common.ModelDownload.BaseModel.Values() -> Firebase.ML.Common.ModelDownload.BaseModel![]?
static Firebase.ML.Common.ModelDownload.BaseModel.Zzbpl.get -> Firebase.ML.Common.ModelDownload.BaseModel?
static Firebase.ML.Common.ModelDownload.BaseModel.Zzbpm.get -> Firebase.ML.Common.ModelDownload.BaseModel?
static Firebase.ML.Common.ModelDownload.FirebaseModelManager.GetInstance(Firebase.FirebaseApp! p0) -> Firebase.ML.Common.ModelDownload.FirebaseModelManager!
static Firebase.ML.Common.ModelDownload.FirebaseModelManager.Instance.get -> Firebase.ML.Common.ModelDownload.FirebaseModelManager!
virtual Firebase.ML.Common.CommonComponentRegistrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>?
virtual Firebase.ML.Common.FirebaseMLException.Code.get -> int
virtual Firebase.ML.Common.ModelDownload.FirebaseLocalModel.AssetFilePath.get -> string?
virtual Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.Build() -> Firebase.ML.Common.ModelDownload.FirebaseLocalModel!
virtual Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.SetAssetFilePath(string! p0) -> Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder!
virtual Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder.SetFilePath(string! p0) -> Firebase.ML.Common.ModelDownload.FirebaseLocalModel.Builder!
virtual Firebase.ML.Common.ModelDownload.FirebaseLocalModel.FilePath.get -> string?
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.Build() -> Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.RequireCharging() -> Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.RequireDeviceIdle() -> Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder.RequireWifi() -> Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.Builder!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.IsChargingRequired.get -> bool
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.IsDeviceIdleRequired.get -> bool
virtual Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions.IsWifiRequired.get -> bool
virtual Firebase.ML.Common.ModelDownload.FirebaseModelManager.DeleteDownloadedModel(Firebase.ML.Common.ModelDownload.FirebaseRemoteModel! p0) -> Android.Gms.Tasks.Task!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelManager.Download(Firebase.ML.Common.ModelDownload.FirebaseRemoteModel! p0, Firebase.ML.Common.ModelDownload.FirebaseModelDownloadConditions! p1) -> Android.Gms.Tasks.Task!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelManager.GetDownloadedModels(Java.Lang.Class! p0) -> Android.Gms.Tasks.Task!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelManager.GetLatestModelFile(Firebase.ML.Common.ModelDownload.FirebaseRemoteModel! p0) -> Android.Gms.Tasks.Task!
virtual Firebase.ML.Common.ModelDownload.FirebaseModelManager.IsModelDownloaded(Firebase.ML.Common.ModelDownload.FirebaseRemoteModel! p0) -> Android.Gms.Tasks.Task!
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.BaseModelHashMatches(string! p0) -> bool
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.IsBaseModel.get -> bool
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ModelHash.get -> string?
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ModelHash.set -> void
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ModelName.get -> string?
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.ModelNameForBackend.get -> string?
virtual Firebase.ML.Common.ModelDownload.FirebaseRemoteModel.UniqueModelNameForPersist.get -> string?
