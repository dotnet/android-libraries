#nullable enable
Firebase.Iid.BuildConfig
Firebase.Iid.BuildConfig.BuildConfig() -> void
Firebase.Iid.FirebaseInstanceId
Firebase.Iid.FirebaseInstanceId.FirebaseInstanceId(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Iid.FirebaseInstanceIdService
Firebase.Iid.FirebaseInstanceIdService.FirebaseInstanceIdService() -> void
Firebase.Iid.FirebaseInstanceIdService.FirebaseInstanceIdService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Iid.GmsRpc
Firebase.Iid.GmsRpc.GmsRpc(Firebase.FirebaseApp? app, Firebase.Iid.Metadata? metadata, Firebase.Inject.IProvider? userAgentPublisher, Firebase.Inject.IProvider? heartbeatInfo, Firebase.Installations.IFirebaseInstallationsApi? firebaseInstallations) -> void
Firebase.Iid.GmsRpc.GmsRpc(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Iid.IInstanceIdResult
Firebase.Iid.IInstanceIdResult.Id.get -> string!
Firebase.Iid.IInstanceIdResult.Token.get -> string!
Firebase.Iid.Metadata
Firebase.Iid.Metadata.Metadata(Android.Content.Context? context) -> void
Firebase.Iid.Metadata.Metadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Firebase.Iid.Registrar
Firebase.Iid.Registrar.Components.get -> System.Collections.Generic.IList<Firebase.Components.Component!>?
Firebase.Iid.Registrar.Registrar() -> void
Firebase.Iid.ServiceStarter
Firebase.Iid.ServiceStarter.ServiceStarter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Firebase.Iid.BuildConfig.VersionName = "21.1.0" -> string!
const Firebase.Iid.GmsRpc.ErrorInternalServerError = "INTERNAL_SERVER_ERROR" -> string!
const Firebase.Iid.GmsRpc.ErrorServiceNotAvailable = "SERVICE_NOT_AVAILABLE" -> string!
const Firebase.Iid.ServiceStarter.ActionMessagingEvent = "com.google.firebase.MESSAGING_EVENT" -> string!
const Firebase.Iid.ServiceStarter.ErrorUnknown = 500 -> int
override Firebase.Iid.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.FirebaseInstanceId.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.FirebaseInstanceId.ThresholdClass.get -> nint
override Firebase.Iid.FirebaseInstanceId.ThresholdType.get -> System.Type!
override Firebase.Iid.FirebaseInstanceIdService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.FirebaseInstanceIdService.ThresholdClass.get -> nint
override Firebase.Iid.FirebaseInstanceIdService.ThresholdType.get -> System.Type!
override Firebase.Iid.GmsRpc.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.GmsRpc.ThresholdClass.get -> nint
override Firebase.Iid.GmsRpc.ThresholdType.get -> System.Type!
override Firebase.Iid.Metadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.Metadata.ThresholdClass.get -> nint
override Firebase.Iid.Metadata.ThresholdType.get -> System.Type!
override Firebase.Iid.Registrar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.ServiceStarter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Firebase.Iid.ServiceStarter.ThresholdClass.get -> nint
override Firebase.Iid.ServiceStarter.ThresholdType.get -> System.Type!
override sealed Firebase.Iid.FirebaseInstanceIdService.OnBind(Android.Content.Intent? p0) -> Android.OS.IBinder?
static Firebase.Iid.FirebaseInstanceId.ClearInstancesForTest() -> void
static Firebase.Iid.FirebaseInstanceId.GetInstance(Firebase.FirebaseApp! app) -> Firebase.Iid.FirebaseInstanceId!
static Firebase.Iid.FirebaseInstanceId.Instance.get -> Firebase.Iid.FirebaseInstanceId!
static Firebase.Iid.Metadata.GetDefaultSenderId(Firebase.FirebaseApp? app) -> string?
static Firebase.Iid.ServiceStarter.Instance.get -> Firebase.Iid.ServiceStarter?
static Firebase.Iid.ServiceStarter.SetForTesting(Firebase.Iid.ServiceStarter? serviceStarter) -> void
virtual Firebase.Iid.FirebaseInstanceId.CreationTime.get -> long
virtual Firebase.Iid.FirebaseInstanceId.DeleteInstanceId() -> void
virtual Firebase.Iid.FirebaseInstanceId.DeleteToken(string! senderId, string! scope) -> void
virtual Firebase.Iid.FirebaseInstanceId.FcmAutoInitEnabled.get -> bool
virtual Firebase.Iid.FirebaseInstanceId.FcmAutoInitEnabled.set -> void
virtual Firebase.Iid.FirebaseInstanceId.GetInstanceId() -> Android.Gms.Tasks.Task!
virtual Firebase.Iid.FirebaseInstanceId.GetToken(string! senderId, string! scope) -> string?
virtual Firebase.Iid.FirebaseInstanceId.Id.get -> string!
virtual Firebase.Iid.FirebaseInstanceId.IsGmsCorePresent.get -> bool
virtual Firebase.Iid.FirebaseInstanceId.Token.get -> string?
virtual Firebase.Iid.FirebaseInstanceIdService.OnTokenRefresh() -> void
virtual Firebase.Iid.GmsRpc.DeleteInstanceId(string? instanceId) -> Android.Gms.Tasks.Task?
virtual Firebase.Iid.GmsRpc.DeleteToken(string? instanceId, string? authorizedEntity, string? scope) -> Android.Gms.Tasks.Task?
virtual Firebase.Iid.GmsRpc.GetToken(string? instanceId, string? authorizedEntity, string? scope) -> Android.Gms.Tasks.Task?
virtual Firebase.Iid.GmsRpc.SubscribeToTopic(string? instanceId, string? cachedToken, string? topic) -> Android.Gms.Tasks.Task?
virtual Firebase.Iid.GmsRpc.UnsubscribeFromTopic(string? instanceId, string? cachedToken, string? topic) -> Android.Gms.Tasks.Task?
virtual Firebase.Iid.Metadata.AppVersionCode.get -> string?
virtual Firebase.Iid.Metadata.AppVersionName.get -> string?
virtual Firebase.Iid.Metadata.GmsVersionCode.get -> int
virtual Firebase.Iid.Metadata.IidImplementation.get -> int
virtual Firebase.Iid.Metadata.IsGmscorePresent.get -> bool
