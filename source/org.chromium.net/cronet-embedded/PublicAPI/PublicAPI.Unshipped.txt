#nullable enable
Xamarin.Chromium.Base.ActivityState
Xamarin.Chromium.Base.ActivityStateAttribute
Xamarin.Chromium.Base.ActivityStateAttribute.ActivityStateAttribute() -> void
Xamarin.Chromium.Base.ActivityStateConsts
Xamarin.Chromium.Base.Annotations.AccessedByNativeAttribute
Xamarin.Chromium.Base.Annotations.AccessedByNativeAttribute.AccessedByNativeAttribute() -> void
Xamarin.Chromium.Base.Annotations.AccessedByNativeAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.AccessedByNativeAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeAttribute
Xamarin.Chromium.Base.Annotations.CalledByNativeAttribute.CalledByNativeAttribute() -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.CalledByNativeAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeForTestingAttribute
Xamarin.Chromium.Base.Annotations.CalledByNativeForTestingAttribute.CalledByNativeForTestingAttribute() -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeForTestingAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.CalledByNativeForTestingAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeUncheckedAttribute
Xamarin.Chromium.Base.Annotations.CalledByNativeUncheckedAttribute.CalledByNativeUncheckedAttribute() -> void
Xamarin.Chromium.Base.Annotations.CalledByNativeUncheckedAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.CalledByNativeUncheckedAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.IAccessedByNative
Xamarin.Chromium.Base.Annotations.IAccessedByNative.Value() -> string?
Xamarin.Chromium.Base.Annotations.ICalledByNative
Xamarin.Chromium.Base.Annotations.ICalledByNative.Value() -> string?
Xamarin.Chromium.Base.Annotations.ICalledByNativeForTesting
Xamarin.Chromium.Base.Annotations.ICalledByNativeForTesting.Value() -> string?
Xamarin.Chromium.Base.Annotations.ICalledByNativeUnchecked
Xamarin.Chromium.Base.Annotations.ICalledByNativeUnchecked.Value() -> string?
Xamarin.Chromium.Base.Annotations.IJNINamespace
Xamarin.Chromium.Base.Annotations.IJNINamespace.Value() -> string?
Xamarin.Chromium.Base.Annotations.INativeClassQualifiedName
Xamarin.Chromium.Base.Annotations.INativeClassQualifiedName.Value() -> string?
Xamarin.Chromium.Base.Annotations.INativeMethods
Xamarin.Chromium.Base.Annotations.INativeMethods.Value() -> string?
Xamarin.Chromium.Base.Annotations.JNINamespaceAttribute
Xamarin.Chromium.Base.Annotations.JNINamespaceAttribute.JNINamespaceAttribute() -> void
Xamarin.Chromium.Base.Annotations.JNINamespaceAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.JNINamespaceAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.NativeClassQualifiedNameAttribute
Xamarin.Chromium.Base.Annotations.NativeClassQualifiedNameAttribute.NativeClassQualifiedNameAttribute() -> void
Xamarin.Chromium.Base.Annotations.NativeClassQualifiedNameAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.NativeClassQualifiedNameAttribute.Value.set -> void
Xamarin.Chromium.Base.Annotations.NativeMethodsAttribute
Xamarin.Chromium.Base.Annotations.NativeMethodsAttribute.NativeMethodsAttribute() -> void
Xamarin.Chromium.Base.Annotations.NativeMethodsAttribute.Value.get -> string?
Xamarin.Chromium.Base.Annotations.NativeMethodsAttribute.Value.set -> void
Xamarin.Chromium.Base.ApiCompatibilityUtils
Xamarin.Chromium.Base.ApiCompatibilityUtils.ApiCompatibilityUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ApkAssets
Xamarin.Chromium.Base.ApkAssets.ApkAssets() -> void
Xamarin.Chromium.Base.ApkAssets.ApkAssets(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ApplicationState
Xamarin.Chromium.Base.ApplicationStateAttribute
Xamarin.Chromium.Base.ApplicationStateAttribute.ApplicationStateAttribute() -> void
Xamarin.Chromium.Base.ApplicationStateConsts
Xamarin.Chromium.Base.ApplicationStatus
Xamarin.Chromium.Base.ApplicationStatus.ActivityStateEventArgs
Xamarin.Chromium.Base.ApplicationStatus.ActivityStateEventArgs.ActivityStateEventArgs(Android.App.Activity? p0, int p1) -> void
Xamarin.Chromium.Base.ApplicationStatus.ActivityStateEventArgs.P0.get -> Android.App.Activity?
Xamarin.Chromium.Base.ApplicationStatus.ActivityStateEventArgs.P1.get -> int
Xamarin.Chromium.Base.ApplicationStatus.ApplicationStateEventArgs
Xamarin.Chromium.Base.ApplicationStatus.ApplicationStateEventArgs.ApplicationStateEventArgs(int p0) -> void
Xamarin.Chromium.Base.ApplicationStatus.ApplicationStateEventArgs.P0.get -> int
Xamarin.Chromium.Base.ApplicationStatus.ApplicationStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ApplicationStatus.IActivityStateListener
Xamarin.Chromium.Base.ApplicationStatus.IActivityStateListener.OnActivityStateChange(Android.App.Activity? p0, int p1) -> void
Xamarin.Chromium.Base.ApplicationStatus.IApplicationStateListener
Xamarin.Chromium.Base.ApplicationStatus.IApplicationStateListener.OnApplicationStateChange(int p0) -> void
Xamarin.Chromium.Base.ApplicationStatus.ITaskVisibilityListener
Xamarin.Chromium.Base.ApplicationStatus.ITaskVisibilityListener.OnTaskVisibilityChanged(int p0, bool p1) -> void
Xamarin.Chromium.Base.ApplicationStatus.IWindowFocusChangedListener
Xamarin.Chromium.Base.ApplicationStatus.IWindowFocusChangedListener.OnWindowFocusChanged(Android.App.Activity? p0, bool p1) -> void
Xamarin.Chromium.Base.ApplicationStatus.TaskVisibilityEventArgs
Xamarin.Chromium.Base.ApplicationStatus.TaskVisibilityEventArgs.P0.get -> int
Xamarin.Chromium.Base.ApplicationStatus.TaskVisibilityEventArgs.P1.get -> bool
Xamarin.Chromium.Base.ApplicationStatus.TaskVisibilityEventArgs.TaskVisibilityEventArgs(int p0, bool p1) -> void
Xamarin.Chromium.Base.ApplicationStatus.WindowFocusChangedEventArgs
Xamarin.Chromium.Base.ApplicationStatus.WindowFocusChangedEventArgs.P0.get -> Android.App.Activity?
Xamarin.Chromium.Base.ApplicationStatus.WindowFocusChangedEventArgs.P1.get -> bool
Xamarin.Chromium.Base.ApplicationStatus.WindowFocusChangedEventArgs.WindowFocusChangedEventArgs(Android.App.Activity? p0, bool p1) -> void
Xamarin.Chromium.Base.BaseSwitches
Xamarin.Chromium.Base.BuildInfo
Xamarin.Chromium.Base.BuildInfo.AbiString.get -> string?
Xamarin.Chromium.Base.BuildInfo.AbiString.set -> void
Xamarin.Chromium.Base.BuildInfo.AndroidBuildFingerprint.get -> string?
Xamarin.Chromium.Base.BuildInfo.AndroidBuildFingerprint.set -> void
Xamarin.Chromium.Base.BuildInfo.BuildInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.BuildInfo.CustomThemes.get -> string?
Xamarin.Chromium.Base.BuildInfo.CustomThemes.set -> void
Xamarin.Chromium.Base.BuildInfo.GmsVersionCode.get -> string?
Xamarin.Chromium.Base.BuildInfo.GmsVersionCode.set -> void
Xamarin.Chromium.Base.BuildInfo.HostPackageLabel.get -> string?
Xamarin.Chromium.Base.BuildInfo.HostPackageLabel.set -> void
Xamarin.Chromium.Base.BuildInfo.HostPackageName.get -> string?
Xamarin.Chromium.Base.BuildInfo.HostPackageName.set -> void
Xamarin.Chromium.Base.BuildInfo.HostVersionCode.get -> long
Xamarin.Chromium.Base.BuildInfo.HostVersionCode.set -> void
Xamarin.Chromium.Base.BuildInfo.InstallerPackageName.get -> string?
Xamarin.Chromium.Base.BuildInfo.InstallerPackageName.set -> void
Xamarin.Chromium.Base.BuildInfo.IsAutomotive.get -> bool
Xamarin.Chromium.Base.BuildInfo.IsAutomotive.set -> void
Xamarin.Chromium.Base.BuildInfo.IsTV.get -> bool
Xamarin.Chromium.Base.BuildInfo.IsTV.set -> void
Xamarin.Chromium.Base.BuildInfo.PackageName.get -> string?
Xamarin.Chromium.Base.BuildInfo.PackageName.set -> void
Xamarin.Chromium.Base.BuildInfo.ResourcesVersion.get -> string?
Xamarin.Chromium.Base.BuildInfo.ResourcesVersion.set -> void
Xamarin.Chromium.Base.BuildInfo.VersionCode.get -> long
Xamarin.Chromium.Base.BuildInfo.VersionCode.set -> void
Xamarin.Chromium.Base.BuildInfo.VersionName.get -> string?
Xamarin.Chromium.Base.BuildInfo.VersionName.set -> void
Xamarin.Chromium.Base.BuildInfo.VulkanDeqpLevel.get -> int
Xamarin.Chromium.Base.BuildInfo.VulkanDeqpLevel.set -> void
Xamarin.Chromium.Base.BundleUtils
Xamarin.Chromium.Base.BundleUtils.BundleUtils() -> void
Xamarin.Chromium.Base.BundleUtils.BundleUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.CallbackController
Xamarin.Chromium.Base.CallbackController.CallbackController() -> void
Xamarin.Chromium.Base.CallbackController.Destroy() -> void
Xamarin.Chromium.Base.CallbackController.MakeCancelable(Java.Lang.IRunnable! runnable) -> Java.Lang.IRunnable?
Xamarin.Chromium.Base.CallbackController.MakeCancelable(Xamarin.Chromium.Base.ICallback! callback) -> Xamarin.Chromium.Base.ICallback?
Xamarin.Chromium.Base.CallbackHelper
Xamarin.Chromium.Base.CallbackHelper.CallbackHelper() -> void
Xamarin.Chromium.Base.CallbackHelper.CallbackHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ChildBindingState
Xamarin.Chromium.Base.ChildBindingStateAttribute
Xamarin.Chromium.Base.ChildBindingStateAttribute.ChildBindingStateAttribute() -> void
Xamarin.Chromium.Base.ChildBindingStateConsts
Xamarin.Chromium.Base.CollectionUtil
Xamarin.Chromium.Base.CommandLine
Xamarin.Chromium.Base.CommandLine.CommandLine(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.CommandLineInitUtil
Xamarin.Chromium.Base.Compat.ApiHelperForM
Xamarin.Chromium.Base.Compat.ApiHelperForN
Xamarin.Chromium.Base.Compat.ApiHelperForO
Xamarin.Chromium.Base.Compat.ApiHelperForOMR1
Xamarin.Chromium.Base.Compat.ApiHelperForP
Xamarin.Chromium.Base.Compat.ApiHelperForQ
Xamarin.Chromium.Base.Compat.ApiHelperForR
Xamarin.Chromium.Base.Compat.ApiHelperForS
Xamarin.Chromium.Base.ContentUriUtils
Xamarin.Chromium.Base.ContentUriUtils.ContentUriUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ContentUriUtils.IFileProviderUtil
Xamarin.Chromium.Base.ContentUriUtils.IFileProviderUtil.GetContentUriFromFile(Java.IO.File? p0) -> Android.Net.Uri?
Xamarin.Chromium.Base.ContextUtils
Xamarin.Chromium.Base.ContextUtils.ContextUtils() -> void
Xamarin.Chromium.Base.ContextUtils.ContextUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.CpuFeatures
Xamarin.Chromium.Base.CpuFeatures.CpuFeatures() -> void
Xamarin.Chromium.Base.CpuFeatures.CpuFeatures(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.DiscardableReferencePool
Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference
Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference.DiscardableReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReferencePool() -> void
Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReferencePool(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.EarlyTraceEvent
Xamarin.Chromium.Base.EarlyTraceEvent.EarlyTraceEvent() -> void
Xamarin.Chromium.Base.EarlyTraceEvent.EarlyTraceEvent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.EventLog
Xamarin.Chromium.Base.EventLog.EventLog() -> void
Xamarin.Chromium.Base.EventLog.EventLog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.FieldTrialList
Xamarin.Chromium.Base.FieldTrialList.FieldTrialList(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.FileUtils
Xamarin.Chromium.Base.FileUtils.FileUtils() -> void
Xamarin.Chromium.Base.FileUtils.FileUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.FileUtils.INatives
Xamarin.Chromium.Base.FileUtils.INatives.GetAbsoluteFilePath(string? p0) -> string?
Xamarin.Chromium.Base.FileUtilsJni
Xamarin.Chromium.Base.FileUtilsJni.FileUtilsJni() -> void
Xamarin.Chromium.Base.FileUtilsJni.FileUtilsJni(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Flag
Xamarin.Chromium.Base.Flag.Flag(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Flag.Flag(string? featureName) -> void
Xamarin.Chromium.Base.Flag.MFeatureName.get -> string?
Xamarin.Chromium.Base.Flag.MFeatureName.set -> void
Xamarin.Chromium.Base.Flag.MValue.get -> Java.Lang.Boolean?
Xamarin.Chromium.Base.Flag.MValue.set -> void
Xamarin.Chromium.Base.IActivityState
Xamarin.Chromium.Base.IApplicationState
Xamarin.Chromium.Base.ICallback
Xamarin.Chromium.Base.ICallback.Bind(Java.Lang.Object? result) -> Java.Lang.IRunnable?
Xamarin.Chromium.Base.ICallback.OnResult(Java.Lang.Object? p0) -> void
Xamarin.Chromium.Base.IChildBindingState
Xamarin.Chromium.Base.IIntStringCallback
Xamarin.Chromium.Base.IIntStringCallback.OnResult(int p0, string? p1) -> void
Xamarin.Chromium.Base.IMemoryPressureLevel
Xamarin.Chromium.Base.IUnownedUserData
Xamarin.Chromium.Base.IUnownedUserData.InformOnDetachmentFromHost() -> bool
Xamarin.Chromium.Base.IUnownedUserData.OnDetachedFromHost(Xamarin.Chromium.Base.UnownedUserDataHost? host) -> void
Xamarin.Chromium.Base.IUserData
Xamarin.Chromium.Base.IUserData.Destroy() -> void
Xamarin.Chromium.Base.ImportantFileWriterAndroid
Xamarin.Chromium.Base.ImportantFileWriterAndroid.ImportantFileWriterAndroid() -> void
Xamarin.Chromium.Base.ImportantFileWriterAndroid.ImportantFileWriterAndroid(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.JNIUtils
Xamarin.Chromium.Base.JNIUtils.JNIUtils() -> void
Xamarin.Chromium.Base.JNIUtils.JNIUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.JavaExceptionReporter
Xamarin.Chromium.Base.JavaExceptionReporter.JavaExceptionReporter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.JavaHandlerThread
Xamarin.Chromium.Base.JavaHandlerThread.JavaHandlerThread(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.JavaHandlerThread.JavaHandlerThread(string? name, int priority) -> void
Xamarin.Chromium.Base.Lifetime.DestroyChecker
Xamarin.Chromium.Base.Lifetime.DestroyChecker.DestroyChecker() -> void
Xamarin.Chromium.Base.Lifetime.DestroyChecker.DestroyChecker(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Lifetime.IDestroyable
Xamarin.Chromium.Base.Lifetime.IDestroyable.Destroy() -> void
Xamarin.Chromium.Base.LifetimeAssert
Xamarin.Chromium.Base.LifetimeAssert.LifetimeAssert(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.LocaleUtils
Xamarin.Chromium.Base.LocaleUtils.LocaleUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Log
Xamarin.Chromium.Base.Log.Log(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.MathUtils
Xamarin.Chromium.Base.MathUtils.MathUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Memory.IMemoryPressureCallback
Xamarin.Chromium.Base.Memory.IMemoryPressureCallback.OnPressure(int p0) -> void
Xamarin.Chromium.Base.Memory.JavaHeapDumpGenerator
Xamarin.Chromium.Base.Memory.MemoryInfoBridge
Xamarin.Chromium.Base.Memory.MemoryInfoBridge.MemoryInfoBridge() -> void
Xamarin.Chromium.Base.Memory.MemoryInfoBridge.MemoryInfoBridge(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Memory.MemoryPressureUma
Xamarin.Chromium.Base.Memory.MemoryPressureUma.MemoryPressureUma(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.MemoryPressureLevel
Xamarin.Chromium.Base.MemoryPressureLevelAttribute
Xamarin.Chromium.Base.MemoryPressureLevelAttribute.MemoryPressureLevelAttribute() -> void
Xamarin.Chromium.Base.MemoryPressureLevelConsts
Xamarin.Chromium.Base.MemoryPressureListener
Xamarin.Chromium.Base.MemoryPressureListener.MemoryPressureListener() -> void
Xamarin.Chromium.Base.MemoryPressureListener.MemoryPressureListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.HistogramBucket
Xamarin.Chromium.Base.Metrics.HistogramBucket.HistogramBucket(int min, long max, int count) -> void
Xamarin.Chromium.Base.Metrics.HistogramBucket.HistogramBucket(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.HistogramBucket.MCount.get -> int
Xamarin.Chromium.Base.Metrics.HistogramBucket.MCount.set -> void
Xamarin.Chromium.Base.Metrics.HistogramBucket.MMax.get -> long
Xamarin.Chromium.Base.Metrics.HistogramBucket.MMax.set -> void
Xamarin.Chromium.Base.Metrics.HistogramBucket.MMin.get -> int
Xamarin.Chromium.Base.Metrics.HistogramBucket.MMin.set -> void
Xamarin.Chromium.Base.Metrics.IJSONVerbosityLevel
Xamarin.Chromium.Base.Metrics.IUmaRecorder
Xamarin.Chromium.Base.Metrics.IUmaRecorder.AddUserActionCallbackForTesting(Xamarin.Chromium.Base.ICallback? p0) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.GetHistogramSamplesForTesting(string? p0) -> System.Collections.Generic.IList<Xamarin.Chromium.Base.Metrics.HistogramBucket!>?
Xamarin.Chromium.Base.Metrics.IUmaRecorder.GetHistogramTotalCountForTesting(string? p0) -> int
Xamarin.Chromium.Base.Metrics.IUmaRecorder.GetHistogramValueCountForTesting(string? p0, int p1) -> int
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RecordBooleanHistogram(string? p0, bool p1) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RecordExponentialHistogram(string? p0, int p1, int p2, int p3, int p4) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RecordLinearHistogram(string? p0, int p1, int p2, int p3, int p4) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RecordSparseHistogram(string? p0, int p1) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RecordUserAction(string? p0, long p1) -> void
Xamarin.Chromium.Base.Metrics.IUmaRecorder.RemoveUserActionCallbackForTesting(Xamarin.Chromium.Base.ICallback? p0) -> void
Xamarin.Chromium.Base.Metrics.JSONVerbosityLevel
Xamarin.Chromium.Base.Metrics.JSONVerbosityLevelAttribute
Xamarin.Chromium.Base.Metrics.JSONVerbosityLevelAttribute.JSONVerbosityLevelAttribute() -> void
Xamarin.Chromium.Base.Metrics.JSONVerbosityLevelConsts
Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni
Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.NativeUmaRecorderJni() -> void
Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.NativeUmaRecorderJni(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.RecordHistogram
Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordHistogram() -> void
Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordHistogram(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.RecordUserAction
Xamarin.Chromium.Base.Metrics.RecordUserAction.RecordUserAction() -> void
Xamarin.Chromium.Base.Metrics.RecordUserAction.RecordUserAction(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent
Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.ScopedSysTraceEvent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.StatisticsRecorderAndroid
Xamarin.Chromium.Base.Metrics.TimingMetric
Xamarin.Chromium.Base.Metrics.TimingMetric.TimingMetric(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Metrics.UmaRecorderHolder
Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.UmaRecorderHolder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ObserverList
Xamarin.Chromium.Base.ObserverList.IRewindableIterator
Xamarin.Chromium.Base.ObserverList.IRewindableIterator.Rewind() -> void
Xamarin.Chromium.Base.ObserverList.MObservers.get -> System.Collections.IList?
Xamarin.Chromium.Base.ObserverList.MObservers.set -> void
Xamarin.Chromium.Base.ObserverList.ObserverList() -> void
Xamarin.Chromium.Base.ObserverList.ObserverList(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PackageManagerUtils
Xamarin.Chromium.Base.PackageManagerUtils.PackageManagerUtils() -> void
Xamarin.Chromium.Base.PackageManagerUtils.PackageManagerUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PackageUtils
Xamarin.Chromium.Base.PackageUtils.PackageUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PathService
Xamarin.Chromium.Base.PathService.PathService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PathUtils
Xamarin.Chromium.Base.PathUtils.PathUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PiiElider
Xamarin.Chromium.Base.PiiElider.PiiElider() -> void
Xamarin.Chromium.Base.PiiElider.PiiElider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PowerMonitor
Xamarin.Chromium.Base.PowerMonitor.PowerMonitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.PowerMonitorForQ
Xamarin.Chromium.Base.Promise
Xamarin.Chromium.Base.Promise.IAsyncFunction
Xamarin.Chromium.Base.Promise.Promise() -> void
Xamarin.Chromium.Base.Promise.Promise(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Promise.UnhandledRejectionException
Xamarin.Chromium.Base.Promise.UnhandledRejectionException.UnhandledRejectionException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Promise.UnhandledRejectionException.UnhandledRejectionException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Chromium.Base.R
Xamarin.Chromium.Base.R.Anim
Xamarin.Chromium.Base.R.Anim.Anim() -> void
Xamarin.Chromium.Base.R.Animator
Xamarin.Chromium.Base.R.Animator.Animator() -> void
Xamarin.Chromium.Base.R.Array
Xamarin.Chromium.Base.R.Array.Array() -> void
Xamarin.Chromium.Base.R.Attr
Xamarin.Chromium.Base.R.Attr.Attr() -> void
Xamarin.Chromium.Base.R.Bool
Xamarin.Chromium.Base.R.Bool.Bool() -> void
Xamarin.Chromium.Base.R.Color
Xamarin.Chromium.Base.R.Color.Color() -> void
Xamarin.Chromium.Base.R.Dimen
Xamarin.Chromium.Base.R.Dimen.Dimen() -> void
Xamarin.Chromium.Base.R.Drawable
Xamarin.Chromium.Base.R.Drawable.Drawable() -> void
Xamarin.Chromium.Base.R.Font
Xamarin.Chromium.Base.R.Font.Font() -> void
Xamarin.Chromium.Base.R.Fraction
Xamarin.Chromium.Base.R.Fraction.Fraction() -> void
Xamarin.Chromium.Base.R.Id
Xamarin.Chromium.Base.R.Id.Id() -> void
Xamarin.Chromium.Base.R.Integer
Xamarin.Chromium.Base.R.Integer.Integer() -> void
Xamarin.Chromium.Base.R.Interpolator
Xamarin.Chromium.Base.R.Interpolator.Interpolator() -> void
Xamarin.Chromium.Base.R.Layout
Xamarin.Chromium.Base.R.Layout.Layout() -> void
Xamarin.Chromium.Base.R.Macro
Xamarin.Chromium.Base.R.Macro.Macro() -> void
Xamarin.Chromium.Base.R.Menu
Xamarin.Chromium.Base.R.Menu.Menu() -> void
Xamarin.Chromium.Base.R.Mipmap
Xamarin.Chromium.Base.R.Mipmap.Mipmap() -> void
Xamarin.Chromium.Base.R.Plurals
Xamarin.Chromium.Base.R.Plurals.Plurals() -> void
Xamarin.Chromium.Base.R.R() -> void
Xamarin.Chromium.Base.R.Raw
Xamarin.Chromium.Base.R.Raw.Raw() -> void
Xamarin.Chromium.Base.R.String
Xamarin.Chromium.Base.R.String.String() -> void
Xamarin.Chromium.Base.R.Style
Xamarin.Chromium.Base.R.Style.Style() -> void
Xamarin.Chromium.Base.R.Styleable
Xamarin.Chromium.Base.R.Styleable.Styleable() -> void
Xamarin.Chromium.Base.R.Transition
Xamarin.Chromium.Base.R.Transition.Transition() -> void
Xamarin.Chromium.Base.R.Xml
Xamarin.Chromium.Base.R.Xml.Xml() -> void
Xamarin.Chromium.Base.RadioUtils
Xamarin.Chromium.Base.RadioUtils.RadioUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.RequiredCallback
Xamarin.Chromium.Base.RequiredCallback.RequiredCallback(Xamarin.Chromium.Base.ICallback! callback) -> void
Xamarin.Chromium.Base.RequiredCallback.RequiredCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ResettersForTesting
Xamarin.Chromium.Base.ResettersForTesting.ResettersForTesting() -> void
Xamarin.Chromium.Base.ResettersForTesting.ResettersForTesting(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.StreamUtil
Xamarin.Chromium.Base.StreamUtil.StreamUtil() -> void
Xamarin.Chromium.Base.StreamUtil.StreamUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.StrictModeContext
Xamarin.Chromium.Base.StrictModeContext.Close() -> void
Xamarin.Chromium.Base.Supplier.IDestroyableObservableSupplier
Xamarin.Chromium.Base.Supplier.IObservableSupplier
Xamarin.Chromium.Base.Supplier.IObservableSupplier.AddObserver(Xamarin.Chromium.Base.ICallback? p0) -> Java.Lang.Object?
Xamarin.Chromium.Base.Supplier.IObservableSupplier.RemoveObserver(Xamarin.Chromium.Base.ICallback? p0) -> void
Xamarin.Chromium.Base.Supplier.IOneshotSupplier
Xamarin.Chromium.Base.Supplier.IOneshotSupplier.OnAvailable(Xamarin.Chromium.Base.ICallback? p0) -> Java.Lang.Object?
Xamarin.Chromium.Base.Supplier.ISupplier
Xamarin.Chromium.Base.Supplier.ISupplier.Get() -> Java.Lang.Object?
Xamarin.Chromium.Base.Supplier.ISupplier.HasValue.get -> bool
Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier
Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.LazyOneshotSupplier() -> void
Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.LazyOneshotSupplier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl
Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.ObservableSupplierImpl() -> void
Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.ObservableSupplierImpl(Java.Lang.Object? initialValue) -> void
Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.ObservableSupplierImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Supplier.OneShotCallback
Xamarin.Chromium.Base.Supplier.OneShotCallback.OneShotCallback(Xamarin.Chromium.Base.Supplier.IObservableSupplier! supplier, Xamarin.Chromium.Base.ICallback! callback) -> void
Xamarin.Chromium.Base.Supplier.OneShotCallback.OneShotCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl
Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.OneshotSupplierImpl() -> void
Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.OneshotSupplierImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier
Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.UnownedUserDataSupplier(Xamarin.Chromium.Base.UnownedUserDataKey! uudKey) -> void
Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.UnownedUserDataSupplier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.AsyncTask
Xamarin.Chromium.Base.Task.AsyncTask.AsyncTask() -> void
Xamarin.Chromium.Base.Task.AsyncTask.AsyncTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.AsyncTask.Cancel(bool mayInterruptIfRunning) -> bool
Xamarin.Chromium.Base.Task.AsyncTask.ExecuteOnExecutor(Java.Util.Concurrent.IExecutor? exec) -> Xamarin.Chromium.Base.Task.AsyncTask?
Xamarin.Chromium.Base.Task.AsyncTask.ExecuteOnTaskRunner(Xamarin.Chromium.Base.Task.ITaskRunner? taskRunner) -> Xamarin.Chromium.Base.Task.AsyncTask?
Xamarin.Chromium.Base.Task.AsyncTask.ExecuteWithTaskTraits(int taskTraits) -> Xamarin.Chromium.Base.Task.AsyncTask?
Xamarin.Chromium.Base.Task.AsyncTask.Get() -> Java.Lang.Object?
Xamarin.Chromium.Base.Task.AsyncTask.Get(long timeout, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
Xamarin.Chromium.Base.Task.AsyncTask.IStatus
Xamarin.Chromium.Base.Task.AsyncTask.IsCancelled.get -> bool
Xamarin.Chromium.Base.Task.AsyncTask.Status
Xamarin.Chromium.Base.Task.AsyncTask.StatusConsts
Xamarin.Chromium.Base.Task.AsyncTask.StatusData() -> int
Xamarin.Chromium.Base.Task.AsyncTask.UmaStatus.get -> int
Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask
Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.BackgroundOnlyAsyncTask() -> void
Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.BackgroundOnlyAsyncTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.ChainedTasks
Xamarin.Chromium.Base.Task.ChainedTasks.ChainedTasks() -> void
Xamarin.Chromium.Base.Task.ChainedTasks.ChainedTasks(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.ISequencedTaskRunner
Xamarin.Chromium.Base.Task.ISingleThreadTaskRunner
Xamarin.Chromium.Base.Task.ISingleThreadTaskRunner.BelongsToCurrentThread() -> bool
Xamarin.Chromium.Base.Task.ITaskExecutor
Xamarin.Chromium.Base.Task.ITaskExecutor.CanRunTaskImmediately(int p0) -> bool
Xamarin.Chromium.Base.Task.ITaskExecutor.CreateSequencedTaskRunner(int p0) -> Xamarin.Chromium.Base.Task.ISequencedTaskRunner?
Xamarin.Chromium.Base.Task.ITaskExecutor.CreateSingleThreadTaskRunner(int p0) -> Xamarin.Chromium.Base.Task.ISingleThreadTaskRunner?
Xamarin.Chromium.Base.Task.ITaskExecutor.CreateTaskRunner(int p0) -> Xamarin.Chromium.Base.Task.ITaskRunner?
Xamarin.Chromium.Base.Task.ITaskExecutor.PostDelayedTask(int p0, Java.Lang.IRunnable? p1, long p2) -> void
Xamarin.Chromium.Base.Task.ITaskPriority
Xamarin.Chromium.Base.Task.ITaskRunner
Xamarin.Chromium.Base.Task.ITaskRunner.PostDelayedTask(Java.Lang.IRunnable? p0, long p1) -> void
Xamarin.Chromium.Base.Task.ITaskRunner.PostTask(Java.Lang.IRunnable? p0) -> void
Xamarin.Chromium.Base.Task.ITaskRunnerType
Xamarin.Chromium.Base.Task.ITaskTraits
Xamarin.Chromium.Base.Task.PostTask
Xamarin.Chromium.Base.Task.PostTask.PostTask() -> void
Xamarin.Chromium.Base.Task.PostTask.PostTask(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.SequencedTaskRunnerImpl
Xamarin.Chromium.Base.Task.SequencedTaskRunnerImpl.SequencedTaskRunnerImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl
Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.SingleThreadTaskRunnerImpl(Android.OS.Handler? handler, int traits) -> void
Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.SingleThreadTaskRunnerImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.TaskPriority
Xamarin.Chromium.Base.Task.TaskPriorityAttribute
Xamarin.Chromium.Base.Task.TaskPriorityAttribute.TaskPriorityAttribute() -> void
Xamarin.Chromium.Base.Task.TaskPriorityConsts
Xamarin.Chromium.Base.Task.TaskRunnerImpl
Xamarin.Chromium.Base.Task.TaskRunnerImpl.MRunPreNativeTaskClosure.get -> Java.Lang.IRunnable?
Xamarin.Chromium.Base.Task.TaskRunnerImpl.MRunPreNativeTaskClosure.set -> void
Xamarin.Chromium.Base.Task.TaskRunnerImpl.TaskRunnerImpl(int traits, string? traceCategory, int taskRunnerType) -> void
Xamarin.Chromium.Base.Task.TaskRunnerImpl.TaskRunnerImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Task.TaskRunnerType
Xamarin.Chromium.Base.Task.TaskRunnerTypeAttribute
Xamarin.Chromium.Base.Task.TaskRunnerTypeAttribute.TaskRunnerTypeAttribute() -> void
Xamarin.Chromium.Base.Task.TaskRunnerTypeConsts
Xamarin.Chromium.Base.Task.TaskTraits
Xamarin.Chromium.Base.Task.TaskTraitsAttribute
Xamarin.Chromium.Base.Task.TaskTraitsAttribute.TaskTraitsAttribute() -> void
Xamarin.Chromium.Base.Task.TaskTraitsConsts
Xamarin.Chromium.Base.Task.UiThreadTaskExecutor
Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.UiThreadTaskExecutor(Android.OS.Handler? handler) -> void
Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.UiThreadTaskExecutor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.Test.ClangProfiler
Xamarin.Chromium.Base.Test.ClangProfiler.ClangProfiler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ThreadUtils
Xamarin.Chromium.Base.ThreadUtils.ThreadChecker
Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.ThreadChecker() -> void
Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.ThreadChecker(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.ThreadUtils.ThreadUtils() -> void
Xamarin.Chromium.Base.ThreadUtils.ThreadUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TimeUtils
Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer
Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.CurrentThreadTimeMillisTimer() -> void
Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.CurrentThreadTimeMillisTimer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.ElapsedRealtimeMillisTimer() -> void
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.ElapsedRealtimeMillisTimer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.ElapsedRealtimeNanosTimer() -> void
Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.ElapsedRealtimeNanosTimer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TimeUtils.TimeUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer
Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.UptimeMillisTimer() -> void
Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.UptimeMillisTimer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TraceEvent
Xamarin.Chromium.Base.TraceEvent.ActivityInfo
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.ActivityInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.ActivityInfo(string? activityName) -> void
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.MActivityName.get -> string?
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.MActivityName.set -> void
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.MViews.get -> System.Collections.IList?
Xamarin.Chromium.Base.TraceEvent.ActivityInfo.MViews.set -> void
Xamarin.Chromium.Base.TraceEvent.TraceEvent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.TraceEvent.ViewInfo
Xamarin.Chromium.Base.TraceEvent.ViewInfo.ViewInfo(int id, int parentId, bool isShown, bool isDirty, string? className, Android.Content.Res.Resources? res) -> void
Xamarin.Chromium.Base.TraceEvent.ViewInfo.ViewInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.UnguessableToken
Xamarin.Chromium.Base.UnguessableToken.UnguessableToken(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Base.UnownedUserDataHost
Xamarin.Chromium.Base.UnownedUserDataHost.Destroy() -> void
Xamarin.Chromium.Base.UnownedUserDataHost.UnownedUserDataHost() -> void
Xamarin.Chromium.Base.UnownedUserDataKey
Xamarin.Chromium.Base.UnownedUserDataKey.AttachToHost(Xamarin.Chromium.Base.UnownedUserDataHost! host, Java.Lang.Object! object) -> void
Xamarin.Chromium.Base.UnownedUserDataKey.DetachFromAllHosts(Java.Lang.Object! object) -> void
Xamarin.Chromium.Base.UnownedUserDataKey.DetachFromHost(Xamarin.Chromium.Base.UnownedUserDataHost! host) -> void
Xamarin.Chromium.Base.UnownedUserDataKey.IsAttachedToAnyHost(Java.Lang.Object! object) -> bool
Xamarin.Chromium.Base.UnownedUserDataKey.IsAttachedToHost(Xamarin.Chromium.Base.UnownedUserDataHost! host) -> bool
Xamarin.Chromium.Base.UnownedUserDataKey.RetrieveDataFromHost(Xamarin.Chromium.Base.UnownedUserDataHost! host) -> Java.Lang.Object?
Xamarin.Chromium.Base.UnownedUserDataKey.UnownedUserDataKey(Java.Lang.Class! clazz) -> void
Xamarin.Chromium.Base.UserDataHost
Xamarin.Chromium.Base.UserDataHost.Destroy() -> void
Xamarin.Chromium.Base.UserDataHost.GetUserData(Java.Lang.Class? key) -> Java.Lang.Object?
Xamarin.Chromium.Base.UserDataHost.RemoveUserData(Java.Lang.Class? key) -> Java.Lang.Object?
Xamarin.Chromium.Base.UserDataHost.SetUserData(Java.Lang.Class? key, Java.Lang.Object? object) -> Java.Lang.Object?
Xamarin.Chromium.Base.UserDataHost.UserDataHost() -> void
Xamarin.Chromium.Base.WrappedClassLoader
Xamarin.Chromium.Base.WrappedClassLoader.WrappedClassLoader(Java.Lang.ClassLoader? primary, Java.Lang.ClassLoader? secondary) -> void
Xamarin.Chromium.Base.WrappedClassLoader.WrappedClassLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Build.Annotations.AlwaysInlineAttribute
Xamarin.Chromium.Build.Annotations.AlwaysInlineAttribute.AlwaysInlineAttribute() -> void
Xamarin.Chromium.Build.Annotations.CheckDiscardAttribute
Xamarin.Chromium.Build.Annotations.CheckDiscardAttribute.CheckDiscardAttribute() -> void
Xamarin.Chromium.Build.Annotations.CheckDiscardAttribute.Value.get -> string?
Xamarin.Chromium.Build.Annotations.CheckDiscardAttribute.Value.set -> void
Xamarin.Chromium.Build.Annotations.DoNotClassMergeAttribute
Xamarin.Chromium.Build.Annotations.DoNotClassMergeAttribute.DoNotClassMergeAttribute() -> void
Xamarin.Chromium.Build.Annotations.DoNotInlineAttribute
Xamarin.Chromium.Build.Annotations.DoNotInlineAttribute.DoNotInlineAttribute() -> void
Xamarin.Chromium.Build.Annotations.DoNotStripLogsAttribute
Xamarin.Chromium.Build.Annotations.DoNotStripLogsAttribute.DoNotStripLogsAttribute() -> void
Xamarin.Chromium.Build.Annotations.IAlwaysInline
Xamarin.Chromium.Build.Annotations.ICheckDiscard
Xamarin.Chromium.Build.Annotations.ICheckDiscard.Value() -> string?
Xamarin.Chromium.Build.Annotations.IDoNotClassMerge
Xamarin.Chromium.Build.Annotations.IDoNotInline
Xamarin.Chromium.Build.Annotations.IDoNotStripLogs
Xamarin.Chromium.Build.Annotations.IIdentifierNameString
Xamarin.Chromium.Build.Annotations.IMainDex
Xamarin.Chromium.Build.Annotations.IMockedInTests
Xamarin.Chromium.Build.Annotations.IUsedByReflection
Xamarin.Chromium.Build.Annotations.IUsedByReflection.Value() -> string?
Xamarin.Chromium.Build.Annotations.IdentifierNameStringAttribute
Xamarin.Chromium.Build.Annotations.IdentifierNameStringAttribute.IdentifierNameStringAttribute() -> void
Xamarin.Chromium.Build.Annotations.MainDexAttribute
Xamarin.Chromium.Build.Annotations.MainDexAttribute.MainDexAttribute() -> void
Xamarin.Chromium.Build.Annotations.MockedInTestsAttribute
Xamarin.Chromium.Build.Annotations.MockedInTestsAttribute.MockedInTestsAttribute() -> void
Xamarin.Chromium.Build.Annotations.UsedByReflectionAttribute
Xamarin.Chromium.Build.Annotations.UsedByReflectionAttribute.UsedByReflectionAttribute() -> void
Xamarin.Chromium.Build.Annotations.UsedByReflectionAttribute.Value.get -> string?
Xamarin.Chromium.Build.Annotations.UsedByReflectionAttribute.Value.set -> void
Xamarin.Chromium.Build.BuildConfig
Xamarin.Chromium.Build.BuildConfig.BuildConfig() -> void
Xamarin.Chromium.Build.BuildConfig.BuildConfig(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.AndroidCertVerifyResult
Xamarin.Chromium.CroNet.AndroidCertVerifyResult.AndroidCertVerifyResult(int status) -> void
Xamarin.Chromium.CroNet.AndroidCertVerifyResult.AndroidCertVerifyResult(int status, bool isIssuedByKnownRoot, System.Collections.Generic.IList<Java.Security.Cert.X509Certificate!>? certificateChain) -> void
Xamarin.Chromium.CroNet.AndroidCertVerifyResult.AndroidCertVerifyResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.AndroidKeyStore
Xamarin.Chromium.CroNet.AndroidKeyStore.AndroidKeyStore() -> void
Xamarin.Chromium.CroNet.AndroidKeyStore.AndroidKeyStore(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.AndroidTrafficStats
Xamarin.Chromium.CroNet.AndroidTrafficStats.AndroidTrafficStats(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.CertVerifyStatusAndroid
Xamarin.Chromium.CroNet.CertVerifyStatusAndroidAttribute
Xamarin.Chromium.CroNet.CertVerifyStatusAndroidAttribute.CertVerifyStatusAndroidAttribute() -> void
Xamarin.Chromium.CroNet.CertVerifyStatusAndroidConsts
Xamarin.Chromium.CroNet.ChromiumNetworkAdapter
Xamarin.Chromium.CroNet.ConnectionCost
Xamarin.Chromium.CroNet.ConnectionCostAttribute
Xamarin.Chromium.CroNet.ConnectionCostAttribute.ConnectionCostAttribute() -> void
Xamarin.Chromium.CroNet.ConnectionCostConsts
Xamarin.Chromium.CroNet.ConnectionSubtype
Xamarin.Chromium.CroNet.ConnectionSubtypeAttribute
Xamarin.Chromium.CroNet.ConnectionSubtypeAttribute.ConnectionSubtypeAttribute() -> void
Xamarin.Chromium.CroNet.ConnectionSubtypeConsts
Xamarin.Chromium.CroNet.ConnectionType
Xamarin.Chromium.CroNet.ConnectionTypeAttribute
Xamarin.Chromium.CroNet.ConnectionTypeAttribute.ConnectionTypeAttribute() -> void
Xamarin.Chromium.CroNet.ConnectionTypeConsts
Xamarin.Chromium.CroNet.DnsStatus
Xamarin.Chromium.CroNet.DnsStatus.DnsStatus(System.Collections.Generic.IList<Java.Net.InetAddress!>? dnsServers, bool privateDnsActive, string? privateDnsServerName, string? searchDomains) -> void
Xamarin.Chromium.CroNet.DnsStatus.DnsStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.GURLUtils
Xamarin.Chromium.CroNet.GURLUtils.GURLUtils() -> void
Xamarin.Chromium.CroNet.GURLUtils.INatives
Xamarin.Chromium.CroNet.GURLUtils.INatives.GetOrigin(string? p0) -> string?
Xamarin.Chromium.CroNet.GURLUtilsJni
Xamarin.Chromium.CroNet.GURLUtilsJni.GURLUtilsJni() -> void
Xamarin.Chromium.CroNet.GURLUtilsJni.GURLUtilsJni(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator
Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator.HttpNegotiateAuthenticator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator.HttpNegotiateAuthenticator(string? accountType) -> void
Xamarin.Chromium.CroNet.HttpNegotiateConstants
Xamarin.Chromium.CroNet.HttpNegotiateConstants.HttpNegotiateConstants() -> void
Xamarin.Chromium.CroNet.HttpNegotiateConstants.HttpNegotiateConstants(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.HttpUtil
Xamarin.Chromium.CroNet.HttpUtil.HttpUtil() -> void
Xamarin.Chromium.CroNet.ICertVerifyStatusAndroid
Xamarin.Chromium.CroNet.IConnectionCost
Xamarin.Chromium.CroNet.IConnectionSubtype
Xamarin.Chromium.CroNet.IConnectionType
Xamarin.Chromium.CroNet.IIdempotency
Xamarin.Chromium.CroNet.INetError
Xamarin.Chromium.CroNet.INetId
Xamarin.Chromium.CroNet.INetworkQualityObservationSource
Xamarin.Chromium.CroNet.IPrivateKeyType
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.BrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.BypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.DisableCache.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.EnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.ExperimentalOptions.get -> string?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.ExperimentalOptionsBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasBrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasBypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasDisableCache.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasEnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasExperimentalOptions.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasHttp2Enabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasHttpCacheMaxSize.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasHttpCacheMode.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasMockCertVerifier.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasNetworkThreadPriority.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasQuicDefaultUserAgentId.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasQuicEnabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasStoragePath.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HasUserAgent.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.Http2Enabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HttpCacheMaxSize.get -> long
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.HttpCacheMode.get -> int
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.MockCertVerifier.get -> long
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.NetworkThreadPriority.get -> int
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.QuicDefaultUserAgentId.get -> string?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.QuicDefaultUserAgentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.QuicEnabled.get -> bool
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.StoragePath.get -> string?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.StoragePathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.UserAgent.get -> string?
Xamarin.Chromium.CroNet.IRequestContextConfigOptionsOrBuilder.UserAgentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.IRequestPriority
Xamarin.Chromium.CroNet.ITrafficStatsError
Xamarin.Chromium.CroNet.ITrafficStatsUid
Xamarin.Chromium.CroNet.Idempotency
Xamarin.Chromium.CroNet.IdempotencyAttribute
Xamarin.Chromium.CroNet.IdempotencyAttribute.IdempotencyAttribute() -> void
Xamarin.Chromium.CroNet.IdempotencyConsts
Xamarin.Chromium.CroNet.Impl.BidirectionalStreamBuilderImpl
Xamarin.Chromium.CroNet.Impl.BidirectionalStreamBuilderImpl.BidirectionalStreamBuilderImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException
Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException.BidirectionalStreamNetworkException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException.BidirectionalStreamNetworkException(string? message, int errorCode, int cronetInternalErrorCode) -> void
Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream
Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.CronetBidirectionalStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader
Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.CronetLibraryLoader() -> void
Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.CronetLibraryLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.CronetMetrics
Xamarin.Chromium.CroNet.Impl.CronetMetrics.CronetMetrics(Java.Lang.Long? ttfbMs, Java.Lang.Long? totalTimeMs, Java.Lang.Long? sentByteCount, Java.Lang.Long? receivedByteCount) -> void
Xamarin.Chromium.CroNet.Impl.CronetMetrics.CronetMetrics(long requestStartMs, long dnsStartMs, long dnsEndMs, long connectStartMs, long connectEndMs, long sslStartMs, long sslEndMs, long sendingStartMs, long sendingEndMs, long pushStartMs, long pushEndMs, long responseStartMs, long requestEndMs, bool socketReused, long sentByteCount, long receivedByteCount) -> void
Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream
Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.CreateUploadDataStreamForTesting() -> long
Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.CronetUploadDataStream(Xamarin.Chromium.CroNet.UploadDataProvider? dataProvider, Java.Util.Concurrent.IExecutor? executor, Xamarin.Chromium.CroNet.Impl.CronetUrlRequest? request) -> void
Xamarin.Chromium.CroNet.Impl.CronetUrlRequest
Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.SetOnDestroyedCallbackForTesting(Java.Lang.IRunnable? onDestroyedCallbackForTesting) -> void
Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.SetOnDestroyedUploadCallbackForTesting(Java.Lang.IRunnable? onDestroyedUploadCallbackForTesting) -> void
Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.UrlRequestAdapterForTesting.get -> long
Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext
Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CronetUrlRequestContext(Xamarin.Chromium.CroNet.Impl.CronetEngineBuilderImpl? builder) -> void
Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CronetUrlRequestContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.IUrlRequestError
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.NativeCronetEngineBuilderImpl(Android.Content.Context? context) -> void
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.NativeCronetEngineBuilderImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl.NativeCronetEngineBuilderWithLibraryLoaderImpl(Android.Content.Context? context) -> void
Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl.NativeCronetEngineBuilderWithLibraryLoaderImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.NativeCronetProvider
Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.NativeCronetProvider(Android.Content.Context? context) -> void
Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.NativeCronetProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.Impl.UrlRequestError
Xamarin.Chromium.CroNet.Impl.UrlRequestErrorAttribute
Xamarin.Chromium.CroNet.Impl.UrlRequestErrorAttribute.UrlRequestErrorAttribute() -> void
Xamarin.Chromium.CroNet.Impl.UrlRequestErrorConsts
Xamarin.Chromium.CroNet.MimeTypeFilter
Xamarin.Chromium.CroNet.MimeTypeFilter.MimeTypeFilter(System.Collections.Generic.IList<string!>! mimeTypes, bool acceptDirectory) -> void
Xamarin.Chromium.CroNet.MimeTypeFilter.MimeTypeFilter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetError
Xamarin.Chromium.CroNet.NetErrorAttribute
Xamarin.Chromium.CroNet.NetErrorAttribute.NetErrorAttribute() -> void
Xamarin.Chromium.CroNet.NetErrorConsts
Xamarin.Chromium.CroNet.NetId
Xamarin.Chromium.CroNet.NetIdAttribute
Xamarin.Chromium.CroNet.NetIdAttribute.NetIdAttribute() -> void
Xamarin.Chromium.CroNet.NetIdConsts
Xamarin.Chromium.CroNet.NetStringUtil
Xamarin.Chromium.CroNet.NetStringUtil.NetStringUtil() -> void
Xamarin.Chromium.CroNet.NetStringUtil.NetStringUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkActiveNotifier
Xamarin.Chromium.CroNet.NetworkActiveNotifier.NetworkActiveNotifier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifier
Xamarin.Chromium.CroNet.NetworkChangeNotifier.IConnectionTypeObserver
Xamarin.Chromium.CroNet.NetworkChangeNotifier.IConnectionTypeObserver.OnConnectionTypeChanged(int p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifier.NetworkChangeNotifier() -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifier.NetworkChangeNotifier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnConnectionCostChanged(int p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnConnectionSubtypeChanged(int p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnConnectionTypeChanged(int p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnNetworkConnect(long p0, int p1) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnNetworkDisconnect(long p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.OnNetworkSoonToDisconnect(long p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver.PurgeActiveNetworkList(long[]? p0) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkChangeNotifierAutoDetect(Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.IObserver? observer, Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy? policy) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkChangeNotifierAutoDetect(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.NetworkState(bool connected, int type, int subtype, bool isMetered, string? networkIdentifier, bool isPrivateDnsActive, string? privateDnsServerName) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.NetworkState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.Register() -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.RegistrationPolicy() -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.RegistrationPolicy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.Unregister() -> void
Xamarin.Chromium.CroNet.NetworkQualityObservationSource
Xamarin.Chromium.CroNet.NetworkQualityObservationSourceAttribute
Xamarin.Chromium.CroNet.NetworkQualityObservationSourceAttribute.NetworkQualityObservationSourceAttribute() -> void
Xamarin.Chromium.CroNet.NetworkQualityObservationSourceConsts
Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag
Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.NetworkTrafficAnnotationTag(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.PrivateKeyType
Xamarin.Chromium.CroNet.PrivateKeyTypeAttribute
Xamarin.Chromium.CroNet.PrivateKeyTypeAttribute.PrivateKeyTypeAttribute() -> void
Xamarin.Chromium.CroNet.PrivateKeyTypeConsts
Xamarin.Chromium.CroNet.ProxyChangeListener
Xamarin.Chromium.CroNet.ProxyChangeListener.IDelegate
Xamarin.Chromium.CroNet.ProxyChangeListener.IDelegate.ProxySettingsChanged() -> void
Xamarin.Chromium.CroNet.ProxyChangeListener.ProxyChangeListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister
Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.RegistrationPolicyAlwaysRegister() -> void
Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.RegistrationPolicyAlwaysRegister(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus
Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.RegistrationPolicyApplicationStatus() -> void
Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.RegistrationPolicyApplicationStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.RequestContextConfig
Xamarin.Chromium.CroNet.RequestContextConfigOptions
Xamarin.Chromium.CroNet.RequestContextConfigOptions.BrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.BrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.BypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearBrotliEnabled() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearBypassPublicKeyPinningForLocalTrustAnchors() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearDisableCache() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearEnableNetworkQualityEstimator() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearExperimentalOptions() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearHttp2Enabled() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearHttpCacheMaxSize() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearHttpCacheMode() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearMockCertVerifier() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearNetworkThreadPriority() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearQuicDefaultUserAgentId() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearQuicEnabled() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearStoragePath() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ClearUserAgent() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.DisableCache.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.EnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ExperimentalOptions.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.ExperimentalOptionsBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasBrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasBypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasDisableCache.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasEnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasExperimentalOptions.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasHttp2Enabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasHttpCacheMaxSize.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasHttpCacheMode.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasMockCertVerifier.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasNetworkThreadPriority.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasQuicDefaultUserAgentId.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasQuicEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasStoragePath.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HasUserAgent.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.Http2Enabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HttpCacheMaxSize.get -> long
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.HttpCacheMode.get -> int
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.MockCertVerifier.get -> long
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.NetworkThreadPriority.get -> int
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.QuicDefaultUserAgentId.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.QuicDefaultUserAgentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.QuicEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetBrotliEnabled(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetBypassPublicKeyPinningForLocalTrustAnchors(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetDisableCache(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetEnableNetworkQualityEstimator(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetExperimentalOptions(string? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetExperimentalOptionsBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetHttp2Enabled(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetHttpCacheMaxSize(long value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetHttpCacheMode(int value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetMockCertVerifier(long value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetNetworkThreadPriority(int value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetQuicDefaultUserAgentId(string? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetQuicDefaultUserAgentIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetQuicEnabled(bool value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetStoragePath(string? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetStoragePathBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetUserAgent(string? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.SetUserAgentBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.StoragePath.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.StoragePathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.UserAgent.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.UserAgentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.BypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.DisableCache.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.EnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.ExperimentalOptions.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.ExperimentalOptionsBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasBrotliEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasBypassPublicKeyPinningForLocalTrustAnchors.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasDisableCache.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasEnableNetworkQualityEstimator.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasExperimentalOptions.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasHttp2Enabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasHttpCacheMaxSize.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasHttpCacheMode.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasMockCertVerifier.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasNetworkThreadPriority.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasQuicDefaultUserAgentId.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasQuicEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasStoragePath.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HasUserAgent.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.Http2Enabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HttpCacheMaxSize.get -> long
Xamarin.Chromium.CroNet.RequestContextConfigOptions.HttpCacheMode.get -> int
Xamarin.Chromium.CroNet.RequestContextConfigOptions.MockCertVerifier.get -> long
Xamarin.Chromium.CroNet.RequestContextConfigOptions.NetworkThreadPriority.get -> int
Xamarin.Chromium.CroNet.RequestContextConfigOptions.QuicDefaultUserAgentId.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.QuicDefaultUserAgentIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.QuicEnabled.get -> bool
Xamarin.Chromium.CroNet.RequestContextConfigOptions.StoragePath.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.StoragePathBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.UserAgent.get -> string?
Xamarin.Chromium.CroNet.RequestContextConfigOptions.UserAgentBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.CroNet.RequestPriority
Xamarin.Chromium.CroNet.RequestPriorityAttribute
Xamarin.Chromium.CroNet.RequestPriorityAttribute.RequestPriorityAttribute() -> void
Xamarin.Chromium.CroNet.RequestPriorityConsts
Xamarin.Chromium.CroNet.TrafficStatsError
Xamarin.Chromium.CroNet.TrafficStatsErrorAttribute
Xamarin.Chromium.CroNet.TrafficStatsErrorAttribute.TrafficStatsErrorAttribute() -> void
Xamarin.Chromium.CroNet.TrafficStatsErrorConsts
Xamarin.Chromium.CroNet.TrafficStatsUid
Xamarin.Chromium.CroNet.TrafficStatsUidAttribute
Xamarin.Chromium.CroNet.TrafficStatsUidAttribute.TrafficStatsUidAttribute() -> void
Xamarin.Chromium.CroNet.TrafficStatsUidConsts
Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection
Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.CronetHttpURLConnection(Java.Net.URL? url, Xamarin.Chromium.CroNet.CronetEngine? cronetEngine) -> void
Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.CronetHttpURLConnection(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory
Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.CronetURLStreamHandlerFactory(Xamarin.Chromium.CroNet.ExperimentalCronetEngine? cronetEngine) -> void
Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.CronetURLStreamHandlerFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.CroNet.X509Util
Xamarin.Chromium.CroNet.X509Util.X509Util() -> void
Xamarin.Chromium.CroNet.X509Util.X509Util(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim.Anim() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim.Anim(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator.Animator() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator.Animator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array.Array() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array.Array(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Attr() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Attr(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool.Bool() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool.Bool(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.Color() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.Color(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.Dimen() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.Dimen(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.Drawable() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.Drawable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font.Font() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font.Font(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction.Fraction() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction.Fraction(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Id() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Id(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.Integer() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.Integer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator.Interpolator() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator.Interpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.Layout() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.Layout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro.Macro() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro.Macro(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu.Menu() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu.Menu(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap.Mipmap() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap.Mipmap(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals.Plurals() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals.Plurals(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.R() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw.Raw() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw.Raw(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.String() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.String(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.Style() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.Style(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.Styleable() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.Styleable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition.Transition() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition.Transition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml.Xml() -> void
Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml.Xml(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim.Anim() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim.Anim(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator.Animator() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator.Animator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array.Array() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array.Array(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr.Attr() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr.Attr(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool.Bool() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool.Bool(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color.Color() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color.Color(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen.Dimen() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen.Dimen(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable.Drawable() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable.Drawable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font.Font() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font.Font(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction.Fraction() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction.Fraction(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id.Id() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id.Id(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer.Integer() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer.Integer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator.Interpolator() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator.Interpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout.Layout() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout.Layout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro.Macro() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro.Macro(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu.Menu() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu.Menu(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap.Mipmap() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap.Mipmap(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals.Plurals() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals.Plurals(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.R() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw.Raw() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw.Raw(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String.String() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String.String(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style.Style() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style.Style(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable.Styleable() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable.Styleable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition.Transition() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition.Transition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml.Xml() -> void
Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml.Xml(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.HttpFlags.BaseFeature
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.ClearFeatureStates() -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.ContainsFeatureStates(string? key) -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.FeatureStates.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.FeatureStatesCount.get -> int
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.FeatureStatesMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.GetFeatureStatesOrDefault(string? key, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState? defaultValue) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.GetFeatureStatesOrThrow(string? key) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.PutAllFeatureStates(System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>? values) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.PutFeatureStates(string? key, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState? value) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.RemoveFeatureStates(string? key) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ContainsFeatureStates(string? key) -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.ClearEnabled() -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.ClearParams() -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.ContainsParams(string? key) -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.Enabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.GetParamsOrDefault(string? key, Xamarin.Protobuf.Lite.ByteString? defaultValue) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.GetParamsOrThrow(string? key) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.HasEnabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.Params.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.ParamsCount.get -> int
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.ParamsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.PutAllParams(System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>? values) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.PutParams(string? key, Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.RemoveParams(string? key) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.SetEnabled(bool value) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ContainsParams(string? key) -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Enabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.GetParamsOrDefault(string? key, Xamarin.Protobuf.Lite.ByteString? defaultValue) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.GetParamsOrThrow(string? key) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.HasEnabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Params.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParamsCount.get -> int
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParamsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureStates.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureStatesCount.get -> int
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureStatesMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.GetFeatureStatesOrDefault(string? key, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState? defaultValue) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.GetFeatureStatesOrThrow(string? key) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.ContainsParams(string? p0) -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.Enabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.GetParamsOrDefault(string? p0, Xamarin.Protobuf.Lite.ByteString? p1) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.GetParamsOrThrow(string? p0) -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.HasEnabled.get -> bool
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.Params.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.ParamsCount.get -> int
Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.IFeatureStateOrBuilder.ParamsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Protobuf.Lite.ByteString!>?
Xamarin.Chromium.HttpFlags.BaseFeatureOverridesOuterClass
Xamarin.Chromium.HttpFlags.FlagValue
Xamarin.Chromium.HttpFlags.FlagValue.Builder
Xamarin.Chromium.HttpFlags.FlagValue.Builder.AddAllConstrainedValues(Java.Lang.IIterable? values) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.AddConstrainedValues(Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder? builderForValue) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.AddConstrainedValues(Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue? value) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.AddConstrainedValues(int index, Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder? builderForValue) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.AddConstrainedValues(int index, Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue? value) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.ClearConstrainedValues() -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.ConstrainedValuesCount.get -> int
Xamarin.Chromium.HttpFlags.FlagValue.Builder.ConstrainedValuesList.get -> System.Collections.Generic.IList<Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue!>?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.GetConstrainedValues(int index) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.RemoveConstrainedValues(int index) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.SetConstrainedValues(int index, Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder? builderForValue) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.Builder.SetConstrainedValues(int index, Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue? value) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.AppId.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.AppIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.BoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.AppId.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.AppIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.BoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearAppId() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearBoolValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearBytesValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearFloatValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearIntValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearMinVersion() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearStringValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ClearValue() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.FloatValue.get -> float
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasAppId.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasBoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasBytesValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasFloatValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasIntValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasMinVersion.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.HasStringValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.IntValue.get -> long
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.MinVersion.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.MinVersionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetAppId(string? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetAppIdBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetBoolValue(bool value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetBytesValue(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetFloatValue(float value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetIntValue(long value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetMinVersion(string? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetMinVersionBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetStringValue(string? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.SetStringValueBytes(Xamarin.Protobuf.Lite.ByteString? value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.StringValue.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.ValueCase.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.FloatValue.get -> float
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.GetValueCase() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasAppId.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasBoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasBytesValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasFloatValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasIntValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasMinVersion.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.HasStringValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.IntValue.get -> long
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.MinVersion.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.MinVersionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.StringValue.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.Number.get -> int
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValuesCount.get -> int
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValuesList.get -> System.Collections.Generic.IList<Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue!>?
Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValuesOrBuilderList.get -> System.Collections.Generic.IList<Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder!>?
Xamarin.Chromium.HttpFlags.FlagValue.GetConstrainedValues(int index) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
Xamarin.Chromium.HttpFlags.FlagValue.GetConstrainedValuesOrBuilder(int index) -> Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.AppId.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.AppIdBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.BoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.FloatValue.get -> float
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasAppId.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasBoolValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasBytesValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasFloatValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasIntValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasMinVersion.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.HasStringValue.get -> bool
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.IntValue.get -> long
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.MinVersion.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.MinVersionBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.StringValue.get -> string?
Xamarin.Chromium.HttpFlags.FlagValue.IConstrainedValueOrBuilder.StringValueBytes.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.Flags
Xamarin.Chromium.HttpFlags.Flags.Builder
Xamarin.Chromium.HttpFlags.Flags.Builder.ClearFlags() -> Xamarin.Chromium.HttpFlags.Flags.Builder?
Xamarin.Chromium.HttpFlags.Flags.Builder.ContainsFlags(string? key) -> bool
Xamarin.Chromium.HttpFlags.Flags.Builder.FlagsCount.get -> int
Xamarin.Chromium.HttpFlags.Flags.Builder.FlagsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.FlagValue!>?
Xamarin.Chromium.HttpFlags.Flags.Builder.GetFlagsOrDefault(string? key, Xamarin.Chromium.HttpFlags.FlagValue? defaultValue) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.Flags.Builder.GetFlagsOrThrow(string? key) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.Flags.Builder.PutAllFlags(System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.FlagValue!>? values) -> Xamarin.Chromium.HttpFlags.Flags.Builder?
Xamarin.Chromium.HttpFlags.Flags.Builder.PutFlags(string? key, Xamarin.Chromium.HttpFlags.FlagValue? value) -> Xamarin.Chromium.HttpFlags.Flags.Builder?
Xamarin.Chromium.HttpFlags.Flags.Builder.RemoveFlags(string? key) -> Xamarin.Chromium.HttpFlags.Flags.Builder?
Xamarin.Chromium.HttpFlags.Flags.ContainsFlags(string? key) -> bool
Xamarin.Chromium.HttpFlags.Flags.FlagsCount.get -> int
Xamarin.Chromium.HttpFlags.Flags.FlagsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.FlagValue!>?
Xamarin.Chromium.HttpFlags.Flags.GetFlags() -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.FlagValue!>?
Xamarin.Chromium.HttpFlags.Flags.GetFlagsOrDefault(string? key, Xamarin.Chromium.HttpFlags.FlagValue? defaultValue) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.Flags.GetFlagsOrThrow(string? key) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.FlagsOuterClass
Xamarin.Chromium.HttpFlags.HttpFlagsLoader
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.ContainsFeatureStates(string? p0) -> bool
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.FeatureStates.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.FeatureStatesCount.get -> int
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.FeatureStatesMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState!>?
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.GetFeatureStatesOrDefault(string? p0, Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState? p1) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.IBaseFeatureOverridesOrBuilder.GetFeatureStatesOrThrow(string? p0) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
Xamarin.Chromium.HttpFlags.IFlagValueOrBuilder
Xamarin.Chromium.HttpFlags.IFlagValueOrBuilder.ConstrainedValuesCount.get -> int
Xamarin.Chromium.HttpFlags.IFlagValueOrBuilder.ConstrainedValuesList.get -> System.Collections.Generic.IList<Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue!>?
Xamarin.Chromium.HttpFlags.IFlagValueOrBuilder.GetConstrainedValues(int p0) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder.ContainsFlags(string? p0) -> bool
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder.FlagsCount.get -> int
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder.FlagsMap.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.FlagValue!>?
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder.GetFlagsOrDefault(string? p0, Xamarin.Chromium.HttpFlags.FlagValue? p1) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.IFlagsOrBuilder.GetFlagsOrThrow(string? p0) -> Xamarin.Chromium.HttpFlags.FlagValue?
Xamarin.Chromium.HttpFlags.ResolvedFlags
Xamarin.Chromium.HttpFlags.ResolvedFlags.Flags() -> System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.ResolvedFlags.Value!>?
Xamarin.Chromium.HttpFlags.ResolvedFlags.ResolvedFlags(System.Collections.Generic.IDictionary<string!, Xamarin.Chromium.HttpFlags.ResolvedFlags.Value!>? flags) -> void
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.BoolValue.get -> bool
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.BytesValue.get -> Xamarin.Protobuf.Lite.ByteString?
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.FloatValue.get -> float
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.GetType() -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.IntValue.get -> long
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.StringValue.get -> string?
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Value(Xamarin.Protobuf.Lite.ByteString? value) -> void
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Value(bool value) -> void
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Value(float value) -> void
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Value(long value) -> void
Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Value(string? value) -> void
Xamarin.Chromium.J.N
Xamarin.Chromium.J.N.N() -> void
Xamarin.Chromium.J.N.N(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Jni.Zero.GEN_JNI
Xamarin.Chromium.Jni.Zero.GEN_JNI.GEN_JNI() -> void
Xamarin.Chromium.Jni.Zero.GEN_JNI.GEN_JNI(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Jni.Zero.IJniStaticTestMocker
Xamarin.Chromium.Jni.Zero.IJniStaticTestMocker.SetInstanceForTesting(Java.Lang.Object? p0) -> void
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.INativeLibraryLoadedStatusProvider
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.INativeLibraryLoadedStatusProvider.AreNativeMethodsReady() -> bool
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeLibraryLoadedStatus() -> void
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeLibraryLoadedStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException.NativeNotLoadedException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException.NativeNotLoadedException(string? s) -> void
Xamarin.Chromium.Native_Test.R
Xamarin.Chromium.Native_Test.R.Anim
Xamarin.Chromium.Native_Test.R.Anim.Anim() -> void
Xamarin.Chromium.Native_Test.R.Animator
Xamarin.Chromium.Native_Test.R.Animator.Animator() -> void
Xamarin.Chromium.Native_Test.R.Array
Xamarin.Chromium.Native_Test.R.Array.Array() -> void
Xamarin.Chromium.Native_Test.R.Attr
Xamarin.Chromium.Native_Test.R.Attr.Attr() -> void
Xamarin.Chromium.Native_Test.R.Bool
Xamarin.Chromium.Native_Test.R.Bool.Bool() -> void
Xamarin.Chromium.Native_Test.R.Color
Xamarin.Chromium.Native_Test.R.Color.Color() -> void
Xamarin.Chromium.Native_Test.R.Dimen
Xamarin.Chromium.Native_Test.R.Dimen.Dimen() -> void
Xamarin.Chromium.Native_Test.R.Drawable
Xamarin.Chromium.Native_Test.R.Drawable.Drawable() -> void
Xamarin.Chromium.Native_Test.R.Font
Xamarin.Chromium.Native_Test.R.Font.Font() -> void
Xamarin.Chromium.Native_Test.R.Fraction
Xamarin.Chromium.Native_Test.R.Fraction.Fraction() -> void
Xamarin.Chromium.Native_Test.R.Id
Xamarin.Chromium.Native_Test.R.Id.Id() -> void
Xamarin.Chromium.Native_Test.R.Integer
Xamarin.Chromium.Native_Test.R.Integer.Integer() -> void
Xamarin.Chromium.Native_Test.R.Interpolator
Xamarin.Chromium.Native_Test.R.Interpolator.Interpolator() -> void
Xamarin.Chromium.Native_Test.R.Layout
Xamarin.Chromium.Native_Test.R.Layout.Layout() -> void
Xamarin.Chromium.Native_Test.R.Macro
Xamarin.Chromium.Native_Test.R.Macro.Macro() -> void
Xamarin.Chromium.Native_Test.R.Menu
Xamarin.Chromium.Native_Test.R.Menu.Menu() -> void
Xamarin.Chromium.Native_Test.R.Mipmap
Xamarin.Chromium.Native_Test.R.Mipmap.Mipmap() -> void
Xamarin.Chromium.Native_Test.R.Plurals
Xamarin.Chromium.Native_Test.R.Plurals.Plurals() -> void
Xamarin.Chromium.Native_Test.R.R() -> void
Xamarin.Chromium.Native_Test.R.Raw
Xamarin.Chromium.Native_Test.R.Raw.Raw() -> void
Xamarin.Chromium.Native_Test.R.String
Xamarin.Chromium.Native_Test.R.String.String() -> void
Xamarin.Chromium.Native_Test.R.Style
Xamarin.Chromium.Native_Test.R.Style.Style() -> void
Xamarin.Chromium.Native_Test.R.Styleable
Xamarin.Chromium.Native_Test.R.Styleable.Styleable() -> void
Xamarin.Chromium.Native_Test.R.Transition
Xamarin.Chromium.Native_Test.R.Transition.Transition() -> void
Xamarin.Chromium.Native_Test.R.Xml
Xamarin.Chromium.Native_Test.R.Xml.Xml() -> void
Xamarin.Chromium.Url.IDNStringUtil
Xamarin.Chromium.Url.IDNStringUtil.IDNStringUtil() -> void
Xamarin.Chromium.Url.IDNStringUtil.IDNStringUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract Xamarin.Chromium.Base.CommandLine.AppendSwitch(string? p0) -> void
abstract Xamarin.Chromium.Base.CommandLine.AppendSwitchWithValue(string? p0, string? p1) -> void
abstract Xamarin.Chromium.Base.CommandLine.AppendSwitchesAndArguments(string![]? p0) -> void
abstract Xamarin.Chromium.Base.CommandLine.GetCommandLineArguments() -> string![]?
abstract Xamarin.Chromium.Base.CommandLine.GetSwitchValue(string? p0) -> string?
abstract Xamarin.Chromium.Base.CommandLine.HasSwitch(string? p0) -> bool
abstract Xamarin.Chromium.Base.CommandLine.RemoveSwitch(string? p0) -> void
abstract Xamarin.Chromium.Base.CommandLine.Switches.get -> System.Collections.IDictionary?
abstract Xamarin.Chromium.Base.Flag.ClearInMemoryCachedValueForTesting() -> void
abstract Xamarin.Chromium.Base.Flag.IsEnabled.get -> bool
abstract Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.DoSet() -> void
abstract Xamarin.Chromium.Base.Task.AsyncTask.DoInBackground() -> Java.Lang.Object?
abstract Xamarin.Chromium.Base.Task.AsyncTask.OnPostExecute(Java.Lang.Object? p0) -> void
abstract Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.Destroy() -> void
const Xamarin.Chromium.Base.ActivityState.Created = 1 -> int
const Xamarin.Chromium.Base.ActivityState.Destroyed = 6 -> int
const Xamarin.Chromium.Base.ActivityState.Paused = 4 -> int
const Xamarin.Chromium.Base.ActivityState.Resumed = 3 -> int
const Xamarin.Chromium.Base.ActivityState.Started = 2 -> int
const Xamarin.Chromium.Base.ActivityState.Stopped = 5 -> int
const Xamarin.Chromium.Base.ApplicationState.HasDestroyedActivities = 4 -> int
const Xamarin.Chromium.Base.ApplicationState.HasPausedActivities = 2 -> int
const Xamarin.Chromium.Base.ApplicationState.HasRunningActivities = 1 -> int
const Xamarin.Chromium.Base.ApplicationState.HasStoppedActivities = 3 -> int
const Xamarin.Chromium.Base.ApplicationState.Unknown = 0 -> int
const Xamarin.Chromium.Base.BaseSwitches.DefaultCountryCodeAtInstall = "default-country-code" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableBestEffortTasks = "disable-best-effort-tasks" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableBreakpad = "disable-breakpad" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableDevShmUsage = "disable-dev-shm-usage" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableFeatures = "disable-features" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableHighResTimer = "disable-highres-timer" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableLowEndDeviceMode = "disable-low-end-device-mode" -> string!
const Xamarin.Chromium.Base.BaseSwitches.DisableUsbKeyboardDetect = "disable-usb-keyboard-detect" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableBackgroundThreadPool = "enable-background-thread-pool" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableCrashReporter = "enable-crash-reporter" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableCrashReporterForTesting = "enable-crash-reporter-for-testing" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableFeatures = "enable-features" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableIdleTracing = "enable-idle-tracing" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableLowEndDeviceMode = "enable-low-end-device-mode" -> string!
const Xamarin.Chromium.Base.BaseSwitches.EnableReachedCodeProfiler = "enable-reached-code-profiler" -> string!
const Xamarin.Chromium.Base.BaseSwitches.FieldTrialHandle = "field-trial-handle" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ForceFieldTrialParams = "force-fieldtrial-params" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ForceFieldTrials = "force-fieldtrials" -> string!
const Xamarin.Chromium.Base.BaseSwitches.FullMemoryCrashReport = "full-memory-crash-report" -> string!
const Xamarin.Chromium.Base.BaseSwitches.HostPackageLabel = "host-package-label" -> string!
const Xamarin.Chromium.Base.BaseSwitches.HostPackageName = "host-package-name" -> string!
const Xamarin.Chromium.Base.BaseSwitches.HostVersionCode = "host-version-code" -> string!
const Xamarin.Chromium.Base.BaseSwitches.LogBestEffortTasks = "log-best-effort-tasks" -> string!
const Xamarin.Chromium.Base.BaseSwitches.NoErrorDialogs = "noerrdialogs" -> string!
const Xamarin.Chromium.Base.BaseSwitches.PackageName = "package-name" -> string!
const Xamarin.Chromium.Base.BaseSwitches.PackageVersionCode = "package-version-code" -> string!
const Xamarin.Chromium.Base.BaseSwitches.PackageVersionName = "package-version-name" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ProfilingAtStart = "profiling-at-start" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ProfilingFile = "profiling-file" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ProfilingFlush = "profiling-flush" -> string!
const Xamarin.Chromium.Base.BaseSwitches.ReachedCodeSamplingIntervalUs = "reached-code-sampling-interval-us" -> string!
const Xamarin.Chromium.Base.BaseSwitches.RendererWaitForJavaDebugger = "renderer-wait-for-java-debugger" -> string!
const Xamarin.Chromium.Base.BaseSwitches.SchedulerBoostUrgent = "scheduler-boost-urgent" -> string!
const Xamarin.Chromium.Base.BaseSwitches.TestChildProcess = "test-child-process" -> string!
const Xamarin.Chromium.Base.BaseSwitches.TraceToFile = "trace-to-file" -> string!
const Xamarin.Chromium.Base.BaseSwitches.TraceToFileName = "trace-to-file-name" -> string!
const Xamarin.Chromium.Base.BaseSwitches.V = "v" -> string!
const Xamarin.Chromium.Base.BaseSwitches.VModule = "vmodule" -> string!
const Xamarin.Chromium.Base.BaseSwitches.WaitForDebugger = "wait-for-debugger" -> string!
const Xamarin.Chromium.Base.ChildBindingState.MaxValue = 4 -> int
const Xamarin.Chromium.Base.ChildBindingState.NotPerceptible = 2 -> int
const Xamarin.Chromium.Base.ChildBindingState.Strong = 4 -> int
const Xamarin.Chromium.Base.ChildBindingState.Unbound = 0 -> int
const Xamarin.Chromium.Base.ChildBindingState.Visible = 3 -> int
const Xamarin.Chromium.Base.ChildBindingState.Waived = 1 -> int
const Xamarin.Chromium.Base.ContextUtils.ReceiverExported = 2 -> int
const Xamarin.Chromium.Base.ContextUtils.ReceiverNotExported = 4 -> int
const Xamarin.Chromium.Base.EarlyTraceEvent.TraceEarlyJavaInChildSwitch = "trace-early-java-in-child" -> string!
const Xamarin.Chromium.Base.Log.Assert = 7 -> int
const Xamarin.Chromium.Base.Log.Debug = 3 -> int
const Xamarin.Chromium.Base.Log.Error = 6 -> int
const Xamarin.Chromium.Base.Log.Info = 4 -> int
const Xamarin.Chromium.Base.Log.Verbose = 2 -> int
const Xamarin.Chromium.Base.Log.Warn = 5 -> int
const Xamarin.Chromium.Base.MathUtils.Epsilon = 0.001 -> float
const Xamarin.Chromium.Base.MemoryPressureLevel.Critical = 2 -> int
const Xamarin.Chromium.Base.MemoryPressureLevel.MaxValue = 2 -> int
const Xamarin.Chromium.Base.MemoryPressureLevel.Moderate = 1 -> int
const Xamarin.Chromium.Base.MemoryPressureLevel.None = 0 -> int
const Xamarin.Chromium.Base.Metrics.JSONVerbosityLevel.JsonVerbosityLevelFull = 0 -> int
const Xamarin.Chromium.Base.Metrics.JSONVerbosityLevel.JsonVerbosityLevelOmitBuckets = 1 -> int
const Xamarin.Chromium.Base.PathService.DirModule = 3 -> int
const Xamarin.Chromium.Base.Task.AsyncTask.Status.Finished = 2 -> int
const Xamarin.Chromium.Base.Task.AsyncTask.Status.NumEntries = 3 -> int
const Xamarin.Chromium.Base.Task.AsyncTask.Status.Pending = 0 -> int
const Xamarin.Chromium.Base.Task.AsyncTask.Status.Running = 1 -> int
const Xamarin.Chromium.Base.Task.TaskPriority.BestEffort = 0 -> int
const Xamarin.Chromium.Base.Task.TaskPriority.Highest = 2 -> int
const Xamarin.Chromium.Base.Task.TaskPriority.Lowest = 0 -> int
const Xamarin.Chromium.Base.Task.TaskPriority.UserBlocking = 2 -> int
const Xamarin.Chromium.Base.Task.TaskPriority.UserVisible = 1 -> int
const Xamarin.Chromium.Base.Task.TaskRunnerType.Base = 0 -> int
const Xamarin.Chromium.Base.Task.TaskRunnerType.Sequenced = 1 -> int
const Xamarin.Chromium.Base.Task.TaskRunnerType.SingleThread = 2 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.BestEffort = 0 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.BestEffortMayBlock = 1 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.ThreadPoolTraitsEnd = 5 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.ThreadPoolTraitsStart = 0 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiBestEffort = 6 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiDefault = 7 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiTraitsEnd = 8 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiTraitsStart = 6 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiUserBlocking = 8 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UiUserVisible = 7 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UserBlocking = 4 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UserBlockingMayBlock = 5 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UserVisible = 2 -> int
const Xamarin.Chromium.Base.Task.TaskTraits.UserVisibleMayBlock = 3 -> int
const Xamarin.Chromium.Base.TimeUtils.MillisecondsPerMinute = 60000 -> long
const Xamarin.Chromium.Base.TimeUtils.NanosecondsPerMicrosecond = 1000 -> long
const Xamarin.Chromium.Base.TimeUtils.NanosecondsPerMillisecond = 1000000 -> long
const Xamarin.Chromium.Base.TimeUtils.SecondsPerDay = 86400 -> long
const Xamarin.Chromium.Base.TimeUtils.SecondsPerHour = 3600 -> long
const Xamarin.Chromium.Base.TimeUtils.SecondsPerMinute = 60 -> long
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.Expired = -3 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.Failed = -1 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.IncorrectKeyUsage = -6 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.NoTrustedRoot = -2 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.NotYetValid = -4 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.Ok = 0 -> int
const Xamarin.Chromium.CroNet.CertVerifyStatusAndroid.UnableToParse = -5 -> int
const Xamarin.Chromium.CroNet.ConnectionCost.Last = 3 -> int
const Xamarin.Chromium.CroNet.ConnectionCost.Metered = 2 -> int
const Xamarin.Chromium.CroNet.ConnectionCost.Unknown = 0 -> int
const Xamarin.Chromium.CroNet.ConnectionCost.Unmetered = 1 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.Subtype10GigabitEthernet = 27 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.Subtype1xrtt = 6 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeBluetooth12 = 20 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeBluetooth21 = 21 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeBluetooth30 = 22 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeBluetooth40 = 23 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeCdma = 5 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEdge = 8 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEhrpd = 16 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEthernet = 24 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEvdoRev0 = 10 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEvdoRevA = 11 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeEvdoRevB = 13 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeFastEthernet = 25 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeGigabitEthernet = 26 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeGprs = 7 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeGsm = 3 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeHsdpa = 14 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeHspa = 12 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeHspap = 17 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeHsupa = 15 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeIden = 4 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeLast = 32 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeLte = 18 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeLteAdvanced = 19 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeNone = 1 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeOther = 2 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeUmts = 9 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeUnknown = 0 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeWifiAc = 31 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeWifiAd = 32 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeWifiB = 28 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeWifiG = 29 -> int
const Xamarin.Chromium.CroNet.ConnectionSubtype.SubtypeWifiN = 30 -> int
const Xamarin.Chromium.CroNet.ConnectionType.Connection2g = 3 -> int
const Xamarin.Chromium.CroNet.ConnectionType.Connection3g = 4 -> int
const Xamarin.Chromium.CroNet.ConnectionType.Connection4g = 5 -> int
const Xamarin.Chromium.CroNet.ConnectionType.Connection5g = 8 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionBluetooth = 7 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionEthernet = 1 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionLast = 8 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionNone = 6 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionUnknown = 0 -> int
const Xamarin.Chromium.CroNet.ConnectionType.ConnectionWifi = 2 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrAborted = 2 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrInvalidAuthCredentials = 5 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrInvalidResponse = 4 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrMalformedIdentity = 9 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrMissingAuthCredentials = 7 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrUndocumentedSecurityLibraryStatus = 8 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrUnexpected = 1 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrUnexpectedSecurityLibraryStatus = 3 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.ErrUnsupportedAuthScheme = 6 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.KeyCanDelegate = "canDelegate" -> string!
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.KeyIncomingAuthToken = "incomingAuthToken" -> string!
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.KeySpnegoContext = "spnegoContext" -> string!
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.KeySpnegoResult = "spnegoResult" -> string!
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.Ok = 0 -> int
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.SpnegoFeature = "SPNEGO" -> string!
const Xamarin.Chromium.CroNet.HttpNegotiateConstants.SpnegoTokenTypeBase = "SPNEGO:HOSTBASED:" -> string!
const Xamarin.Chromium.CroNet.Idempotency.DefaultIdempotency = 0 -> int
const Xamarin.Chromium.CroNet.Idempotency.Idempotent = 1 -> int
const Xamarin.Chromium.CroNet.Idempotency.NotIdempotent = 2 -> int
const Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.LogFlagName = "Cronet_log_me" -> string!
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.AddressUnreachable = 9 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.ConnectionClosed = 5 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.ConnectionRefused = 7 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.ConnectionReset = 8 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.ConnectionTimedOut = 6 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.HostnameNotResolved = 1 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.InternetDisconnected = 2 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.ListenerExceptionThrown = 0 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.NetworkChanged = 3 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.Other = 11 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.QuicProtocolFailed = 10 -> int
const Xamarin.Chromium.CroNet.Impl.UrlRequestError.TimedOut = 4 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAborted = -3 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAccessDenied = -10 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAddUserCertFailed = -503 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAddressInUse = -147 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAddressInvalid = -108 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAddressUnreachable = -109 -> int
const Xamarin.Chromium.CroNet.NetError.ErrAlpnNegotiationFailed = -122 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBadSslClientAuthCert = -117 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBlockedByAdministrator = -22 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBlockedByClient = -20 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBlockedByCsp = -30 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBlockedByOrb = -32 -> int
const Xamarin.Chromium.CroNet.NetError.ErrBlockedByResponse = -27 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheAuthFailureAfterRead = -410 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheChecksumMismatch = -408 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheChecksumReadFailure = -407 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheCreateFailure = -405 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheDoomFailure = -412 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheEntryNotSuitable = -411 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheLockTimeout = -409 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheMiss = -400 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheOpenFailure = -404 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheOpenOrCreateFailure = -413 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheOperationNotSupported = -403 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheRace = -406 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheReadFailure = -401 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCacheWriteFailure = -402 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCachedIpAddressSpaceBlockedByPrivateNetworkAccessPolicy = -384 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertAuthorityInvalid = -202 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertCommonNameInvalid = -200 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertContainsErrors = -203 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertDatabaseChanged = -714 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertDateInvalid = -201 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertEnd = -219 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertInvalid = -207 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertKnownInterceptionBlocked = -217 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertNameConstraintViolation = -212 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertNoRevocationMechanism = -204 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertNonUniqueName = -210 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertRevoked = -206 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertSymantecLegacy = -215 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertUnableToCheckRevocation = -205 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertValidityTooLong = -213 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertVerifierChanged = -716 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertWeakKey = -211 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertWeakSignatureAlgorithm = -208 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCertificateTransparencyRequired = -214 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCleartextNotPermitted = -29 -> int
const Xamarin.Chromium.CroNet.NetError.ErrClientAuthCertTypeUnsupported = -151 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionAborted = -103 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionClosed = -100 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionFailed = -104 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionRefused = -102 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionReset = -101 -> int
const Xamarin.Chromium.CroNet.NetError.ErrConnectionTimedOut = -118 -> int
const Xamarin.Chromium.CroNet.NetError.ErrContentDecodingFailed = -330 -> int
const Xamarin.Chromium.CroNet.NetError.ErrContentDecodingInitFailed = -371 -> int
const Xamarin.Chromium.CroNet.NetError.ErrContentLengthMismatch = -354 -> int
const Xamarin.Chromium.CroNet.NetError.ErrContextShutDown = -26 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCtConsistencyProofParsingFailed = -171 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCtSthIncomplete = -169 -> int
const Xamarin.Chromium.CroNet.NetError.ErrCtSthParsingFailed = -168 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDictionaryLoadFailed = -812 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDisallowedUrlScheme = -301 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsCacheMiss = -804 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsMalformedResponse = -800 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsNameHttpsOnly = -809 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsNoMatchingSupportedAlpn = -811 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsRequestCancelled = -810 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsSearchEmpty = -805 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsSecureResolverHostnameResolutionFailed = -808 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsServerFailed = -802 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsServerRequiresTcp = -801 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsSortError = -806 -> int
const Xamarin.Chromium.CroNet.NetError.ErrDnsTimedOut = -803 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEarlyDataRejected = -178 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEchFallbackCertificateInvalid = -184 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEchNotNegotiated = -183 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEmptyResponse = -324 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEncodingConversionFailed = -333 -> int
const Xamarin.Chromium.CroNet.NetError.ErrEncodingDetectionFailed = -340 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFailed = -2 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFileExists = -16 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFileNoSpace = -18 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFileNotFound = -6 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFilePathTooLong = -17 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFileTooBig = -8 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFileVirusInfected = -19 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpBadCommandSequence = -607 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpCommandNotSupported = -606 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpFailed = -601 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpFileBusy = -604 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpServiceUnavailable = -602 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpSyntaxError = -605 -> int
const Xamarin.Chromium.CroNet.NetError.ErrFtpTransferAborted = -603 -> int
const Xamarin.Chromium.CroNet.NetError.ErrH2OrQuicRequired = -31 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHostResolverQueueTooLarge = -119 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp11Required = -365 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2CompressionError = -363 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2FlowControlError = -361 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2FrameSizeError = -362 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2InadequateTransportSecurity = -360 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2PingFailed = -352 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2ProtocolError = -337 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2RstStreamNoErrorReceived = -372 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2ServerRefusedStream = -351 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttp2StreamClosed = -376 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttpResponseCodeFailure = -379 -> int
const Xamarin.Chromium.CroNet.NetError.ErrHttpsProxyTunnelResponseRedirect = -140 -> int
const Xamarin.Chromium.CroNet.NetError.ErrIcannNameCollision = -166 -> int
const Xamarin.Chromium.CroNet.NetError.ErrImportCaCertFailed = -705 -> int
const Xamarin.Chromium.CroNet.NetError.ErrImportCaCertNotCa = -703 -> int
const Xamarin.Chromium.CroNet.NetError.ErrImportCertAlreadyExists = -704 -> int
const Xamarin.Chromium.CroNet.NetError.ErrImportServerCertFailed = -706 -> int
const Xamarin.Chromium.CroNet.NetError.ErrIncompleteChunkedEncoding = -355 -> int
const Xamarin.Chromium.CroNet.NetError.ErrIncompleteHttp2Headers = -347 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInconsistentIpAddressSpace = -383 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInsecureResponse = -501 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInsufficientResources = -12 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInternetDisconnected = -106 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidArgument = -4 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidAuthCredentials = -338 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidChunkedEncoding = -321 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidEchConfigList = -182 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidHandle = -5 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidHttpResponse = -370 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidRedirect = -303 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidResponse = -320 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidSignedExchange = -504 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidUrl = -300 -> int
const Xamarin.Chromium.CroNet.NetError.ErrInvalidWebBundle = -505 -> int
const Xamarin.Chromium.CroNet.NetError.ErrIoPending = -1 -> int
const Xamarin.Chromium.CroNet.NetError.ErrKeyGenerationFailed = -710 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMalformedIdentity = -329 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMandatoryProxyConfigurationFailed = -131 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMethodNotSupported = -322 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMisconfiguredAuthEnvironment = -343 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMissingAuthCredentials = -341 -> int
const Xamarin.Chromium.CroNet.NetError.ErrMsgTooBig = -142 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNameNotResolved = -105 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNameResolutionFailed = -137 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNetworkAccessDenied = -138 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNetworkChanged = -21 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNetworkIoSuspended = -331 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNoBufferSpace = -176 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNoPrivateKeyForCert = -502 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNoSslVersionsEnabled = -112 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNoSupportedProxies = -336 -> int
const Xamarin.Chromium.CroNet.NetError.ErrNotImplemented = -11 -> int
const Xamarin.Chromium.CroNet.NetError.ErrOutOfMemory = -13 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPacNotInDhcp = -348 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPacScriptFailed = -327 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPacScriptTerminated = -367 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPkcs12ImportBadPassword = -701 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPkcs12ImportFailed = -702 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPkcs12ImportInvalidFile = -708 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPkcs12ImportInvalidMac = -707 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPkcs12ImportUnsupported = -709 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPreconnectMaxSocketLimit = -133 -> int
const Xamarin.Chromium.CroNet.NetError.ErrPrivateKeyExportFailed = -712 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyAuthRequested = -127 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyAuthRequestedWithNoConnection = -364 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyAuthUnsupported = -115 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyCertificateInvalid = -136 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyConnectionFailed = -130 -> int
const Xamarin.Chromium.CroNet.NetError.ErrProxyHttp11Required = -366 -> int
const Xamarin.Chromium.CroNet.NetError.ErrQuicCertRootNotKnown = -380 -> int
const Xamarin.Chromium.CroNet.NetError.ErrQuicGoawayRequestCanBeRetried = -381 -> int
const Xamarin.Chromium.CroNet.NetError.ErrQuicHandshakeFailed = -358 -> int
const Xamarin.Chromium.CroNet.NetError.ErrQuicProtocolError = -356 -> int
const Xamarin.Chromium.CroNet.NetError.ErrReadIfReadyNotImplemented = -174 -> int
const Xamarin.Chromium.CroNet.NetError.ErrRequestRangeNotSatisfiable = -328 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseBodyTooBigToDrain = -345 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseHeadersMultipleContentDisposition = -349 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseHeadersMultipleContentLength = -346 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseHeadersMultipleLocation = -350 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseHeadersTooBig = -325 -> int
const Xamarin.Chromium.CroNet.NetError.ErrResponseHeadersTruncated = -357 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSelfSignedCertGenerationFailed = -713 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketIsConnected = -23 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketNotConnected = -15 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketReceiveBufferSizeUnchangeable = -162 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketSendBufferSizeUnchangeable = -163 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketSetReceiveBufferSizeError = -160 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocketSetSendBufferSizeError = -161 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocksConnectionFailed = -120 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSocksConnectionHostUnreachable = -121 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslBadPeerPublicKey = -149 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslBadRecordMacAlert = -126 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthCertBadFormat = -164 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthCertNeeded = -110 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthCertNoPrivateKey = -135 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthNoCommonAlgorithms = -177 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthPrivateKeyAccessDenied = -134 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslClientAuthSignatureFailed = -141 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslDecompressionFailureAlert = -125 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslDecryptErrorAlert = -153 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslHandshakeNotCompleted = -148 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslKeyUsageIncompatible = -181 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslNoRenegotiation = -123 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslObsoleteCipher = -172 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslPinnedKeyNotInCertChain = -150 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslProtocolError = -107 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslRenegotiationRequested = -114 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslServerCertBadFormat = -167 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslServerCertChanged = -156 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslUnrecognizedNameAlert = -159 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSslVersionOrCipherMismatch = -113 -> int
const Xamarin.Chromium.CroNet.NetError.ErrSynReplyNotReceived = -332 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTemporarilyThrottled = -139 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTimedOut = -7 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTls13DowngradeDetected = -180 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTooManyAcceptChRestarts = -382 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTooManyRedirects = -310 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTooManyRetries = -375 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTrustTokenOperationFailed = -506 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTrustTokenOperationSuccessWithoutSendingRequest = -507 -> int
const Xamarin.Chromium.CroNet.NetError.ErrTunnelConnectionFailed = -111 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnableToReuseConnectionForProxyAuth = -170 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUndocumentedSecurityLibraryStatus = -344 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnexpected = -9 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnexpectedProxyAuth = -323 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnexpectedSecurityLibraryStatus = -342 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnknownUrlScheme = -302 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnrecognizedFtpDirectoryListingFormat = -334 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnsafePort = -312 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnsafeRedirect = -311 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUnsupportedAuthScheme = -339 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUploadFileChanged = -14 -> int
const Xamarin.Chromium.CroNet.NetError.ErrUploadStreamRewindNotSupported = -25 -> int
const Xamarin.Chromium.CroNet.NetError.ErrWinsockUnexpectedWrittenBytes = -124 -> int
const Xamarin.Chromium.CroNet.NetError.ErrWrongVersionOnEarlyData = -179 -> int
const Xamarin.Chromium.CroNet.NetError.ErrWsProtocolError = -145 -> int
const Xamarin.Chromium.CroNet.NetError.ErrWsThrottleQueueTooLarge = -154 -> int
const Xamarin.Chromium.CroNet.NetError.ErrWsUpgrade = -173 -> int
const Xamarin.Chromium.CroNet.NetError.Ok = 0 -> int
const Xamarin.Chromium.CroNet.NetId.Invalid = -1 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.DefaultHttpFromPlatform = 4 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.DefaultTransportFromPlatform = 7 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.DeprecatedHttpExternalEstimate = 5 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.H2Pings = 8 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.Http = 0 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.HttpCachedEstimate = 3 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.Max = 9 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.Quic = 2 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.Tcp = 1 -> int
const Xamarin.Chromium.CroNet.NetworkQualityObservationSource.TransportCachedEstimate = 6 -> int
const Xamarin.Chromium.CroNet.PrivateKeyType.Ecdsa = 2 -> int
const Xamarin.Chromium.CroNet.PrivateKeyType.Invalid = 255 -> int
const Xamarin.Chromium.CroNet.PrivateKeyType.Rsa = 0 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.BrotliEnabledFieldNumber = 6 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.BypassPublicKeyPinningForLocalTrustAnchorsFieldNumber = 13 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.DisableCacheFieldNumber = 7 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.EnableNetworkQualityEstimatorFieldNumber = 12 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.ExperimentalOptionsFieldNumber = 10 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.Http2EnabledFieldNumber = 5 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.HttpCacheMaxSizeFieldNumber = 9 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.HttpCacheModeFieldNumber = 8 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.MockCertVerifierFieldNumber = 11 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.NetworkThreadPriorityFieldNumber = 14 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.QuicDefaultUserAgentIdFieldNumber = 4 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.QuicEnabledFieldNumber = 3 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.StoragePathFieldNumber = 2 -> int
const Xamarin.Chromium.CroNet.RequestContextConfigOptions.UserAgentFieldNumber = 1 -> int
const Xamarin.Chromium.CroNet.RequestPriority.DefaultPriority = 2 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Highest = 5 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Idle = 1 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Low = 3 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Lowest = 2 -> int
const Xamarin.Chromium.CroNet.RequestPriority.MaximumPriority = 5 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Medium = 4 -> int
const Xamarin.Chromium.CroNet.RequestPriority.MinimumPriority = 0 -> int
const Xamarin.Chromium.CroNet.RequestPriority.Throttled = 0 -> int
const Xamarin.Chromium.CroNet.TrafficStatsError.ErrorNotSupported = 0 -> int
const Xamarin.Chromium.CroNet.TrafficStatsUid.Unset = -1 -> int
const Xamarin.Chromium.HttpFlags.BaseFeature.FlagPrefix = "ChromiumBaseFeature_" -> string!
const Xamarin.Chromium.HttpFlags.BaseFeature.ParamDelimiter = "_PARAM_" -> string!
const Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.EnabledFieldNumber = 1 -> int
const Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParamsFieldNumber = 2 -> int
const Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureStatesFieldNumber = 1 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.AppIdFieldNumber = 1 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.BoolValueFieldNumber = 3 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.BytesValueFieldNumber = 7 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.FloatValueFieldNumber = 5 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.IntValueFieldNumber = 4 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.MinVersionFieldNumber = 2 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.StringValueFieldNumber = 6 -> int
const Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValuesFieldNumber = 8 -> int
const Xamarin.Chromium.HttpFlags.Flags.FlagsFieldNumber = 1 -> int
const Xamarin.Chromium.Jni.Zero.GEN_JNI.RequireMock = false -> bool
const Xamarin.Chromium.Jni.Zero.GEN_JNI.TestingEnabled = false -> bool
override Xamarin.Chromium.Base.ApiCompatibilityUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ApiCompatibilityUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ApiCompatibilityUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ApkAssets.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ApkAssets.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ApkAssets.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ApplicationStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ApplicationStatus.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ApplicationStatus.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.BaseSwitches.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.BuildInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.BuildInfo.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.BuildInfo.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.BundleUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.BundleUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.BundleUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.CallbackController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.CallbackHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.CallbackHelper.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.CallbackHelper.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.CollectionUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.CommandLine.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.CommandLine.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.CommandLine.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.CommandLineInitUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForM.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForN.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForO.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForOMR1.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForP.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForQ.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForR.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Compat.ApiHelperForS.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ContentUriUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ContentUriUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ContentUriUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ContextUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ContextUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ContextUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.CpuFeatures.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.CpuFeatures.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.CpuFeatures.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.DiscardableReferencePool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.DiscardableReferencePool.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.DiscardableReferencePool.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.EarlyTraceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.EarlyTraceEvent.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.EarlyTraceEvent.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.EventLog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.EventLog.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.EventLog.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.FieldTrialList.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.FieldTrialList.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.FieldTrialList.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.FileUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.FileUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.FileUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.FileUtilsJni.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.FileUtilsJni.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.FileUtilsJni.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Flag.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Flag.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Flag.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ImportantFileWriterAndroid.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ImportantFileWriterAndroid.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ImportantFileWriterAndroid.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.JNIUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.JNIUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.JNIUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.JavaExceptionReporter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.JavaExceptionReporter.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.JavaExceptionReporter.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.JavaHandlerThread.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.JavaHandlerThread.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.JavaHandlerThread.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Lifetime.DestroyChecker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Lifetime.DestroyChecker.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Lifetime.DestroyChecker.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.LifetimeAssert.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.LifetimeAssert.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.LifetimeAssert.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.LocaleUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.LocaleUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.LocaleUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Log.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Log.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Log.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.MathUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.MathUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.MathUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Memory.JavaHeapDumpGenerator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Memory.MemoryInfoBridge.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Memory.MemoryInfoBridge.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Memory.MemoryInfoBridge.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Memory.MemoryPressureUma.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Memory.MemoryPressureUma.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Memory.MemoryPressureUma.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.MemoryPressureListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.MemoryPressureListener.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.MemoryPressureListener.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.HistogramBucket.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.HistogramBucket.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.HistogramBucket.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.RecordHistogram.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.RecordHistogram.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.RecordHistogram.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.RecordUserAction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.RecordUserAction.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.RecordUserAction.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.StatisticsRecorderAndroid.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.TimingMetric.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.TimingMetric.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.TimingMetric.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ObserverList.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ObserverList.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ObserverList.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PackageManagerUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PackageManagerUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PackageManagerUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PackageUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PackageUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PackageUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PathService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PathService.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PathService.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PathUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PathUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PathUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PiiElider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PiiElider.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PiiElider.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PowerMonitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.PowerMonitor.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.PowerMonitor.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.PowerMonitorForQ.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Promise.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Promise.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Promise.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Promise.UnhandledRejectionException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Promise.UnhandledRejectionException.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Promise.UnhandledRejectionException.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.R.Anim.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Animator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Array.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Attr.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Bool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Color.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Dimen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Drawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Font.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Fraction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Id.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Integer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Interpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Layout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Macro.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Menu.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Mipmap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Plurals.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Raw.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.String.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Style.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Styleable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Transition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.R.Xml.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.RadioUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.RadioUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.RadioUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.RequiredCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.RequiredCallback.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.RequiredCallback.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ResettersForTesting.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ResettersForTesting.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ResettersForTesting.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.StreamUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.StreamUtil.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.StreamUtil.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.StrictModeContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Supplier.OneShotCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.OneShotCallback.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Supplier.OneShotCallback.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.AsyncTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.AsyncTask.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.AsyncTask.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.ChainedTasks.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.ChainedTasks.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.ChainedTasks.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.PostTask.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.PostTask.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.PostTask.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.SequencedTaskRunnerImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.SequencedTaskRunnerImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.SequencedTaskRunnerImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.TaskRunnerImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.TaskRunnerImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.TaskRunnerImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.Test.ClangProfiler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.Test.ClangProfiler.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.Test.ClangProfiler.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ThreadUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.ThreadUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.ThreadUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TimeUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TimeUtils.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TimeUtils.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TraceEvent.ActivityInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TraceEvent.ActivityInfo.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TraceEvent.ActivityInfo.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TraceEvent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TraceEvent.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TraceEvent.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.TraceEvent.ViewInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.TraceEvent.ViewInfo.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.TraceEvent.ViewInfo.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.UnguessableToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.UnguessableToken.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.UnguessableToken.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Base.UnownedUserDataHost.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.UnownedUserDataKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.UserDataHost.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.WrappedClassLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Base.WrappedClassLoader.ThresholdClass.get -> nint
override Xamarin.Chromium.Base.WrappedClassLoader.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Build.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Build.BuildConfig.ThresholdClass.get -> nint
override Xamarin.Chromium.Build.BuildConfig.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.AndroidCertVerifyResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.AndroidCertVerifyResult.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.AndroidCertVerifyResult.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.AndroidKeyStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.AndroidKeyStore.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.AndroidKeyStore.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.AndroidTrafficStats.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.AndroidTrafficStats.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.AndroidTrafficStats.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.ChromiumNetworkAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.DnsStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.DnsStatus.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.DnsStatus.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.GURLUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.GURLUtilsJni.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.GURLUtilsJni.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.GURLUtilsJni.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.HttpNegotiateAuthenticator.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.HttpNegotiateConstants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.HttpNegotiateConstants.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.HttpNegotiateConstants.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.HttpUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamBuilderImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamBuilderImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamBuilderImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.BidirectionalStreamNetworkException.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.Cancel() -> void
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.Flush() -> void
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.IsDone.get -> bool
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.Read(Java.Nio.ByteBuffer? buffer) -> void
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.Start() -> void
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.Write(Java.Nio.ByteBuffer? buffer, bool endOfStream) -> void
override Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.ConnectEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.ConnectStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.DnsEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.DnsStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.PushEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.PushStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.ReceivedByteCount.get -> Java.Lang.Long?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.RequestEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.RequestStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.ResponseStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SendingEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SendingStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SentByteCount.get -> Java.Lang.Long?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SocketReused.get -> bool
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SslEnd.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.SslStart.get -> Java.Util.Date?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.TotalTimeMs.get -> Java.Lang.Long?
override Xamarin.Chromium.CroNet.Impl.CronetMetrics.TtfbMs.get -> Java.Lang.Long?
override Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.OnReadError(Java.Lang.Exception? exception) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.OnReadSucceeded(bool lastChunk) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.OnRewindError(Java.Lang.Exception? exception) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUploadDataStream.OnRewindSucceeded() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.Cancel() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.FollowRedirect() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.GetStatus(Xamarin.Chromium.CroNet.UrlRequest.StatusListener? unsafeListener) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.IsDone.get -> bool
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.Read(Java.Nio.ByteBuffer? buffer) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequest.Start() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CreateURLStreamHandlerFactory() -> Java.Net.IURLStreamHandlerFactory?
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.GetGlobalMetricsDeltas() -> byte[]?
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.NewBidirectionalStreamBuilder(string? url, Xamarin.Chromium.CroNet.BidirectionalStream.Callback? callback, Java.Util.Concurrent.IExecutor? executor) -> Xamarin.Chromium.CroNet.ExperimentalBidirectionalStream.Builder?
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.OpenConnection(Java.Net.URL? url) -> Java.Net.URLConnection?
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.Shutdown() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.StartNetLogToFile(string? fileName, bool logAll) -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.StopNetLog() -> void
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.VersionString.get -> string?
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.Build() -> Xamarin.Chromium.CroNet.ExperimentalCronetEngine?
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.NativeCronetEngineBuilderWithLibraryLoaderImpl.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.CreateBuilder() -> Xamarin.Chromium.CroNet.CronetEngine.Builder?
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.IsEnabled.get -> bool
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.Name.get -> string?
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.Impl.NativeCronetProvider.Version.get -> string?
override Xamarin.Chromium.CroNet.MimeTypeFilter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.MimeTypeFilter.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.MimeTypeFilter.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetStringUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetStringUtil.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetStringUtil.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkActiveNotifier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkActiveNotifier.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkActiveNotifier.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkChangeNotifier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkChangeNotifier.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkChangeNotifier.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.OnReceive(Android.Content.Context? context, Android.Content.Intent? intent) -> void
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.GetHashCode() -> int
override Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.ProxyChangeListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.ProxyChangeListener.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.ProxyChangeListener.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.Destroy() -> void
override Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.RegistrationPolicyAlwaysRegister.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.Destroy() -> void
override Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.RequestContextConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.RequestContextConfigOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.Connect() -> void
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.Disconnect() -> void
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.UsingProxy() -> bool
override Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.ThresholdType.get -> System.Type!
override Xamarin.Chromium.CroNet.X509Util.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.CroNet.X509Util.ThresholdClass.get -> nint
override Xamarin.Chromium.CroNet.X509Util.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Anim.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Animator.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Array.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Bool.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Font.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Fraction.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Interpolator.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Macro.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Menu.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Mipmap.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Plurals.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Raw.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Transition.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Xml.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Anim.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Animator.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Array.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Attr.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Bool.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Color.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Dimen.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Drawable.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Font.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Fraction.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Id.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Integer.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Interpolator.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Layout.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Macro.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Menu.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Mipmap.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Plurals.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Raw.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.String.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Style.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Styleable.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Transition.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml.ThresholdClass.get -> nint
override Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.Xml.ThresholdType.get -> System.Type!
override Xamarin.Chromium.HttpFlags.BaseFeature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.BaseFeatureOverridesOuterClass.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagValue.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.Flags.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.Flags.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.FlagsOuterClass.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.HttpFlagsLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.ResolvedFlags.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.J.N.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.J.N.ThresholdClass.get -> nint
override Xamarin.Chromium.J.N.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Jni.Zero.GEN_JNI.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Jni.Zero.GEN_JNI.ThresholdClass.get -> nint
override Xamarin.Chromium.Jni.Zero.GEN_JNI.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException.ThresholdClass.get -> nint
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.NativeNotLoadedException.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.ThresholdClass.get -> nint
override Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.ThresholdType.get -> System.Type!
override Xamarin.Chromium.Native_Test.R.Anim.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Animator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Array.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Attr.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Bool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Color.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Dimen.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Drawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Font.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Fraction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Id.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Integer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Interpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Layout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Macro.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Menu.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Mipmap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Plurals.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Raw.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.String.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Style.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Styleable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Transition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Native_Test.R.Xml.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Url.IDNStringUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Chromium.Url.IDNStringUtil.ThresholdClass.get -> nint
override Xamarin.Chromium.Url.IDNStringUtil.ThresholdType.get -> System.Type!
override sealed Xamarin.Chromium.Base.Task.BackgroundOnlyAsyncTask.OnPostExecute(Java.Lang.Object? result) -> void
override sealed Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.AddRequestProperty(string? key, string? value) -> void
override sealed Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.GetHeaderField(int pos) -> string?
override sealed Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.GetHeaderField(string? fieldName) -> string?
override sealed Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.GetHeaderFieldKey(int pos) -> string?
override sealed Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.SetRequestProperty(string? key, string? value) -> void
static Xamarin.Chromium.Base.ApiCompatibilityUtils.CheckPermission(Android.Content.Context? context, string? permission, int pid, int uid) -> int
static Xamarin.Chromium.Base.ApiCompatibilityUtils.ClearHandwritingBoundsOffsetBottom(Android.Views.View? view) -> void
static Xamarin.Chromium.Base.ApiCompatibilityUtils.CreateLaunchDisplayIdActivityOptions(int displayId) -> Android.OS.Bundle?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.DisableSmartSelectionTextClassifier(Android.Widget.TextView? textView) -> void
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetBitmapByUri(Android.Content.ContentResolver? cr, Android.Net.Uri? uri) -> Android.Graphics.Bitmap?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetBytesUtf8(string? str) -> byte[]?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetColor(Android.Content.Res.Resources? res, int id) -> int
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetDrawable(Android.Content.Res.Resources? res, int id) -> Android.Graphics.Drawables.Drawable?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetDrawableForDensity(Android.Content.Res.Resources? res, int id, int density) -> Android.Graphics.Drawables.Drawable?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.GetTargetableDisplayIds(Android.App.Activity? activity) -> System.Collections.Generic.IList<Java.Lang.Integer!>!
static Xamarin.Chromium.Base.ApiCompatibilityUtils.IsDemoUser.get -> bool
static Xamarin.Chromium.Base.ApiCompatibilityUtils.IsInMultiWindowMode(Android.App.Activity? activity) -> bool
static Xamarin.Chromium.Base.ApiCompatibilityUtils.IsRunningInUserTestHarness.get -> bool
static Xamarin.Chromium.Base.ApiCompatibilityUtils.NotificationSettingsIntent.get -> Android.Content.Intent?
static Xamarin.Chromium.Base.ApiCompatibilityUtils.RequireNonNull(Java.Lang.Object? obj) -> Java.Lang.Object!
static Xamarin.Chromium.Base.ApiCompatibilityUtils.RequireNonNull(Java.Lang.Object? obj, string? message) -> Java.Lang.Object!
static Xamarin.Chromium.Base.ApiCompatibilityUtils.SetActivityOptionsBackgroundActivityStartMode(Android.App.ActivityOptions! options) -> void
static Xamarin.Chromium.Base.ApiCompatibilityUtils.SetTextAppearance(Android.Widget.TextView? view, int id) -> void
static Xamarin.Chromium.Base.ApkAssets.Open(string? fileName, string? splitName) -> long[]?
static Xamarin.Chromium.Base.ApplicationStatus.CachingEnabled.get -> bool
static Xamarin.Chromium.Base.ApplicationStatus.CachingEnabled.set -> void
static Xamarin.Chromium.Base.ApplicationStatus.DestroyForJUnitTests() -> void
static Xamarin.Chromium.Base.ApplicationStatus.GetStateForActivity(Android.App.Activity? activity) -> int
static Xamarin.Chromium.Base.ApplicationStatus.GetTaskId(Android.App.Activity? activity) -> int
static Xamarin.Chromium.Base.ApplicationStatus.HasVisibleActivities.get -> bool
static Xamarin.Chromium.Base.ApplicationStatus.Initialize(Android.App.Application? application) -> void
static Xamarin.Chromium.Base.ApplicationStatus.IsEveryActivityDestroyed.get -> bool
static Xamarin.Chromium.Base.ApplicationStatus.IsInitialized.get -> bool
static Xamarin.Chromium.Base.ApplicationStatus.IsTaskVisible(int taskId) -> bool
static Xamarin.Chromium.Base.ApplicationStatus.LastTrackedFocusedActivity.get -> Android.App.Activity?
static Xamarin.Chromium.Base.ApplicationStatus.OnStateChangeForTesting(Android.App.Activity? activity, int newState) -> void
static Xamarin.Chromium.Base.ApplicationStatus.RegisterApplicationStateListener(Xamarin.Chromium.Base.ApplicationStatus.IApplicationStateListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.RegisterStateListenerForActivity(Xamarin.Chromium.Base.ApplicationStatus.IActivityStateListener? listener, Android.App.Activity? activity) -> void
static Xamarin.Chromium.Base.ApplicationStatus.RegisterStateListenerForAllActivities(Xamarin.Chromium.Base.ApplicationStatus.IActivityStateListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.RegisterTaskVisibilityListener(Xamarin.Chromium.Base.ApplicationStatus.ITaskVisibilityListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.RegisterWindowFocusChangedListener(Xamarin.Chromium.Base.ApplicationStatus.IWindowFocusChangedListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.ResetActivitiesForInstrumentationTests() -> void
static Xamarin.Chromium.Base.ApplicationStatus.RunningActivities.get -> System.Collections.Generic.IList<Android.App.Activity!>?
static Xamarin.Chromium.Base.ApplicationStatus.SActivityTaskId.get -> System.Collections.IDictionary?
static Xamarin.Chromium.Base.ApplicationStatus.StateForApplication.get -> int
static Xamarin.Chromium.Base.ApplicationStatus.UnregisterActivityStateListener(Xamarin.Chromium.Base.ApplicationStatus.IActivityStateListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.UnregisterApplicationStateListener(Xamarin.Chromium.Base.ApplicationStatus.IApplicationStateListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.UnregisterTaskVisibilityListener(Xamarin.Chromium.Base.ApplicationStatus.ITaskVisibilityListener? listener) -> void
static Xamarin.Chromium.Base.ApplicationStatus.UnregisterWindowFocusChangedListener(Xamarin.Chromium.Base.ApplicationStatus.IWindowFocusChangedListener? listener) -> void
static Xamarin.Chromium.Base.BuildInfo.Instance.get -> Xamarin.Chromium.Base.BuildInfo?
static Xamarin.Chromium.Base.BuildInfo.IsAtLeastT.get -> bool
static Xamarin.Chromium.Base.BuildInfo.IsDebugAndroid.get -> bool
static Xamarin.Chromium.Base.BuildInfo.IsDebugAndroidOrApp.get -> bool
static Xamarin.Chromium.Base.BuildInfo.IsDebugApp.get -> bool
static Xamarin.Chromium.Base.BuildInfo.PackageVersionCode(Android.Content.PM.PackageInfo? pi) -> long
static Xamarin.Chromium.Base.BuildInfo.SetBrowserPackageInfo(Android.Content.PM.PackageInfo? packageInfo) -> void
static Xamarin.Chromium.Base.BuildInfo.TargetsAtLeastT() -> bool
static Xamarin.Chromium.Base.BuildInfo.TargetsAtLeastU() -> bool
static Xamarin.Chromium.Base.BundleUtils.CanLoadClass(Java.Lang.ClassLoader? classLoader, string? className) -> bool
static Xamarin.Chromium.Base.BundleUtils.CheckContextClassLoader(Android.Content.Context? baseContext, Android.App.Activity? activity) -> void
static Xamarin.Chromium.Base.BundleUtils.CreateContextForInflation(Android.Content.Context? context, string? splitName) -> Android.Content.Context?
static Xamarin.Chromium.Base.BundleUtils.CreateIsolatedSplitContext(Android.Content.Context? base, string? splitName) -> Android.Content.Context?
static Xamarin.Chromium.Base.BundleUtils.GetNativeLibraryPath(string? libraryName, string? splitName) -> string?
static Xamarin.Chromium.Base.BundleUtils.GetOrCreateSplitClassLoader(string? splitName) -> Java.Lang.ClassLoader?
static Xamarin.Chromium.Base.BundleUtils.IsBundle.get -> bool
static Xamarin.Chromium.Base.BundleUtils.IsBundle.set -> void
static Xamarin.Chromium.Base.BundleUtils.IsBundleForNative.get -> bool
static Xamarin.Chromium.Base.BundleUtils.IsIsolatedSplitInstalled(string? splitName) -> bool
static Xamarin.Chromium.Base.BundleUtils.IsolatedSplitsEnabled() -> bool
static Xamarin.Chromium.Base.BundleUtils.NewInstance(Android.Content.Context? context, string? className) -> Java.Lang.Object?
static Xamarin.Chromium.Base.BundleUtils.RegisterSplitClassLoaderForInflation(string? splitName) -> Java.Lang.ClassLoader?
static Xamarin.Chromium.Base.BundleUtils.ReplaceClassLoader(Android.Content.Context? baseContext, Java.Lang.ClassLoader? classLoader) -> void
static Xamarin.Chromium.Base.BundleUtils.ResetForTesting() -> void
static Xamarin.Chromium.Base.BundleUtils.RestoreLoadedSplits(Android.OS.Bundle? savedInstanceState) -> void
static Xamarin.Chromium.Base.BundleUtils.SaveLoadedSplits(Android.OS.Bundle? outState) -> void
static Xamarin.Chromium.Base.BundleUtils.SplitCompatClassLoader.get -> Java.Lang.ClassLoader?
static Xamarin.Chromium.Base.BundleUtils.SplitContextLock.get -> Java.Lang.Object?
static Xamarin.Chromium.Base.CollectionUtil.BooleanListToBooleanArray(System.Collections.Generic.IList<Java.Lang.Boolean!>! list) -> bool[]?
static Xamarin.Chromium.Base.CollectionUtil.IntegerCollectionToIntArray(System.Collections.Generic.ICollection<Java.Lang.Integer!>! collection) -> int[]?
static Xamarin.Chromium.Base.CollectionUtil.LongListToLongArray(System.Collections.Generic.IList<Java.Lang.Long!>! list) -> long[]?
static Xamarin.Chromium.Base.CollectionUtil.NewHashMap(params Android.Util.Pair![]? entries) -> System.Collections.IDictionary?
static Xamarin.Chromium.Base.CollectionUtil.NewHashSet(params Java.Lang.Object![]? elements) -> Java.Util.HashSet?
static Xamarin.Chromium.Base.CollectionUtil.Strengthen(System.Collections.Generic.ICollection<Java.Lang.Ref.WeakReference!>? weakRefs) -> System.Collections.IList?
static Xamarin.Chromium.Base.CommandLine.EnableNativeProxy() -> void
static Xamarin.Chromium.Base.CommandLine.GetJavaSwitchesOrNull() -> string![]?
static Xamarin.Chromium.Base.CommandLine.Init(string![]? args) -> void
static Xamarin.Chromium.Base.CommandLine.InitFromFile(string? file) -> void
static Xamarin.Chromium.Base.CommandLine.Instance.get -> Xamarin.Chromium.Base.CommandLine?
static Xamarin.Chromium.Base.CommandLine.IsInitialized.get -> bool
static Xamarin.Chromium.Base.CommandLineInitUtil.InitCommandLine(string? fileName) -> void
static Xamarin.Chromium.Base.CommandLineInitUtil.InitCommandLine(string? fileName, Xamarin.Chromium.Base.Supplier.ISupplier? shouldUseDebugFlags) -> void
static Xamarin.Chromium.Base.CommandLineInitUtil.SetFilenameOverrideForTesting(string? value) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.CreateIconWithBitmap(Android.Graphics.Bitmap? bitmap) -> Android.Graphics.Drawables.Icon?
static Xamarin.Chromium.Base.Compat.ApiHelperForM.DefaultActionModeHideDuration.get -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetActionButton(Android.Views.MotionEvent? e) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetActionModeType(Android.Views.ActionMode? actionMode) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetActiveNetwork(Android.Net.ConnectivityManager? connectivityManager) -> Android.Net.Network?
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetBoundNetworkForProcess(Android.Net.ConnectivityManager? connectivityManager) -> Android.Net.Network?
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetModePhysicalHeight(Android.Views.Display.Mode? mode) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetModePhysicalWidth(Android.Views.Display.Mode? mode) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetNetworkHandle(Android.Net.Network? network) -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetNetworkInfo(Android.Net.ConnectivityManager? connectivityManager, Android.Net.Network? network) -> Android.Net.NetworkInfo?
static Xamarin.Chromium.Base.Compat.ApiHelperForM.GetSystemService(Android.Content.Context? context, Java.Lang.Class? serviceClass) -> Java.Lang.Object?
static Xamarin.Chromium.Base.Compat.ApiHelperForM.HideActionMode(Android.Views.ActionMode? actionMode, long duration) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.InvalidateContentRectOnActionMode(Android.Views.ActionMode? actionMode) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.IsCleartextTrafficPermitted.get -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForM.IsDeviceIdleMode(Android.OS.PowerManager? powerManager) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForM.IsPermissionRevokedByPolicy(Android.App.Activity? activity, string? permission) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForM.IsProcess64Bit.get -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForM.IsSystemUser(Android.OS.UserManager? userManager) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForM.OnPageCommitVisible(Android.Webkit.WebViewClient? webViewClient, Android.Webkit.WebView? webView, string? url) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.OnWindowFocusChangedOnActionMode(Android.Views.ActionMode? actionMode, bool gainFocus) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.PendingIntentImmutableFlag.get -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForM.ReportNetworkConnectivity(Android.Net.ConnectivityManager? connectivityManager, Android.Net.Network? network, bool hasConnectivity) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.RequestActivityPermissions(Android.App.Activity? activity, string![]? permissions, int requestCode) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForM.ShouldShowRequestPermissionRationale(Android.App.Activity? activity, string? permission) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForN.GetRestrictBackgroundStatus(Android.Net.ConnectivityManager? cm) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForN.IsCleartextTrafficPermitted(string? host) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForN.OnResolvePointerIcon(Android.Views.View? view, Android.Views.MotionEvent? e, int pointerIndex) -> Android.Views.PointerIcon?
static Xamarin.Chromium.Base.Compat.ApiHelperForN.SetCryptoInfoPattern(Android.Media.MediaCodec.CryptoInfo? cryptoInfo, int encrypt, int skip) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForN.SetVrModeEnabled(Android.App.Activity? activity, bool enabled, Android.Content.ComponentName? requestedComponent) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForN.StartDragAndDrop(Android.Views.View? view, Android.Content.ClipData? data, Android.Views.View.DragShadowBuilder? shadowBuilder, Java.Lang.Object? myLocalState, int flags) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForN.StartUptimeMillis.get -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForO.AddItem(Android.Content.ClipData? clipData, Android.Content.ContentResolver? contentResolver, Android.Content.ClipData.Item? item) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.AreAnimatorsEnabled() -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForO.CancelAutofillSession(Android.App.Activity? activity) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.CreateContextForSplit(Android.Content.Context? context, string? name) -> Android.Content.Context?
static Xamarin.Chromium.Base.Compat.ApiHelperForO.GetNotificationChannelId(Android.App.Notification? notification) -> string?
static Xamarin.Chromium.Base.Compat.ApiHelperForO.GetTimestamp(Android.Content.ClipDescription? clipDescription) -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForO.IsInstantApp(Android.Content.PM.PackageManager? packageManager) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForO.IsScreenWideColorGamut(Android.Content.Res.Configuration? configuration) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForO.IsWideColorGamut(Android.Views.Display? display) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForO.NotifyValueChangedForAutofill(Android.Views.View? view) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.RegisterDefaultNetworkCallback(Android.Net.ConnectivityManager? connectivityManager, Android.Net.ConnectivityManager.NetworkCallback? networkCallback, Android.OS.Handler? handler) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.RegisterReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, string? permission, Android.OS.Handler? scheduler, int flags) -> Android.Content.Intent?
static Xamarin.Chromium.Base.Compat.ApiHelperForO.SetChannelId(Android.App.Notification.Builder? builder, string? channelId) -> Android.App.Notification.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForO.SetColorMode(Android.Views.Window? window, int colorMode) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.SetDefaultFocusHighlightEnabled(Android.Views.View? view, bool enabled) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForO.SetTimeoutAfter(Android.App.Notification.Builder? builder, long ms) -> Android.App.Notification.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForOMR1.IsWideColorGamut(Android.Views.Window? window) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForP.Build(Android.Views.TextClassifiers.TextSelection.Request.Builder? builder) -> Android.Views.TextClassifiers.TextSelection.Request?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.ClearPrimaryClip(Android.Content.ClipboardManager? clipboardManager) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForP.GetLongVersionCode(Android.Content.PM.PackageInfo? packageInfo) -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForP.GetPrivateDnsServerName(Android.Net.LinkProperties? linkProperties) -> string?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.GetSignalStrength(Android.Telephony.TelephonyManager? telephonyManager) -> Android.Telephony.SignalStrength?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.HasSigningCertificate(Android.Content.PM.PackageManager? pm, string? packageName, byte[]? certificate, int type) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForP.IsLocationEnabled(Android.Locations.LocationManager? locationManager) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForP.IsPrivateDnsActive(Android.Net.LinkProperties? linkProperties) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForP.NewTextSelectionRequestBuilder(Java.Lang.ICharSequence? text, int startIndex, int endIndex) -> Android.Views.TextClassifiers.TextSelection.Request.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.NewTextSelectionRequestBuilder(string? text, int startIndex, int endIndex) -> Android.Views.TextClassifiers.TextSelection.Request.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.SetDefaultLocales(Android.Views.TextClassifiers.TextSelection.Request.Builder? builder, Android.OS.LocaleList? defaultLocales) -> Android.Views.TextClassifiers.TextSelection.Request.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForP.SuggestSelection(Android.Views.TextClassifiers.ITextClassifier? textClassifier, Android.Views.TextClassifiers.TextSelection.Request? request) -> Android.Views.TextClassifiers.TextSelection?
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.BindIsolatedService(Android.Content.Context? context, Android.Content.Intent? intent, int flags, string? instanceName, Java.Util.Concurrent.IExecutor? executor, Android.Content.IServiceConnection? connection) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.CanAuthenticate(Android.Hardware.Biometrics.BiometricManager? manager) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.Copy(System.IO.Stream? in, System.IO.Stream? out) -> long
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.GetBiometricManagerSystemService(Android.Content.Context? context) -> Android.Hardware.Biometrics.BiometricManager?
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.GetClassification(Android.Views.MotionEvent? e) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.GetCurrentThermalStatus(Android.OS.PowerManager? powerManager) -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.GetExternalVolumeNames(Android.Content.Context? context) -> System.Collections.Generic.ICollection<string!>?
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.GetTransportInfo(Android.Net.NetworkCapabilities? networkCapabilities) -> Android.Net.ITransportInfo?
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.RequestCellInfoUpdate(Android.Telephony.TelephonyManager? telephonyManager, Xamarin.Chromium.Base.ICallback? callback) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.SetIncludePending(Android.Net.Uri? uri) -> Android.Net.Uri?
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.StartForeground(Android.App.Service? service, int id, Android.App.Notification? notification, int foregroundServiceType) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForQ.UpdateServiceGroup(Android.Content.Context? context, Android.Content.IServiceConnection? connection, int group, int importance) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForR.GetDisplay(Android.Content.Context? context) -> Android.Views.Display?
static Xamarin.Chromium.Base.Compat.ApiHelperForR.GetMaximumWindowMetricsBounds(Android.Views.IWindowManager? manager) -> Android.Graphics.Rect?
static Xamarin.Chromium.Base.Compat.ApiHelperForR.GetVolumeDir(Android.OS.Storage.StorageManager? manager, Android.Net.Uri? uri) -> Java.IO.File?
static Xamarin.Chromium.Base.Compat.ApiHelperForR.SetProcessStateSummary(Android.App.ActivityManager? am, byte[]? bytes) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForR.VerifyInputEvent(Android.Hardware.Input.InputManager? manager, Android.Views.InputEvent? inputEvent) -> Android.Views.VerifiedInputEvent?
static Xamarin.Chromium.Base.Compat.ApiHelperForS.CreateWindowContext(Android.Content.Context? context, Android.Views.Display? display, int type, Android.OS.Bundle? options) -> Android.Content.Context?
static Xamarin.Chromium.Base.Compat.ApiHelperForS.GetConfidenceScore(Android.Content.ClipDescription? clipDescription, string! entityType) -> float
static Xamarin.Chromium.Base.Compat.ApiHelperForS.GetTextClassification(Android.Views.TextClassifiers.TextSelection? textSelection) -> Android.Views.TextClassifiers.TextClassification?
static Xamarin.Chromium.Base.Compat.ApiHelperForS.GetTextLinks(Android.Content.ClipData.Item? item) -> Android.Views.TextClassifiers.TextLinks?
static Xamarin.Chromium.Base.Compat.ApiHelperForS.HasBluetoothConnectPermission.get -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForS.IsGetClassificationStatusIsComplete(Android.Content.ClipDescription? clipDescription) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForS.IsStyleText(Android.Content.ClipDescription? clipDescription) -> bool
static Xamarin.Chromium.Base.Compat.ApiHelperForS.PendingIntentMutableFlag.get -> int
static Xamarin.Chromium.Base.Compat.ApiHelperForS.SetAutoEnterEnabled(Android.App.PictureInPictureParams.Builder? builder, bool enabled) -> void
static Xamarin.Chromium.Base.Compat.ApiHelperForS.SetIncludeTextClassification(Android.Views.TextClassifiers.TextSelection.Request.Builder? builder, bool includeTextClassification) -> Android.Views.TextClassifiers.TextSelection.Request.Builder?
static Xamarin.Chromium.Base.Compat.ApiHelperForS.StartForeground(Android.App.Service? service, int id, Android.App.Notification? notification, int foregroundServiceType) -> void
static Xamarin.Chromium.Base.ContentUriUtils.ContentUriExists(string? uriString) -> bool
static Xamarin.Chromium.Base.ContentUriUtils.Delete(string? uriString) -> bool
static Xamarin.Chromium.Base.ContentUriUtils.GetContentUriFromFile(Java.IO.File? file) -> Android.Net.Uri?
static Xamarin.Chromium.Base.ContentUriUtils.GetContentUriFromFilePath(string? filePathString) -> string?
static Xamarin.Chromium.Base.ContentUriUtils.GetDisplayName(Android.Net.Uri? uri, Android.Content.Context? context, string? columnField) -> string?
static Xamarin.Chromium.Base.ContentUriUtils.GetMimeType(string? uriString) -> string?
static Xamarin.Chromium.Base.ContentUriUtils.IsContentUri(string? uri) -> bool
static Xamarin.Chromium.Base.ContentUriUtils.MaybeGetDisplayName(string? uriString) -> string?
static Xamarin.Chromium.Base.ContentUriUtils.OpenContentUriForRead(string? uriString) -> int
static Xamarin.Chromium.Base.ContentUriUtils.SetFileProviderUtil(Xamarin.Chromium.Base.ContentUriUtils.IFileProviderUtil? util) -> void
static Xamarin.Chromium.Base.ContextUtils.ActivityFromContext(Android.Content.Context? context) -> Android.App.Activity?
static Xamarin.Chromium.Base.ContextUtils.AppSharedPreferences.get -> Android.Content.ISharedPreferences?
static Xamarin.Chromium.Base.ContextUtils.ApplicationAssets.get -> Android.Content.Res.AssetManager?
static Xamarin.Chromium.Base.ContextUtils.ApplicationContext.get -> Android.Content.Context?
static Xamarin.Chromium.Base.ContextUtils.ClearApplicationContextForTests() -> void
static Xamarin.Chromium.Base.ContextUtils.InitApplicationContext(Android.Content.Context? appContext) -> void
static Xamarin.Chromium.Base.ContextUtils.InitApplicationContextForTests(Android.Content.Context? appContext) -> void
static Xamarin.Chromium.Base.ContextUtils.IsIsolatedProcess.get -> bool
static Xamarin.Chromium.Base.ContextUtils.IsProcess64Bit.get -> bool
static Xamarin.Chromium.Base.ContextUtils.IsSdkSandboxProcess.get -> bool
static Xamarin.Chromium.Base.ContextUtils.ProcessName.get -> string?
static Xamarin.Chromium.Base.ContextUtils.RegisterExportedBroadcastReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, string? permission) -> Android.Content.Intent?
static Xamarin.Chromium.Base.ContextUtils.RegisterNonExportedBroadcastReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter) -> Android.Content.Intent?
static Xamarin.Chromium.Base.ContextUtils.RegisterNonExportedBroadcastReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, Android.OS.Handler? scheduler) -> Android.Content.Intent?
static Xamarin.Chromium.Base.ContextUtils.RegisterProtectedBroadcastReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter) -> Android.Content.Intent?
static Xamarin.Chromium.Base.ContextUtils.RegisterProtectedBroadcastReceiver(Android.Content.Context? context, Android.Content.BroadcastReceiver? receiver, Android.Content.IntentFilter? filter, Android.OS.Handler? scheduler) -> Android.Content.Intent?
static Xamarin.Chromium.Base.CpuFeatures.Count.get -> int
static Xamarin.Chromium.Base.CpuFeatures.Mask.get -> long
static Xamarin.Chromium.Base.EarlyTraceEvent.BackgroundStartupTracingFlag.get -> bool
static Xamarin.Chromium.Base.EarlyTraceEvent.Begin(string? name, bool isToplevel) -> void
static Xamarin.Chromium.Base.EarlyTraceEvent.EarlyEnableInChildWithoutCommandLine() -> void
static Xamarin.Chromium.Base.EarlyTraceEvent.End(string? name, bool isToplevel) -> void
static Xamarin.Chromium.Base.EarlyTraceEvent.FinishAsync(string? name, long id) -> void
static Xamarin.Chromium.Base.EarlyTraceEvent.OnCommandLineAvailableInChildProcess() -> void
static Xamarin.Chromium.Base.EarlyTraceEvent.StartAsync(string? name, long id) -> void
static Xamarin.Chromium.Base.EventLog.WriteEvent(int tag, int value) -> void
static Xamarin.Chromium.Base.FieldTrialList.CreateFieldTrial(string? trialName, string? groupName) -> bool
static Xamarin.Chromium.Base.FieldTrialList.FindFullName(string? trialName) -> string?
static Xamarin.Chromium.Base.FieldTrialList.GetVariationParameter(string? trialName, string? parameterKey) -> string?
static Xamarin.Chromium.Base.FieldTrialList.LogActiveTrials() -> void
static Xamarin.Chromium.Base.FieldTrialList.TrialExists(string? trialName) -> bool
static Xamarin.Chromium.Base.FileUtils.BatchDeleteFiles(System.Collections.Generic.IList<string!>? filePaths, Java.Util.Functions.IFunction? canDelete) -> void
static Xamarin.Chromium.Base.FileUtils.CopyStream(System.IO.Stream? inputStream, System.IO.Stream? outputStream) -> void
static Xamarin.Chromium.Base.FileUtils.CopyStreamToFile(System.IO.Stream? is, Java.IO.File? outFile) -> void
static Xamarin.Chromium.Base.FileUtils.DeleteAll.get -> Java.Util.Functions.IFunction?
static Xamarin.Chromium.Base.FileUtils.DeleteAll.set -> void
static Xamarin.Chromium.Base.FileUtils.GetAbsoluteFilePath(string? filePath) -> string?
static Xamarin.Chromium.Base.FileUtils.GetExtension(string? file) -> string?
static Xamarin.Chromium.Base.FileUtils.GetFileSizeBytes(Java.IO.File? file) -> long
static Xamarin.Chromium.Base.FileUtils.GetUriForFile(Java.IO.File? file) -> Android.Net.Uri?
static Xamarin.Chromium.Base.FileUtils.QueryBitmapFromContentProvider(Android.Content.Context? context, Android.Net.Uri? uri) -> Android.Graphics.Bitmap?
static Xamarin.Chromium.Base.FileUtils.ReadStream(System.IO.Stream? inputStream) -> byte[]!
static Xamarin.Chromium.Base.FileUtils.RecursivelyDeleteFile(Java.IO.File? currentFile, Java.Util.Functions.IFunction? canDelete) -> bool
static Xamarin.Chromium.Base.FileUtilsJni.Get() -> Xamarin.Chromium.Base.FileUtils.INatives?
static Xamarin.Chromium.Base.FileUtilsJni.TestHooks.get -> Xamarin.Chromium.Jni.Zero.IJniStaticTestMocker?
static Xamarin.Chromium.Base.Flag.ResetAllInMemoryCachedValuesForTesting() -> void
static Xamarin.Chromium.Base.Flag.ResetFlagsForTesting() -> void
static Xamarin.Chromium.Base.ImportantFileWriterAndroid.WriteFileAtomically(string? fileName, byte[]? data) -> bool
static Xamarin.Chromium.Base.JNIUtils.SetClassLoader(Java.Lang.ClassLoader? classLoader) -> void
static Xamarin.Chromium.Base.JNIUtils.SplitMap(System.Collections.IDictionary? map, Java.Lang.Object![]? outKeys, Java.Lang.Object![]? outValues) -> void
static Xamarin.Chromium.Base.JavaExceptionReporter.ReportException(Java.Lang.Throwable? exception) -> void
static Xamarin.Chromium.Base.JavaExceptionReporter.ReportStackTrace(string? stackTrace) -> void
static Xamarin.Chromium.Base.LifetimeAssert.AssertAllInstancesDestroyedForTesting() -> void
static Xamarin.Chromium.Base.LifetimeAssert.Create(Java.Lang.Object? target) -> Xamarin.Chromium.Base.LifetimeAssert?
static Xamarin.Chromium.Base.LifetimeAssert.Create(Java.Lang.Object? target, bool safeToGc) -> Xamarin.Chromium.Base.LifetimeAssert?
static Xamarin.Chromium.Base.LifetimeAssert.ResetForTesting() -> void
static Xamarin.Chromium.Base.LifetimeAssert.SetSafeToGc(Xamarin.Chromium.Base.LifetimeAssert? asserter, bool value) -> void
static Xamarin.Chromium.Base.LocaleUtils.DefaultLocaleListString.get -> string?
static Xamarin.Chromium.Base.LocaleUtils.DefaultLocaleString.get -> string?
static Xamarin.Chromium.Base.LocaleUtils.ForLanguageTag(string? languageTag) -> Java.Util.Locale?
static Xamarin.Chromium.Base.LocaleUtils.GetConfigurationLanguage(Android.Content.Res.Configuration? config) -> string?
static Xamarin.Chromium.Base.LocaleUtils.GetContextLanguage(Android.Content.Context? context) -> string?
static Xamarin.Chromium.Base.LocaleUtils.GetUpdatedLanguageForAndroid(string? language) -> string?
static Xamarin.Chromium.Base.LocaleUtils.GetUpdatedLanguageForChromium(string? language) -> string?
static Xamarin.Chromium.Base.LocaleUtils.GetUpdatedLocaleForAndroid(Java.Util.Locale? locale) -> Java.Util.Locale?
static Xamarin.Chromium.Base.LocaleUtils.GetUpdatedLocaleForChromium(Java.Util.Locale? locale) -> Java.Util.Locale?
static Xamarin.Chromium.Base.LocaleUtils.IsBaseLanguageEqual(string? first, string? second) -> bool
static Xamarin.Chromium.Base.LocaleUtils.SetDefaultLocalesFromConfiguration(Android.Content.Res.Configuration? config) -> void
static Xamarin.Chromium.Base.LocaleUtils.ToBaseLanguage(string? languageTag) -> string?
static Xamarin.Chromium.Base.LocaleUtils.ToLanguageTag(Java.Util.Locale? locale) -> string?
static Xamarin.Chromium.Base.LocaleUtils.ToLanguageTags(Android.OS.LocaleList? localeList) -> string?
static Xamarin.Chromium.Base.LocaleUtils.UpdateConfig(Android.Content.Context? base, Android.Content.Res.Configuration? config, string? languageTag) -> void
static Xamarin.Chromium.Base.Log.D(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.Log.E(string? tag, string? message) -> void
static Xamarin.Chromium.Base.Log.E(string? tag, string? message, Java.Lang.Throwable? t) -> void
static Xamarin.Chromium.Base.Log.E(string? tag, string? messageTemplate, Java.Lang.Object? o) -> void
static Xamarin.Chromium.Base.Log.E(string? tag, string? messageTemplate, Java.Lang.Object? o1, Java.Lang.Object? o2) -> void
static Xamarin.Chromium.Base.Log.E(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.Log.GetStackTraceString(Java.Lang.Throwable? tr) -> string?
static Xamarin.Chromium.Base.Log.I(string? tag, string? message) -> void
static Xamarin.Chromium.Base.Log.I(string? tag, string? message, Java.Lang.Throwable? t) -> void
static Xamarin.Chromium.Base.Log.I(string? tag, string? messageTemplate, Java.Lang.Object? o) -> void
static Xamarin.Chromium.Base.Log.I(string? tag, string? messageTemplate, Java.Lang.Object? o1, Java.Lang.Object? o2) -> void
static Xamarin.Chromium.Base.Log.I(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.Log.IsLoggable(string? tag, int level) -> bool
static Xamarin.Chromium.Base.Log.NormalizeTag(string? tag) -> string?
static Xamarin.Chromium.Base.Log.V(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.Log.W(string? tag, string? message) -> void
static Xamarin.Chromium.Base.Log.W(string? tag, string? message, Java.Lang.Throwable? t) -> void
static Xamarin.Chromium.Base.Log.W(string? tag, string? messageTemplate, Java.Lang.Object? o) -> void
static Xamarin.Chromium.Base.Log.W(string? tag, string? messageTemplate, Java.Lang.Object? o1, Java.Lang.Object? o2) -> void
static Xamarin.Chromium.Base.Log.W(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.Log.Wtf(string? tag, string? messageTemplate, params Java.Lang.Object![]? args) -> void
static Xamarin.Chromium.Base.MathUtils.AreFloatsEqual(float f1, float f2) -> bool
static Xamarin.Chromium.Base.MathUtils.Clamp(float value, float a, float b) -> float
static Xamarin.Chromium.Base.MathUtils.Clamp(int value, int a, int b) -> int
static Xamarin.Chromium.Base.MathUtils.Clamp(long value, long a, long b) -> long
static Xamarin.Chromium.Base.MathUtils.CompareLongs(long lhs, long rhs) -> int
static Xamarin.Chromium.Base.MathUtils.Distance(float x1, float y1, float x2, float y2) -> float
static Xamarin.Chromium.Base.MathUtils.FlipSignIf(float value, bool flipSign) -> float
static Xamarin.Chromium.Base.MathUtils.FlipSignIf(int value, bool flipSign) -> int
static Xamarin.Chromium.Base.MathUtils.Interpolate(float value, float target, float speed) -> float
static Xamarin.Chromium.Base.MathUtils.Map(float value, float fromStart, float fromStop, float toStart, float toStop) -> float
static Xamarin.Chromium.Base.MathUtils.PositiveModulo(int a, int b) -> int
static Xamarin.Chromium.Base.MathUtils.RoundTwoDecimalPlaces(double value) -> double
static Xamarin.Chromium.Base.MathUtils.ScaleToFitTargetSize(int[]? dimensions, int targetWidth, int targetHeight) -> float
static Xamarin.Chromium.Base.MathUtils.Smoothstep(float t) -> float
static Xamarin.Chromium.Base.Memory.JavaHeapDumpGenerator.GenerateHprof(string? filePath) -> bool
static Xamarin.Chromium.Base.Memory.MemoryInfoBridge.ActivityManagerMemoryInfoForSelf.get -> Android.OS.Debug.MemoryInfo?
static Xamarin.Chromium.Base.Memory.MemoryPressureUma.InitializeForBrowser() -> void
static Xamarin.Chromium.Base.Memory.MemoryPressureUma.InitializeForChildService() -> void
static Xamarin.Chromium.Base.MemoryPressureListener.AddCallback(Xamarin.Chromium.Base.Memory.IMemoryPressureCallback? callback) -> void
static Xamarin.Chromium.Base.MemoryPressureListener.HandleDebugIntent(Android.App.Activity? activity, string? action) -> bool
static Xamarin.Chromium.Base.MemoryPressureListener.NotifyMemoryPressure(int pressure) -> void
static Xamarin.Chromium.Base.MemoryPressureListener.RemoveCallback(Xamarin.Chromium.Base.Memory.IMemoryPressureCallback? callback) -> void
static Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.TestHooks.get -> Xamarin.Chromium.Jni.Zero.IJniStaticTestMocker?
static Xamarin.Chromium.Base.Metrics.RecordHistogram.GetHistogramSamplesForTesting(string? name) -> System.Collections.Generic.IList<Xamarin.Chromium.Base.Metrics.HistogramBucket!>?
static Xamarin.Chromium.Base.Metrics.RecordHistogram.GetHistogramTotalCountForTesting(string? name) -> int
static Xamarin.Chromium.Base.Metrics.RecordHistogram.GetHistogramValueCountForTesting(string? name, int sample) -> int
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordBooleanHistogram(string? name, bool sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCount100000Histogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCount1000Histogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCount100Histogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCount1MHistogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCustomCountHistogram(string? name, int sample, int min, int max, int numBuckets) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordCustomTimesHistogram(string? name, long durationMs, long min, long max, int numBuckets) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordEnumeratedHistogram(string? name, int sample, int max) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordExactLinearHistogram(string? name, int sample, int max) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordLinearCountHistogram(string? name, int sample, int min, int max, int numBuckets) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordLongTimesHistogram(string? name, long durationMs) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordLongTimesHistogram100(string? name, long durationMs) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordMediumTimesHistogram(string? name, long durationMs) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordMemoryKBHistogram(string? name, int sizeInKB) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordMemoryMediumMBHistogram(string? name, int sizeInMB) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordPercentageHistogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordSparseHistogram(string? name, int sample) -> void
static Xamarin.Chromium.Base.Metrics.RecordHistogram.RecordTimesHistogram(string? name, long durationMs) -> void
static Xamarin.Chromium.Base.Metrics.RecordUserAction.Record(string? action) -> void
static Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.Scoped(string? name) -> Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent?
static Xamarin.Chromium.Base.Metrics.StatisticsRecorderAndroid.ToJson(int verbosityLevel) -> string?
static Xamarin.Chromium.Base.Metrics.TimingMetric.MediumUptime(string! metricName) -> Xamarin.Chromium.Base.Metrics.TimingMetric?
static Xamarin.Chromium.Base.Metrics.TimingMetric.ShortThreadTime(string! metricName) -> Xamarin.Chromium.Base.Metrics.TimingMetric?
static Xamarin.Chromium.Base.Metrics.TimingMetric.ShortUptime(string! metricName) -> Xamarin.Chromium.Base.Metrics.TimingMetric?
static Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.Get() -> Xamarin.Chromium.Base.Metrics.IUmaRecorder?
static Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.OnLibraryLoaded() -> void
static Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.ResetForTesting() -> void
static Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.SetNonNativeDelegate(Xamarin.Chromium.Base.Metrics.IUmaRecorder? recorder) -> void
static Xamarin.Chromium.Base.Metrics.UmaRecorderHolder.SetUpNativeUmaRecorder(bool setUpNativeUmaRecorder) -> void
static Xamarin.Chromium.Base.PackageManagerUtils.BrowserIntent.get -> Android.Content.Intent?
static Xamarin.Chromium.Base.PackageManagerUtils.CanResolveActivity(Android.Content.Intent? intent) -> bool
static Xamarin.Chromium.Base.PackageManagerUtils.CanResolveActivity(Android.Content.Intent? intent, int flags) -> bool
static Xamarin.Chromium.Base.PackageManagerUtils.QueryAllLaunchersInfo() -> System.Collections.Generic.IList<Android.Content.PM.ResolveInfo!>?
static Xamarin.Chromium.Base.PackageManagerUtils.QueryAllWebBrowsersInfo() -> System.Collections.Generic.IList<Android.Content.PM.ResolveInfo!>?
static Xamarin.Chromium.Base.PackageManagerUtils.QueryInstalledHomeLaunchersIntent.get -> Android.Content.Intent?
static Xamarin.Chromium.Base.PackageManagerUtils.QueryIntentActivities(Android.Content.Intent? intent, int flags) -> System.Collections.Generic.IList<Android.Content.PM.ResolveInfo!>?
static Xamarin.Chromium.Base.PackageManagerUtils.ResolveActivity(Android.Content.Intent? intent, int flags) -> Android.Content.PM.ResolveInfo?
static Xamarin.Chromium.Base.PackageManagerUtils.ResolveDefaultWebBrowserActivity() -> Android.Content.PM.ResolveInfo?
static Xamarin.Chromium.Base.PackageUtils.GetApplicationPackageInfo(int flags) -> Android.Content.PM.PackageInfo?
static Xamarin.Chromium.Base.PackageUtils.GetCertificateSHA256FingerprintForPackage(string? packageName) -> System.Collections.Generic.IList<string!>?
static Xamarin.Chromium.Base.PackageUtils.GetPackageInfo(string? packageName, int flags) -> Android.Content.PM.PackageInfo?
static Xamarin.Chromium.Base.PackageUtils.GetPackageVersion(Android.Content.Context? unused, string? packageName) -> int
static Xamarin.Chromium.Base.PackageUtils.GetPackageVersion(string? packageName) -> int
static Xamarin.Chromium.Base.PackageUtils.IsPackageInstalled(string? packageName) -> bool
static Xamarin.Chromium.Base.PathService.Override(int what, string? path) -> void
static Xamarin.Chromium.Base.PathUtils.CacheDirectory.get -> string?
static Xamarin.Chromium.Base.PathUtils.DataDirectory.get -> string?
static Xamarin.Chromium.Base.PathUtils.DownloadsDirectory.get -> string!
static Xamarin.Chromium.Base.PathUtils.ExternalStorageDirectory.get -> string?
static Xamarin.Chromium.Base.PathUtils.GetAllPrivateDownloadsDirectories() -> string![]!
static Xamarin.Chromium.Base.PathUtils.GetExternalDownloadVolumesNames() -> string![]!
static Xamarin.Chromium.Base.PathUtils.ResetForTesting() -> void
static Xamarin.Chromium.Base.PathUtils.SetPrivateDataDirectorySuffix(string? suffix) -> void
static Xamarin.Chromium.Base.PathUtils.SetPrivateDataDirectorySuffix(string? suffix, string? cacheSubDir) -> void
static Xamarin.Chromium.Base.PathUtils.SetPrivateDirectoryPath(string? dataBasePath, string? cacheBasePath, string? dataDirSuffix, string? cacheSubDir) -> void
static Xamarin.Chromium.Base.PathUtils.ThumbnailCacheDirectory.get -> string?
static Xamarin.Chromium.Base.PiiElider.ElideConsole(string? original) -> string?
static Xamarin.Chromium.Base.PiiElider.ElideEmail(string? original) -> string?
static Xamarin.Chromium.Base.PiiElider.ElideIp(string? original) -> string?
static Xamarin.Chromium.Base.PiiElider.ElideMac(string? original) -> string?
static Xamarin.Chromium.Base.PiiElider.ElideUrl(string? original) -> string?
static Xamarin.Chromium.Base.PiiElider.GetSanitizedStacktrace(Java.Lang.Throwable? throwable) -> string?
static Xamarin.Chromium.Base.PiiElider.SanitizeStacktrace(string? stacktrace) -> string?
static Xamarin.Chromium.Base.PowerMonitor.Create() -> void
static Xamarin.Chromium.Base.PowerMonitor.CreateForTests() -> void
static Xamarin.Chromium.Base.PowerMonitorForQ.AddThermalStatusListener(Android.OS.PowerManager? powerManager) -> void
static Xamarin.Chromium.Base.Promise.Fulfilled(Java.Lang.Object? result) -> Xamarin.Chromium.Base.Promise?
static Xamarin.Chromium.Base.Promise.Rejected() -> Xamarin.Chromium.Base.Promise?
static Xamarin.Chromium.Base.R.OnResourcesLoaded(int packageId) -> void
static Xamarin.Chromium.Base.ResettersForTesting.OnAfterClass() -> void
static Xamarin.Chromium.Base.ResettersForTesting.OnAfterMethod() -> void
static Xamarin.Chromium.Base.ResettersForTesting.Register(Java.Lang.IRunnable? runnable) -> void
static Xamarin.Chromium.Base.ResettersForTesting.SetMethodMode() -> void
static Xamarin.Chromium.Base.StreamUtil.CloseQuietly(Java.IO.ICloseable? closeable) -> void
static Xamarin.Chromium.Base.StreamUtil.CloseQuietly(Java.Util.Zip.ZipFile? zipFile) -> void
static Xamarin.Chromium.Base.StrictModeContext.AllowAllThreadPolicies() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.StrictModeContext.AllowAllVmPolicies() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.StrictModeContext.AllowDiskReads() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.StrictModeContext.AllowDiskWrites() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.StrictModeContext.AllowSlowCalls() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.StrictModeContext.AllowUnbufferedIo() -> Xamarin.Chromium.Base.StrictModeContext?
static Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.SetIgnoreThreadChecksForTesting(bool ignoreThreadChecks) -> void
static Xamarin.Chromium.Base.Task.AsyncTask.SerialExecutor.get -> Java.Util.Concurrent.IExecutor?
static Xamarin.Chromium.Base.Task.AsyncTask.TakeOverAndroidThreadPool() -> void
static Xamarin.Chromium.Base.Task.AsyncTask.ThreadPoolExecutor.get -> Java.Util.Concurrent.IExecutor?
static Xamarin.Chromium.Base.Task.PostTask.CanRunTaskImmediately(int taskTraits) -> bool
static Xamarin.Chromium.Base.Task.PostTask.CreateSequencedTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ISequencedTaskRunner?
static Xamarin.Chromium.Base.Task.PostTask.CreateSingleThreadTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ISingleThreadTaskRunner?
static Xamarin.Chromium.Base.Task.PostTask.CreateTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ITaskRunner?
static Xamarin.Chromium.Base.Task.PostTask.FlushJobsAndResetForTesting() -> void
static Xamarin.Chromium.Base.Task.PostTask.InvokePostTask(int taskTraits, Java.Lang.IRunnable? task) -> void
static Xamarin.Chromium.Base.Task.PostTask.OnUiThreadReady(Android.OS.Handler? uiThreadHandler) -> void
static Xamarin.Chromium.Base.Task.PostTask.PostDelayedTask(int taskTraits, Java.Lang.IRunnable? task, long delay) -> void
static Xamarin.Chromium.Base.Task.PostTask.ResetPrenativeThreadPoolExecutorForTesting() -> void
static Xamarin.Chromium.Base.Task.PostTask.ResetUiThreadForTesting() -> void
static Xamarin.Chromium.Base.Task.PostTask.RunOrPostTask(int taskTraits, Java.Lang.IRunnable? task) -> void
static Xamarin.Chromium.Base.Task.PostTask.RunSynchronously(int taskTraits, Java.Lang.IRunnable? r) -> void
static Xamarin.Chromium.Base.Task.PostTask.RunSynchronously(int taskTraits, Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
static Xamarin.Chromium.Base.Task.PostTask.SetPrenativeThreadPoolExecutorForTesting(Java.Util.Concurrent.IExecutor? executor) -> void
static Xamarin.Chromium.Base.Test.ClangProfiler.WriteClangProfilingProfile() -> void
static Xamarin.Chromium.Base.ThreadUtils.AssertOnBackgroundThread() -> void
static Xamarin.Chromium.Base.ThreadUtils.AssertOnUiThread() -> void
static Xamarin.Chromium.Base.ThreadUtils.CheckUiThread() -> void
static Xamarin.Chromium.Base.ThreadUtils.ClearUiThreadForTesting() -> void
static Xamarin.Chromium.Base.ThreadUtils.PostOnUiThread(Java.Lang.IRunnable? r) -> void
static Xamarin.Chromium.Base.ThreadUtils.PostOnUiThread(Java.Util.Concurrent.FutureTask? task) -> Java.Util.Concurrent.FutureTask?
static Xamarin.Chromium.Base.ThreadUtils.PostOnUiThreadDelayed(Java.Lang.IRunnable? r, long delayMillis) -> void
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThread(Java.Lang.IRunnable? r) -> void
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThread(Java.Util.Concurrent.FutureTask? task) -> Java.Util.Concurrent.FutureTask?
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThread(Java.Util.Concurrent.ICallable? c) -> Java.Util.Concurrent.FutureTask?
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThreadBlocking(Java.Lang.IRunnable? r) -> void
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThreadBlocking(Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
static Xamarin.Chromium.Base.ThreadUtils.RunOnUiThreadBlockingNoException(Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
static Xamarin.Chromium.Base.ThreadUtils.RunningOnUiThread() -> bool
static Xamarin.Chromium.Base.ThreadUtils.SetThreadAssertsDisabledForTesting(bool disabled) -> void
static Xamarin.Chromium.Base.ThreadUtils.SetThreadPriorityAudio(int tid) -> void
static Xamarin.Chromium.Base.ThreadUtils.SetUiThread(Android.OS.Looper? looper) -> void
static Xamarin.Chromium.Base.ThreadUtils.SetWillOverrideUiThread() -> void
static Xamarin.Chromium.Base.ThreadUtils.UiThreadHandler.get -> Android.OS.Handler?
static Xamarin.Chromium.Base.ThreadUtils.UiThreadLooper.get -> Android.OS.Looper?
static Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillis() -> long
static Xamarin.Chromium.Base.TimeUtils.CurrentTimeMillis() -> long
static Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillis() -> long
static Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanos() -> long
static Xamarin.Chromium.Base.TimeUtils.UptimeMillis() -> long
static Xamarin.Chromium.Base.TraceEvent.Begin(string? name) -> void
static Xamarin.Chromium.Base.TraceEvent.Begin(string? name, int arg) -> void
static Xamarin.Chromium.Base.TraceEvent.Begin(string? name, string? arg) -> void
static Xamarin.Chromium.Base.TraceEvent.DumpViewHierarchy(long dumpProtoPtr, Java.Lang.Object? list) -> void
static Xamarin.Chromium.Base.TraceEvent.Enabled() -> bool
static Xamarin.Chromium.Base.TraceEvent.End(string? name) -> void
static Xamarin.Chromium.Base.TraceEvent.End(string? name, string? arg) -> void
static Xamarin.Chromium.Base.TraceEvent.End(string? name, string? arg, long flow) -> void
static Xamarin.Chromium.Base.TraceEvent.EventNameFilteringEnabled() -> bool
static Xamarin.Chromium.Base.TraceEvent.FinishAsync(string? name, long id) -> void
static Xamarin.Chromium.Base.TraceEvent.Instant(string? name) -> void
static Xamarin.Chromium.Base.TraceEvent.Instant(string? name, string? arg) -> void
static Xamarin.Chromium.Base.TraceEvent.InstantAndroidIPC(string? name, long durMs) -> void
static Xamarin.Chromium.Base.TraceEvent.InstantAndroidToolbar(int blockReason, int allowReason, int snapshotDiff) -> void
static Xamarin.Chromium.Base.TraceEvent.MaybeEnableEarlyTracing(bool readCommandLine) -> void
static Xamarin.Chromium.Base.TraceEvent.OnNativeTracingReady() -> void
static Xamarin.Chromium.Base.TraceEvent.Scoped(string? name) -> Xamarin.Chromium.Base.TraceEvent?
static Xamarin.Chromium.Base.TraceEvent.Scoped(string? name, int arg) -> Xamarin.Chromium.Base.TraceEvent?
static Xamarin.Chromium.Base.TraceEvent.Scoped(string? name, string? arg) -> Xamarin.Chromium.Base.TraceEvent?
static Xamarin.Chromium.Base.TraceEvent.SetEnabled(bool enabled) -> void
static Xamarin.Chromium.Base.TraceEvent.SetEventNameFilteringEnabled(bool enabled) -> void
static Xamarin.Chromium.Base.TraceEvent.SnapshotViewHierarchy() -> void
static Xamarin.Chromium.Base.TraceEvent.SnapshotViewHierarchyState() -> System.Collections.Generic.IList<Xamarin.Chromium.Base.TraceEvent.ActivityInfo!>?
static Xamarin.Chromium.Base.TraceEvent.StartAsync(string? name, long id) -> void
static Xamarin.Chromium.Base.TraceEvent.WebViewStartupStage1(long startTimeMs, long durationMs) -> void
static Xamarin.Chromium.Base.TraceEvent.WebViewStartupStage2(long startTimeMs, long durationMs, bool isColdStartup) -> void
static Xamarin.Chromium.Base.TraceEvent.WebViewStartupTotalFactoryInit(long startTimeMs, long durationMs) -> void
static Xamarin.Chromium.Base.UnguessableToken.Creator.get -> Android.OS.IParcelableCreator?
static Xamarin.Chromium.Build.BuildConfig.BundlesSupported.get -> bool
static Xamarin.Chromium.Build.BuildConfig.BundlesSupported.set -> void
static Xamarin.Chromium.Build.BuildConfig.EnableAsserts.get -> bool
static Xamarin.Chromium.Build.BuildConfig.EnableAsserts.set -> void
static Xamarin.Chromium.Build.BuildConfig.IsChromeBranded.get -> bool
static Xamarin.Chromium.Build.BuildConfig.IsChromeBranded.set -> void
static Xamarin.Chromium.Build.BuildConfig.IsForTest.get -> bool
static Xamarin.Chromium.Build.BuildConfig.IsForTest.set -> void
static Xamarin.Chromium.Build.BuildConfig.IsIncrementalInstall.get -> bool
static Xamarin.Chromium.Build.BuildConfig.IsIncrementalInstall.set -> void
static Xamarin.Chromium.Build.BuildConfig.IsUbsan.get -> bool
static Xamarin.Chromium.Build.BuildConfig.IsUbsan.set -> void
static Xamarin.Chromium.Build.BuildConfig.IsolatedSplitsEnabled.get -> bool
static Xamarin.Chromium.Build.BuildConfig.IsolatedSplitsEnabled.set -> void
static Xamarin.Chromium.Build.BuildConfig.MinSdkVersion.get -> int
static Xamarin.Chromium.Build.BuildConfig.MinSdkVersion.set -> void
static Xamarin.Chromium.Build.BuildConfig.RStringProductVersion.get -> int
static Xamarin.Chromium.Build.BuildConfig.RStringProductVersion.set -> void
static Xamarin.Chromium.Build.BuildConfig.WriteClangProfilingData.get -> bool
static Xamarin.Chromium.Build.BuildConfig.WriteClangProfilingData.set -> void
static Xamarin.Chromium.CroNet.ChromiumNetworkAdapter.OpenConnection(Java.Net.URL? url, Java.Net.Proxy? proxy, Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag? trafficAnnotation) -> Java.Net.URLConnection?
static Xamarin.Chromium.CroNet.ChromiumNetworkAdapter.OpenConnection(Java.Net.URL? url, Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag? trafficAnnotation) -> Java.Net.URLConnection?
static Xamarin.Chromium.CroNet.ChromiumNetworkAdapter.OpenStream(Java.Net.URL? url, Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag? trafficAnnotation) -> System.IO.Stream?
static Xamarin.Chromium.CroNet.GURLUtils.GetOrigin(string? url) -> string?
static Xamarin.Chromium.CroNet.GURLUtilsJni.Get() -> Xamarin.Chromium.CroNet.GURLUtils.INatives?
static Xamarin.Chromium.CroNet.GURLUtilsJni.TestHooks.get -> Xamarin.Chromium.Jni.Zero.IJniStaticTestMocker?
static Xamarin.Chromium.CroNet.HttpUtil.IsAllowedHeader(string? headerName, string? headerValue) -> bool
static Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.EnsureInitialized(Android.Content.Context? applicationContext, Xamarin.Chromium.CroNet.Impl.CronetEngineBuilderImpl? builder) -> void
static Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.PostToInitThread(Java.Lang.IRunnable? r) -> void
static Xamarin.Chromium.CroNet.Impl.CronetLibraryLoader.Tag.get -> string?
static Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CreateNativeUrlRequestContextConfig(Xamarin.Chromium.CroNet.Impl.CronetEngineBuilderImpl? builder) -> long
static Xamarin.Chromium.CroNet.NetworkActiveNotifier.Build(long nativeNetworkActiveNotifier) -> Xamarin.Chromium.CroNet.NetworkActiveNotifier?
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.AddConnectionTypeObserver(Xamarin.Chromium.CroNet.NetworkChangeNotifier.IConnectionTypeObserver? observer) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.AutoDetectorForTest.get -> Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect?
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeConnectionCostChanged(int connectionCost) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeConnectionSubtypeChanged(int connectionSubtype) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeDefaultNetwork(long netId, int connectionType) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeNetworkConnected(long netId, int connectionType) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeNetworkDisconnected(long netId) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakeNetworkSoonToBeDisconnected(long netId) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.FakePurgeActiveNetworkList(long[]? activeNetIds) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.ForceConnectivityState(bool networkAvailable) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.Init() -> Xamarin.Chromium.CroNet.NetworkChangeNotifier?
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.Instance.get -> Xamarin.Chromium.CroNet.NetworkChangeNotifier?
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.IsInitialized.get -> bool
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.IsOnline.get -> bool
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.RegisterToReceiveNotificationsAlways() -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.RemoveConnectionTypeObserver(Xamarin.Chromium.CroNet.NetworkChangeNotifier.IConnectionTypeObserver? observer) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.ResetInstanceForTests() -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.ResetInstanceForTests(Xamarin.Chromium.CroNet.NetworkChangeNotifier? notifier) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.SetAutoDetectConnectivityState(Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy? policy) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifier.SetAutoDetectConnectivityState(bool shouldAutoDetect) -> void
static Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkToNetId(Android.Net.Network? network) -> long
static Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.CreateComplete(string? uniqueId, string? proto) -> Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag?
static Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.MissingTrafficAnnotation.get -> Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag?
static Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.NoTrafficAnnotationYet.get -> Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag?
static Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag.TrafficAnnotationForTests.get -> Xamarin.Chromium.CroNet.NetworkTrafficAnnotationTag?
static Xamarin.Chromium.CroNet.ProxyChangeListener.Create() -> Xamarin.Chromium.CroNet.ProxyChangeListener?
static Xamarin.Chromium.CroNet.ProxyChangeListener.GetProperty(string? property) -> string?
static Xamarin.Chromium.CroNet.ProxyChangeListener.SetEnabled(bool enabled) -> void
static Xamarin.Chromium.CroNet.RequestContextConfig.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.DefaultInstance.get -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.NewBuilder() -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.NewBuilder(Xamarin.Chromium.CroNet.RequestContextConfigOptions? prototype) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions.Builder?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(byte[]? data) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.CroNet.RequestContextConfigOptions?
static Xamarin.Chromium.CroNet.RequestContextConfigOptions.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.CroNet.X509Util.AddTestRootCertificate(byte[]? rootCertBytes) -> void
static Xamarin.Chromium.CroNet.X509Util.ClearTestRootCertificates() -> void
static Xamarin.Chromium.CroNet.X509Util.CreateCertificateFromBytes(byte[]? derBytes) -> Java.Security.Cert.X509Certificate?
static Xamarin.Chromium.CroNet.X509Util.GetUserAddedRoots() -> byte[]![]?
static Xamarin.Chromium.CroNet.X509Util.SetTestRootCertificateForBuiltin(byte[]? rootCertBytes) -> void
static Xamarin.Chromium.CroNet.X509Util.VerifyServerCertificates(byte[]![]? certChain, string? authType, string? host) -> Xamarin.Chromium.CroNet.AndroidCertVerifyResult?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Alpha.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Alpha.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Font.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.Font.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderAuthority.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderAuthority.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderCerts.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderCerts.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderFetchStrategy.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderFetchStrategy.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderFetchTimeout.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderFetchTimeout.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderPackage.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderPackage.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderQuery.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderQuery.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderSystemFontFamily.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontProviderSystemFontFamily.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontStyle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontStyle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontVariationSettings.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontVariationSettings.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontWeight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.FontWeight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.LStar.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.LStar.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.NestedScrollViewStyle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.NestedScrollViewStyle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.QueryPatterns.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.QueryPatterns.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.ShortcutMatchRequired.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.ShortcutMatchRequired.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.TtcIndex.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Attr.TtcIndex.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.AndroidxCoreRippleMaterialLight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.AndroidxCoreRippleMaterialLight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.AndroidxCoreSecondaryTextDefaultMaterialLight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.AndroidxCoreSecondaryTextDefaultMaterialLight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.CallNotificationAnswerColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.CallNotificationAnswerColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.CallNotificationDeclineColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.CallNotificationDeclineColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.NotificationActionColorFilter.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.NotificationActionColorFilter.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.NotificationIconBgColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Color.NotificationIconBgColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonInsetHorizontalMaterial.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonInsetHorizontalMaterial.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonInsetVerticalMaterial.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonInsetVerticalMaterial.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonPaddingHorizontalMaterial.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonPaddingHorizontalMaterial.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonPaddingVerticalMaterial.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatButtonPaddingVerticalMaterial.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatControlCornerMaterial.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatControlCornerMaterial.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatNotificationLargeIconMaxHeight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatNotificationLargeIconMaxHeight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatNotificationLargeIconMaxWidth.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.CompatNotificationLargeIconMaxWidth.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationActionIconSize.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationActionIconSize.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationActionTextSize.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationActionTextSize.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationBigCircleMargin.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationBigCircleMargin.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationContentMarginStart.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationContentMarginStart.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationLargeIconHeight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationLargeIconHeight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationLargeIconWidth.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationLargeIconWidth.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationMainColumnPaddingTop.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationMainColumnPaddingTop.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationMediaNarrowMargin.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationMediaNarrowMargin.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationRightIconSize.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationRightIconSize.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationRightSidePaddingTop.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationRightSidePaddingTop.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSmallIconBackgroundPadding.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSmallIconBackgroundPadding.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSmallIconSizeAsLarge.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSmallIconSizeAsLarge.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSubtextSize.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationSubtextSize.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationTopPad.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationTopPad.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationTopPadLargeText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Dimen.NotificationTopPadLargeText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerLow.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerLow.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerVideo.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerVideo.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerVideoLow.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallAnswerVideoLow.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallDecline.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallDecline.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallDeclineLow.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.IcCallDeclineLow.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationActionBackground.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationActionBackground.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLow.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLow.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLowNormal.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLowNormal.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLowPressed.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgLowPressed.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgNormal.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgNormal.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgNormalPressed.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationBgNormalPressed.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationIconBackground.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationIconBackground.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationOversizeLargeIconBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationOversizeLargeIconBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTemplateIconBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTemplateIconBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTemplateIconLowBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTemplateIconLowBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTileBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotificationTileBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotifyPanelNotificationIconBg.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Drawable.NotifyPanelNotificationIconBg.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityActionClickableSpan.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityActionClickableSpan.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction0.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction0.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction1.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction1.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction10.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction10.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction11.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction11.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction12.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction12.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction13.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction13.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction14.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction14.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction15.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction15.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction16.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction16.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction17.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction17.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction18.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction18.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction19.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction19.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction2.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction2.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction20.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction20.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction21.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction21.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction22.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction22.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction23.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction23.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction24.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction24.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction25.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction25.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction26.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction26.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction27.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction27.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction28.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction28.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction29.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction29.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction3.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction3.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction30.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction30.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction31.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction31.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction4.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction4.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction5.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction5.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction6.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction6.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction7.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction7.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction8.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction8.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction9.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.AccessibilityCustomAction9.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionContainer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionContainer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionDivider.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionDivider.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionImage.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionImage.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ActionText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Actions.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Actions.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Async.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Async.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Blocking.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Blocking.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Chronometer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Chronometer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.DialogButton.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.DialogButton.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.EditTextId.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.EditTextId.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Forever.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Forever.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.HideImeId.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.HideImeId.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Icon.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Icon.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.IconGroup.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.IconGroup.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Info.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Info.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Italic.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Italic.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Line1.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Line1.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Line3.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Line3.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Normal.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Normal.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationBackground.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationBackground.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationMainColumn.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationMainColumn.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationMainColumnContainer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.NotificationMainColumnContainer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.RightIcon.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.RightIcon.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.RightSide.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.RightSide.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityActions.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityActions.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityClickableSpans.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityClickableSpans.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityHeading.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityHeading.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityPaneTitle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagAccessibilityPaneTitle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnApplyWindowListener.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnApplyWindowListener.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnReceiveContentListener.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnReceiveContentListener.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnReceiveContentMimeTypes.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagOnReceiveContentMimeTypes.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagScreenReaderFocusable.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagScreenReaderFocusable.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagStateDescription.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagStateDescription.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagTransitionGroup.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagTransitionGroup.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagUnhandledKeyEventManager.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagUnhandledKeyEventManager.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagUnhandledKeyListeners.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagUnhandledKeyListeners.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagWindowInsetsAnimationCallback.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.TagWindowInsetsAnimationCallback.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Text.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Text.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Text2.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Text2.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Time.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Time.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Title.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.Title.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ViewTreeLifecycleOwner.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Id.ViewTreeLifecycleOwner.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.StatusBarNotificationInfoMaxnum.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Integer.StatusBarNotificationInfoMaxnum.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.CustomDialog.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.CustomDialog.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ImeBaseSplitTestActivity.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ImeBaseSplitTestActivity.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ImeSecondarySplitTestActivity.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.ImeSecondarySplitTestActivity.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationAction.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationAction.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationActionTombstone.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationActionTombstone.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplateCustomBig.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplateCustomBig.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplateIconGroup.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplateIconGroup.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplatePartChronometer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplatePartChronometer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplatePartTime.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Layout.NotificationTemplatePartTime.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.OnResourcesLoaded(int packageId) -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationAnswerAction.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationAnswerAction.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationAnswerVideoAction.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationAnswerVideoAction.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationDeclineAction.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationDeclineAction.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationHangUpAction.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationHangUpAction.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationIncomingText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationIncomingText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationOngoingText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationOngoingText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationScreeningText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.CallNotificationScreeningText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.StatusBarNotificationInfoOverflow.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.String.StatusBarNotificationInfoOverflow.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotification.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotification.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationInfo.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationInfo.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationLine2.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationLine2.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationTime.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationTime.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationTitle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.TextAppearanceCompatNotificationTitle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.WidgetCompatNotificationActionContainer.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.WidgetCompatNotificationActionContainer.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.WidgetCompatNotificationActionText.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Style.WidgetCompatNotificationActionText.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.Capability.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.Capability.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.CapabilityQueryPatterns.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.CapabilityQueryPatterns.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.CapabilityShortcutMatchRequired.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.CapabilityShortcutMatchRequired.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItem.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItem.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAlpha.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAlpha.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidAlpha.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidAlpha.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidLStar.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemAndroidLStar.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemLStar.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.ColorStateListItemLStar.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamily.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamily.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFont.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFont.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFont.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFont.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontStyle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontStyle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontVariationSettings.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontVariationSettings.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontWeight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidFontWeight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidTtcIndex.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontAndroidTtcIndex.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFont.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFont.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontStyle.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontStyle.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontVariationSettings.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontVariationSettings.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontWeight.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontFontWeight.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderAuthority.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderAuthority.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderCerts.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderCerts.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderFetchStrategy.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderFetchStrategy.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderFetchTimeout.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderFetchTimeout.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderPackage.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderPackage.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderQuery.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderQuery.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderSystemFontFamily.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontProviderSystemFontFamily.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontTtcIndex.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.FontFamilyFontTtcIndex.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColor.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterX.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterX.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterY.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidCenterY.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndX.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndX.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndY.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidEndY.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidGradientRadius.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidGradientRadius.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartX.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartX.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartY.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidStartY.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidTileMode.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidTileMode.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidType.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorAndroidType.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItem.get -> System.Collections.Generic.IList<int>?
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItem.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItemAndroidColor.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItemAndroidColor.set -> void
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItemAndroidOffset.get -> int
static Xamarin.Chromium.Gen.Base.BaseJavaAsstRes.SrcJAR.R.Styleable.GradientColorItemAndroidOffset.set -> void
static Xamarin.Chromium.Gen.Net.Android.NetJavaAsstRes.SrcJAR.R.OnResourcesLoaded(int packageId) -> void
static Xamarin.Chromium.HttpFlags.BaseFeature.GetOverrides(Xamarin.Chromium.HttpFlags.ResolvedFlags? flags) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.DefaultInstance.get -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.DefaultInstance.get -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.NewBuilder() -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.NewBuilder(Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState? prototype) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Builder?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(byte[]? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.FeatureState.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.NewBuilder() -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.NewBuilder(Xamarin.Chromium.HttpFlags.BaseFeatureOverrides? prototype) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Builder?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(byte[]? data) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.BaseFeatureOverrides?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverrides.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.HttpFlags.BaseFeatureOverridesOuterClass.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.DefaultInstance.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.NewBuilder() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.NewBuilder(Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue? prototype) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Builder?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(byte[]? data) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.BoolValue.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.BytesValue.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.FloatValue.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.ForNumber(int value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.IntValue.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.StringValue.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.ValueNotSet.get -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.ValueOf(int value) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.ValueOf(string? name) -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase?
static Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase.Values() -> Xamarin.Chromium.HttpFlags.FlagValue.ConstrainedValue.ValueCase![]?
static Xamarin.Chromium.HttpFlags.FlagValue.DefaultInstance.get -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.NewBuilder() -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
static Xamarin.Chromium.HttpFlags.FlagValue.NewBuilder(Xamarin.Chromium.HttpFlags.FlagValue? prototype) -> Xamarin.Chromium.HttpFlags.FlagValue.Builder?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(byte[]? data) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.FlagValue?
static Xamarin.Chromium.HttpFlags.FlagValue.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.HttpFlags.Flags.DefaultInstance.get -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.NewBuilder() -> Xamarin.Chromium.HttpFlags.Flags.Builder?
static Xamarin.Chromium.HttpFlags.Flags.NewBuilder(Xamarin.Chromium.HttpFlags.Flags? prototype) -> Xamarin.Chromium.HttpFlags.Flags.Builder?
static Xamarin.Chromium.HttpFlags.Flags.ParseDelimitedFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseDelimitedFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Java.Nio.ByteBuffer? data) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Java.Nio.ByteBuffer? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(System.IO.Stream? input) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(System.IO.Stream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Xamarin.Protobuf.Lite.ByteString? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(Xamarin.Protobuf.Lite.CodedInputStream? input, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(byte[]? data) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.ParseFrom(byte[]? data, Xamarin.Protobuf.Lite.ExtensionRegistryLite? extensionRegistry) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.Flags.Parser() -> Xamarin.Protobuf.Lite.IParser?
static Xamarin.Chromium.HttpFlags.FlagsOuterClass.RegisterAllExtensions(Xamarin.Protobuf.Lite.ExtensionRegistryLite? registry) -> void
static Xamarin.Chromium.HttpFlags.HttpFlagsLoader.Load(Android.Content.Context? context) -> Xamarin.Chromium.HttpFlags.Flags?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Resolve(Xamarin.Chromium.HttpFlags.Flags? flags, string? appId, string? cronetVersion) -> Xamarin.Chromium.HttpFlags.ResolvedFlags?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.Bool.get -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.Bytes.get -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.Float.get -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.Int.get -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.String.get -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.ValueOf(string? name) -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type?
static Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type.Values() -> Xamarin.Chromium.HttpFlags.ResolvedFlags.Value.Type![]?
static Xamarin.Chromium.J.N.M0s8NeYn(long p0, Java.Lang.Object? p1, int p2, string? p3) -> void
static Xamarin.Chromium.J.N.M135Cu0D(long p0) -> long
static Xamarin.Chromium.J.N.M1cMYXGO(string? p0) -> void
static Xamarin.Chromium.J.N.M2evocmp(long p0, string? p1) -> bool
static Xamarin.Chromium.J.N.M4znfYdB(long p0, Java.Lang.Object? p1, bool p2) -> void
static Xamarin.Chromium.J.N.M51RPBJe(long p0, Java.Lang.Object? p1, string? p2) -> bool
static Xamarin.Chromium.J.N.M5K_ewhl(string? p0) -> void
static Xamarin.Chromium.J.N.M5_IQXaH(int p0, int p1) -> long
static Xamarin.Chromium.J.N.M6C2IQIc() -> void
static Xamarin.Chromium.J.N.M6Dz0nZ5(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.M6H_IiaF(int p0, string? p1) -> void
static Xamarin.Chromium.J.N.M6sIJDgy_ForTesting(long p0, Java.Lang.Object? p1, bool p2, bool p3, bool p4) -> void
static Xamarin.Chromium.J.N.M6xubM8G() -> string?
static Xamarin.Chromium.J.N.M7CZ_Klr() -> byte[]?
static Xamarin.Chromium.J.N.M7UXCmoq(string? p0, long p1, int p2, long p3) -> void
static Xamarin.Chromium.J.N.M81WqFvs(int p0) -> bool
static Xamarin.Chromium.J.N.M8R55Xut(long p0, string? p1, bool p2) -> bool
static Xamarin.Chromium.J.N.M9XfPu17(string? p0, string? p1) -> void
static Xamarin.Chromium.J.N.M9wfStLu(long p0, string? p1) -> string?
static Xamarin.Chromium.J.N.MA4X1aZa(Java.Lang.Object? p0, long p1, long p2) -> long
static Xamarin.Chromium.J.N.MB3ntV7V(byte[]? p0) -> long
static Xamarin.Chromium.J.N.MBT1i5cd(long p0, Java.Lang.Object? p1, long p2, int p3) -> void
static Xamarin.Chromium.J.N.MCIk73GZ(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MCImhGql() -> void
static Xamarin.Chromium.J.N.MDkrKi31(string![]? p0) -> void
static Xamarin.Chromium.J.N.MDpuHJTB(long p0, Java.Lang.Object? p1, long p2) -> void
static Xamarin.Chromium.J.N.MDr5ROsj_ForTesting(string? p0) -> long[]?
static Xamarin.Chromium.J.N.MERCiIV8(long p0) -> void
static Xamarin.Chromium.J.N.MFFzPOVw() -> void
static Xamarin.Chromium.J.N.MFTJCvBh() -> bool
static Xamarin.Chromium.J.N.MFpRjSMv(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MGLIR7Sc(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MGqzwlIM(string? p0, string? p1) -> bool
static Xamarin.Chromium.J.N.MHopMqLX(string? p0, long p1) -> void
static Xamarin.Chromium.J.N.MHz6Fn06() -> void
static Xamarin.Chromium.J.N.MHzche6O() -> string![]?
static Xamarin.Chromium.J.N.MILRV9Ch(string? p0, long p1, int p2, int p3, int p4, int p5) -> long
static Xamarin.Chromium.J.N.MJ46uzUz(long[]? p0, bool[]? p1, long p2, long p3, int p4) -> void
static Xamarin.Chromium.J.N.MJcct7gJ(long p0, long p1) -> void
static Xamarin.Chromium.J.N.MJdorYDE() -> void
static Xamarin.Chromium.J.N.MKFm_qQ7(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.ML0T8q1U() -> long
static Xamarin.Chromium.J.N.ML40H8ed(string? p0, string? p1) -> void
static Xamarin.Chromium.J.N.MLJecZJ9(string? p0) -> void
static Xamarin.Chromium.J.N.MLXZo1U6() -> void
static Xamarin.Chromium.J.N.MLlibBXh(bool p0, Java.Lang.Throwable? p1) -> void
static Xamarin.Chromium.J.N.MMW1G0N1(long p0) -> void
static Xamarin.Chromium.J.N.MOXOasS5() -> void
static Xamarin.Chromium.J.N.MOiBJ1qS() -> int
static Xamarin.Chromium.J.N.MPquHBNa(string![]? p0) -> void
static Xamarin.Chromium.J.N.MQNVaF2F(int p0) -> void
static Xamarin.Chromium.J.N.MR5ZSvGM(long p0, string? p1, string? p2, bool p3) -> bool
static Xamarin.Chromium.J.N.MROCxiBo() -> void
static Xamarin.Chromium.J.N.MRiRQ_Ey(long p0) -> bool
static Xamarin.Chromium.J.N.MRlw2LEn(string? p0, long p1, int p2, long p3) -> void
static Xamarin.Chromium.J.N.MS2l1kNx(long p0, Java.Lang.Object? p1, bool p2) -> void
static Xamarin.Chromium.J.N.MSZPA7qE(long p0) -> void
static Xamarin.Chromium.J.N.MTDsfZGe(string? p0, long p1) -> void
static Xamarin.Chromium.J.N.MTULt02u(long p0, Java.Lang.Object? p1, string? p2, bool p3, int p4) -> void
static Xamarin.Chromium.J.N.MUBbgum1_ForTesting(long p0) -> void
static Xamarin.Chromium.J.N.MUjpxN8d() -> void
static Xamarin.Chromium.J.N.MUoYiNbY(string? p0, string? p1) -> void
static Xamarin.Chromium.J.N.MV_QqWU4(long p0, string? p1) -> string![]?
static Xamarin.Chromium.J.N.MWck3aif(string? p0) -> string?
static Xamarin.Chromium.J.N.MZJ2lrZY(string? p0) -> string?
static Xamarin.Chromium.J.N.MZJzyjAa(int p0) -> void
static Xamarin.Chromium.J.N.MZWMOP4I(string? p0, string? p1) -> string?
static Xamarin.Chromium.J.N.M_1WxmXI_ForTesting(string? p0, int p1, long p2) -> int
static Xamarin.Chromium.J.N.M_Gv8TwM(string? p0, long p1, long p2) -> void
static Xamarin.Chromium.J.N.M_y76mct(string? p0) -> void
static Xamarin.Chromium.J.N.MaLi67Df(long p0, long p1, bool p2) -> void
static Xamarin.Chromium.J.N.MabZ5m6r(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MbPIImnU(long p0, Java.Lang.Object? p1, int p2, long p3) -> void
static Xamarin.Chromium.J.N.McDUim_I(long p0, Java.Lang.Object? p1, string? p2, int p3, string? p4, string![]? p5, bool p6) -> int
static Xamarin.Chromium.J.N.MdC43qwX(string? p0) -> string?
static Xamarin.Chromium.J.N.MdFgVRJJ() -> int
static Xamarin.Chromium.J.N.MdFi6sVQ(long p0) -> bool
static Xamarin.Chromium.J.N.Md_rPmgC(long p0, Java.Lang.Object? p1, Java.Lang.Object? p2, int p3, int p4) -> bool
static Xamarin.Chromium.J.N.MeBvNXm5(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MfCxA8r3(long p0, Java.Lang.Object? p1, Java.Lang.Object? p2, int p3, int p4) -> bool
static Xamarin.Chromium.J.N.MffNhCLU(string? p0, long p1) -> void
static Xamarin.Chromium.J.N.MfyKGfoR(string? p0, int p1) -> void
static Xamarin.Chromium.J.N.Mg0W7eRL(long p0, Java.Lang.Object? p1, int p2) -> void
static Xamarin.Chromium.J.N.MgIIMpT9(long p0, Java.Lang.Object? p1, Java.Lang.Object? p2) -> void
static Xamarin.Chromium.J.N.MgOW0Igo(string? p0, long p1) -> void
static Xamarin.Chromium.J.N.MgwJQAH1(long p0, Java.Lang.Object? p1, string? p2, bool p3) -> bool
static Xamarin.Chromium.J.N.Mhp54Oqs(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MiAkQ_SU(int p0) -> void
static Xamarin.Chromium.J.N.MiJIMrTb(long p0, Java.Lang.Object? p1, long p2) -> void
static Xamarin.Chromium.J.N.MjAZnhE4(long p0, Java.Lang.Object? p1) -> bool
static Xamarin.Chromium.J.N.Mk1ai9mx(string? p0, long p1, int p2) -> long
static Xamarin.Chromium.J.N.MkEZDArf(long p0, string? p1, string? p2) -> string?
static Xamarin.Chromium.J.N.MkM80XCq(long p0, long p1) -> void
static Xamarin.Chromium.J.N.Ml5G_GLY(long p0, Java.Lang.Object? p1) -> void
static Xamarin.Chromium.J.N.MlZcyPle_ForTesting() -> long
static Xamarin.Chromium.J.N.MmS4zlEt(string? p0) -> void
static Xamarin.Chromium.J.N.MmnP6i1r(int p0, int p1, bool p2, bool p3, string? p4, string? p5, long p6) -> void
static Xamarin.Chromium.J.N.Mmqqda9c(string? p0) -> bool
static Xamarin.Chromium.J.N.MmyrhqXB(string? p0, long p1, int p2, long p3) -> void
static Xamarin.Chromium.J.N.MnDEFloP_ForTesting(Java.Lang.Object? p0) -> long
static Xamarin.Chromium.J.N.MnPUhNKP(long p0, Java.Lang.Object? p1, bool p2) -> void
static Xamarin.Chromium.J.N.MnfJQqTB() -> bool
static Xamarin.Chromium.J.N.MorcXgQd(string? p0, string? p1) -> bool
static Xamarin.Chromium.J.N.MpCt7siL(string? p0) -> string?
static Xamarin.Chromium.J.N.MpWH3VIr(long p0, Java.Lang.Object? p1, int p2, bool p3) -> void
static Xamarin.Chromium.J.N.MpnFLFF2(long p0, Java.Lang.Object? p1, bool p2) -> void
static Xamarin.Chromium.J.N.MqHgOQAN_ForTesting(long p0) -> void
static Xamarin.Chromium.J.N.MqTDYvZd(Java.Lang.Object? p0, long p1, bool p2, bool p3, int p4, bool p5, int p6, long p7) -> long
static Xamarin.Chromium.J.N.MrKsqeCD(long p0, long p1) -> void
static Xamarin.Chromium.J.N.MrWG2uUW(string? p0, long p1, int p2, long p3) -> void
static Xamarin.Chromium.J.N.Mrxu2pQS(int p0) -> void
static Xamarin.Chromium.J.N.MsCvypjU(string? p0) -> bool
static Xamarin.Chromium.J.N.MsOKBrZ5(string? p0, byte[]? p1) -> bool
static Xamarin.Chromium.J.N.MsUcOjxl(long p0, long p1) -> void
static Xamarin.Chromium.J.N.MshdYEWu() -> long
static Xamarin.Chromium.J.N.Mt26m31j(long p0, Java.Lang.Object? p1, int p2) -> void
static Xamarin.Chromium.J.N.MtKTTHie(string? p0, long p1, bool p2) -> long
static Xamarin.Chromium.J.N.MtoXPJsu(int p0, int p1, int p2) -> void
static Xamarin.Chromium.J.N.MuOIsMvf(Java.Lang.Object? p0, long p1, string? p2, int p3, bool p4, bool p5, bool p6, int p7, bool p8, int p9, int p10, long p11) -> long
static Xamarin.Chromium.J.N.Muq3ic6p(long p0, string? p1, byte[]![]? p2, bool p3, long p4) -> void
static Xamarin.Chromium.J.N.MvHusd1J(long p0, Java.Lang.Object? p1, string? p2, string? p3) -> bool
static Xamarin.Chromium.J.N.Mw73xTww(string? p0, string? p1, long p2) -> void
static Xamarin.Chromium.J.N.MwJCBTMQ(long p0, Java.Lang.Object? p1, Java.Lang.Object![]? p2, int[]? p3, int[]? p4, bool p5) -> bool
static Xamarin.Chromium.J.N.MwX2YEhL(string? p0, long p1) -> long
static Xamarin.Chromium.J.N.MyRIv1Ij(long p0, string? p1, int p2, int p3) -> void
static Xamarin.Chromium.J.N.MymnNC4__ForTesting(Java.Lang.Object? p0, long p1, long p2) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_ApplicationStatus_onApplicationStateChange(int newState) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_BaseFeatureMap_getNativeMap() -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_appendSwitch(string? switchString) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_appendSwitchWithValue(string? switchString, string? value) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_appendSwitchesAndArguments(string![]? array) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_getSwitchValue(string? switchString) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_getSwitchesFlattened() -> string![]?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_hasSwitch(string? switchString) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_init(string![]? args) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CommandLine_removeSwitch(string? switchString) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CpuFeatures_getCoreCount() -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_CpuFeatures_getCpuFeatures() -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyAsyncBeginEvent(string? name, long id, long timeNanos) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyAsyncEndEvent(long id, long timeNanos) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyBeginEvent(string? name, long timeNanos, int threadId, long threadMillis) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyEndEvent(string? name, long timeNanos, int threadId, long threadMillis) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyToplevelBeginEvent(string? name, long timeNanos, int threadId, long threadMillis) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_EarlyTraceEvent_recordEarlyToplevelEndEvent(string? name, long timeNanos, int threadId, long threadMillis) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureList_isInitialized() -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_getFieldTrialParamByFeature(long featureMap, string? featureName, string? paramName) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsBoolean(long featureMap, string? featureName, string? paramName, bool defaultValue) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsDouble(long featureMap, string? featureName, string? paramName, double defaultValue) -> double
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_getFieldTrialParamByFeatureAsInt(long featureMap, string? featureName, string? paramName, int defaultValue) -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_getFlattedFieldTrialParamsForFeature(long featureMap, string? featureName) -> string![]?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FeatureMap_isEnabled(long featureMap, string? featureName) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_Features_getFieldTrialParamByFeatureAsBoolean(long featurePointer, string? paramName, bool defaultValue) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_Features_getFieldTrialParamByFeatureAsString(long featurePointer, string? paramName) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_Features_isEnabled(long featurePointer) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FieldTrialList_createFieldTrial(string? trialName, string? groupName) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FieldTrialList_findFullName(string? trialName) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FieldTrialList_getVariationParameter(string? trialName, string? parameterKey) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FieldTrialList_logActiveTrials() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FieldTrialList_trialExists(string? trialName) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_FileUtils_getAbsoluteFilePath(string? filePath) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_ImportantFileWriterAndroid_writeFileAtomically(string? fileName, byte[]? data) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_JavaExceptionReporter_reportJavaException(bool crashAfterReport, Java.Lang.Throwable? e) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_JavaExceptionReporter_reportJavaStackTrace(string? stackTrace) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_JavaHandlerThread_initializeThread(long nativeJavaHandlerThread, long nativeEvent) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_JavaHandlerThread_onLooperStopped(long nativeJavaHandlerThread) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_MemoryPressureListener_onMemoryPressure(int pressure) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_PathService_override(int what, string? path) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_PowerMonitor_onBatteryChargingChanged() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_PowerMonitor_onThermalStatusChanged(int thermalStatus) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_SysUtils_logPageFaultCountToTracing() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_addViewDump(int id, int parentId, bool isShown, bool isDirty, string? className, string? resourceName, long activityProtoPtr) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_begin(string? name, string? arg) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_beginToplevel(string? target) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_beginWithIntArg(string? name, int arg) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_end(string? name, string? arg, long flow) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_endToplevel(string? target) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_finishAsync(string? name, long id) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_initViewHierarchyDump(long id, Java.Lang.Object? list) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_instant(string? name, string? arg) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_instantAndroidIPC(string? name, long durMs) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_instantAndroidToolbar(int blockReason, int allowReason, int snapshotDiff) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_registerEnabledObserver() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_startActivityDump(string? name, long dumpProtoPtr) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_startAsync(string? name, long id) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_viewHierarchyDumpEnabled() -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_webViewStartupStage1(long startTimeMs, long durationMs) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_webViewStartupStage2(long startTimeMs, long durationMs, bool isColdStartup) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_TraceEvent_webViewStartupTotalFactoryInit(long startTimeMs, long durationMs) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_jank_1tracker_JankMetricUMARecorder_recordJankMetrics(long[]? durationsNs, bool[]? jankStatus, long reportingIntervalStartTime, long reportingIntervalDuration, int scenario) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_library_1loader_LibraryLoader_libraryLoaded(int processType) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_library_1loader_LibraryPrefetcher_forkAndPrefetchNativeLibrary() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_library_1loader_LibraryPrefetcher_percentageOfResidentNativeLibraryCode() -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_library_1loader_LibraryPrefetcher_periodicallyCollectResidency() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_addActionCallbackForTesting(Java.Lang.Object? callback) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_createHistogramSnapshotForTesting() -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_destroyHistogramSnapshotForTesting(long snapshotPtr) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_getHistogramSamplesForTesting(string? name) -> long[]?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_getHistogramTotalCountForTesting(string? name, long snapshotPtr) -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_getHistogramValueCountForTesting(string? name, int sample, long snapshotPtr) -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_recordBooleanHistogram(string? name, long nativeHint, bool sample) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_recordExponentialHistogram(string? name, long nativeHint, int sample, int min, int max, int numBuckets) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_recordLinearHistogram(string? name, long nativeHint, int sample, int min, int max, int numBuckets) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_recordSparseHistogram(string? name, long nativeHint, int sample) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_recordUserAction(string? name, long millisSinceEvent) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_NativeUmaRecorder_removeActionCallbackForTesting(long callbackId) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_metrics_StatisticsRecorderAndroid_toJson(int verbosityLevel) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_task_TaskRunnerImpl_belongsToCurrentThread(long nativeTaskRunnerAndroid) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_task_TaskRunnerImpl_destroy(long nativeTaskRunnerAndroid) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_task_TaskRunnerImpl_init(int taskRunnerType, int taskTraits) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_base_task_TaskRunnerImpl_postDelayedTask(long nativeTaskRunnerAndroid, Java.Lang.Object? task, long delay, string? runnableClassName) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_GURLUtils_getOrigin(string? url) -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_HttpNegotiateAuthenticator_setResult(long nativeJavaNegotiateResultWrapper, Java.Lang.Object? caller, int status, string? authToken) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_HttpUtil_isAllowedHeader(string? headerName, string? headerValue) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkActiveNotifier_notifyOfDefaultNetworkActive(long nativePtr) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyConnectionCostChanged(long nativePtr, Java.Lang.Object? caller, int newConnectionCost) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyConnectionTypeChanged(long nativePtr, Java.Lang.Object? caller, int newConnectionType, long defaultNetId) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyMaxBandwidthChanged(long nativePtr, Java.Lang.Object? caller, int subType) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyOfNetworkConnect(long nativePtr, Java.Lang.Object? caller, long netId, int connectionType) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyOfNetworkDisconnect(long nativePtr, Java.Lang.Object? caller, long netId) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyOfNetworkSoonToDisconnect(long nativePtr, Java.Lang.Object? caller, long netId) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_NetworkChangeNotifier_notifyPurgeActiveNetworkList(long nativePtr, Java.Lang.Object? caller, long[]? activeNetIds) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_ProxyChangeListener_proxySettingsChanged(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_ProxyChangeListener_proxySettingsChangedTo(long nativePtr, Java.Lang.Object? caller, string? host, int port, string? pacUrl, string![]? exclusionList) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_X509Util_notifyClientCertStoreChanged() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_X509Util_notifyTrustStoreChanged() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_createBidirectionalStream(Java.Lang.Object? caller, long urlRequestContextAdapter, bool sendRequestHeadersAutomatically, bool trafficStatsTagSet, int trafficStatsTag, bool trafficStatsUidSet, int trafficStatsUid, long networkHandle) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_destroy(long nativePtr, Java.Lang.Object? caller, bool sendOnCanceled) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_readData(long nativePtr, Java.Lang.Object? caller, Java.Lang.Object? byteBuffer, int position, int limit) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_sendRequestHeaders(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_start(long nativePtr, Java.Lang.Object? caller, string? url, int priority, string? method, string![]? headers, bool endOfStream) -> int
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetBidirectionalStream_writevData(long nativePtr, Java.Lang.Object? caller, Java.Lang.Object![]? buffers, int[]? positions, int[]? limits, bool endOfStream) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetLibraryLoader_cronetInitOnInitThread() -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetLibraryLoader_getCronetVersion() -> string?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetLibraryLoader_setMinLogLevel(int loggingLevel) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_attachUploadDataToRequest(Java.Lang.Object? caller, long urlRequestAdapter, long length) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_createAdapterForTesting(Java.Lang.Object? caller) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_createUploadDataStreamForTesting(Java.Lang.Object? caller, long length, long adapter) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_destroy(long nativePtr) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_onReadSucceeded(long nativePtr, Java.Lang.Object? caller, int bytesRead, bool finalChunk) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUploadDataStream_onRewindSucceeded(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_addPkp(long urlRequestContextConfig, string? host, byte[]![]? hashes, bool includeSubdomains, long expirationTime) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_addQuicHint(long urlRequestContextConfig, string? host, int port, int alternatePort) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_configureNetworkQualityEstimatorForTesting(long nativePtr, Java.Lang.Object? caller, bool useLocalHostRequests, bool useSmallerResponses, bool disableOfflineCheck) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_createRequestContextAdapter(long urlRequestContextConfig) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_createRequestContextConfig(byte[]? serializedRequestContextConfigOptions) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_destroy(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_getEnableTelemetry(long nativePtr, Java.Lang.Object? caller) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_getHistogramDeltas() -> byte[]?
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_initRequestContextOnInitThread(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_provideRTTObservations(long nativePtr, Java.Lang.Object? caller, bool should) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_provideThroughputObservations(long nativePtr, Java.Lang.Object? caller, bool should) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_startNetLogToDisk(long nativePtr, Java.Lang.Object? caller, string? dirPath, bool logAll, int maxSize) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_startNetLogToFile(long nativePtr, Java.Lang.Object? caller, string? fileName, bool logAll) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequestContext_stopNetLog(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_addRequestHeader(long nativePtr, Java.Lang.Object? caller, string? name, string? value) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_createRequestAdapter(Java.Lang.Object? caller, long urlRequestContextAdapter, string? url, int priority, bool disableCache, bool disableConnectionMigration, bool trafficStatsTagSet, int trafficStatsTag, bool trafficStatsUidSet, int trafficStatsUid, int idempotency, long networkHandle) -> long
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_destroy(long nativePtr, Java.Lang.Object? caller, bool sendOnCanceled) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_followDeferredRedirect(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_getStatus(long nativePtr, Java.Lang.Object? caller, Java.Lang.Object? listener) -> void
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_readData(long nativePtr, Java.Lang.Object? caller, Java.Lang.Object? byteBuffer, int position, int capacity) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_setHttpMethod(long nativePtr, Java.Lang.Object? caller, string? method) -> bool
static Xamarin.Chromium.Jni.Zero.GEN_JNI.Org_chromium_net_impl_CronetUrlRequest_start(long nativePtr, Java.Lang.Object? caller) -> void
static Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.CheckLoaded() -> void
static Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.ProviderForTesting.get -> Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.INativeLibraryLoadedStatusProvider?
static Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.SetProvider(Xamarin.Chromium.Jni.Zero.NativeLibraryLoadedStatus.INativeLibraryLoadedStatusProvider? statusProvider) -> void
static Xamarin.Chromium.Native_Test.R.OnResourcesLoaded(int packageId) -> void
virtual Xamarin.Chromium.Base.BuildInfo.BrowserApplicationInfo.get -> Android.Content.PM.ApplicationInfo?
virtual Xamarin.Chromium.Base.CommandLine.Destroy() -> void
virtual Xamarin.Chromium.Base.CommandLine.GetSwitchValue(string? switchString, string? defaultValue) -> string?
virtual Xamarin.Chromium.Base.CommandLine.IsNativeImplementation.get -> bool
virtual Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference.Get() -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.DiscardableReferencePool.Drain() -> void
virtual Xamarin.Chromium.Base.DiscardableReferencePool.Put(Java.Lang.Object? payload) -> Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference?
virtual Xamarin.Chromium.Base.DiscardableReferencePool.Remove(Xamarin.Chromium.Base.DiscardableReferencePool.DiscardableReference? ref) -> void
virtual Xamarin.Chromium.Base.FileUtilsJni.GetAbsoluteFilePath(string? filePath) -> string?
virtual Xamarin.Chromium.Base.Flag.FeatureName.get -> string?
virtual Xamarin.Chromium.Base.JavaExceptionReporter.UncaughtException(Java.Lang.Thread? t, Java.Lang.Throwable? e) -> void
virtual Xamarin.Chromium.Base.JavaHandlerThread.Looper.get -> Android.OS.Looper?
virtual Xamarin.Chromium.Base.JavaHandlerThread.MaybeStart() -> void
virtual Xamarin.Chromium.Base.Lifetime.DestroyChecker.CheckNotDestroyed() -> void
virtual Xamarin.Chromium.Base.Lifetime.DestroyChecker.Destroy() -> void
virtual Xamarin.Chromium.Base.Lifetime.DestroyChecker.IsDestroyed.get -> bool
virtual Xamarin.Chromium.Base.Memory.MemoryPressureUma.OnConfigurationChanged(Android.Content.Res.Configuration? configuration) -> void
virtual Xamarin.Chromium.Base.Memory.MemoryPressureUma.OnLowMemory() -> void
virtual Xamarin.Chromium.Base.Memory.MemoryPressureUma.OnTrimMemory(Android.Content.TrimMemory level) -> void
virtual Xamarin.Chromium.Base.Metrics.HistogramBucket.Contains(int value) -> bool
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.AddActionCallbackForTesting(Xamarin.Chromium.Base.ICallback? callback) -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.CreateHistogramSnapshotForTesting() -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.DestroyHistogramSnapshotForTesting(long snapshotPtr) -> void
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.GetHistogramSamplesForTesting(string? name) -> long[]?
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.GetHistogramTotalCountForTesting(string? name, long snapshotPtr) -> int
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.GetHistogramValueCountForTesting(string? name, int sample, long snapshotPtr) -> int
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RecordBooleanHistogram(string? name, long nativeHint, bool sample) -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RecordExponentialHistogram(string? name, long nativeHint, int sample, int min, int max, int numBuckets) -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RecordLinearHistogram(string? name, long nativeHint, int sample, int min, int max, int numBuckets) -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RecordSparseHistogram(string? name, long nativeHint, int sample) -> long
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RecordUserAction(string? name, long millisSinceEvent) -> void
virtual Xamarin.Chromium.Base.Metrics.NativeUmaRecorderJni.RemoveActionCallbackForTesting(long callbackId) -> void
virtual Xamarin.Chromium.Base.Metrics.ScopedSysTraceEvent.Close() -> void
virtual Xamarin.Chromium.Base.Metrics.TimingMetric.Close() -> void
virtual Xamarin.Chromium.Base.ObserverList.AddObserver(Java.Lang.Object? obs) -> bool
virtual Xamarin.Chromium.Base.ObserverList.Clear() -> void
virtual Xamarin.Chromium.Base.ObserverList.DisableThreadAsserts() -> void
virtual Xamarin.Chromium.Base.ObserverList.HasObserver(Java.Lang.Object? obs) -> bool
virtual Xamarin.Chromium.Base.ObserverList.IsEmpty.get -> bool
virtual Xamarin.Chromium.Base.ObserverList.Iterator() -> Java.Util.IIterator?
virtual Xamarin.Chromium.Base.ObserverList.RemoveObserver(Java.Lang.Object? obs) -> bool
virtual Xamarin.Chromium.Base.ObserverList.RewindableIterator() -> Xamarin.Chromium.Base.ObserverList.IRewindableIterator?
virtual Xamarin.Chromium.Base.ObserverList.Size() -> int
virtual Xamarin.Chromium.Base.Promise.Except(Xamarin.Chromium.Base.ICallback? onReject) -> void
virtual Xamarin.Chromium.Base.Promise.Fulfill(Java.Lang.Object? result) -> void
virtual Xamarin.Chromium.Base.Promise.IsFulfilled.get -> bool
virtual Xamarin.Chromium.Base.Promise.IsRejected.get -> bool
virtual Xamarin.Chromium.Base.Promise.Reject() -> void
virtual Xamarin.Chromium.Base.Promise.Reject(Java.Lang.Exception? reason) -> void
virtual Xamarin.Chromium.Base.Promise.Result.get -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Promise.Then(Java.Util.Functions.IFunction? function) -> Xamarin.Chromium.Base.Promise?
virtual Xamarin.Chromium.Base.Promise.Then(Xamarin.Chromium.Base.ICallback? onFulfill) -> void
virtual Xamarin.Chromium.Base.Promise.Then(Xamarin.Chromium.Base.ICallback? onFulfill, Xamarin.Chromium.Base.ICallback? onReject) -> void
virtual Xamarin.Chromium.Base.Promise.Then(Xamarin.Chromium.Base.Promise.IAsyncFunction? function) -> Xamarin.Chromium.Base.Promise?
virtual Xamarin.Chromium.Base.RequiredCallback.OnResult(Java.Lang.Object? result) -> void
virtual Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.Get() -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.HasValue.get -> bool
virtual Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.OnAvailable(Xamarin.Chromium.Base.ICallback? callback) -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.LazyOneshotSupplier.Set(Java.Lang.Object! object) -> void
virtual Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.AddObserver(Xamarin.Chromium.Base.ICallback? obs) -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.Get() -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.RemoveObserver(Xamarin.Chromium.Base.ICallback? obs) -> void
virtual Xamarin.Chromium.Base.Supplier.ObservableSupplierImpl.Set(Java.Lang.Object? object) -> void
virtual Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.Get() -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.OnAvailable(Xamarin.Chromium.Base.ICallback? callback) -> Java.Lang.Object?
virtual Xamarin.Chromium.Base.Supplier.OneshotSupplierImpl.Set(Java.Lang.Object! object) -> void
virtual Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.Attach(Xamarin.Chromium.Base.UnownedUserDataHost! host) -> void
virtual Xamarin.Chromium.Base.Supplier.UnownedUserDataSupplier.Destroy() -> void
virtual Xamarin.Chromium.Base.Task.AsyncTask.OnCancelled() -> void
virtual Xamarin.Chromium.Base.Task.AsyncTask.OnCancelled(Java.Lang.Object? result) -> void
virtual Xamarin.Chromium.Base.Task.AsyncTask.OnPreExecute() -> void
virtual Xamarin.Chromium.Base.Task.ChainedTasks.Add(int traits, Java.Lang.IRunnable? task) -> void
virtual Xamarin.Chromium.Base.Task.ChainedTasks.Cancel() -> void
virtual Xamarin.Chromium.Base.Task.ChainedTasks.Start(bool coalesceTasks) -> void
virtual Xamarin.Chromium.Base.Task.SingleThreadTaskRunnerImpl.BelongsToCurrentThread() -> bool
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.BelongsToCurrentThreadInternal() -> Java.Lang.Boolean?
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.PostDelayedTask(Java.Lang.IRunnable? task, long delay) -> void
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.PostTask(Java.Lang.IRunnable? task) -> void
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.RunPreNativeTask() -> void
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.SchedulePreNativeDelayedTask(Java.Lang.IRunnable? task, long delay) -> bool
virtual Xamarin.Chromium.Base.Task.TaskRunnerImpl.SchedulePreNativeTask() -> void
virtual Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.CanRunTaskImmediately(int traits) -> bool
virtual Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.CreateSequencedTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ISequencedTaskRunner?
virtual Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.CreateSingleThreadTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ISingleThreadTaskRunner?
virtual Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.CreateTaskRunner(int taskTraits) -> Xamarin.Chromium.Base.Task.ITaskRunner?
virtual Xamarin.Chromium.Base.Task.UiThreadTaskExecutor.PostDelayedTask(int taskTraits, Java.Lang.IRunnable? task, long delay) -> void
virtual Xamarin.Chromium.Base.ThreadUtils.ThreadChecker.AssertOnValidThread() -> void
virtual Xamarin.Chromium.Base.TimeUtils.CurrentThreadTimeMillisTimer.ElapsedMillis.get -> long
virtual Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeMillisTimer.ElapsedMillis.get -> long
virtual Xamarin.Chromium.Base.TimeUtils.ElapsedRealtimeNanosTimer.ElapsedNanos.get -> long
virtual Xamarin.Chromium.Base.TimeUtils.UptimeMillisTimer.ElapsedMillis.get -> long
virtual Xamarin.Chromium.Base.TraceEvent.Close() -> void
virtual Xamarin.Chromium.Base.UnguessableToken.DescribeContents() -> int
virtual Xamarin.Chromium.Base.UnguessableToken.HighForSerialization.get -> long
virtual Xamarin.Chromium.Base.UnguessableToken.LowForSerialization.get -> long
virtual Xamarin.Chromium.Base.UnguessableToken.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
virtual Xamarin.Chromium.Base.WrappedClassLoader.FindLibrary(string? name) -> string?
virtual Xamarin.Chromium.CroNet.AndroidCertVerifyResult.GetCertificateChainEncoded() -> byte[]![]?
virtual Xamarin.Chromium.CroNet.AndroidCertVerifyResult.IsIssuedByKnownRoot.get -> bool
virtual Xamarin.Chromium.CroNet.AndroidCertVerifyResult.Status.get -> int
virtual Xamarin.Chromium.CroNet.DnsStatus.GetDnsServers() -> byte[]![]?
virtual Xamarin.Chromium.CroNet.DnsStatus.PrivateDnsActive.get -> bool
virtual Xamarin.Chromium.CroNet.DnsStatus.PrivateDnsServerName.get -> string?
virtual Xamarin.Chromium.CroNet.DnsStatus.SearchDomains.get -> string?
virtual Xamarin.Chromium.CroNet.GURLUtilsJni.GetOrigin(string? url) -> string?
virtual Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.FlushDataForTesting.get -> System.Collections.Generic.IList<Java.Nio.ByteBuffer!>?
virtual Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.PendingDataForTesting.get -> System.Collections.Generic.IList<Java.Nio.ByteBuffer!>?
virtual Xamarin.Chromium.CroNet.Impl.CronetBidirectionalStream.SetOnDestroyedCallbackForTesting(Java.Lang.IRunnable? onDestroyedCallbackForTesting) -> void
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CreateBidirectionalStream(string? url, Xamarin.Chromium.CroNet.BidirectionalStream.Callback? callback, Java.Util.Concurrent.IExecutor? executor, string? httpMethod, System.Collections.Generic.IList<Java.Util.IMapEntry!>? requestHeaders, int priority, bool delayRequestHeadersUntilFirstFlush, System.Collections.Generic.ICollection<Java.Lang.Object!>? requestAnnotations, bool trafficStatsTagSet, int trafficStatsTag, bool trafficStatsUidSet, int trafficStatsUid, long networkHandle) -> Xamarin.Chromium.CroNet.ExperimentalBidirectionalStream?
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.CreateRequest(string? url, Xamarin.Chromium.CroNet.UrlRequest.Callback? callback, Java.Util.Concurrent.IExecutor? executor, int priority, System.Collections.Generic.ICollection<Java.Lang.Object!>? requestAnnotations, bool disableCache, bool disableConnectionMigration, bool allowDirectExecutor, bool trafficStatsTagSet, int trafficStatsTag, bool trafficStatsUidSet, int trafficStatsUid, Xamarin.Chromium.CroNet.RequestFinishedInfo.Listener? requestFinishedListener, int idempotency, long networkHandle) -> Xamarin.Chromium.CroNet.Impl.UrlRequestBase?
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.EnableTelemetryForTesting.get -> bool
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.IsNetworkThread(Java.Lang.Thread? thread) -> bool
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.StopNetLogCompleted() -> void
virtual Xamarin.Chromium.CroNet.Impl.CronetUrlRequestContext.UrlRequestContextAdapter.get -> long
virtual Xamarin.Chromium.CroNet.MimeTypeFilter.Accept(Android.Net.Uri? uri, string? mimeType) -> bool
virtual Xamarin.Chromium.CroNet.MimeTypeFilter.Accept(Java.IO.File! file) -> bool
virtual Xamarin.Chromium.CroNet.NetworkActiveNotifier.DisableNotifications() -> void
virtual Xamarin.Chromium.CroNet.NetworkActiveNotifier.EnableNotifications() -> void
virtual Xamarin.Chromium.CroNet.NetworkActiveNotifier.FakeDefaultNetworkActive() -> void
virtual Xamarin.Chromium.CroNet.NetworkActiveNotifier.IsDefaultNetworkActive.get -> bool
virtual Xamarin.Chromium.CroNet.NetworkActiveNotifier.OnNetworkActive() -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.AddNativeObserver(long nativeChangeNotifier) -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.CurrentConnectionCost.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.CurrentConnectionSubtype.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.CurrentConnectionType.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.CurrentDefaultNetId.get -> long
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.GetCurrentNetworksAndTypes() -> long[]?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.RegisterNetworkCallbackFailed() -> bool
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifier.RemoveNativeObserver(long nativeChangeNotifier) -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.CurrentNetworkState.get -> Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.DefaultNetId.get -> long
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.DefaultNetwork.get -> Android.Net.Network?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.Destroy() -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.GetNetworksAndTypes() -> long[]?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.GetNetworksForTesting() -> Android.Net.Network![]?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.ConnectionCost.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.ConnectionSubtype.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.ConnectionType.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.IsConnected.get -> bool
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.IsMetered.get -> bool
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.IsPrivateDnsActive.get -> bool
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.NetworkIdentifier.get -> string?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.NetworkSubType.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.NetworkType.get -> int
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.NetworkState.PrivateDnsServerName.get -> string?
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.Register() -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegisterNetworkCallbackFailed() -> bool
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.RegistrationPolicy.Init(Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect? notifier) -> void
virtual Xamarin.Chromium.CroNet.NetworkChangeNotifierAutoDetect.Unregister() -> void
virtual Xamarin.Chromium.CroNet.ProxyChangeListener.SetDelegateForTesting(Xamarin.Chromium.CroNet.ProxyChangeListener.IDelegate? delegate) -> void
virtual Xamarin.Chromium.CroNet.ProxyChangeListener.Start(long nativePtr) -> void
virtual Xamarin.Chromium.CroNet.ProxyChangeListener.Stop() -> void
virtual Xamarin.Chromium.CroNet.RegistrationPolicyApplicationStatus.OnApplicationStateChange(int newState) -> void
virtual Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.SetTrafficStatsTag(int tag) -> void
virtual Xamarin.Chromium.CroNet.UrlConnection.CronetHttpURLConnection.SetTrafficStatsUid(int uid) -> void
virtual Xamarin.Chromium.CroNet.UrlConnection.CronetURLStreamHandlerFactory.CreateURLStreamHandler(string? protocol) -> Java.Net.URLStreamHandler?
