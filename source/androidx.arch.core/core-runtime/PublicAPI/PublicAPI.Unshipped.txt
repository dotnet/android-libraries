#nullable enable
AndroidX.Arch.Core.Executor.ArchTaskExecutor
AndroidX.Arch.Core.Executor.ArchTaskExecutor.ArchTaskExecutor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Arch.Core.Executor.DefaultTaskExecutor
AndroidX.Arch.Core.Executor.DefaultTaskExecutor.DefaultTaskExecutor() -> void
AndroidX.Arch.Core.Executor.DefaultTaskExecutor.DefaultTaskExecutor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Arch.Core.Executor.TaskExecutor
AndroidX.Arch.Core.Executor.TaskExecutor.TaskExecutor() -> void
AndroidX.Arch.Core.Executor.TaskExecutor.TaskExecutor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.Arch.Core.Executor.TaskExecutor.ExecuteOnDiskIO(Java.Lang.IRunnable! p0) -> void
abstract AndroidX.Arch.Core.Executor.TaskExecutor.IsMainThread.get -> bool
abstract AndroidX.Arch.Core.Executor.TaskExecutor.PostToMainThread(Java.Lang.IRunnable! p0) -> void
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.ExecuteOnDiskIO(Java.Lang.IRunnable! runnable) -> void
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.IsMainThread.get -> bool
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.PostToMainThread(Java.Lang.IRunnable! runnable) -> void
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.ThresholdClass.get -> nint
override AndroidX.Arch.Core.Executor.ArchTaskExecutor.ThresholdType.get -> System.Type!
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.ExecuteOnDiskIO(Java.Lang.IRunnable! runnable) -> void
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.IsMainThread.get -> bool
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.PostToMainThread(Java.Lang.IRunnable! runnable) -> void
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.ThresholdClass.get -> nint
override AndroidX.Arch.Core.Executor.DefaultTaskExecutor.ThresholdType.get -> System.Type!
override AndroidX.Arch.Core.Executor.TaskExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Arch.Core.Executor.TaskExecutor.ThresholdClass.get -> nint
override AndroidX.Arch.Core.Executor.TaskExecutor.ThresholdType.get -> System.Type!
static AndroidX.Arch.Core.Executor.ArchTaskExecutor.IOThreadExecutor.get -> Java.Util.Concurrent.IExecutor!
static AndroidX.Arch.Core.Executor.ArchTaskExecutor.Instance.get -> AndroidX.Arch.Core.Executor.ArchTaskExecutor!
static AndroidX.Arch.Core.Executor.ArchTaskExecutor.MainThreadExecutor.get -> Java.Util.Concurrent.IExecutor!
virtual AndroidX.Arch.Core.Executor.ArchTaskExecutor.SetDelegate(AndroidX.Arch.Core.Executor.TaskExecutor? taskExecutor) -> void
virtual AndroidX.Arch.Core.Executor.TaskExecutor.ExecuteOnMainThread(Java.Lang.IRunnable! runnable) -> void
