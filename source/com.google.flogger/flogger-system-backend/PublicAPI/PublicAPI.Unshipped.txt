#nullable enable
Xamarin.Google.Flogger.Backend.System.AbstractBackend
Xamarin.Google.Flogger.Backend.System.AbstractBackend.AbstractBackend(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.AbstractBackend.AbstractBackend(string? loggingClass) -> void
Xamarin.Google.Flogger.Backend.System.AbstractBackend.Log(Java.Util.Logging.LogRecord? record, bool wasForced) -> void
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.AbstractLogRecord(Java.Lang.RuntimeException? error, Xamarin.Google.Flogger.Backend.ILogData? data, Xamarin.Google.Flogger.Backend.Metadata? scope) -> void
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.AbstractLogRecord(Xamarin.Google.Flogger.Backend.ILogData? data, Xamarin.Google.Flogger.Backend.Metadata? scope) -> void
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.AbstractLogRecord(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.AppendFormattedMessageTo(Java.Lang.StringBuilder? buffer) -> Java.Lang.StringBuilder?
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.FormattedMessage.get -> string?
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.LogData.get -> Xamarin.Google.Flogger.Backend.ILogData?
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.MetadataProcessor.get -> Xamarin.Google.Flogger.Backend.MetadataProcessor?
Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.ToMutableLogRecord() -> Java.Util.Logging.LogRecord?
Xamarin.Google.Flogger.Backend.System.BackendFactory
Xamarin.Google.Flogger.Backend.System.BackendFactory.BackendFactory() -> void
Xamarin.Google.Flogger.Backend.System.BackendFactory.BackendFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.Clock
Xamarin.Google.Flogger.Backend.System.Clock.Clock() -> void
Xamarin.Google.Flogger.Backend.System.Clock.Clock(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.DefaultPlatform
Xamarin.Google.Flogger.Backend.System.DefaultPlatform.DefaultPlatform() -> void
Xamarin.Google.Flogger.Backend.System.DefaultPlatform.DefaultPlatform(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.LoggingContext
Xamarin.Google.Flogger.Backend.System.LoggingContext.LoggingContext() -> void
Xamarin.Google.Flogger.Backend.System.LoggingContext.LoggingContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.SimpleBackendFactory
Xamarin.Google.Flogger.Backend.System.SimpleLogRecord
Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend
Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.SimpleLoggerBackend(Java.Util.Logging.Logger? logger) -> void
Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.SimpleLoggerBackend(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.System.StackBasedCallerFinder
Xamarin.Google.Flogger.Backend.System.SystemClock
abstract Xamarin.Google.Flogger.Backend.System.BackendFactory.Create(string? loggingClassName) -> Xamarin.Google.Flogger.Backend.LoggerBackend?
abstract Xamarin.Google.Flogger.Backend.System.Clock.CurrentTimeNanos.get -> long
override Xamarin.Google.Flogger.Backend.System.AbstractBackend.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.AbstractBackend.LoggerName.get -> string?
override Xamarin.Google.Flogger.Backend.System.AbstractBackend.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.AbstractBackend.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.Message.get -> string?
override Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.Message.set -> void
override Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.BackendFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.BackendFactory.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.BackendFactory.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.Clock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.Clock.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.Clock.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.CallerFinderImpl.get -> Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder?
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.ConfigInfoImpl.get -> string?
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.GetBackendImpl(string? className) -> Xamarin.Google.Flogger.Backend.LoggerBackend?
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.DefaultPlatform.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.LoggingContext.ContextApiSingleton.get -> Xamarin.Google.Flogger.Context.ScopedLoggingContext?
override Xamarin.Google.Flogger.Backend.System.LoggingContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.LoggingContext.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.LoggingContext.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.SimpleBackendFactory.Create(string? loggingClass) -> Xamarin.Google.Flogger.Backend.LoggerBackend?
override Xamarin.Google.Flogger.Backend.System.SimpleBackendFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.SimpleLogRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.HandleError(Java.Lang.RuntimeException? error, Xamarin.Google.Flogger.Backend.ILogData? badData) -> void
override Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.Log(Xamarin.Google.Flogger.Backend.ILogData? data) -> void
override Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.System.SimpleLoggerBackend.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.System.StackBasedCallerFinder.FindLogSite(Java.Lang.Class? loggerApi, int stackFramesToSkip) -> Xamarin.Google.Flogger.LogSite?
override Xamarin.Google.Flogger.Backend.System.StackBasedCallerFinder.FindLoggingClass(Java.Lang.Class? loggerClass) -> string?
override Xamarin.Google.Flogger.Backend.System.StackBasedCallerFinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.System.SystemClock.CurrentTimeNanos.get -> long
override Xamarin.Google.Flogger.Backend.System.SystemClock.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Google.Flogger.Backend.System.AbstractBackend.IsLoggable(Java.Util.Logging.Level? lvl) -> bool
override sealed Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.GetParameters() -> Java.Lang.Object![]?
override sealed Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.SetParameters(Java.Lang.Object![]? parameters) -> void
static Xamarin.Google.Flogger.Backend.System.SimpleBackendFactory.Instance.get -> Xamarin.Google.Flogger.Backend.System.BackendFactory?
static Xamarin.Google.Flogger.Backend.System.SimpleLogRecord.Create(Xamarin.Google.Flogger.Backend.ILogData? data) -> Xamarin.Google.Flogger.Backend.System.SimpleLogRecord?
static Xamarin.Google.Flogger.Backend.System.SimpleLogRecord.Create(Xamarin.Google.Flogger.Backend.ILogData? data, Xamarin.Google.Flogger.Backend.Metadata? scope) -> Xamarin.Google.Flogger.Backend.System.SimpleLogRecord?
static Xamarin.Google.Flogger.Backend.System.SimpleLogRecord.Error(Java.Lang.RuntimeException? error, Xamarin.Google.Flogger.Backend.ILogData? data) -> Xamarin.Google.Flogger.Backend.System.SimpleLogRecord?
static Xamarin.Google.Flogger.Backend.System.SimpleLogRecord.Error(Java.Lang.RuntimeException? error, Xamarin.Google.Flogger.Backend.ILogData? data, Xamarin.Google.Flogger.Backend.Metadata? scope) -> Xamarin.Google.Flogger.Backend.System.SimpleLogRecord?
static Xamarin.Google.Flogger.Backend.System.StackBasedCallerFinder.Instance.get -> Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder?
static Xamarin.Google.Flogger.Backend.System.SystemClock.Instance.get -> Xamarin.Google.Flogger.Backend.System.SystemClock?
virtual Xamarin.Google.Flogger.Backend.System.AbstractLogRecord.LogMessageFormatter.get -> Xamarin.Google.Flogger.Backend.LogMessageFormatter?
