#nullable enable
Xamarin.Google.Flogger.AbstractLogger
Xamarin.Google.Flogger.AbstractLogger.AbstractLogger(Xamarin.Google.Flogger.Backend.LoggerBackend? backend) -> void
Xamarin.Google.Flogger.AbstractLogger.AbstractLogger(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.AbstractLogger.AtConfig() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtFine() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtFiner() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtFinest() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtInfo() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtSevere() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.AtWarning() -> Java.Lang.Object?
Xamarin.Google.Flogger.AbstractLogger.IsLoggable(Java.Util.Logging.Level? level) -> bool
Xamarin.Google.Flogger.Backend.BaseMessageFormatter
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.Args.get -> System.Collections.Generic.IList<Java.Lang.Object!>?
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.Args.set -> void
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.BaseMessageFormatter(Xamarin.Google.Flogger.Backend.TemplateContext? context, Java.Lang.Object![]? args, Java.Lang.StringBuilder? out) -> void
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.BaseMessageFormatter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.Out.get -> Java.Lang.StringBuilder?
Xamarin.Google.Flogger.Backend.BaseMessageFormatter.Out.set -> void
Xamarin.Google.Flogger.Backend.FormatChar
Xamarin.Google.Flogger.Backend.FormatChar.Char.get -> char
Xamarin.Google.Flogger.Backend.FormatChar.DefaultFormatString.get -> string?
Xamarin.Google.Flogger.Backend.FormatChar.Type.get -> Xamarin.Google.Flogger.Backend.FormatType?
Xamarin.Google.Flogger.Backend.FormatOptions
Xamarin.Google.Flogger.Backend.FormatOptions.AppendPrintfOptions(Java.Lang.StringBuilder? out) -> Java.Lang.StringBuilder?
Xamarin.Google.Flogger.Backend.FormatOptions.AreValidFor(Xamarin.Google.Flogger.Backend.FormatChar? formatChar) -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.Filter(int allowedFlags, bool allowWidth, bool allowPrecision) -> Xamarin.Google.Flogger.Backend.FormatOptions?
Xamarin.Google.Flogger.Backend.FormatOptions.Flags.get -> int
Xamarin.Google.Flogger.Backend.FormatOptions.IsDefault.get -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.Precision.get -> int
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldLeftAlign() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldPrefixPlusForPositiveValues() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldPrefixSpaceForPositiveValues() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldShowAltForm() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldShowGrouping() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldShowLeadingZeros() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.ShouldUpperCase() -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.Validate(int allowedFlags, bool allowPrecision) -> bool
Xamarin.Google.Flogger.Backend.FormatOptions.Width.get -> int
Xamarin.Google.Flogger.Backend.FormatType
Xamarin.Google.Flogger.Backend.FormatType.FormatType(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.ILogData
Xamarin.Google.Flogger.Backend.ILogData.GetArguments() -> Java.Lang.Object![]?
Xamarin.Google.Flogger.Backend.ILogData.Level.get -> Java.Util.Logging.Level?
Xamarin.Google.Flogger.Backend.ILogData.LiteralArgument.get -> Java.Lang.Object?
Xamarin.Google.Flogger.Backend.ILogData.LogSite.get -> Xamarin.Google.Flogger.LogSite?
Xamarin.Google.Flogger.Backend.ILogData.LoggerName.get -> string?
Xamarin.Google.Flogger.Backend.ILogData.Metadata.get -> Xamarin.Google.Flogger.Backend.Metadata?
Xamarin.Google.Flogger.Backend.ILogData.TemplateContext.get -> Xamarin.Google.Flogger.Backend.TemplateContext?
Xamarin.Google.Flogger.Backend.ILogData.TimestampMicros.get -> long
Xamarin.Google.Flogger.Backend.ILogData.TimestampNanos.get -> long
Xamarin.Google.Flogger.Backend.ILogData.WasForced() -> bool
Xamarin.Google.Flogger.Backend.ILogSiteFormatter
Xamarin.Google.Flogger.Backend.ILogSiteFormatter.AppendLogSite(Xamarin.Google.Flogger.LogSite? logSite, Java.Lang.StringBuilder? out) -> bool
Xamarin.Google.Flogger.Backend.KeyValueFormatter
Xamarin.Google.Flogger.Backend.KeyValueFormatter.Done() -> void
Xamarin.Google.Flogger.Backend.KeyValueFormatter.Handle(string? label, Java.Lang.Object? value) -> void
Xamarin.Google.Flogger.Backend.KeyValueFormatter.KeyValueFormatter(string? prefix, string? suffix, Java.Lang.StringBuilder? out) -> void
Xamarin.Google.Flogger.Backend.LogMessageFormatter
Xamarin.Google.Flogger.Backend.LogMessageFormatter.LogMessageFormatter() -> void
Xamarin.Google.Flogger.Backend.LogMessageFormatter.LogMessageFormatter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.LogSiteFormatters
Xamarin.Google.Flogger.Backend.LogSiteFormatters.LogSiteFormatters(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.LoggerBackend
Xamarin.Google.Flogger.Backend.LoggerBackend.LoggerBackend() -> void
Xamarin.Google.Flogger.Backend.LoggerBackend.LoggerBackend(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.LoggingException
Xamarin.Google.Flogger.Backend.LoggingException.LoggingException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.LoggingException.LoggingException(string? message) -> void
Xamarin.Google.Flogger.Backend.LoggingException.LoggingException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Flogger.Backend.MessageUtils
Xamarin.Google.Flogger.Backend.Metadata
Xamarin.Google.Flogger.Backend.Metadata.Metadata() -> void
Xamarin.Google.Flogger.Backend.Metadata.Metadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.MetadataHandler
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.AddHandler(Xamarin.Google.Flogger.MetadataKey? key, Xamarin.Google.Flogger.Backend.MetadataHandler.IValueHandler? handler) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.AddRepeatedHandler(Xamarin.Google.Flogger.MetadataKey? key, Xamarin.Google.Flogger.Backend.MetadataHandler.IRepeatedValueHandler? handler) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.Build() -> Xamarin.Google.Flogger.Backend.MetadataHandler?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.Ignoring(Java.Lang.IIterable? keys) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.Ignoring(Xamarin.Google.Flogger.MetadataKey? key, params Xamarin.Google.Flogger.MetadataKey![]? rest) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.RemoveHandlers(Xamarin.Google.Flogger.MetadataKey? key, params Xamarin.Google.Flogger.MetadataKey![]? rest) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.SetDefaultRepeatedHandler(Xamarin.Google.Flogger.Backend.MetadataHandler.IRepeatedValueHandler? defaultHandler) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
Xamarin.Google.Flogger.Backend.MetadataHandler.IRepeatedValueHandler
Xamarin.Google.Flogger.Backend.MetadataHandler.IRepeatedValueHandler.Handle(Xamarin.Google.Flogger.MetadataKey? key, Java.Util.IIterator? values, Java.Lang.Object? context) -> void
Xamarin.Google.Flogger.Backend.MetadataHandler.IValueHandler
Xamarin.Google.Flogger.Backend.MetadataHandler.IValueHandler.Handle(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value, Java.Lang.Object? context) -> void
Xamarin.Google.Flogger.Backend.MetadataHandler.MetadataHandler() -> void
Xamarin.Google.Flogger.Backend.MetadataHandler.MetadataHandler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers
Xamarin.Google.Flogger.Backend.MetadataProcessor
Xamarin.Google.Flogger.Backend.MetadataProcessor.MetadataProcessor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.Platform
Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder
Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.LogCallerFinder() -> void
Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.LogCallerFinder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.Platform.Platform() -> void
Xamarin.Google.Flogger.Backend.Platform.Platform(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Backend.PlatformProvider
Xamarin.Google.Flogger.Backend.SimpleMessageFormatter
Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.ISimpleLogHandler
Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.ISimpleLogHandler.HandleFormattedLogMessage(Java.Util.Logging.Level? level, string? message, Java.Lang.Throwable? thrown) -> void
Xamarin.Google.Flogger.Backend.TemplateContext
Xamarin.Google.Flogger.Backend.TemplateContext.Message.get -> string?
Xamarin.Google.Flogger.Backend.TemplateContext.Parser.get -> Xamarin.Google.Flogger.Parser.MessageParser?
Xamarin.Google.Flogger.Backend.TemplateContext.TemplateContext(Xamarin.Google.Flogger.Parser.MessageParser? parser, string? message) -> void
Xamarin.Google.Flogger.Context.ContextDataProvider
Xamarin.Google.Flogger.Context.ContextDataProvider.ContextDataProvider() -> void
Xamarin.Google.Flogger.Context.ContextDataProvider.ContextDataProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Context.ContextMetadata
Xamarin.Google.Flogger.Context.ContextMetadata.Builder
Xamarin.Google.Flogger.Context.ContextMetadata.Builder.Add(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Xamarin.Google.Flogger.Context.ContextMetadata.Builder?
Xamarin.Google.Flogger.Context.ContextMetadata.Builder.Build() -> Xamarin.Google.Flogger.Context.ContextMetadata?
Xamarin.Google.Flogger.Context.ContextMetadata.ContextMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Context.LogLevelMap
Xamarin.Google.Flogger.Context.LogLevelMap.Builder
Xamarin.Google.Flogger.Context.LogLevelMap.Builder.Add(Java.Util.Logging.Level? level, params Java.Lang.Class![]? classes) -> Xamarin.Google.Flogger.Context.LogLevelMap.Builder?
Xamarin.Google.Flogger.Context.LogLevelMap.Builder.Add(Java.Util.Logging.Level? level, params Java.Lang.Package![]? packages) -> Xamarin.Google.Flogger.Context.LogLevelMap.Builder?
Xamarin.Google.Flogger.Context.LogLevelMap.Builder.Build() -> Xamarin.Google.Flogger.Context.LogLevelMap?
Xamarin.Google.Flogger.Context.LogLevelMap.Builder.SetDefault(Java.Util.Logging.Level? level) -> Xamarin.Google.Flogger.Context.LogLevelMap.Builder?
Xamarin.Google.Flogger.Context.LogLevelMap.GetLevel(string? loggerName) -> Java.Util.Logging.Level?
Xamarin.Google.Flogger.Context.LogLevelMap.Merge(Xamarin.Google.Flogger.Context.LogLevelMap? other) -> Xamarin.Google.Flogger.Context.LogLevelMap?
Xamarin.Google.Flogger.Context.ScopeType
Xamarin.Google.Flogger.Context.ScopeType.CurrentScope.get -> Xamarin.Google.Flogger.LoggingScope?
Xamarin.Google.Flogger.Context.ScopedLoggingContext
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Builder() -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Call(Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.CallUnchecked(Java.Util.Concurrent.ICallable? c) -> Java.Lang.Object?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.LogLevelMap.get -> Xamarin.Google.Flogger.Context.LogLevelMap?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Metadata.get -> Xamarin.Google.Flogger.Context.ContextMetadata?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Run(Java.Lang.IRunnable? r) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Tags.get -> Xamarin.Google.Flogger.Context.Tags?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.WithLogLevelMap(Xamarin.Google.Flogger.Context.LogLevelMap? logLevelMap) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.WithMetadata(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.WithTags(Xamarin.Google.Flogger.Context.Tags? tags) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Wrap(Java.Lang.IRunnable? r) -> Java.Lang.IRunnable?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Wrap(Java.Util.Concurrent.ICallable? c) -> Java.Util.Concurrent.ICallable?
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ILoggingContextCloseable
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ILoggingContextCloseable.Close() -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.InvalidLoggingContextStateException
Xamarin.Google.Flogger.Context.ScopedLoggingContext.InvalidLoggingContextStateException.InvalidLoggingContextStateException(string? message) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.InvalidLoggingContextStateException.InvalidLoggingContextStateException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList.ScopeList(Xamarin.Google.Flogger.Context.ScopeType? key, Xamarin.Google.Flogger.LoggingScope? scope, Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList? next) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopedLoggingContext() -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopedLoggingContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Context.ScopedLoggingContexts
Xamarin.Google.Flogger.Context.Tags
Xamarin.Google.Flogger.Context.Tags.AsMap() -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.ICollection<Java.Lang.Object!>!>?
Xamarin.Google.Flogger.Context.Tags.Builder
Xamarin.Google.Flogger.Context.Tags.Builder.AddTag(string? name) -> Xamarin.Google.Flogger.Context.Tags.Builder?
Xamarin.Google.Flogger.Context.Tags.Builder.AddTag(string? name, bool value) -> Xamarin.Google.Flogger.Context.Tags.Builder?
Xamarin.Google.Flogger.Context.Tags.Builder.AddTag(string? name, double value) -> Xamarin.Google.Flogger.Context.Tags.Builder?
Xamarin.Google.Flogger.Context.Tags.Builder.AddTag(string? name, long value) -> Xamarin.Google.Flogger.Context.Tags.Builder?
Xamarin.Google.Flogger.Context.Tags.Builder.AddTag(string? name, string? value) -> Xamarin.Google.Flogger.Context.Tags.Builder?
Xamarin.Google.Flogger.Context.Tags.Builder.Build() -> Xamarin.Google.Flogger.Context.Tags?
Xamarin.Google.Flogger.Context.Tags.Builder.Builder() -> void
Xamarin.Google.Flogger.Context.Tags.IsEmpty.get -> bool
Xamarin.Google.Flogger.Context.Tags.Merge(Xamarin.Google.Flogger.Context.Tags? other) -> Xamarin.Google.Flogger.Context.Tags?
Xamarin.Google.Flogger.FluentLogger
Xamarin.Google.Flogger.FluentLogger.IApi
Xamarin.Google.Flogger.ILazyArg
Xamarin.Google.Flogger.ILazyArg.Evaluate() -> Java.Lang.Object?
Xamarin.Google.Flogger.ILogSiteKey
Xamarin.Google.Flogger.ILoggingApi
Xamarin.Google.Flogger.ILoggingApi.AtMostEvery(int n, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.Every(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.IsEnabled.get -> bool
Xamarin.Google.Flogger.ILoggingApi.Log() -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10, params Java.Lang.Object![]? rest) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, Java.Lang.Object? p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, bool p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, char p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, double p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, float p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, int p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, long p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, sbyte p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, bool p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, char p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, double p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, float p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, int p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, long p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, sbyte p2) -> void
Xamarin.Google.Flogger.ILoggingApi.Log(string? msg, short p1, short p2) -> void
Xamarin.Google.Flogger.ILoggingApi.LogVarargs(string? message, Java.Lang.Object![]? varargs) -> void
Xamarin.Google.Flogger.ILoggingApi.OnAverageEvery(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.Per(Java.Lang.Enum? key) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.Per(Java.Lang.Object? key, Xamarin.Google.Flogger.LogPerBucketingStrategy? strategy) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.Per(Xamarin.Google.Flogger.ILoggingScopeProvider? scopeProvider) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.With(Xamarin.Google.Flogger.MetadataKey? key) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.With(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.WithCause(Java.Lang.Throwable? cause) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.WithInjectedLogSite(Xamarin.Google.Flogger.LogSite? logSite) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.WithInjectedLogSite(string? internalClassName, string? methodName, int encodedLineNumber, string? sourceFilePath) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingApi.WithStackTrace(Xamarin.Google.Flogger.StackSize? size) -> Java.Lang.Object?
Xamarin.Google.Flogger.ILoggingScopeProvider
Xamarin.Google.Flogger.ILoggingScopeProvider.CurrentScope.get -> Xamarin.Google.Flogger.LoggingScope?
Xamarin.Google.Flogger.LazyArgs
Xamarin.Google.Flogger.LogContext
Xamarin.Google.Flogger.LogContext.AddMetadata(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> void
Xamarin.Google.Flogger.LogContext.AtMostEvery(int n, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.Every(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.GetArguments() -> Java.Lang.Object![]?
Xamarin.Google.Flogger.LogContext.IsEnabled.get -> bool
Xamarin.Google.Flogger.LogContext.Key
Xamarin.Google.Flogger.LogContext.Level.get -> Java.Util.Logging.Level?
Xamarin.Google.Flogger.LogContext.LiteralArgument.get -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.Log() -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, Java.Lang.Object? p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, bool p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, char p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, double p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, float p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, int p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, long p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, sbyte p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, bool p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, char p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, double p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, float p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, int p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, long p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, sbyte p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? message, short p1, short p2) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10) -> void
Xamarin.Google.Flogger.LogContext.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10, params Java.Lang.Object![]? rest) -> void
Xamarin.Google.Flogger.LogContext.LogContext(Java.Util.Logging.Level? level, bool isForced) -> void
Xamarin.Google.Flogger.LogContext.LogContext(Java.Util.Logging.Level? level, bool isForced, long timestampNanos) -> void
Xamarin.Google.Flogger.LogContext.LogContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LogContext.LogSite.get -> Xamarin.Google.Flogger.LogSite?
Xamarin.Google.Flogger.LogContext.LogVarargs(string? message, Java.Lang.Object![]? params) -> void
Xamarin.Google.Flogger.LogContext.LoggerName.get -> string?
Xamarin.Google.Flogger.LogContext.Metadata.get -> Xamarin.Google.Flogger.Backend.Metadata?
Xamarin.Google.Flogger.LogContext.OnAverageEvery(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.Per(Java.Lang.Enum? key) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.RemoveMetadata(Xamarin.Google.Flogger.MetadataKey? key) -> void
Xamarin.Google.Flogger.LogContext.TemplateContext.get -> Xamarin.Google.Flogger.Backend.TemplateContext?
Xamarin.Google.Flogger.LogContext.TimestampMicros.get -> long
Xamarin.Google.Flogger.LogContext.TimestampNanos.get -> long
Xamarin.Google.Flogger.LogContext.UpdateRateLimiterStatus(Xamarin.Google.Flogger.RateLimitStatus? status) -> bool
Xamarin.Google.Flogger.LogContext.WasForced() -> bool
Xamarin.Google.Flogger.LogContext.With(Xamarin.Google.Flogger.MetadataKey? key) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.With(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.WithCause(Java.Lang.Throwable? cause) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.WithInjectedLogSite(Xamarin.Google.Flogger.LogSite? logSite) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogContext.WithInjectedLogSite(string? internalClassName, string? methodName, int encodedLineNumber, string? sourceFileName) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogPerBucketingStrategy
Xamarin.Google.Flogger.LogPerBucketingStrategy.LogPerBucketingStrategy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LogPerBucketingStrategy.LogPerBucketingStrategy(string? name) -> void
Xamarin.Google.Flogger.LogSite
Xamarin.Google.Flogger.LogSite.LogSite() -> void
Xamarin.Google.Flogger.LogSite.LogSite(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LogSiteMap
Xamarin.Google.Flogger.LogSiteMap.Get(Xamarin.Google.Flogger.ILogSiteKey? key, Xamarin.Google.Flogger.Backend.Metadata? metadata) -> Java.Lang.Object?
Xamarin.Google.Flogger.LogSiteMap.LogSiteMap() -> void
Xamarin.Google.Flogger.LogSiteMap.LogSiteMap(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LogSiteStackTrace
Xamarin.Google.Flogger.LogSites
Xamarin.Google.Flogger.LoggingApiNoOp
Xamarin.Google.Flogger.LoggingApiNoOp.AtMostEvery(int n, Java.Util.Concurrent.TimeUnit? unit) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.Every(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.IsEnabled.get -> bool
Xamarin.Google.Flogger.LoggingApiNoOp.Log() -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, Java.Lang.Object? p2, Java.Lang.Object? p3, Java.Lang.Object? p4, Java.Lang.Object? p5, Java.Lang.Object? p6, Java.Lang.Object? p7, Java.Lang.Object? p8, Java.Lang.Object? p9, Java.Lang.Object? p10, params Java.Lang.Object![]? rest) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, Java.Lang.Object? p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, bool p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, char p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, double p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, float p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, int p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, long p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, sbyte p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, Java.Lang.Object? p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, bool p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, char p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, double p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, float p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, int p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, long p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, sbyte p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.Log(string? msg, short p1, short p2) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.LogVarargs(string? msg, Java.Lang.Object![]? params) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.LoggingApiNoOp() -> void
Xamarin.Google.Flogger.LoggingApiNoOp.LoggingApiNoOp(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LoggingApiNoOp.NoOp() -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.OnAverageEvery(int n) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.With(Xamarin.Google.Flogger.MetadataKey? key) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.With(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingApiNoOp.WithCause(Java.Lang.Throwable? cause) -> Java.Lang.Object?
Xamarin.Google.Flogger.LoggingScope
Xamarin.Google.Flogger.LoggingScope.LoggingScope(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.LoggingScope.LoggingScope(string? label) -> void
Xamarin.Google.Flogger.MetadataKey
Xamarin.Google.Flogger.MetadataKey.BloomFilterMask.get -> long
Xamarin.Google.Flogger.MetadataKey.CanRepeat() -> bool
Xamarin.Google.Flogger.MetadataKey.Cast(Java.Lang.Object? value) -> Java.Lang.Object?
Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler
Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler.Handle(string? key, Java.Lang.Object? value) -> void
Xamarin.Google.Flogger.MetadataKey.Label.get -> string?
Xamarin.Google.Flogger.MetadataKey.MetadataKey(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.MetadataKey.MetadataKey(string? label, Java.Lang.Class? clazz, bool canRepeat) -> void
Xamarin.Google.Flogger.MetadataKey.SafeEmit(Java.Lang.Object? value, Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler? kvh) -> void
Xamarin.Google.Flogger.MetadataKey.SafeEmitRepeated(Java.Util.IIterator? values, Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler? kvh) -> void
Xamarin.Google.Flogger.Parameter.BraceStyleParameter
Xamarin.Google.Flogger.Parameter.BraceStyleParameter.BraceStyleParameter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parameter.DateTimeFormat
Xamarin.Google.Flogger.Parameter.DateTimeFormat.Char.get -> char
Xamarin.Google.Flogger.Parameter.DateTimeParameter
Xamarin.Google.Flogger.Parameter.IParameterVisitor
Xamarin.Google.Flogger.Parameter.IParameterVisitor.Visit(Java.Lang.Object? value, Xamarin.Google.Flogger.Backend.FormatChar? format, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> void
Xamarin.Google.Flogger.Parameter.IParameterVisitor.VisitDateTime(Java.Lang.Object? value, Xamarin.Google.Flogger.Parameter.DateTimeFormat? format, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> void
Xamarin.Google.Flogger.Parameter.IParameterVisitor.VisitMissing() -> void
Xamarin.Google.Flogger.Parameter.IParameterVisitor.VisitNull() -> void
Xamarin.Google.Flogger.Parameter.IParameterVisitor.VisitPreformatted(Java.Lang.Object? value, string? formatted) -> void
Xamarin.Google.Flogger.Parameter.Parameter
Xamarin.Google.Flogger.Parameter.Parameter.Accept(Xamarin.Google.Flogger.Parameter.IParameterVisitor? visitor, Java.Lang.Object![]? args) -> void
Xamarin.Google.Flogger.Parameter.Parameter.FormatOptions.get -> Xamarin.Google.Flogger.Backend.FormatOptions?
Xamarin.Google.Flogger.Parameter.Parameter.Index.get -> int
Xamarin.Google.Flogger.Parameter.Parameter.Parameter(Xamarin.Google.Flogger.Backend.FormatOptions? options, int index) -> void
Xamarin.Google.Flogger.Parameter.Parameter.Parameter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parameter.SimpleParameter
Xamarin.Google.Flogger.Parser.BraceStyleMessageParser
Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.BraceStyleMessageParser() -> void
Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.BraceStyleMessageParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser
Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.DefaultBraceStyleMessageParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser
Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.DefaultPrintfMessageParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parser.MessageBuilder
Xamarin.Google.Flogger.Parser.MessageBuilder.AddParameter(int termStart, int termEnd, Xamarin.Google.Flogger.Parameter.Parameter? param) -> void
Xamarin.Google.Flogger.Parser.MessageBuilder.Build() -> Java.Lang.Object?
Xamarin.Google.Flogger.Parser.MessageBuilder.ExpectedArgumentCount.get -> int
Xamarin.Google.Flogger.Parser.MessageBuilder.Message.get -> string?
Xamarin.Google.Flogger.Parser.MessageBuilder.MessageBuilder(Xamarin.Google.Flogger.Backend.TemplateContext? context) -> void
Xamarin.Google.Flogger.Parser.MessageBuilder.MessageBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parser.MessageBuilder.Parser.get -> Xamarin.Google.Flogger.Parser.MessageParser?
Xamarin.Google.Flogger.Parser.MessageParser
Xamarin.Google.Flogger.Parser.MessageParser.MessageParser() -> void
Xamarin.Google.Flogger.Parser.MessageParser.MessageParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Parser.ParseException
Xamarin.Google.Flogger.Parser.PrintfMessageParser
Xamarin.Google.Flogger.Parser.PrintfMessageParser.PrintfMessageParser() -> void
Xamarin.Google.Flogger.Parser.PrintfMessageParser.PrintfMessageParser(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.RateLimitStatus
Xamarin.Google.Flogger.RateLimitStatus.RateLimitStatus() -> void
Xamarin.Google.Flogger.RateLimitStatus.RateLimitStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.StackSize
Xamarin.Google.Flogger.Util.CallerFinder
Xamarin.Google.Flogger.Util.Checks
Xamarin.Google.Flogger.Util.Checks.Checks(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Flogger.Util.RecursionDepth
Xamarin.Google.Flogger.Util.RecursionDepth.Close() -> void
Xamarin.Google.Flogger.Util.RecursionDepth.RecursionDepth() -> void
Xamarin.Google.Flogger.Util.RecursionDepth.Value.get -> int
Xamarin.Google.Flogger.Util.StaticMethodCaller
abstract Xamarin.Google.Flogger.AbstractLogger.At(Java.Util.Logging.Level? level) -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.Backend.FormatType.CanFormat(Java.Lang.Object? arg) -> bool
abstract Xamarin.Google.Flogger.Backend.LogMessageFormatter.Append(Xamarin.Google.Flogger.Backend.ILogData? logData, Xamarin.Google.Flogger.Backend.MetadataProcessor? metadata, Java.Lang.StringBuilder? buffer) -> Java.Lang.StringBuilder?
abstract Xamarin.Google.Flogger.Backend.LogSiteFormatters.AppendLogSite(Xamarin.Google.Flogger.LogSite? logSite, Java.Lang.StringBuilder? out) -> bool
abstract Xamarin.Google.Flogger.Backend.LoggerBackend.HandleError(Java.Lang.RuntimeException? error, Xamarin.Google.Flogger.Backend.ILogData? badData) -> void
abstract Xamarin.Google.Flogger.Backend.LoggerBackend.IsLoggable(Java.Util.Logging.Level? lvl) -> bool
abstract Xamarin.Google.Flogger.Backend.LoggerBackend.Log(Xamarin.Google.Flogger.Backend.ILogData? data) -> void
abstract Xamarin.Google.Flogger.Backend.LoggerBackend.LoggerName.get -> string?
abstract Xamarin.Google.Flogger.Backend.Metadata.FindValue(Xamarin.Google.Flogger.MetadataKey? key) -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.Backend.Metadata.GetKey(int n) -> Xamarin.Google.Flogger.MetadataKey?
abstract Xamarin.Google.Flogger.Backend.Metadata.GetValue(int n) -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.Backend.Metadata.Size() -> int
abstract Xamarin.Google.Flogger.Backend.MetadataHandler.Handle(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value, Java.Lang.Object? context) -> void
abstract Xamarin.Google.Flogger.Backend.MetadataProcessor.GetSingleValue(Xamarin.Google.Flogger.MetadataKey? key) -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.Backend.MetadataProcessor.Handle(Xamarin.Google.Flogger.MetadataKey? key, Xamarin.Google.Flogger.Backend.MetadataHandler? handler, Java.Lang.Object? context) -> void
abstract Xamarin.Google.Flogger.Backend.MetadataProcessor.KeyCount() -> int
abstract Xamarin.Google.Flogger.Backend.MetadataProcessor.KeySet() -> System.Collections.Generic.ICollection<Xamarin.Google.Flogger.MetadataKey!>?
abstract Xamarin.Google.Flogger.Backend.MetadataProcessor.Process(Xamarin.Google.Flogger.Backend.MetadataHandler? handler, Java.Lang.Object? context) -> void
abstract Xamarin.Google.Flogger.Backend.Platform.CallerFinderImpl.get -> Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder?
abstract Xamarin.Google.Flogger.Backend.Platform.ConfigInfoImpl.get -> string?
abstract Xamarin.Google.Flogger.Backend.Platform.GetBackendImpl(string? className) -> Xamarin.Google.Flogger.Backend.LoggerBackend?
abstract Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.FindLogSite(Java.Lang.Class? loggerApi, int stackFramesToSkip) -> Xamarin.Google.Flogger.LogSite?
abstract Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.FindLoggingClass(Java.Lang.Class? loggerClass) -> string?
abstract Xamarin.Google.Flogger.Context.ContextDataProvider.ContextApiSingleton.get -> Xamarin.Google.Flogger.Context.ScopedLoggingContext?
abstract Xamarin.Google.Flogger.Context.ContextMetadata.Concatenate(Xamarin.Google.Flogger.Context.ContextMetadata? metadata) -> Xamarin.Google.Flogger.Context.ContextMetadata?
abstract Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.Install() -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.ILoggingContextCloseable?
abstract Xamarin.Google.Flogger.Context.ScopedLoggingContext.NewContext() -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
abstract Xamarin.Google.Flogger.Context.ScopedLoggingContext.NewContext(Xamarin.Google.Flogger.Context.ScopeType? scopeType) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
abstract Xamarin.Google.Flogger.LogContext.Api() -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.LogContext.MessageParser.get -> Xamarin.Google.Flogger.Parser.MessageParser?
abstract Xamarin.Google.Flogger.LogContext.NoOp() -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.LogContext.RawLogger.get -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.LogPerBucketingStrategy.Apply(Java.Lang.Object? key) -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.LogSite.ClassName.get -> string?
abstract Xamarin.Google.Flogger.LogSite.FileName.get -> string?
abstract Xamarin.Google.Flogger.LogSite.LineNumber.get -> int
abstract Xamarin.Google.Flogger.LogSite.MethodName.get -> string?
abstract Xamarin.Google.Flogger.LogSiteMap.InitialValue() -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.LoggingScope.OnClose(Java.Lang.IRunnable? removalHook) -> void
abstract Xamarin.Google.Flogger.LoggingScope.Specialize(Xamarin.Google.Flogger.ILogSiteKey? key) -> Xamarin.Google.Flogger.ILogSiteKey?
abstract Xamarin.Google.Flogger.Parameter.Parameter.Accept(Xamarin.Google.Flogger.Parameter.IParameterVisitor? visitor, Java.Lang.Object? value) -> void
abstract Xamarin.Google.Flogger.Parameter.Parameter.Format.get -> string?
abstract Xamarin.Google.Flogger.Parser.MessageBuilder.AddParameterImpl(int termStart, int termEnd, Xamarin.Google.Flogger.Parameter.Parameter? param) -> void
abstract Xamarin.Google.Flogger.Parser.MessageBuilder.BuildImpl() -> Java.Lang.Object?
abstract Xamarin.Google.Flogger.Parser.MessageParser.ParseImpl(Xamarin.Google.Flogger.Parser.MessageBuilder? builder) -> void
abstract Xamarin.Google.Flogger.Parser.MessageParser.Unescape(Java.Lang.StringBuilder? out, string? message, int start, int end) -> void
abstract Xamarin.Google.Flogger.RateLimitStatus.Reset() -> void
const Xamarin.Google.Flogger.Backend.FormatOptions.AllFlags = 255 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagLeftAlign = 32 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagPrefixPlusForPositiveValues = 8 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagPrefixSpaceForPositiveValues = 1 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagShowAltForm = 2 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagShowGrouping = 16 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagShowLeadingZeros = 64 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagUpperCase = 128 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.FlagUseParensForNegativeValues = 4 -> int
const Xamarin.Google.Flogger.Backend.FormatOptions.Unset = -1 -> int
const Xamarin.Google.Flogger.LogSite.UnknownLine = 0 -> int
const Xamarin.Google.Flogger.Parser.MessageParser.MaxArgCount = 1000000 -> int
override Xamarin.Google.Flogger.AbstractLogger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.AbstractLogger.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.AbstractLogger.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.BaseMessageFormatter.AddParameterImpl(int termStart, int termEnd, Xamarin.Google.Flogger.Parameter.Parameter? param) -> void
override Xamarin.Google.Flogger.Backend.BaseMessageFormatter.BuildImpl() -> Java.Lang.Object?
override Xamarin.Google.Flogger.Backend.BaseMessageFormatter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.BaseMessageFormatter.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.BaseMessageFormatter.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.FormatChar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.FormatOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.FormatType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.FormatType.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.FormatType.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.KeyValueFormatter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.LogMessageFormatter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.LogMessageFormatter.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.LogMessageFormatter.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.LogSiteFormatters.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.LogSiteFormatters.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.LogSiteFormatters.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.LoggerBackend.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.LoggerBackend.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.LoggerBackend.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.LoggingException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.LoggingException.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.LoggingException.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.MessageUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.Metadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.Metadata.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.Metadata.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.MetadataHandler.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.MetadataHandler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.MetadataHandler.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.MetadataHandler.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.MetadataProcessor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.MetadataProcessor.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.MetadataProcessor.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.Platform.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.Platform.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Backend.Platform.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Backend.PlatformProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Backend.TemplateContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ContextDataProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ContextDataProvider.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Context.ContextDataProvider.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Context.ContextMetadata.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ContextMetadata.GetKey(int n) -> Xamarin.Google.Flogger.MetadataKey?
override Xamarin.Google.Flogger.Context.ContextMetadata.GetValue(int n) -> Java.Lang.Object?
override Xamarin.Google.Flogger.Context.ContextMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ContextMetadata.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Context.ContextMetadata.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Context.LogLevelMap.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.LogLevelMap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopeType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.InvalidLoggingContextStateException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Context.ScopedLoggingContext.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Context.ScopedLoggingContexts.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.Tags.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Context.Tags.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.FluentLogger.At(Java.Util.Logging.Level? level) -> Java.Lang.Object?
override Xamarin.Google.Flogger.FluentLogger.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LazyArgs.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogContext.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogContext.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LogContext.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.LogPerBucketingStrategy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogPerBucketingStrategy.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LogPerBucketingStrategy.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.LogSite.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogSite.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LogSite.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.LogSiteMap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogSiteMap.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LogSiteMap.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.LogSiteStackTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LogSites.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LoggingApiNoOp.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LoggingApiNoOp.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LoggingApiNoOp.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.LoggingScope.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.LoggingScope.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.LoggingScope.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.MetadataKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.MetadataKey.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.MetadataKey.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parameter.BraceStyleParameter.Accept(Xamarin.Google.Flogger.Parameter.IParameterVisitor? visitor, Java.Lang.Object? value) -> void
override Xamarin.Google.Flogger.Parameter.BraceStyleParameter.Format.get -> string?
override Xamarin.Google.Flogger.Parameter.BraceStyleParameter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parameter.BraceStyleParameter.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parameter.BraceStyleParameter.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parameter.DateTimeFormat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parameter.DateTimeParameter.Format.get -> string?
override Xamarin.Google.Flogger.Parameter.DateTimeParameter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parameter.Parameter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parameter.Parameter.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parameter.Parameter.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parameter.SimpleParameter.Format.get -> string?
override Xamarin.Google.Flogger.Parameter.SimpleParameter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parser.MessageBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.MessageBuilder.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.MessageBuilder.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parser.MessageParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.MessageParser.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.MessageParser.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Parser.ParseException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.PrintfMessageParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Parser.PrintfMessageParser.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Parser.PrintfMessageParser.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.RateLimitStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.RateLimitStatus.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.RateLimitStatus.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.StackSize.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Util.CallerFinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Util.Checks.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Util.Checks.ThresholdClass.get -> nint
override Xamarin.Google.Flogger.Util.Checks.ThresholdType.get -> System.Type!
override Xamarin.Google.Flogger.Util.RecursionDepth.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Flogger.Util.StaticMethodCaller.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Google.Flogger.LogPerBucketingStrategy.ToString() -> string?
override sealed Xamarin.Google.Flogger.LogSite.ToString() -> string?
override sealed Xamarin.Google.Flogger.LoggingScope.ToString() -> string?
override sealed Xamarin.Google.Flogger.MetadataKey.Equals(Java.Lang.Object? obj) -> bool
override sealed Xamarin.Google.Flogger.MetadataKey.GetHashCode() -> int
override sealed Xamarin.Google.Flogger.MetadataKey.ToString() -> string?
override sealed Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.ParseImpl(Xamarin.Google.Flogger.Parser.MessageBuilder? builder) -> void
override sealed Xamarin.Google.Flogger.Parser.BraceStyleMessageParser.Unescape(Java.Lang.StringBuilder? out, string? message, int start, int end) -> void
override sealed Xamarin.Google.Flogger.Parser.PrintfMessageParser.ParseImpl(Xamarin.Google.Flogger.Parser.MessageBuilder? builder) -> void
override sealed Xamarin.Google.Flogger.Parser.PrintfMessageParser.Unescape(Java.Lang.StringBuilder? out, string? message, int start, int end) -> void
static Xamarin.Google.Flogger.Backend.BaseMessageFormatter.AppendFormattedMessage(Xamarin.Google.Flogger.Backend.ILogData? data, Java.Lang.StringBuilder? out) -> Java.Lang.StringBuilder?
static Xamarin.Google.Flogger.Backend.FormatChar.Boolean.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Decimal.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Exponent.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.ExponentHex.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Float.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.General.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Hex.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Octal.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Of(char c) -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.String.get -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.ValueOf(string? name) -> Xamarin.Google.Flogger.Backend.FormatChar?
static Xamarin.Google.Flogger.Backend.FormatChar.Values() -> Xamarin.Google.Flogger.Backend.FormatChar![]?
static Xamarin.Google.Flogger.Backend.FormatOptions.Default.get -> Xamarin.Google.Flogger.Backend.FormatOptions?
static Xamarin.Google.Flogger.Backend.FormatOptions.Of(int flags, int width, int precision) -> Xamarin.Google.Flogger.Backend.FormatOptions?
static Xamarin.Google.Flogger.Backend.FormatOptions.Parse(string? message, int pos, int end, bool isUpperCase) -> Xamarin.Google.Flogger.Backend.FormatOptions?
static Xamarin.Google.Flogger.Backend.FormatType.Boolean.get -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.Character.get -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.Float.get -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.General.get -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.Integral.get -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.ValueOf(string? name) -> Xamarin.Google.Flogger.Backend.FormatType?
static Xamarin.Google.Flogger.Backend.FormatType.Values() -> Xamarin.Google.Flogger.Backend.FormatType![]?
static Xamarin.Google.Flogger.Backend.KeyValueFormatter.AppendJsonFormattedKeyAndValue(string? label, Java.Lang.Object? value, Java.Lang.StringBuilder? out) -> void
static Xamarin.Google.Flogger.Backend.LogSiteFormatters.Default.get -> Xamarin.Google.Flogger.Backend.LogSiteFormatters?
static Xamarin.Google.Flogger.Backend.LogSiteFormatters.NoOp.get -> Xamarin.Google.Flogger.Backend.LogSiteFormatters?
static Xamarin.Google.Flogger.Backend.LogSiteFormatters.SimpleClassname.get -> Xamarin.Google.Flogger.Backend.LogSiteFormatters?
static Xamarin.Google.Flogger.Backend.LogSiteFormatters.ValueOf(string? name) -> Xamarin.Google.Flogger.Backend.LogSiteFormatters?
static Xamarin.Google.Flogger.Backend.LogSiteFormatters.Values() -> Xamarin.Google.Flogger.Backend.LogSiteFormatters![]?
static Xamarin.Google.Flogger.Backend.MessageUtils.AppendLogSite(Xamarin.Google.Flogger.LogSite? logSite, Java.Lang.StringBuilder? out) -> bool
static Xamarin.Google.Flogger.Backend.MessageUtils.SafeFormatTo(Java.Util.IFormattable? value, Java.Lang.StringBuilder? out, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> void
static Xamarin.Google.Flogger.Backend.MessageUtils.SafeToString(Java.Lang.Object? value) -> string?
static Xamarin.Google.Flogger.Backend.Metadata.Empty() -> Xamarin.Google.Flogger.Backend.Metadata?
static Xamarin.Google.Flogger.Backend.MetadataHandler.InvokeBuilder(Xamarin.Google.Flogger.Backend.MetadataHandler.IValueHandler? defaultHandler) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
static Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers.DefaultRepeatedValueHandler.get -> Xamarin.Google.Flogger.Backend.MetadataHandler.IRepeatedValueHandler?
static Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers.DefaultValueHandler.get -> Xamarin.Google.Flogger.Backend.MetadataHandler.IValueHandler?
static Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers.GetDefaultBuilder(System.Collections.Generic.ICollection<Xamarin.Google.Flogger.MetadataKey!>? ignored) -> Xamarin.Google.Flogger.Backend.MetadataHandler.Builder?
static Xamarin.Google.Flogger.Backend.MetadataKeyValueHandlers.GetDefaultHandler(System.Collections.Generic.ICollection<Xamarin.Google.Flogger.MetadataKey!>? ignored) -> Xamarin.Google.Flogger.Backend.MetadataHandler?
static Xamarin.Google.Flogger.Backend.MetadataProcessor.ForScopeAndLogSite(Xamarin.Google.Flogger.Backend.Metadata? scopeMetadata, Xamarin.Google.Flogger.Backend.Metadata? logMetadata) -> Xamarin.Google.Flogger.Backend.MetadataProcessor?
static Xamarin.Google.Flogger.Backend.Platform.CallerFinder.get -> Xamarin.Google.Flogger.Backend.Platform.LogCallerFinder?
static Xamarin.Google.Flogger.Backend.Platform.ConfigInfo.get -> string?
static Xamarin.Google.Flogger.Backend.Platform.ContextDataProvider.get -> Xamarin.Google.Flogger.Context.ContextDataProvider?
static Xamarin.Google.Flogger.Backend.Platform.CurrentRecursionDepth.get -> int
static Xamarin.Google.Flogger.Backend.Platform.CurrentTimeNanos.get -> long
static Xamarin.Google.Flogger.Backend.Platform.GetBackend(string? className) -> Xamarin.Google.Flogger.Backend.LoggerBackend?
static Xamarin.Google.Flogger.Backend.Platform.InjectedMetadata.get -> Xamarin.Google.Flogger.Backend.Metadata?
static Xamarin.Google.Flogger.Backend.Platform.InjectedTags.get -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.Backend.Platform.ShouldForceLogging(string? loggerName, Java.Util.Logging.Level? level, bool isEnabled) -> bool
static Xamarin.Google.Flogger.Backend.PlatformProvider.Platform.get -> Xamarin.Google.Flogger.Backend.Platform?
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.AppendContext(Xamarin.Google.Flogger.Backend.MetadataProcessor? metadataProcessor, Xamarin.Google.Flogger.Backend.MetadataHandler? metadataHandler, Java.Lang.StringBuilder? buffer) -> Java.Lang.StringBuilder?
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.DefaultFormatter.get -> Xamarin.Google.Flogger.Backend.LogMessageFormatter?
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.Format(Xamarin.Google.Flogger.Backend.ILogData? logData, Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.ISimpleLogHandler? receiver) -> void
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.GetLiteralLogMessage(Xamarin.Google.Flogger.Backend.ILogData? logData) -> string?
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.GetSimpleFormatterIgnoring(params Xamarin.Google.Flogger.MetadataKey![]? extraIgnoredKeys) -> Xamarin.Google.Flogger.Backend.LogMessageFormatter?
static Xamarin.Google.Flogger.Backend.SimpleMessageFormatter.MustBeFormatted(Xamarin.Google.Flogger.Backend.ILogData? logData, Xamarin.Google.Flogger.Backend.MetadataProcessor? metadata, System.Collections.Generic.ICollection<Xamarin.Google.Flogger.MetadataKey!>? keysToIgnore) -> bool
static Xamarin.Google.Flogger.Context.ContextDataProvider.Instance.get -> Xamarin.Google.Flogger.Context.ContextDataProvider?
static Xamarin.Google.Flogger.Context.ContextDataProvider.NoOpProvider.get -> Xamarin.Google.Flogger.Context.ContextDataProvider?
static Xamarin.Google.Flogger.Context.ContextMetadata.InvokeBuilder() -> Xamarin.Google.Flogger.Context.ContextMetadata.Builder?
static Xamarin.Google.Flogger.Context.ContextMetadata.None() -> Xamarin.Google.Flogger.Context.ContextMetadata?
static Xamarin.Google.Flogger.Context.ContextMetadata.Singleton(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> Xamarin.Google.Flogger.Context.ContextMetadata?
static Xamarin.Google.Flogger.Context.LogLevelMap.Create(Java.Util.Logging.Level? level) -> Xamarin.Google.Flogger.Context.LogLevelMap?
static Xamarin.Google.Flogger.Context.LogLevelMap.Create(System.Collections.Generic.IDictionary<string!, Java.Util.Logging.Level!>? map) -> Xamarin.Google.Flogger.Context.LogLevelMap?
static Xamarin.Google.Flogger.Context.LogLevelMap.Create(System.Collections.Generic.IDictionary<string!, Java.Util.Logging.Level!>? map, Java.Util.Logging.Level? defaultLevel) -> Xamarin.Google.Flogger.Context.LogLevelMap?
static Xamarin.Google.Flogger.Context.LogLevelMap.InvokeBuilder() -> Xamarin.Google.Flogger.Context.LogLevelMap.Builder?
static Xamarin.Google.Flogger.Context.ScopeType.Create(string? name) -> Xamarin.Google.Flogger.Context.ScopeType?
static Xamarin.Google.Flogger.Context.ScopeType.Request.get -> Xamarin.Google.Flogger.Context.ScopeType?
static Xamarin.Google.Flogger.Context.ScopedLoggingContext.Instance.get -> Xamarin.Google.Flogger.Context.ScopedLoggingContext?
static Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList.AddScope(Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList? list, Xamarin.Google.Flogger.Context.ScopeType? type) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList?
static Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList.Lookup(Xamarin.Google.Flogger.Context.ScopedLoggingContext.ScopeList? list, Xamarin.Google.Flogger.Context.ScopeType? type) -> Xamarin.Google.Flogger.LoggingScope?
static Xamarin.Google.Flogger.Context.ScopedLoggingContexts.AddMetadata(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> bool
static Xamarin.Google.Flogger.Context.ScopedLoggingContexts.AddTags(Xamarin.Google.Flogger.Context.Tags? tags) -> bool
static Xamarin.Google.Flogger.Context.ScopedLoggingContexts.ApplyLogLevelMap(Xamarin.Google.Flogger.Context.LogLevelMap? logLevelMap) -> bool
static Xamarin.Google.Flogger.Context.ScopedLoggingContexts.NewContext() -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
static Xamarin.Google.Flogger.Context.ScopedLoggingContexts.NewContext(Xamarin.Google.Flogger.Context.ScopeType? scopeType) -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
static Xamarin.Google.Flogger.Context.Tags.Empty() -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.Context.Tags.InvokeBuilder() -> Xamarin.Google.Flogger.Context.Tags.Builder?
static Xamarin.Google.Flogger.Context.Tags.Of(string? name, bool value) -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.Context.Tags.Of(string? name, double value) -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.Context.Tags.Of(string? name, long value) -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.Context.Tags.Of(string? name, string? value) -> Xamarin.Google.Flogger.Context.Tags?
static Xamarin.Google.Flogger.FluentLogger.ForEnclosingClass() -> Xamarin.Google.Flogger.FluentLogger?
static Xamarin.Google.Flogger.LazyArgs.Lazy(Xamarin.Google.Flogger.ILazyArg? lambdaOrMethodReference) -> Xamarin.Google.Flogger.ILazyArg?
static Xamarin.Google.Flogger.LogContext.Key.ContextStackSize.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.LogAtMostEvery.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.LogCause.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.LogEveryN.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.LogSampleEveryN.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.LogSiteGroupingKey.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.SkippedLogCount.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.Tags.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogContext.Key.WasForced.get -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.LogPerBucketingStrategy.ByClass() -> Xamarin.Google.Flogger.LogPerBucketingStrategy?
static Xamarin.Google.Flogger.LogPerBucketingStrategy.ByClassName() -> Xamarin.Google.Flogger.LogPerBucketingStrategy?
static Xamarin.Google.Flogger.LogPerBucketingStrategy.ByHashCode(int maxBuckets) -> Xamarin.Google.Flogger.LogPerBucketingStrategy?
static Xamarin.Google.Flogger.LogPerBucketingStrategy.ForKnownKeys(Java.Lang.IIterable? knownKeys) -> Xamarin.Google.Flogger.LogPerBucketingStrategy?
static Xamarin.Google.Flogger.LogPerBucketingStrategy.KnownBounded() -> Xamarin.Google.Flogger.LogPerBucketingStrategy?
static Xamarin.Google.Flogger.LogSite.InjectedLogSite(string? internalClassName, string? methodName, int encodedLineNumber, string? sourceFilePath) -> Xamarin.Google.Flogger.LogSite?
static Xamarin.Google.Flogger.LogSite.Invalid.get -> Xamarin.Google.Flogger.LogSite?
static Xamarin.Google.Flogger.LogSites.CallerOf(Java.Lang.Class? loggingApi) -> Xamarin.Google.Flogger.LogSite?
static Xamarin.Google.Flogger.LogSites.LogSite() -> Xamarin.Google.Flogger.LogSite?
static Xamarin.Google.Flogger.LogSites.LogSiteFrom(Java.Lang.StackTraceElement? e) -> Xamarin.Google.Flogger.LogSite?
static Xamarin.Google.Flogger.LoggingScope.Create(string? label) -> Xamarin.Google.Flogger.LoggingScope?
static Xamarin.Google.Flogger.MetadataKey.Repeated(string? label, Java.Lang.Class? clazz) -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.MetadataKey.Single(string? label, Java.Lang.Class? clazz) -> Xamarin.Google.Flogger.MetadataKey?
static Xamarin.Google.Flogger.Parameter.BraceStyleParameter.Of(int index) -> Xamarin.Google.Flogger.Parameter.BraceStyleParameter?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateCenturyPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateDayFull.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateDayOfMonth.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateDayOfMonthPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateDayOfYearPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateDayShort.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateMonthFull.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateMonthPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateMonthShort.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateMonthShortAlt.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateYearOfCenturyPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DateYearPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeFull.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeHoursMinutes.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeHoursMinutesSeconds.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeHoursMinutesSeconds12h.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeMonthDayYear.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.DatetimeYearMonthDay.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.Of(char c) -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeAmPm.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeEpochMillis.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeEpochSeconds.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeHour12h.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeHour12hPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeHourOfDay.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeHourOfDayPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeMillisOfSecondPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeMinuteOfHourPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeNanosOfSecondPadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeSecondsOfMinutePadded.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeTzNumeric.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.TimeTzShort.get -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.ValueOf(string? name) -> Xamarin.Google.Flogger.Parameter.DateTimeFormat?
static Xamarin.Google.Flogger.Parameter.DateTimeFormat.Values() -> Xamarin.Google.Flogger.Parameter.DateTimeFormat![]?
static Xamarin.Google.Flogger.Parameter.DateTimeParameter.Of(Xamarin.Google.Flogger.Parameter.DateTimeFormat? format, Xamarin.Google.Flogger.Backend.FormatOptions? options, int index) -> Xamarin.Google.Flogger.Parameter.Parameter?
static Xamarin.Google.Flogger.Parameter.SimpleParameter.Of(int index, Xamarin.Google.Flogger.Backend.FormatChar? formatChar, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> Xamarin.Google.Flogger.Parameter.SimpleParameter?
static Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.Instance.get -> Xamarin.Google.Flogger.Parser.BraceStyleMessageParser?
static Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.Instance.get -> Xamarin.Google.Flogger.Parser.PrintfMessageParser?
static Xamarin.Google.Flogger.Parser.ParseException.AtPosition(string? errorMessage, string? logMessage, int position) -> Xamarin.Google.Flogger.Parser.ParseException?
static Xamarin.Google.Flogger.Parser.ParseException.Generic(string? errorMessage, string? logMessage) -> Xamarin.Google.Flogger.Parser.ParseException?
static Xamarin.Google.Flogger.Parser.ParseException.WithBounds(string? errorMessage, string? logMessage, int start, int end) -> Xamarin.Google.Flogger.Parser.ParseException?
static Xamarin.Google.Flogger.Parser.ParseException.WithStartPosition(string? errorMessage, string? logMessage, int start) -> Xamarin.Google.Flogger.Parser.ParseException?
static Xamarin.Google.Flogger.RateLimitStatus.Allow.get -> Xamarin.Google.Flogger.RateLimitStatus?
static Xamarin.Google.Flogger.RateLimitStatus.Disallow.get -> Xamarin.Google.Flogger.RateLimitStatus?
static Xamarin.Google.Flogger.StackSize.Full.get -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.Large.get -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.Medium.get -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.None.get -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.Small.get -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.ValueOf(string? name) -> Xamarin.Google.Flogger.StackSize?
static Xamarin.Google.Flogger.StackSize.Values() -> Xamarin.Google.Flogger.StackSize![]?
static Xamarin.Google.Flogger.Util.CallerFinder.FindCallerOf(Java.Lang.Class? target, int skip) -> Java.Lang.StackTraceElement?
static Xamarin.Google.Flogger.Util.CallerFinder.GetStackForCallerOf(Java.Lang.Class? target, int maxDepth, int skip) -> Java.Lang.StackTraceElement![]?
static Xamarin.Google.Flogger.Util.Checks.CheckArgument(bool condition, string? message) -> void
static Xamarin.Google.Flogger.Util.Checks.CheckMetadataIdentifier(string? s) -> string?
static Xamarin.Google.Flogger.Util.Checks.CheckNotNull(Java.Lang.Object? value, string? name) -> Java.Lang.Object?
static Xamarin.Google.Flogger.Util.Checks.CheckState(bool condition, string? message) -> void
static Xamarin.Google.Flogger.Util.RecursionDepth.CurrentDepth.get -> int
static Xamarin.Google.Flogger.Util.RecursionDepth.EnterLogStatement() -> Xamarin.Google.Flogger.Util.RecursionDepth?
static Xamarin.Google.Flogger.Util.StaticMethodCaller.GetInstanceFromSystemProperty(string? propertyName, Java.Lang.Class? type) -> Java.Lang.Object?
static Xamarin.Google.Flogger.Util.StaticMethodCaller.GetInstanceFromSystemProperty(string? propertyName, string? defaultValue, Java.Lang.Class? type) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.AbstractLogger.Name.get -> string?
virtual Xamarin.Google.Flogger.Backend.BaseMessageFormatter.Visit(Java.Lang.Object? value, Xamarin.Google.Flogger.Backend.FormatChar? format, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> void
virtual Xamarin.Google.Flogger.Backend.BaseMessageFormatter.VisitDateTime(Java.Lang.Object? value, Xamarin.Google.Flogger.Parameter.DateTimeFormat? format, Xamarin.Google.Flogger.Backend.FormatOptions? options) -> void
virtual Xamarin.Google.Flogger.Backend.BaseMessageFormatter.VisitMissing() -> void
virtual Xamarin.Google.Flogger.Backend.BaseMessageFormatter.VisitNull() -> void
virtual Xamarin.Google.Flogger.Backend.BaseMessageFormatter.VisitPreformatted(Java.Lang.Object? value, string? formatted) -> void
virtual Xamarin.Google.Flogger.Backend.FormatType.IsNumeric.get -> bool
virtual Xamarin.Google.Flogger.Backend.LogMessageFormatter.Format(Xamarin.Google.Flogger.Backend.ILogData? logData, Xamarin.Google.Flogger.Backend.MetadataProcessor? metadata) -> string?
virtual Xamarin.Google.Flogger.Backend.MetadataHandler.HandleRepeated(Xamarin.Google.Flogger.MetadataKey? key, Java.Util.IIterator? values, Java.Lang.Object? context) -> void
virtual Xamarin.Google.Flogger.Backend.Platform.ContextDataProviderImpl.get -> Xamarin.Google.Flogger.Context.ContextDataProvider?
virtual Xamarin.Google.Flogger.Backend.Platform.CurrentTimeNanosImpl.get -> long
virtual Xamarin.Google.Flogger.Context.ContextDataProvider.GetScope(Xamarin.Google.Flogger.Context.ScopeType? type) -> Xamarin.Google.Flogger.LoggingScope?
virtual Xamarin.Google.Flogger.Context.ContextDataProvider.Metadata.get -> Xamarin.Google.Flogger.Backend.Metadata?
virtual Xamarin.Google.Flogger.Context.ContextDataProvider.ShouldForceLogging(string? loggerName, Java.Util.Logging.Level? level, bool isEnabledByLevel) -> bool
virtual Xamarin.Google.Flogger.Context.ContextDataProvider.Tags.get -> Xamarin.Google.Flogger.Context.Tags?
virtual Xamarin.Google.Flogger.Context.ScopedLoggingContext.AddMetadata(Xamarin.Google.Flogger.MetadataKey? key, Java.Lang.Object? value) -> bool
virtual Xamarin.Google.Flogger.Context.ScopedLoggingContext.AddTags(Xamarin.Google.Flogger.Context.Tags? tags) -> bool
virtual Xamarin.Google.Flogger.Context.ScopedLoggingContext.ApplyLogLevelMap(Xamarin.Google.Flogger.Context.LogLevelMap? logLevelMap) -> bool
virtual Xamarin.Google.Flogger.Context.ScopedLoggingContext.NewScope() -> Xamarin.Google.Flogger.Context.ScopedLoggingContext.Builder?
virtual Xamarin.Google.Flogger.LogContext.Per(Java.Lang.Object? key, Xamarin.Google.Flogger.LogPerBucketingStrategy? strategy) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LogContext.Per(Xamarin.Google.Flogger.ILoggingScopeProvider? scopeProvider) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LogContext.PostProcess(Xamarin.Google.Flogger.ILogSiteKey? logSiteKey) -> bool
virtual Xamarin.Google.Flogger.LogContext.WithStackTrace(Xamarin.Google.Flogger.StackSize? size) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.Per(Java.Lang.Enum? key) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.Per(Java.Lang.Object? key, Xamarin.Google.Flogger.LogPerBucketingStrategy? strategy) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.Per(Xamarin.Google.Flogger.ILoggingScopeProvider? scopeProvider) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.WithInjectedLogSite(Xamarin.Google.Flogger.LogSite? logSite) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.WithInjectedLogSite(string? internalClassName, string? methodName, int encodedLineNumber, string? sourceFileName) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.LoggingApiNoOp.WithStackTrace(Xamarin.Google.Flogger.StackSize? size) -> Java.Lang.Object?
virtual Xamarin.Google.Flogger.MetadataKey.Emit(Java.Lang.Object? value, Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler? kvh) -> void
virtual Xamarin.Google.Flogger.MetadataKey.EmitRepeated(Java.Util.IIterator? values, Xamarin.Google.Flogger.MetadataKey.IKeyValueHandler? kvh) -> void
virtual Xamarin.Google.Flogger.Parser.DefaultBraceStyleMessageParser.ParseBraceFormatTerm(Xamarin.Google.Flogger.Parser.MessageBuilder? builder, int index, string? message, int termStart, int formatStart, int termEnd) -> void
virtual Xamarin.Google.Flogger.Parser.DefaultPrintfMessageParser.ParsePrintfTerm(Xamarin.Google.Flogger.Parser.MessageBuilder? builder, int index, string? message, int termStart, int specStart, int formatStart) -> int
