#nullable enable
AndroidX.Room.RxJava3.EmptyResultSetException
AndroidX.Room.RxJava3.EmptyResultSetException.EmptyResultSetException(string! message) -> void
AndroidX.Room.RxJava3.Rx3RoomArtifactMarker
AndroidX.Room.RxJava3.RxRoom
override AndroidX.Room.RxJava3.EmptyResultSetException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Room.RxJava3.Rx3RoomArtifactMarker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Room.RxJava3.RxRoom.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Room.RxJava3.RxRoom.CreateCompletable(AndroidX.Room.RoomDatabase! db, bool isReadOnly, bool inTransaction, Kotlin.Jvm.Functions.IFunction1! block) -> ReactiveX.RxJava3.Core.Completable!
static AndroidX.Room.RxJava3.RxRoom.CreateFlowable(AndroidX.Room.RoomDatabase! database, bool inTransaction, string![]! tableNames, Java.Util.Concurrent.ICallable! callable) -> ReactiveX.RxJava3.Core.Flowable!
static AndroidX.Room.RxJava3.RxRoom.CreateFlowable(AndroidX.Room.RoomDatabase! database, params string![]! tableNames) -> ReactiveX.RxJava3.Core.Flowable!
static AndroidX.Room.RxJava3.RxRoom.CreateFlowable(AndroidX.Room.RoomDatabase! db, bool inTransaction, string![]! tableNames, Kotlin.Jvm.Functions.IFunction1! block) -> ReactiveX.RxJava3.Core.Flowable!
static AndroidX.Room.RxJava3.RxRoom.CreateMaybe(AndroidX.Room.RoomDatabase! db, bool isReadOnly, bool inTransaction, Kotlin.Jvm.Functions.IFunction1! block) -> ReactiveX.RxJava3.Core.Maybe!
static AndroidX.Room.RxJava3.RxRoom.CreateObservable(AndroidX.Room.RoomDatabase! database, bool inTransaction, string![]! tableNames, Java.Util.Concurrent.ICallable! callable) -> ReactiveX.RxJava3.Core.Observable!
static AndroidX.Room.RxJava3.RxRoom.CreateObservable(AndroidX.Room.RoomDatabase! database, params string![]! tableNames) -> ReactiveX.RxJava3.Core.Observable!
static AndroidX.Room.RxJava3.RxRoom.CreateObservable(AndroidX.Room.RoomDatabase! db, bool inTransaction, string![]! tableNames, Kotlin.Jvm.Functions.IFunction1! block) -> ReactiveX.RxJava3.Core.Observable!
static AndroidX.Room.RxJava3.RxRoom.CreateSingle(AndroidX.Room.RoomDatabase! db, bool isReadOnly, bool inTransaction, Kotlin.Jvm.Functions.IFunction1! block) -> ReactiveX.RxJava3.Core.Single!
static AndroidX.Room.RxJava3.RxRoom.CreateSingle(Java.Util.Concurrent.ICallable! callable) -> ReactiveX.RxJava3.Core.Single!
static AndroidX.Room.RxJava3.RxRoom.Nothing.get -> Java.Lang.Object!
