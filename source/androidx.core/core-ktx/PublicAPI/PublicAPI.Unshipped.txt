#nullable enable
AndroidX.Core.Animation.AnimatorKt
AndroidX.Core.Content.ContentValuesKt
AndroidX.Core.Content.ContextKt
AndroidX.Core.Content.Resources.TypedArrayKt
AndroidX.Core.Content.SharedPreferencesKt
AndroidX.Core.Database.CursorKt
AndroidX.Core.Database.Sqlite.SQLiteDatabaseKt
AndroidX.Core.Graphics.BitmapKt
AndroidX.Core.Graphics.CanvasKt
AndroidX.Core.Graphics.ColorKt
AndroidX.Core.Graphics.Drawable.BitmapDrawableKt
AndroidX.Core.Graphics.Drawable.ColorDrawableKt
AndroidX.Core.Graphics.Drawable.DrawableKt
AndroidX.Core.Graphics.Drawable.IconKt
AndroidX.Core.Graphics.ImageDecoderKt
AndroidX.Core.Graphics.MatrixKt
AndroidX.Core.Graphics.PaintKt
AndroidX.Core.Graphics.PathKt
AndroidX.Core.Graphics.PictureKt
AndroidX.Core.Graphics.PointKt
AndroidX.Core.Graphics.PorterDuffKt
AndroidX.Core.Graphics.RectKt
AndroidX.Core.Graphics.RegionKt
AndroidX.Core.Graphics.ShaderKt
AndroidX.Core.Location.LocationKt
AndroidX.Core.Net.UriKt
AndroidX.Core.OS.BundleKt
AndroidX.Core.OS.HandlerKt
AndroidX.Core.OS.OutcomeReceiverKt
AndroidX.Core.OS.PersistableBundleKt
AndroidX.Core.OS.TraceKt
AndroidX.Core.Text.CharSequenceKt
AndroidX.Core.Text.HtmlKt
AndroidX.Core.Text.LocaleKt
AndroidX.Core.Text.SpannableStringBuilderKt
AndroidX.Core.Text.SpannableStringKt
AndroidX.Core.Text.SpannedStringKt
AndroidX.Core.Text.StringKt
AndroidX.Core.Transition.TransitionKt
AndroidX.Core.Util.AndroidXConsumerKt
AndroidX.Core.Util.AtomicFileKt
AndroidX.Core.Util.ConsumerKt
AndroidX.Core.Util.HalfKt
AndroidX.Core.Util.LongSparseArrayKt
AndroidX.Core.Util.LruCacheKt
AndroidX.Core.Util.PairKt
AndroidX.Core.Util.RangeKt
AndroidX.Core.Util.RunnableKt
AndroidX.Core.Util.SizeKt
AndroidX.Core.Util.SparseArrayKt
AndroidX.Core.Util.SparseBooleanArrayKt
AndroidX.Core.Util.SparseIntArrayKt
AndroidX.Core.Util.SparseLongArrayKt
AndroidX.Core.View.MenuKt
AndroidX.Core.View.ViewGroupKt
AndroidX.Core.View.ViewKt
AndroidX.Core.Widget.TextViewKt
override AndroidX.Core.Animation.AnimatorKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Content.ContentValuesKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Content.ContextKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Content.Resources.TypedArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Content.SharedPreferencesKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Database.CursorKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Database.Sqlite.SQLiteDatabaseKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.BitmapKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.CanvasKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.ColorKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.Drawable.BitmapDrawableKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.Drawable.ColorDrawableKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.Drawable.DrawableKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.Drawable.IconKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.ImageDecoderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.MatrixKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.PaintKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.PathKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.PictureKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.PointKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.PorterDuffKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.RectKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.RegionKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Graphics.ShaderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Location.LocationKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Net.UriKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.OS.BundleKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.OS.HandlerKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.OS.OutcomeReceiverKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.OS.PersistableBundleKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.OS.TraceKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.CharSequenceKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.HtmlKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.LocaleKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.SpannableStringBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.SpannableStringKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.SpannedStringKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Text.StringKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Transition.TransitionKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.AndroidXConsumerKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.AtomicFileKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.ConsumerKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.HalfKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.LongSparseArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.LruCacheKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.PairKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.RangeKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.RunnableKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.SizeKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.SparseArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.SparseBooleanArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.SparseIntArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Util.SparseLongArrayKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.View.MenuKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.View.ViewGroupKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.View.ViewKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Widget.TextViewKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Core.Animation.AnimatorKt.AddListener(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! onEnd, Kotlin.Jvm.Functions.IFunction1! onStart, Kotlin.Jvm.Functions.IFunction1! onCancel, Kotlin.Jvm.Functions.IFunction1! onRepeat) -> Android.Animation.Animator.IAnimatorListener!
static AndroidX.Core.Animation.AnimatorKt.AddPauseListener(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! onResume, Kotlin.Jvm.Functions.IFunction1! onPause) -> Android.Animation.Animator.IAnimatorPauseListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnCancel(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnEnd(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnPause(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorPauseListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnRepeat(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnResume(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorPauseListener!
static AndroidX.Core.Animation.AnimatorKt.DoOnStart(Android.Animation.Animator! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Animation.Animator.IAnimatorListener!
static AndroidX.Core.Content.ContentValuesKt.ContentValuesOf(params Kotlin.Pair![]! pairs) -> Android.Content.ContentValues!
static AndroidX.Core.Content.ContextKt.WithStyledAttributes(Android.Content.Context! obj, Android.Util.IAttributeSet? set, int[]! attrs, int defStyleAttr, int defStyleRes, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Content.ContextKt.WithStyledAttributes(Android.Content.Context! obj, int resourceId, int[]! attrs, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Content.Resources.TypedArrayKt.GetBooleanOrThrow(Android.Content.Res.TypedArray! obj, int index) -> bool
static AndroidX.Core.Content.Resources.TypedArrayKt.GetColorOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetColorStateListOrThrow(Android.Content.Res.TypedArray! obj, int index) -> Android.Content.Res.ColorStateList!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetDimensionOrThrow(Android.Content.Res.TypedArray! obj, int index) -> float
static AndroidX.Core.Content.Resources.TypedArrayKt.GetDimensionPixelOffsetOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetDimensionPixelSizeOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetDrawableOrThrow(Android.Content.Res.TypedArray! obj, int index) -> Android.Graphics.Drawables.Drawable!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetFloatOrThrow(Android.Content.Res.TypedArray! obj, int index) -> float
static AndroidX.Core.Content.Resources.TypedArrayKt.GetFontOrThrow(Android.Content.Res.TypedArray! obj, int index) -> Android.Graphics.Typeface!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetIntOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetIntegerOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetResourceIdOrThrow(Android.Content.Res.TypedArray! obj, int index) -> int
static AndroidX.Core.Content.Resources.TypedArrayKt.GetStringOrThrow(Android.Content.Res.TypedArray! obj, int index) -> string!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetTextArrayOrThrow(Android.Content.Res.TypedArray! obj, int index) -> string![]!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetTextArrayOrThrowFormatted(Android.Content.Res.TypedArray! obj, int index) -> Java.Lang.ICharSequence![]!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetTextOrThrow(Android.Content.Res.TypedArray! obj, int index) -> string!
static AndroidX.Core.Content.Resources.TypedArrayKt.GetTextOrThrowFormatted(Android.Content.Res.TypedArray! obj, int index) -> Java.Lang.ICharSequence!
static AndroidX.Core.Content.Resources.TypedArrayKt.Use(Android.Content.Res.TypedArray! obj, Kotlin.Jvm.Functions.IFunction1! block) -> Java.Lang.Object?
static AndroidX.Core.Content.SharedPreferencesKt.Edit(Android.Content.ISharedPreferences! obj, bool commit, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.Database.CursorKt.GetBlobOrNull(Android.Database.ICursor! obj, int index) -> byte[]?
static AndroidX.Core.Database.CursorKt.GetDoubleOrNull(Android.Database.ICursor! obj, int index) -> Java.Lang.Double?
static AndroidX.Core.Database.CursorKt.GetFloatOrNull(Android.Database.ICursor! obj, int index) -> Java.Lang.Float?
static AndroidX.Core.Database.CursorKt.GetIntOrNull(Android.Database.ICursor! obj, int index) -> Java.Lang.Integer?
static AndroidX.Core.Database.CursorKt.GetLongOrNull(Android.Database.ICursor! obj, int index) -> Java.Lang.Long?
static AndroidX.Core.Database.CursorKt.GetShortOrNull(Android.Database.ICursor! obj, int index) -> Java.Lang.Short?
static AndroidX.Core.Database.CursorKt.GetStringOrNull(Android.Database.ICursor! obj, int index) -> string?
static AndroidX.Core.Database.Sqlite.SQLiteDatabaseKt.Transaction(Android.Database.Sqlite.SQLiteDatabase! obj, bool exclusive, Kotlin.Jvm.Functions.IFunction1! body) -> Java.Lang.Object?
static AndroidX.Core.Graphics.BitmapKt.ApplyCanvas(Android.Graphics.Bitmap! obj, Kotlin.Jvm.Functions.IFunction1! block) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.BitmapKt.Contains(Android.Graphics.Bitmap! obj, Android.Graphics.Point! p) -> bool
static AndroidX.Core.Graphics.BitmapKt.Contains(Android.Graphics.Bitmap! obj, Android.Graphics.PointF! p) -> bool
static AndroidX.Core.Graphics.BitmapKt.CreateBitmap(int width, int height, Android.Graphics.Bitmap.Config! config) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.BitmapKt.CreateBitmap(int width, int height, Android.Graphics.Bitmap.Config! config, bool hasAlpha, Android.Graphics.ColorSpace! colorSpace) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.BitmapKt.Get(Android.Graphics.Bitmap! obj, int x, int y) -> int
static AndroidX.Core.Graphics.BitmapKt.Scale(Android.Graphics.Bitmap! obj, int width, int height, bool filter) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.BitmapKt.Set(Android.Graphics.Bitmap! obj, int x, int y, int color) -> void
static AndroidX.Core.Graphics.CanvasKt.WithClip(Android.Graphics.Canvas! obj, Android.Graphics.Path! clipPath, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithClip(Android.Graphics.Canvas! obj, Android.Graphics.Rect! clipRect, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithClip(Android.Graphics.Canvas! obj, Android.Graphics.RectF! clipRect, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithClip(Android.Graphics.Canvas! obj, float left, float top, float right, float bottom, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithClip(Android.Graphics.Canvas! obj, int left, int top, int right, int bottom, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithMatrix(Android.Graphics.Canvas! obj, Android.Graphics.Matrix! matrix, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithRotation(Android.Graphics.Canvas! obj, float degrees, float pivotX, float pivotY, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithSave(Android.Graphics.Canvas! obj, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithScale(Android.Graphics.Canvas! obj, float x, float y, float pivotX, float pivotY, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithSkew(Android.Graphics.Canvas! obj, float x, float y, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.CanvasKt.WithTranslation(Android.Graphics.Canvas! obj, float x, float y, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Graphics.ColorKt.Component1(Android.Graphics.ColorObject! obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component1(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.Component1(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component2(Android.Graphics.ColorObject! obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component2(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.Component2(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component3(Android.Graphics.ColorObject! obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component3(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.Component3(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component4(Android.Graphics.ColorObject! obj) -> float
static AndroidX.Core.Graphics.ColorKt.Component4(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.Component4(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.ConvertTo(Android.Graphics.ColorObject! obj, Android.Graphics.ColorSpace! colorSpace) -> Android.Graphics.ColorObject!
static AndroidX.Core.Graphics.ColorKt.ConvertTo(Android.Graphics.ColorObject! obj, Android.Graphics.ColorSpace.Named! colorSpace) -> Android.Graphics.ColorObject!
static AndroidX.Core.Graphics.ColorKt.ConvertTo(int obj, Android.Graphics.ColorSpace! colorSpace) -> long
static AndroidX.Core.Graphics.ColorKt.ConvertTo(int obj, Android.Graphics.ColorSpace.Named! colorSpace) -> long
static AndroidX.Core.Graphics.ColorKt.ConvertTo(long obj, Android.Graphics.ColorSpace! colorSpace) -> long
static AndroidX.Core.Graphics.ColorKt.ConvertTo(long obj, Android.Graphics.ColorSpace.Named! colorSpace) -> long
static AndroidX.Core.Graphics.ColorKt.GetAlpha(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.GetAlpha(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.GetBlue(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.GetBlue(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.GetColorSpace(long obj) -> Android.Graphics.ColorSpace!
static AndroidX.Core.Graphics.ColorKt.GetGreen(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.GetGreen(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.GetLuminance(int obj) -> float
static AndroidX.Core.Graphics.ColorKt.GetLuminance(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.GetRed(int obj) -> int
static AndroidX.Core.Graphics.ColorKt.GetRed(long obj) -> float
static AndroidX.Core.Graphics.ColorKt.IsSrgb(long obj) -> bool
static AndroidX.Core.Graphics.ColorKt.IsWideGamut(long obj) -> bool
static AndroidX.Core.Graphics.ColorKt.Plus(Android.Graphics.ColorObject! obj, Android.Graphics.ColorObject! c) -> Android.Graphics.ColorObject!
static AndroidX.Core.Graphics.ColorKt.ToColor(int obj) -> Android.Graphics.ColorObject!
static AndroidX.Core.Graphics.ColorKt.ToColor(long obj) -> Android.Graphics.ColorObject!
static AndroidX.Core.Graphics.ColorKt.ToColorInt(long obj) -> int
static AndroidX.Core.Graphics.ColorKt.ToColorInt(string! obj) -> int
static AndroidX.Core.Graphics.ColorKt.ToColorLong(int obj) -> long
static AndroidX.Core.Graphics.Drawable.BitmapDrawableKt.ToDrawable(Android.Graphics.Bitmap! obj, Android.Content.Res.Resources! resources) -> Android.Graphics.Drawables.BitmapDrawable!
static AndroidX.Core.Graphics.Drawable.ColorDrawableKt.ToDrawable(Android.Graphics.ColorObject! obj) -> Android.Graphics.Drawables.ColorDrawable!
static AndroidX.Core.Graphics.Drawable.ColorDrawableKt.ToDrawable(int obj) -> Android.Graphics.Drawables.ColorDrawable!
static AndroidX.Core.Graphics.Drawable.DrawableKt.ToBitmap(Android.Graphics.Drawables.Drawable! obj, int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.Drawable.DrawableKt.ToBitmapOrNull(Android.Graphics.Drawables.Drawable! obj, int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap?
static AndroidX.Core.Graphics.Drawable.DrawableKt.UpdateBounds(Android.Graphics.Drawables.Drawable! obj, int left, int top, int right, int bottom) -> void
static AndroidX.Core.Graphics.Drawable.IconKt.ToAdaptiveIcon(Android.Graphics.Bitmap! obj) -> Android.Graphics.Drawables.Icon!
static AndroidX.Core.Graphics.Drawable.IconKt.ToIcon(Android.Graphics.Bitmap! obj) -> Android.Graphics.Drawables.Icon!
static AndroidX.Core.Graphics.Drawable.IconKt.ToIcon(Android.Net.Uri! obj) -> Android.Graphics.Drawables.Icon!
static AndroidX.Core.Graphics.Drawable.IconKt.ToIcon(byte[]! obj) -> Android.Graphics.Drawables.Icon!
static AndroidX.Core.Graphics.ImageDecoderKt.DecodeBitmap(Android.Graphics.ImageDecoder.Source! obj, Kotlin.Jvm.Functions.IFunction3! action) -> Android.Graphics.Bitmap!
static AndroidX.Core.Graphics.ImageDecoderKt.DecodeDrawable(Android.Graphics.ImageDecoder.Source! obj, Kotlin.Jvm.Functions.IFunction3! action) -> Android.Graphics.Drawables.Drawable!
static AndroidX.Core.Graphics.MatrixKt.RotationMatrix(float degrees, float px, float py) -> Android.Graphics.Matrix!
static AndroidX.Core.Graphics.MatrixKt.ScaleMatrix(float sx, float sy) -> Android.Graphics.Matrix!
static AndroidX.Core.Graphics.MatrixKt.Times(Android.Graphics.Matrix! obj, Android.Graphics.Matrix! m) -> Android.Graphics.Matrix!
static AndroidX.Core.Graphics.MatrixKt.TranslationMatrix(float tx, float ty) -> Android.Graphics.Matrix!
static AndroidX.Core.Graphics.MatrixKt.Values(Android.Graphics.Matrix! obj) -> float[]!
static AndroidX.Core.Graphics.PaintKt.SetBlendMode(Android.Graphics.Paint! obj, AndroidX.Core.Graphics.BlendModeCompat? blendModeCompat) -> bool
static AndroidX.Core.Graphics.PathKt.And(Android.Graphics.Path! obj, Android.Graphics.Path! p) -> Android.Graphics.Path!
static AndroidX.Core.Graphics.PathKt.Flatten(Android.Graphics.Path! obj, float error) -> Java.Lang.IIterable!
static AndroidX.Core.Graphics.PathKt.Minus(Android.Graphics.Path! obj, Android.Graphics.Path! p) -> Android.Graphics.Path!
static AndroidX.Core.Graphics.PathKt.Or(Android.Graphics.Path! obj, Android.Graphics.Path! p) -> Android.Graphics.Path!
static AndroidX.Core.Graphics.PathKt.Plus(Android.Graphics.Path! obj, Android.Graphics.Path! p) -> Android.Graphics.Path!
static AndroidX.Core.Graphics.PathKt.Xor(Android.Graphics.Path! obj, Android.Graphics.Path! p) -> Android.Graphics.Path!
static AndroidX.Core.Graphics.PictureKt.Record(Android.Graphics.Picture! obj, int width, int height, Kotlin.Jvm.Functions.IFunction1! block) -> Android.Graphics.Picture!
static AndroidX.Core.Graphics.PointKt.Component1(Android.Graphics.Point! obj) -> int
static AndroidX.Core.Graphics.PointKt.Component1(Android.Graphics.PointF! obj) -> float
static AndroidX.Core.Graphics.PointKt.Component2(Android.Graphics.Point! obj) -> int
static AndroidX.Core.Graphics.PointKt.Component2(Android.Graphics.PointF! obj) -> float
static AndroidX.Core.Graphics.PointKt.Div(Android.Graphics.Point! obj, float scalar) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Div(Android.Graphics.PointF! obj, float scalar) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.Minus(Android.Graphics.Point! obj, Android.Graphics.Point! p) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Minus(Android.Graphics.Point! obj, int xy) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Minus(Android.Graphics.PointF! obj, Android.Graphics.PointF! p) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.Minus(Android.Graphics.PointF! obj, float xy) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.Plus(Android.Graphics.Point! obj, Android.Graphics.Point! p) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Plus(Android.Graphics.Point! obj, int xy) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Plus(Android.Graphics.PointF! obj, Android.Graphics.PointF! p) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.Plus(Android.Graphics.PointF! obj, float xy) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.Times(Android.Graphics.Point! obj, float scalar) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.Times(Android.Graphics.PointF! obj, float scalar) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.ToPoint(Android.Graphics.PointF! obj) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.ToPointF(Android.Graphics.Point! obj) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PointKt.UnaryMinus(Android.Graphics.Point! obj) -> Android.Graphics.Point!
static AndroidX.Core.Graphics.PointKt.UnaryMinus(Android.Graphics.PointF! obj) -> Android.Graphics.PointF!
static AndroidX.Core.Graphics.PorterDuffKt.ToColorFilter(Android.Graphics.PorterDuff.Mode! obj, int color) -> Android.Graphics.PorterDuffColorFilter!
static AndroidX.Core.Graphics.PorterDuffKt.ToXfermode(Android.Graphics.PorterDuff.Mode! obj) -> Android.Graphics.PorterDuffXfermode!
static AndroidX.Core.Graphics.RectKt.And(Android.Graphics.Rect! obj, Android.Graphics.Rect! r) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.And(Android.Graphics.RectF! obj, Android.Graphics.RectF! r) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Component1(Android.Graphics.Rect! obj) -> int
static AndroidX.Core.Graphics.RectKt.Component1(Android.Graphics.RectF! obj) -> float
static AndroidX.Core.Graphics.RectKt.Component2(Android.Graphics.Rect! obj) -> int
static AndroidX.Core.Graphics.RectKt.Component2(Android.Graphics.RectF! obj) -> float
static AndroidX.Core.Graphics.RectKt.Component3(Android.Graphics.Rect! obj) -> int
static AndroidX.Core.Graphics.RectKt.Component3(Android.Graphics.RectF! obj) -> float
static AndroidX.Core.Graphics.RectKt.Component4(Android.Graphics.Rect! obj) -> int
static AndroidX.Core.Graphics.RectKt.Component4(Android.Graphics.RectF! obj) -> float
static AndroidX.Core.Graphics.RectKt.Contains(Android.Graphics.Rect! obj, Android.Graphics.Point! p) -> bool
static AndroidX.Core.Graphics.RectKt.Contains(Android.Graphics.RectF! obj, Android.Graphics.PointF! p) -> bool
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.Rect! obj, Android.Graphics.Point! xy) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.Rect! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.Rect! obj, int xy) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.RectF! obj, Android.Graphics.PointF! xy) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.RectF! obj, Android.Graphics.RectF! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RectKt.Minus(Android.Graphics.RectF! obj, float xy) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Or(Android.Graphics.Rect! obj, Android.Graphics.Rect! r) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Or(Android.Graphics.RectF! obj, Android.Graphics.RectF! r) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.Rect! obj, Android.Graphics.Point! xy) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.Rect! obj, Android.Graphics.Rect! r) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.Rect! obj, int xy) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.RectF! obj, Android.Graphics.PointF! xy) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.RectF! obj, Android.Graphics.RectF! r) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Plus(Android.Graphics.RectF! obj, float xy) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Times(Android.Graphics.Rect! obj, int factor) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.Times(Android.Graphics.RectF! obj, float factor) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Times(Android.Graphics.RectF! obj, int factor) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.ToRect(Android.Graphics.RectF! obj) -> Android.Graphics.Rect!
static AndroidX.Core.Graphics.RectKt.ToRectF(Android.Graphics.Rect! obj) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.ToRegion(Android.Graphics.Rect! obj) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RectKt.ToRegion(Android.Graphics.RectF! obj) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RectKt.Transform(Android.Graphics.RectF! obj, Android.Graphics.Matrix! m) -> Android.Graphics.RectF!
static AndroidX.Core.Graphics.RectKt.Xor(Android.Graphics.Rect! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RectKt.Xor(Android.Graphics.RectF! obj, Android.Graphics.RectF! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.And(Android.Graphics.Region! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.And(Android.Graphics.Region! obj, Android.Graphics.Region! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Contains(Android.Graphics.Region! obj, Android.Graphics.Point! p) -> bool
static AndroidX.Core.Graphics.RegionKt.ForEach(Android.Graphics.Region! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.Graphics.RegionKt.Iterator(Android.Graphics.Region! obj) -> Java.Util.IIterator!
static AndroidX.Core.Graphics.RegionKt.Minus(Android.Graphics.Region! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Minus(Android.Graphics.Region! obj, Android.Graphics.Region! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Not(Android.Graphics.Region! obj) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Or(Android.Graphics.Region! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Or(Android.Graphics.Region! obj, Android.Graphics.Region! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Plus(Android.Graphics.Region! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Plus(Android.Graphics.Region! obj, Android.Graphics.Region! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.UnaryMinus(Android.Graphics.Region! obj) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Xor(Android.Graphics.Region! obj, Android.Graphics.Rect! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.RegionKt.Xor(Android.Graphics.Region! obj, Android.Graphics.Region! r) -> Android.Graphics.Region!
static AndroidX.Core.Graphics.ShaderKt.Transform(Android.Graphics.Shader! obj, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Location.LocationKt.Component1(Android.Locations.Location! obj) -> double
static AndroidX.Core.Location.LocationKt.Component2(Android.Locations.Location! obj) -> double
static AndroidX.Core.Net.UriKt.ToFile(Android.Net.Uri! obj) -> Java.IO.File!
static AndroidX.Core.Net.UriKt.ToUri(Java.IO.File! obj) -> Android.Net.Uri!
static AndroidX.Core.Net.UriKt.ToUri(string! obj) -> Android.Net.Uri!
static AndroidX.Core.OS.BundleKt.BundleOf() -> Android.OS.Bundle!
static AndroidX.Core.OS.BundleKt.BundleOf(params Kotlin.Pair![]! pairs) -> Android.OS.Bundle!
static AndroidX.Core.OS.HandlerKt.PostAtTime(Android.OS.Handler! obj, long uptimeMillis, Java.Lang.Object? token, Kotlin.Jvm.Functions.IFunction0! action) -> Java.Lang.IRunnable!
static AndroidX.Core.OS.HandlerKt.PostDelayed(Android.OS.Handler! obj, long delayInMillis, Java.Lang.Object? token, Kotlin.Jvm.Functions.IFunction0! action) -> Java.Lang.IRunnable!
static AndroidX.Core.OS.OutcomeReceiverKt.AsOutcomeReceiver(Kotlin.Coroutines.IContinuation! obj) -> Android.OS.IOutcomeReceiver!
static AndroidX.Core.OS.PersistableBundleKt.PersistableBundleOf() -> Android.OS.PersistableBundle!
static AndroidX.Core.OS.PersistableBundleKt.PersistableBundleOf(params Kotlin.Pair![]! pairs) -> Android.OS.PersistableBundle!
static AndroidX.Core.OS.PersistableBundleKt.ToPersistableBundle(System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>! obj) -> Android.OS.PersistableBundle!
static AndroidX.Core.OS.TraceKt.Trace(string! sectionName, Kotlin.Jvm.Functions.IFunction0! block) -> Java.Lang.Object?
static AndroidX.Core.Text.CharSequenceKt.IsDigitsOnly(Java.Lang.ICharSequence! obj) -> bool
static AndroidX.Core.Text.CharSequenceKt.IsDigitsOnly(string! obj) -> bool
static AndroidX.Core.Text.CharSequenceKt.TrimmedLength(Java.Lang.ICharSequence! obj) -> int
static AndroidX.Core.Text.CharSequenceKt.TrimmedLength(string! obj) -> int
static AndroidX.Core.Text.HtmlKt.ParseAsHtml(string! obj, int flags, Android.Text.Html.IImageGetter? imageGetter, Android.Text.Html.ITagHandler? tagHandler) -> Android.Text.ISpanned!
static AndroidX.Core.Text.HtmlKt.ToHtml(Android.Text.ISpanned! obj, int option) -> string!
static AndroidX.Core.Text.LocaleKt.GetLayoutDirection(Java.Util.Locale! obj) -> int
static AndroidX.Core.Text.SpannableStringBuilderKt.BackgroundColor(Android.Text.SpannableStringBuilder! obj, int color, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Bold(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.BuildSpannedString(Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannedString!
static AndroidX.Core.Text.SpannableStringBuilderKt.Color(Android.Text.SpannableStringBuilder! obj, int color, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.InSpans(Android.Text.SpannableStringBuilder! obj, Java.Lang.Object! span, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.InSpans(Android.Text.SpannableStringBuilder! obj, Java.Lang.Object![]! spans, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Italic(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Scale(Android.Text.SpannableStringBuilder! obj, float proportion, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.StrikeThrough(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Subscript(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Superscript(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringBuilderKt.Underline(Android.Text.SpannableStringBuilder! obj, Kotlin.Jvm.Functions.IFunction1! builderAction) -> Android.Text.SpannableStringBuilder!
static AndroidX.Core.Text.SpannableStringKt.ClearSpans(Android.Text.ISpannable! obj) -> void
static AndroidX.Core.Text.SpannableStringKt.Set(Android.Text.ISpannable! obj, Kotlin.Ranges.IntRange! range, Java.Lang.Object! span) -> void
static AndroidX.Core.Text.SpannableStringKt.Set(Android.Text.ISpannable! obj, int start, int end, Java.Lang.Object! span) -> void
static AndroidX.Core.Text.SpannableStringKt.ToSpannable(Java.Lang.ICharSequence! obj) -> Android.Text.ISpannable!
static AndroidX.Core.Text.SpannableStringKt.ToSpannable(string! obj) -> Android.Text.ISpannable!
static AndroidX.Core.Text.SpannedStringKt.ToSpanned(Java.Lang.ICharSequence! obj) -> Android.Text.ISpanned!
static AndroidX.Core.Text.SpannedStringKt.ToSpanned(string! obj) -> Android.Text.ISpanned!
static AndroidX.Core.Text.StringKt.HtmlEncode(string! obj) -> string!
static AndroidX.Core.Transition.TransitionKt.AddListener(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! onEnd, Kotlin.Jvm.Functions.IFunction1! onStart, Kotlin.Jvm.Functions.IFunction1! onCancel, Kotlin.Jvm.Functions.IFunction1! onResume, Kotlin.Jvm.Functions.IFunction1! onPause) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Transition.TransitionKt.DoOnCancel(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Transition.TransitionKt.DoOnEnd(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Transition.TransitionKt.DoOnPause(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Transition.TransitionKt.DoOnResume(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Transition.TransitionKt.DoOnStart(Android.Transitions.Transition! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Transitions.Transition.ITransitionListener!
static AndroidX.Core.Util.AndroidXConsumerKt.AsAndroidXConsumer(Kotlin.Coroutines.IContinuation! obj) -> AndroidX.Core.Util.IConsumer!
static AndroidX.Core.Util.AtomicFileKt.ReadBytes(Android.Util.AtomicFile! obj) -> byte[]!
static AndroidX.Core.Util.AtomicFileKt.ReadText(Android.Util.AtomicFile! obj, Java.Nio.Charset.Charset! charset) -> string!
static AndroidX.Core.Util.AtomicFileKt.TryWrite(Android.Util.AtomicFile! obj, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.Util.AtomicFileKt.WriteBytes(Android.Util.AtomicFile! obj, byte[]! array) -> void
static AndroidX.Core.Util.AtomicFileKt.WriteText(Android.Util.AtomicFile! obj, string! text, Java.Nio.Charset.Charset! charset) -> void
static AndroidX.Core.Util.ConsumerKt.AsConsumer(Kotlin.Coroutines.IContinuation! obj) -> Java.Util.Functions.IConsumer!
static AndroidX.Core.Util.HalfKt.ToHalf(double obj) -> Android.Util.Half!
static AndroidX.Core.Util.HalfKt.ToHalf(float obj) -> Android.Util.Half!
static AndroidX.Core.Util.HalfKt.ToHalf(short obj) -> Android.Util.Half!
static AndroidX.Core.Util.HalfKt.ToHalf(string! obj) -> Android.Util.Half!
static AndroidX.Core.Util.LongSparseArrayKt.Contains(Android.Util.LongSparseArray! obj, long key) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.ContainsKey(Android.Util.LongSparseArray! obj, long key) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.ContainsValue(Android.Util.LongSparseArray! obj, Java.Lang.Object? value) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.ForEach(Android.Util.LongSparseArray! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.Util.LongSparseArrayKt.GetOrDefault(Android.Util.LongSparseArray! obj, long key, Java.Lang.Object? defaultValue) -> Java.Lang.Object?
static AndroidX.Core.Util.LongSparseArrayKt.GetOrElse(Android.Util.LongSparseArray! obj, long key, Kotlin.Jvm.Functions.IFunction0! defaultValue) -> Java.Lang.Object?
static AndroidX.Core.Util.LongSparseArrayKt.GetSize(Android.Util.LongSparseArray! obj) -> int
static AndroidX.Core.Util.LongSparseArrayKt.IsEmpty(Android.Util.LongSparseArray! obj) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.IsNotEmpty(Android.Util.LongSparseArray! obj) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.KeyIterator(Android.Util.LongSparseArray! obj) -> Kotlin.Collections.LongIterator!
static AndroidX.Core.Util.LongSparseArrayKt.Plus(Android.Util.LongSparseArray! obj, Android.Util.LongSparseArray! other) -> Android.Util.LongSparseArray!
static AndroidX.Core.Util.LongSparseArrayKt.PutAll(Android.Util.LongSparseArray! obj, Android.Util.LongSparseArray! other) -> void
static AndroidX.Core.Util.LongSparseArrayKt.Remove(Android.Util.LongSparseArray! obj, long key, Java.Lang.Object? value) -> bool
static AndroidX.Core.Util.LongSparseArrayKt.Set(Android.Util.LongSparseArray! obj, long key, Java.Lang.Object? value) -> void
static AndroidX.Core.Util.LongSparseArrayKt.ValueIterator(Android.Util.LongSparseArray! obj) -> Java.Util.IIterator!
static AndroidX.Core.Util.LruCacheKt.LruCache(int maxSize, Kotlin.Jvm.Functions.IFunction2! sizeOf, Kotlin.Jvm.Functions.IFunction1! create, Kotlin.Jvm.Functions.IFunction4! onEntryRemoved) -> Android.Util.LruCache!
static AndroidX.Core.Util.PairKt.Component1(Android.Util.Pair! obj) -> Java.Lang.Object?
static AndroidX.Core.Util.PairKt.Component1(AndroidX.Core.Util.Pair! obj) -> Java.Lang.Object?
static AndroidX.Core.Util.PairKt.Component2(Android.Util.Pair! obj) -> Java.Lang.Object?
static AndroidX.Core.Util.PairKt.Component2(AndroidX.Core.Util.Pair! obj) -> Java.Lang.Object?
static AndroidX.Core.Util.PairKt.ToAndroidPair(Kotlin.Pair! obj) -> Android.Util.Pair!
static AndroidX.Core.Util.PairKt.ToAndroidXPair(Kotlin.Pair! obj) -> AndroidX.Core.Util.Pair!
static AndroidX.Core.Util.PairKt.ToKotlinPair(Android.Util.Pair! obj) -> Kotlin.Pair!
static AndroidX.Core.Util.PairKt.ToKotlinPair(AndroidX.Core.Util.Pair! obj) -> Kotlin.Pair!
static AndroidX.Core.Util.RangeKt.And(Android.Util.Range! obj, Android.Util.Range! other) -> Android.Util.Range!
static AndroidX.Core.Util.RangeKt.Plus(Android.Util.Range! obj, Android.Util.Range! other) -> Android.Util.Range!
static AndroidX.Core.Util.RangeKt.Plus(Android.Util.Range! obj, Java.Lang.Object! value) -> Android.Util.Range!
static AndroidX.Core.Util.RangeKt.RangeTo(Java.Lang.Object! obj, Java.Lang.Object! that) -> Android.Util.Range!
static AndroidX.Core.Util.RangeKt.ToClosedRange(Android.Util.Range! obj) -> Kotlin.Ranges.IClosedRange!
static AndroidX.Core.Util.RangeKt.ToRange(Kotlin.Ranges.IClosedRange! obj) -> Android.Util.Range!
static AndroidX.Core.Util.RunnableKt.AsRunnable(Kotlin.Coroutines.IContinuation! obj) -> Java.Lang.IRunnable!
static AndroidX.Core.Util.SizeKt.Component1(Android.Util.Size! obj) -> int
static AndroidX.Core.Util.SizeKt.Component1(Android.Util.SizeF! obj) -> float
static AndroidX.Core.Util.SizeKt.Component1(AndroidX.Core.Util.SizeFCompat! obj) -> float
static AndroidX.Core.Util.SizeKt.Component2(Android.Util.Size! obj) -> int
static AndroidX.Core.Util.SizeKt.Component2(Android.Util.SizeF! obj) -> float
static AndroidX.Core.Util.SizeKt.Component2(AndroidX.Core.Util.SizeFCompat! obj) -> float
static AndroidX.Core.Util.SparseArrayKt.Contains(Android.Util.SparseArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseArrayKt.ContainsKey(Android.Util.SparseArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseArrayKt.ContainsValue(Android.Util.SparseArray! obj, Java.Lang.Object? value) -> bool
static AndroidX.Core.Util.SparseArrayKt.ForEach(Android.Util.SparseArray! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.Util.SparseArrayKt.GetOrDefault(Android.Util.SparseArray! obj, int key, Java.Lang.Object? defaultValue) -> Java.Lang.Object?
static AndroidX.Core.Util.SparseArrayKt.GetOrElse(Android.Util.SparseArray! obj, int key, Kotlin.Jvm.Functions.IFunction0! defaultValue) -> Java.Lang.Object?
static AndroidX.Core.Util.SparseArrayKt.GetSize(Android.Util.SparseArray! obj) -> int
static AndroidX.Core.Util.SparseArrayKt.IsEmpty(Android.Util.SparseArray! obj) -> bool
static AndroidX.Core.Util.SparseArrayKt.IsNotEmpty(Android.Util.SparseArray! obj) -> bool
static AndroidX.Core.Util.SparseArrayKt.KeyIterator(Android.Util.SparseArray! obj) -> Kotlin.Collections.IntIterator!
static AndroidX.Core.Util.SparseArrayKt.Plus(Android.Util.SparseArray! obj, Android.Util.SparseArray! other) -> Android.Util.SparseArray!
static AndroidX.Core.Util.SparseArrayKt.PutAll(Android.Util.SparseArray! obj, Android.Util.SparseArray! other) -> void
static AndroidX.Core.Util.SparseArrayKt.Remove(Android.Util.SparseArray! obj, int key, Java.Lang.Object? value) -> bool
static AndroidX.Core.Util.SparseArrayKt.Set(Android.Util.SparseArray! obj, int key, Java.Lang.Object? value) -> void
static AndroidX.Core.Util.SparseArrayKt.ValueIterator(Android.Util.SparseArray! obj) -> Java.Util.IIterator!
static AndroidX.Core.Util.SparseBooleanArrayKt.Contains(Android.Util.SparseBooleanArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.ContainsKey(Android.Util.SparseBooleanArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.ContainsValue(Android.Util.SparseBooleanArray! obj, bool value) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.ForEach(Android.Util.SparseBooleanArray! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.Util.SparseBooleanArrayKt.GetOrDefault(Android.Util.SparseBooleanArray! obj, int key, bool defaultValue) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.GetOrElse(Android.Util.SparseBooleanArray! obj, int key, Kotlin.Jvm.Functions.IFunction0! defaultValue) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.GetSize(Android.Util.SparseBooleanArray! obj) -> int
static AndroidX.Core.Util.SparseBooleanArrayKt.IsEmpty(Android.Util.SparseBooleanArray! obj) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.IsNotEmpty(Android.Util.SparseBooleanArray! obj) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.KeyIterator(Android.Util.SparseBooleanArray! obj) -> Kotlin.Collections.IntIterator!
static AndroidX.Core.Util.SparseBooleanArrayKt.Plus(Android.Util.SparseBooleanArray! obj, Android.Util.SparseBooleanArray! other) -> Android.Util.SparseBooleanArray!
static AndroidX.Core.Util.SparseBooleanArrayKt.PutAll(Android.Util.SparseBooleanArray! obj, Android.Util.SparseBooleanArray! other) -> void
static AndroidX.Core.Util.SparseBooleanArrayKt.Remove(Android.Util.SparseBooleanArray! obj, int key, bool value) -> bool
static AndroidX.Core.Util.SparseBooleanArrayKt.Set(Android.Util.SparseBooleanArray! obj, int key, bool value) -> void
static AndroidX.Core.Util.SparseBooleanArrayKt.ValueIterator(Android.Util.SparseBooleanArray! obj) -> Kotlin.Collections.BooleanIterator!
static AndroidX.Core.Util.SparseIntArrayKt.Contains(Android.Util.SparseIntArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.ContainsKey(Android.Util.SparseIntArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.ContainsValue(Android.Util.SparseIntArray! obj, int value) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.ForEach(Android.Util.SparseIntArray! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.Util.SparseIntArrayKt.GetOrDefault(Android.Util.SparseIntArray! obj, int key, int defaultValue) -> int
static AndroidX.Core.Util.SparseIntArrayKt.GetOrElse(Android.Util.SparseIntArray! obj, int key, Kotlin.Jvm.Functions.IFunction0! defaultValue) -> int
static AndroidX.Core.Util.SparseIntArrayKt.GetSize(Android.Util.SparseIntArray! obj) -> int
static AndroidX.Core.Util.SparseIntArrayKt.IsEmpty(Android.Util.SparseIntArray! obj) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.IsNotEmpty(Android.Util.SparseIntArray! obj) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.KeyIterator(Android.Util.SparseIntArray! obj) -> Kotlin.Collections.IntIterator!
static AndroidX.Core.Util.SparseIntArrayKt.Plus(Android.Util.SparseIntArray! obj, Android.Util.SparseIntArray! other) -> Android.Util.SparseIntArray!
static AndroidX.Core.Util.SparseIntArrayKt.PutAll(Android.Util.SparseIntArray! obj, Android.Util.SparseIntArray! other) -> void
static AndroidX.Core.Util.SparseIntArrayKt.Remove(Android.Util.SparseIntArray! obj, int key, int value) -> bool
static AndroidX.Core.Util.SparseIntArrayKt.Set(Android.Util.SparseIntArray! obj, int key, int value) -> void
static AndroidX.Core.Util.SparseIntArrayKt.ValueIterator(Android.Util.SparseIntArray! obj) -> Kotlin.Collections.IntIterator!
static AndroidX.Core.Util.SparseLongArrayKt.Contains(Android.Util.SparseLongArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.ContainsKey(Android.Util.SparseLongArray! obj, int key) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.ContainsValue(Android.Util.SparseLongArray! obj, long value) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.ForEach(Android.Util.SparseLongArray! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.Util.SparseLongArrayKt.GetOrDefault(Android.Util.SparseLongArray! obj, int key, long defaultValue) -> long
static AndroidX.Core.Util.SparseLongArrayKt.GetOrElse(Android.Util.SparseLongArray! obj, int key, Kotlin.Jvm.Functions.IFunction0! defaultValue) -> long
static AndroidX.Core.Util.SparseLongArrayKt.GetSize(Android.Util.SparseLongArray! obj) -> int
static AndroidX.Core.Util.SparseLongArrayKt.IsEmpty(Android.Util.SparseLongArray! obj) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.IsNotEmpty(Android.Util.SparseLongArray! obj) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.KeyIterator(Android.Util.SparseLongArray! obj) -> Kotlin.Collections.IntIterator!
static AndroidX.Core.Util.SparseLongArrayKt.Plus(Android.Util.SparseLongArray! obj, Android.Util.SparseLongArray! other) -> Android.Util.SparseLongArray!
static AndroidX.Core.Util.SparseLongArrayKt.PutAll(Android.Util.SparseLongArray! obj, Android.Util.SparseLongArray! other) -> void
static AndroidX.Core.Util.SparseLongArrayKt.Remove(Android.Util.SparseLongArray! obj, int key, long value) -> bool
static AndroidX.Core.Util.SparseLongArrayKt.Set(Android.Util.SparseLongArray! obj, int key, long value) -> void
static AndroidX.Core.Util.SparseLongArrayKt.ValueIterator(Android.Util.SparseLongArray! obj) -> Kotlin.Collections.LongIterator!
static AndroidX.Core.View.MenuKt.Contains(Android.Views.IMenu! obj, Android.Views.IMenuItem! item) -> bool
static AndroidX.Core.View.MenuKt.ForEach(Android.Views.IMenu! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.MenuKt.ForEachIndexed(Android.Views.IMenu! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.View.MenuKt.Get(Android.Views.IMenu! obj, int index) -> Android.Views.IMenuItem!
static AndroidX.Core.View.MenuKt.GetChildren(Android.Views.IMenu! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Core.View.MenuKt.GetSize(Android.Views.IMenu! obj) -> int
static AndroidX.Core.View.MenuKt.IsEmpty(Android.Views.IMenu! obj) -> bool
static AndroidX.Core.View.MenuKt.IsNotEmpty(Android.Views.IMenu! obj) -> bool
static AndroidX.Core.View.MenuKt.Iterator(Android.Views.IMenu! obj) -> Java.Util.IIterator!
static AndroidX.Core.View.MenuKt.MinusAssign(Android.Views.IMenu! obj, Android.Views.IMenuItem! item) -> void
static AndroidX.Core.View.MenuKt.RemoveItemAt(Android.Views.IMenu! obj, int index) -> void
static AndroidX.Core.View.ViewGroupKt.Contains(Android.Views.ViewGroup! obj, Android.Views.View! view) -> bool
static AndroidX.Core.View.ViewGroupKt.ForEach(Android.Views.ViewGroup! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.ViewGroupKt.ForEachIndexed(Android.Views.ViewGroup! obj, Kotlin.Jvm.Functions.IFunction2! action) -> void
static AndroidX.Core.View.ViewGroupKt.Get(Android.Views.ViewGroup! obj, int index) -> Android.Views.View!
static AndroidX.Core.View.ViewGroupKt.GetChildren(Android.Views.ViewGroup! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Core.View.ViewGroupKt.GetDescendants(Android.Views.ViewGroup! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Core.View.ViewGroupKt.GetIndices(Android.Views.ViewGroup! obj) -> Kotlin.Ranges.IntRange!
static AndroidX.Core.View.ViewGroupKt.GetSize(Android.Views.ViewGroup! obj) -> int
static AndroidX.Core.View.ViewGroupKt.IsEmpty(Android.Views.ViewGroup! obj) -> bool
static AndroidX.Core.View.ViewGroupKt.IsNotEmpty(Android.Views.ViewGroup! obj) -> bool
static AndroidX.Core.View.ViewGroupKt.Iterator(Android.Views.ViewGroup! obj) -> Java.Util.IIterator!
static AndroidX.Core.View.ViewGroupKt.MinusAssign(Android.Views.ViewGroup! obj, Android.Views.View! view) -> void
static AndroidX.Core.View.ViewGroupKt.PlusAssign(Android.Views.ViewGroup! obj, Android.Views.View! view) -> void
static AndroidX.Core.View.ViewGroupKt.SetMargins(Android.Views.ViewGroup.MarginLayoutParams! obj, int size) -> void
static AndroidX.Core.View.ViewGroupKt.UpdateMargins(Android.Views.ViewGroup.MarginLayoutParams! obj, int left, int top, int right, int bottom) -> void
static AndroidX.Core.View.ViewGroupKt.UpdateMarginsRelative(Android.Views.ViewGroup.MarginLayoutParams! obj, int start, int top, int end, int bottom) -> void
static AndroidX.Core.View.ViewKt.DoOnAttach(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.ViewKt.DoOnDetach(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.ViewKt.DoOnLayout(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.ViewKt.DoOnNextLayout(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! action) -> void
static AndroidX.Core.View.ViewKt.DoOnPreDraw(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! action) -> AndroidX.Core.View.OneShotPreDrawListener!
static AndroidX.Core.View.ViewKt.DrawToBitmap(Android.Views.View! obj, Android.Graphics.Bitmap.Config! config) -> Android.Graphics.Bitmap!
static AndroidX.Core.View.ViewKt.GetAllViews(Android.Views.View! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Core.View.ViewKt.GetAncestors(Android.Views.View! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Core.View.ViewKt.GetMarginBottom(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.GetMarginEnd(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.GetMarginLeft(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.GetMarginRight(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.GetMarginStart(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.GetMarginTop(Android.Views.View! obj) -> int
static AndroidX.Core.View.ViewKt.IsGone(Android.Views.View! obj) -> bool
static AndroidX.Core.View.ViewKt.IsInvisible(Android.Views.View! obj) -> bool
static AndroidX.Core.View.ViewKt.IsVisible(Android.Views.View! obj) -> bool
static AndroidX.Core.View.ViewKt.PostDelayed(Android.Views.View! obj, long delayInMillis, Kotlin.Jvm.Functions.IFunction0! action) -> Java.Lang.IRunnable!
static AndroidX.Core.View.ViewKt.PostOnAnimationDelayed(Android.Views.View! obj, long delayInMillis, Kotlin.Jvm.Functions.IFunction0! action) -> Java.Lang.IRunnable!
static AndroidX.Core.View.ViewKt.SetGone(Android.Views.View! obj, bool value) -> void
static AndroidX.Core.View.ViewKt.SetInvisible(Android.Views.View! obj, bool value) -> void
static AndroidX.Core.View.ViewKt.SetPadding(Android.Views.View! obj, int size) -> void
static AndroidX.Core.View.ViewKt.SetVisible(Android.Views.View! obj, bool value) -> void
static AndroidX.Core.View.ViewKt.UpdateLayoutParams(Android.Views.View! obj, Kotlin.Jvm.Functions.IFunction1! block) -> void
static AndroidX.Core.View.ViewKt.UpdatePadding(Android.Views.View! obj, int left, int top, int right, int bottom) -> void
static AndroidX.Core.View.ViewKt.UpdatePaddingRelative(Android.Views.View! obj, int start, int top, int end, int bottom) -> void
static AndroidX.Core.Widget.TextViewKt.AddTextChangedListener(Android.Widget.TextView! obj, Kotlin.Jvm.Functions.IFunction4! beforeTextChanged, Kotlin.Jvm.Functions.IFunction4! onTextChanged, Kotlin.Jvm.Functions.IFunction1! afterTextChanged) -> Android.Text.ITextWatcher!
static AndroidX.Core.Widget.TextViewKt.DoAfterTextChanged(Android.Widget.TextView! obj, Kotlin.Jvm.Functions.IFunction1! action) -> Android.Text.ITextWatcher!
static AndroidX.Core.Widget.TextViewKt.DoBeforeTextChanged(Android.Widget.TextView! obj, Kotlin.Jvm.Functions.IFunction4! action) -> Android.Text.ITextWatcher!
static AndroidX.Core.Widget.TextViewKt.DoOnTextChanged(Android.Widget.TextView! obj, Kotlin.Jvm.Functions.IFunction4! action) -> Android.Text.ITextWatcher!
