#nullable enable
AndroidX.Core.Animation.AccelerateDecelerateInterpolator
AndroidX.Core.Animation.AccelerateDecelerateInterpolator.AccelerateDecelerateInterpolator() -> void
AndroidX.Core.Animation.AccelerateDecelerateInterpolator.AccelerateDecelerateInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AccelerateInterpolator
AndroidX.Core.Animation.AccelerateInterpolator.AccelerateInterpolator() -> void
AndroidX.Core.Animation.AccelerateInterpolator.AccelerateInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet! attrs) -> void
AndroidX.Core.Animation.AccelerateInterpolator.AccelerateInterpolator(float factor) -> void
AndroidX.Core.Animation.AccelerateInterpolator.AccelerateInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AnimationHandler
AndroidX.Core.Animation.AnimationHandler.AnimationHandler(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.Animator
AndroidX.Core.Animation.Animator.AnimationCancelEventArgs
AndroidX.Core.Animation.Animator.AnimationCancelEventArgs.AnimationCancelEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationCancelEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.AnimationEndEventArgs
AndroidX.Core.Animation.Animator.AnimationEndEventArgs.AnimationEndEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationEndEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.AnimationPause -> System.EventHandler<AndroidX.Core.Animation.Animator.AnimationPauseEventArgs!>!
AndroidX.Core.Animation.Animator.AnimationPauseEventArgs
AndroidX.Core.Animation.Animator.AnimationPauseEventArgs.AnimationPauseEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationPauseEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.AnimationRepeatEventArgs
AndroidX.Core.Animation.Animator.AnimationRepeatEventArgs.AnimationRepeatEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationRepeatEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.AnimationResume -> System.EventHandler<AndroidX.Core.Animation.Animator.AnimationResumeEventArgs!>!
AndroidX.Core.Animation.Animator.AnimationResumeEventArgs
AndroidX.Core.Animation.Animator.AnimationResumeEventArgs.AnimationResumeEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationResumeEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.AnimationStartEventArgs
AndroidX.Core.Animation.Animator.AnimationStartEventArgs.AnimationStartEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimationStartEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.Animator() -> void
AndroidX.Core.Animation.Animator.Animator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.Animator.AnimatorUpdateEventArgs
AndroidX.Core.Animation.Animator.AnimatorUpdateEventArgs.AnimatorUpdateEventArgs(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.AnimatorUpdateEventArgs.P0.get -> AndroidX.Core.Animation.Animator!
AndroidX.Core.Animation.Animator.IAnimatorListener
AndroidX.Core.Animation.Animator.IAnimatorListener.OnAnimationCancel(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorListener.OnAnimationEnd(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorListener.OnAnimationRepeat(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorListener.OnAnimationStart(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorPauseListener
AndroidX.Core.Animation.Animator.IAnimatorPauseListener.OnAnimationPause(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorPauseListener.OnAnimationResume(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.IAnimatorUpdateListener
AndroidX.Core.Animation.Animator.IAnimatorUpdateListener.OnAnimationUpdate(AndroidX.Core.Animation.Animator! p0) -> void
AndroidX.Core.Animation.Animator.Update -> System.EventHandler<AndroidX.Core.Animation.Animator.AnimatorUpdateEventArgs!>!
AndroidX.Core.Animation.AnimatorInflater
AndroidX.Core.Animation.AnimatorInflater.AnimatorInflater(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AnimatorListenerAdapter
AndroidX.Core.Animation.AnimatorListenerAdapter.AnimatorListenerAdapter() -> void
AndroidX.Core.Animation.AnimatorListenerAdapter.AnimatorListenerAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AnimatorSet
AndroidX.Core.Animation.AnimatorSet.AnimatorSet() -> void
AndroidX.Core.Animation.AnimatorSet.Builder
AndroidX.Core.Animation.AnimatorSet.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AnimatorSet.CanReverse() -> bool
AndroidX.Core.Animation.AnimatorSet.ChildAnimations.get -> System.Collections.Generic.IList<AndroidX.Core.Animation.Animator!>!
AndroidX.Core.Animation.AnimatorSet.CurrentPlayTime.get -> long
AndroidX.Core.Animation.AnimatorSet.CurrentPlayTime.set -> void
AndroidX.Core.Animation.AnimatorSet.DoAnimationFrame(long frameTime) -> bool
AndroidX.Core.Animation.AnimatorSet.Play(AndroidX.Core.Animation.Animator! anim) -> AndroidX.Core.Animation.AnimatorSet.Builder!
AndroidX.Core.Animation.AnimatorSet.PlaySequentially(System.Collections.Generic.IList<AndroidX.Core.Animation.Animator!>! items) -> void
AndroidX.Core.Animation.AnimatorSet.PlaySequentially(params AndroidX.Core.Animation.Animator![]! items) -> void
AndroidX.Core.Animation.AnimatorSet.PlayTogether(System.Collections.Generic.ICollection<AndroidX.Core.Animation.Animator!>! items) -> void
AndroidX.Core.Animation.AnimatorSet.PlayTogether(params AndroidX.Core.Animation.Animator![]! items) -> void
AndroidX.Core.Animation.AnimatorSet.Reverse() -> void
AndroidX.Core.Animation.AnticipateInterpolator
AndroidX.Core.Animation.AnticipateInterpolator.AnticipateInterpolator() -> void
AndroidX.Core.Animation.AnticipateInterpolator.AnticipateInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.AnticipateInterpolator.AnticipateInterpolator(float tension) -> void
AndroidX.Core.Animation.AnticipateInterpolator.AnticipateInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.AnticipateOvershootInterpolator
AndroidX.Core.Animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator() -> void
AndroidX.Core.Animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(float tension) -> void
AndroidX.Core.Animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(float tension, float extraTension) -> void
AndroidX.Core.Animation.AnticipateOvershootInterpolator.AnticipateOvershootInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.ArgbEvaluator
AndroidX.Core.Animation.ArgbEvaluator.Evaluate(float fraction, Java.Lang.Integer! startValue, Java.Lang.Integer! endValue) -> Java.Lang.Integer!
AndroidX.Core.Animation.BidirectionalTypeConverter
AndroidX.Core.Animation.BidirectionalTypeConverter.BidirectionalTypeConverter(Java.Lang.Class! fromClass, Java.Lang.Class! toClass) -> void
AndroidX.Core.Animation.BidirectionalTypeConverter.BidirectionalTypeConverter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.BounceInterpolator
AndroidX.Core.Animation.BounceInterpolator.BounceInterpolator() -> void
AndroidX.Core.Animation.BounceInterpolator.BounceInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.CycleInterpolator
AndroidX.Core.Animation.CycleInterpolator.CycleInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.CycleInterpolator.CycleInterpolator(float cycles) -> void
AndroidX.Core.Animation.CycleInterpolator.CycleInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.DecelerateInterpolator
AndroidX.Core.Animation.DecelerateInterpolator.DecelerateInterpolator() -> void
AndroidX.Core.Animation.DecelerateInterpolator.DecelerateInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.DecelerateInterpolator.DecelerateInterpolator(float factor) -> void
AndroidX.Core.Animation.DecelerateInterpolator.DecelerateInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.FloatArrayEvaluator
AndroidX.Core.Animation.FloatArrayEvaluator.Evaluate(float fraction, float[]! startValue, float[]! endValue) -> float[]!
AndroidX.Core.Animation.FloatArrayEvaluator.FloatArrayEvaluator() -> void
AndroidX.Core.Animation.FloatArrayEvaluator.FloatArrayEvaluator(float[]? reuseArray) -> void
AndroidX.Core.Animation.FloatEvaluator
AndroidX.Core.Animation.FloatEvaluator.Evaluate(float fraction, Java.Lang.Float! startValue, Java.Lang.Float! endValue) -> Java.Lang.Float!
AndroidX.Core.Animation.FloatProperty
AndroidX.Core.Animation.FloatProperty.FloatProperty() -> void
AndroidX.Core.Animation.FloatProperty.FloatProperty(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.FloatProperty.FloatProperty(string! name) -> void
AndroidX.Core.Animation.FloatProperty.Set(Java.Lang.Object! object, Java.Lang.Float! value) -> void
AndroidX.Core.Animation.IInterpolator
AndroidX.Core.Animation.IInterpolator.GetInterpolation(float p0) -> float
AndroidX.Core.Animation.ITypeEvaluator
AndroidX.Core.Animation.ITypeEvaluator.Evaluate(float p0, Java.Lang.Object! p1, Java.Lang.Object! p2) -> Java.Lang.Object!
AndroidX.Core.Animation.IntArrayEvaluator
AndroidX.Core.Animation.IntArrayEvaluator.IntArrayEvaluator() -> void
AndroidX.Core.Animation.IntArrayEvaluator.IntArrayEvaluator(int[]? reuseArray) -> void
AndroidX.Core.Animation.IntArrayEvaluator.IntArrayEvaluator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.IntEvaluator
AndroidX.Core.Animation.IntEvaluator.IntEvaluator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.IntProperty
AndroidX.Core.Animation.IntProperty.IntProperty() -> void
AndroidX.Core.Animation.IntProperty.IntProperty(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.IntProperty.IntProperty(string! name) -> void
AndroidX.Core.Animation.IntProperty.Set(Java.Lang.Object! object, Java.Lang.Integer! value) -> void
AndroidX.Core.Animation.Keyframe
AndroidX.Core.Animation.Keyframe.Keyframe() -> void
AndroidX.Core.Animation.Keyframe.Keyframe(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.LinearInterpolator
AndroidX.Core.Animation.LinearInterpolator.LinearInterpolator() -> void
AndroidX.Core.Animation.LinearInterpolator.LinearInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.LinearInterpolator.LinearInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.ObjectAnimator
AndroidX.Core.Animation.ObjectAnimator.ObjectAnimator() -> void
AndroidX.Core.Animation.ObjectAnimator.PropertyName.get -> string!
AndroidX.Core.Animation.ObjectAnimator.PropertyName.set -> void
AndroidX.Core.Animation.ObjectAnimator.SetAutoCancel(bool cancel) -> void
AndroidX.Core.Animation.ObjectAnimator.SetProperty(Android.Util.Property! property) -> void
AndroidX.Core.Animation.ObjectAnimator.Target.get -> Java.Lang.Object?
AndroidX.Core.Animation.OvershootInterpolator
AndroidX.Core.Animation.OvershootInterpolator.OvershootInterpolator() -> void
AndroidX.Core.Animation.OvershootInterpolator.OvershootInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Core.Animation.OvershootInterpolator.OvershootInterpolator(float tension) -> void
AndroidX.Core.Animation.OvershootInterpolator.OvershootInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.PathInterpolator
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, System.Xml.XmlReader! parser) -> void
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(Android.Content.Res.Resources! res, Android.Content.Res.Resources.Theme? theme, Android.Util.IAttributeSet? attrs, System.Xml.XmlReader! parser) -> void
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(Android.Graphics.Path! path) -> void
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(float controlX, float controlY) -> void
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(float controlX1, float controlY1, float controlX2, float controlY2) -> void
AndroidX.Core.Animation.PathInterpolator.PathInterpolator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.PointFEvaluator
AndroidX.Core.Animation.PointFEvaluator.PointFEvaluator() -> void
AndroidX.Core.Animation.PointFEvaluator.PointFEvaluator(Android.Graphics.PointF! reuse) -> void
AndroidX.Core.Animation.PointFEvaluator.PointFEvaluator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.PropertyValuesHolder
AndroidX.Core.Animation.PropertyValuesHolder.PropertyValuesHolder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.RectEvaluator
AndroidX.Core.Animation.RectEvaluator.RectEvaluator() -> void
AndroidX.Core.Animation.RectEvaluator.RectEvaluator(Android.Graphics.Rect! reuseRect) -> void
AndroidX.Core.Animation.RectEvaluator.RectEvaluator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.TimeAnimator
AndroidX.Core.Animation.TimeAnimator.ITimeListener
AndroidX.Core.Animation.TimeAnimator.ITimeListener.OnTimeUpdate(AndroidX.Core.Animation.TimeAnimator! p0, long p1, long p2) -> void
AndroidX.Core.Animation.TimeAnimator.Time -> System.EventHandler<AndroidX.Core.Animation.TimeAnimator.TimeEventArgs!>!
AndroidX.Core.Animation.TimeAnimator.TimeAnimator() -> void
AndroidX.Core.Animation.TimeAnimator.TimeAnimator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.TimeAnimator.TimeEventArgs
AndroidX.Core.Animation.TimeAnimator.TimeEventArgs.P0.get -> AndroidX.Core.Animation.TimeAnimator!
AndroidX.Core.Animation.TimeAnimator.TimeEventArgs.P1.get -> long
AndroidX.Core.Animation.TimeAnimator.TimeEventArgs.P2.get -> long
AndroidX.Core.Animation.TimeAnimator.TimeEventArgs.TimeEventArgs(AndroidX.Core.Animation.TimeAnimator! p0, long p1, long p2) -> void
AndroidX.Core.Animation.TypeConverter
AndroidX.Core.Animation.TypeConverter.TypeConverter(Java.Lang.Class! fromClass, Java.Lang.Class! toClass) -> void
AndroidX.Core.Animation.TypeConverter.TypeConverter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Core.Animation.ValueAnimator
AndroidX.Core.Animation.ValueAnimator.DoAnimationFrame(long frameTime) -> bool
AndroidX.Core.Animation.ValueAnimator.ValueAnimator() -> void
AndroidX.Core.Animation.ValueAnimator.ValueAnimator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.Core.Animation.Animator.Duration.get -> long
abstract AndroidX.Core.Animation.Animator.Duration.set -> void
abstract AndroidX.Core.Animation.Animator.IsRunning.get -> bool
abstract AndroidX.Core.Animation.Animator.SetInterpolator(AndroidX.Core.Animation.IInterpolator? p0) -> void
abstract AndroidX.Core.Animation.Animator.StartDelay.get -> long
abstract AndroidX.Core.Animation.Animator.StartDelay.set -> void
abstract AndroidX.Core.Animation.BidirectionalTypeConverter.ConvertBack(Java.Lang.Object! p0) -> Java.Lang.Object!
abstract AndroidX.Core.Animation.FloatProperty.SetValue(Java.Lang.Object! p0, float p1) -> void
abstract AndroidX.Core.Animation.IntProperty.SetValue(Java.Lang.Object! p0, int p1) -> void
abstract AndroidX.Core.Animation.Keyframe.Clone() -> AndroidX.Core.Animation.Keyframe!
abstract AndroidX.Core.Animation.Keyframe.RawValue.get -> Java.Lang.Object?
abstract AndroidX.Core.Animation.Keyframe.RawValue.set -> void
abstract AndroidX.Core.Animation.TypeConverter.Convert(Java.Lang.Object! p0) -> Java.Lang.Object!
const AndroidX.Core.Animation.Animator.DurationInfinite = -1 -> long
const AndroidX.Core.Animation.ValueAnimator.Infinite = -1 -> int
const AndroidX.Core.Animation.ValueAnimator.Restart = 1 -> int
override AndroidX.Core.Animation.AccelerateDecelerateInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AccelerateDecelerateInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AccelerateDecelerateInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AccelerateInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AccelerateInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AccelerateInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnimationHandler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnimationHandler.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnimationHandler.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.Animator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.Animator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.Animator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnimatorInflater.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnimatorInflater.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnimatorInflater.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnimatorListenerAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnimatorListenerAdapter.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnimatorListenerAdapter.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnimatorSet.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnimatorSet.Builder.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnimatorSet.Builder.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnimatorSet.Duration.get -> long
override AndroidX.Core.Animation.AnimatorSet.Duration.set -> void
override AndroidX.Core.Animation.AnimatorSet.IsRunning.get -> bool
override AndroidX.Core.Animation.AnimatorSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnimatorSet.SetInterpolator(AndroidX.Core.Animation.IInterpolator? interpolator) -> void
override AndroidX.Core.Animation.AnimatorSet.StartDelay.get -> long
override AndroidX.Core.Animation.AnimatorSet.StartDelay.set -> void
override AndroidX.Core.Animation.AnticipateInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnticipateInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnticipateInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.AnticipateOvershootInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.AnticipateOvershootInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.AnticipateOvershootInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.ArgbEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.BidirectionalTypeConverter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.BidirectionalTypeConverter.ThresholdClass.get -> nint
override AndroidX.Core.Animation.BidirectionalTypeConverter.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.BounceInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.BounceInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.BounceInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.CycleInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.CycleInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.CycleInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.DecelerateInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.DecelerateInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.DecelerateInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.FloatArrayEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.FloatEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.FloatProperty.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.FloatProperty.ThresholdClass.get -> nint
override AndroidX.Core.Animation.FloatProperty.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.IntArrayEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.IntArrayEvaluator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.IntArrayEvaluator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.IntEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.IntEvaluator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.IntEvaluator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.IntProperty.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.IntProperty.ThresholdClass.get -> nint
override AndroidX.Core.Animation.IntProperty.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.Keyframe.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.Keyframe.ThresholdClass.get -> nint
override AndroidX.Core.Animation.Keyframe.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.LinearInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.LinearInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.LinearInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.ObjectAnimator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.OvershootInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.OvershootInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.OvershootInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.PathInterpolator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.PathInterpolator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.PathInterpolator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.PointFEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.PointFEvaluator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.PointFEvaluator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.PropertyValuesHolder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.PropertyValuesHolder.ThresholdClass.get -> nint
override AndroidX.Core.Animation.PropertyValuesHolder.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.RectEvaluator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.RectEvaluator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.RectEvaluator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.TimeAnimator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.TimeAnimator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.TimeAnimator.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.TypeConverter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.TypeConverter.ThresholdClass.get -> nint
override AndroidX.Core.Animation.TypeConverter.ThresholdType.get -> System.Type!
override AndroidX.Core.Animation.ValueAnimator.Duration.get -> long
override AndroidX.Core.Animation.ValueAnimator.Duration.set -> void
override AndroidX.Core.Animation.ValueAnimator.IsRunning.get -> bool
override AndroidX.Core.Animation.ValueAnimator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Core.Animation.ValueAnimator.SetInterpolator(AndroidX.Core.Animation.IInterpolator? value) -> void
override AndroidX.Core.Animation.ValueAnimator.StartDelay.get -> long
override AndroidX.Core.Animation.ValueAnimator.StartDelay.set -> void
override AndroidX.Core.Animation.ValueAnimator.ThresholdClass.get -> nint
override AndroidX.Core.Animation.ValueAnimator.ThresholdType.get -> System.Type!
static AndroidX.Core.Animation.AnimationHandler.AnimationCount.get -> int
static AndroidX.Core.Animation.AnimationHandler.Instance.get -> Java.Lang.Object?
static AndroidX.Core.Animation.AnimationHandler.SAnimationHandler.get -> Java.Lang.ThreadLocal?
static AndroidX.Core.Animation.AnimatorInflater.LoadAnimator(Android.Content.Context! context, int id) -> AndroidX.Core.Animation.Animator!
static AndroidX.Core.Animation.AnimatorInflater.LoadAnimator(Android.Content.Res.Resources! resources, Android.Content.Res.Resources.Theme? theme, int id) -> AndroidX.Core.Animation.Animator!
static AndroidX.Core.Animation.AnimatorInflater.LoadInterpolator(Android.Content.Context! context, int id) -> AndroidX.Core.Animation.IInterpolator!
static AndroidX.Core.Animation.ArgbEvaluator.Instance.get -> AndroidX.Core.Animation.ArgbEvaluator!
static AndroidX.Core.Animation.FloatEvaluator.Instance.get -> AndroidX.Core.Animation.FloatEvaluator!
static AndroidX.Core.Animation.IntEvaluator.Instance.get -> AndroidX.Core.Animation.IntEvaluator!
static AndroidX.Core.Animation.Keyframe.OfFloat(float fraction) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.Keyframe.OfFloat(float fraction, float value) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.Keyframe.OfInt(float fraction) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.Keyframe.OfInt(float fraction, int value) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.Keyframe.OfObject(float fraction) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.Keyframe.OfObject(float fraction, Java.Lang.Object? value) -> AndroidX.Core.Animation.Keyframe!
static AndroidX.Core.Animation.ObjectAnimator.OfArgb(Java.Lang.Object! target, Android.Util.Property! property, params int[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfArgb(Java.Lang.Object! target, string! propertyName, params int[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfFloat(Java.Lang.Object! target, Android.Util.Property! property, params float[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfFloat(Java.Lang.Object! target, Android.Util.Property? xProperty, Android.Util.Property? yProperty, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfFloat(Java.Lang.Object! target, string! propertyName, params float[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfFloat(Java.Lang.Object! target, string? xPropertyName, string? yPropertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfInt(Java.Lang.Object! target, Android.Util.Property! property, params int[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfInt(Java.Lang.Object! target, Android.Util.Property? xProperty, Android.Util.Property? yProperty, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfInt(Java.Lang.Object! target, string! propertyName, params int[]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfInt(Java.Lang.Object! target, string! xPropertyName, string! yPropertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiFloat(Java.Lang.Object! target, string! propertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiFloat(Java.Lang.Object! target, string! propertyName, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiFloat(Java.Lang.Object! target, string! propertyName, float[]![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiInt(Java.Lang.Object! target, string! propertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiInt(Java.Lang.Object! target, string! propertyName, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfMultiInt(Java.Lang.Object! target, string! propertyName, int[]![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfObject(Java.Lang.Object! target, Android.Util.Property! property, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfObject(Java.Lang.Object! target, Android.Util.Property! property, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfObject(Java.Lang.Object! target, Android.Util.Property! property, AndroidX.Core.Animation.TypeConverter? converter, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfObject(Java.Lang.Object! target, string! propertyName, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfObject(Java.Lang.Object! target, string! propertyName, AndroidX.Core.Animation.TypeConverter? converter, Android.Graphics.Path! path) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.ObjectAnimator.OfPropertyValuesHolder(Java.Lang.Object! target, params AndroidX.Core.Animation.PropertyValuesHolder![]! values) -> AndroidX.Core.Animation.ObjectAnimator!
static AndroidX.Core.Animation.PropertyValuesHolder.OfFloat(Android.Util.Property! property, params float[]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfFloat(string! propertyName, params float[]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfInt(Android.Util.Property! property, params int[]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfInt(string! propertyName, params int[]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfKeyframe(Android.Util.Property! property, params AndroidX.Core.Animation.Keyframe![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfKeyframe(string! propertyName, params AndroidX.Core.Animation.Keyframe![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiFloat(string! propertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiFloat(string! propertyName, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiFloat(string! propertyName, AndroidX.Core.Animation.TypeConverter? converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params AndroidX.Core.Animation.Keyframe![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiFloat(string! propertyName, float[]![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiInt(string! propertyName, Android.Graphics.Path! path) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiInt(string! propertyName, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiInt(string! propertyName, AndroidX.Core.Animation.TypeConverter? converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params AndroidX.Core.Animation.Keyframe![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfMultiInt(string! propertyName, int[]![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfObject(Android.Util.Property! property, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfObject(Android.Util.Property! property, AndroidX.Core.Animation.TypeConverter! converter, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfObject(Android.Util.Property! property, AndroidX.Core.Animation.TypeConverter? converter, Android.Graphics.Path! path) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfObject(string! propertyName, AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.PropertyValuesHolder.OfObject(string! propertyName, AndroidX.Core.Animation.TypeConverter? converter, Android.Graphics.Path! path) -> AndroidX.Core.Animation.PropertyValuesHolder!
static AndroidX.Core.Animation.ValueAnimator.AreAnimatorsEnabled() -> bool
static AndroidX.Core.Animation.ValueAnimator.FrameDelay.get -> long
static AndroidX.Core.Animation.ValueAnimator.FrameDelay.set -> void
static AndroidX.Core.Animation.ValueAnimator.OfArgb(params int[]! values) -> AndroidX.Core.Animation.ValueAnimator!
static AndroidX.Core.Animation.ValueAnimator.OfFloat(params float[]! values) -> AndroidX.Core.Animation.ValueAnimator!
static AndroidX.Core.Animation.ValueAnimator.OfInt(params int[]! values) -> AndroidX.Core.Animation.ValueAnimator!
static AndroidX.Core.Animation.ValueAnimator.OfObject(AndroidX.Core.Animation.ITypeEvaluator! evaluator, params Java.Lang.Object![]! values) -> AndroidX.Core.Animation.ValueAnimator!
static AndroidX.Core.Animation.ValueAnimator.OfPropertyValuesHolder(params AndroidX.Core.Animation.PropertyValuesHolder![]! values) -> AndroidX.Core.Animation.ValueAnimator!
virtual AndroidX.Core.Animation.AccelerateDecelerateInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.AccelerateInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.Animator.AddListener(AndroidX.Core.Animation.Animator.IAnimatorListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.AddPauseListener(AndroidX.Core.Animation.Animator.IAnimatorPauseListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.AddUpdateListener(AndroidX.Core.Animation.Animator.IAnimatorUpdateListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.Cancel() -> void
virtual AndroidX.Core.Animation.Animator.Clone() -> AndroidX.Core.Animation.Animator!
virtual AndroidX.Core.Animation.Animator.End() -> void
virtual AndroidX.Core.Animation.Animator.Interpolator.get -> AndroidX.Core.Animation.IInterpolator?
virtual AndroidX.Core.Animation.Animator.IsPaused.get -> bool
virtual AndroidX.Core.Animation.Animator.IsStarted.get -> bool
virtual AndroidX.Core.Animation.Animator.Pause() -> void
virtual AndroidX.Core.Animation.Animator.RemoveAllListeners() -> void
virtual AndroidX.Core.Animation.Animator.RemoveAllUpdateListeners() -> void
virtual AndroidX.Core.Animation.Animator.RemoveListener(AndroidX.Core.Animation.Animator.IAnimatorListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.RemovePauseListener(AndroidX.Core.Animation.Animator.IAnimatorPauseListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.RemoveUpdateListener(AndroidX.Core.Animation.Animator.IAnimatorUpdateListener! listener) -> void
virtual AndroidX.Core.Animation.Animator.Resume() -> void
virtual AndroidX.Core.Animation.Animator.SetTarget(Java.Lang.Object? target) -> void
virtual AndroidX.Core.Animation.Animator.SetupEndValues() -> void
virtual AndroidX.Core.Animation.Animator.SetupStartValues() -> void
virtual AndroidX.Core.Animation.Animator.Start() -> void
virtual AndroidX.Core.Animation.Animator.TotalDuration.get -> long
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationCancel(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationEnd(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationPause(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationRepeat(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationResume(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorListenerAdapter.OnAnimationStart(AndroidX.Core.Animation.Animator! animation) -> void
virtual AndroidX.Core.Animation.AnimatorSet.Builder.After(AndroidX.Core.Animation.Animator! anim) -> AndroidX.Core.Animation.AnimatorSet.Builder!
virtual AndroidX.Core.Animation.AnimatorSet.Builder.After(long delay) -> AndroidX.Core.Animation.AnimatorSet.Builder!
virtual AndroidX.Core.Animation.AnimatorSet.Builder.Before(AndroidX.Core.Animation.Animator! anim) -> AndroidX.Core.Animation.AnimatorSet.Builder!
virtual AndroidX.Core.Animation.AnimatorSet.Builder.With(AndroidX.Core.Animation.Animator! anim) -> AndroidX.Core.Animation.AnimatorSet.Builder!
virtual AndroidX.Core.Animation.AnticipateInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.AnticipateOvershootInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.BidirectionalTypeConverter.Invert() -> AndroidX.Core.Animation.BidirectionalTypeConverter!
virtual AndroidX.Core.Animation.BounceInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.CycleInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.DecelerateInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.IntArrayEvaluator.Evaluate(float fraction, int[]! startValue, int[]! endValue) -> int[]!
virtual AndroidX.Core.Animation.IntEvaluator.Evaluate(float fraction, Java.Lang.Integer! startValue, Java.Lang.Integer! endValue) -> Java.Lang.Integer!
virtual AndroidX.Core.Animation.Keyframe.Fraction.get -> float
virtual AndroidX.Core.Animation.Keyframe.Fraction.set -> void
virtual AndroidX.Core.Animation.Keyframe.HasValue.get -> bool
virtual AndroidX.Core.Animation.Keyframe.Interpolator.get -> AndroidX.Core.Animation.IInterpolator?
virtual AndroidX.Core.Animation.Keyframe.Interpolator.set -> void
virtual AndroidX.Core.Animation.Keyframe.Type.get -> Java.Lang.Class!
virtual AndroidX.Core.Animation.LinearInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.OvershootInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.PathInterpolator.GetInterpolation(float input) -> float
virtual AndroidX.Core.Animation.PointFEvaluator.Evaluate(float fraction, Android.Graphics.PointF! startValue, Android.Graphics.PointF! endValue) -> Android.Graphics.PointF!
virtual AndroidX.Core.Animation.PropertyValuesHolder.Clone() -> AndroidX.Core.Animation.PropertyValuesHolder!
virtual AndroidX.Core.Animation.PropertyValuesHolder.PropertyName.get -> string!
virtual AndroidX.Core.Animation.PropertyValuesHolder.PropertyName.set -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetConverter(AndroidX.Core.Animation.TypeConverter? converter) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetEvaluator(AndroidX.Core.Animation.ITypeEvaluator! evaluator) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetFloatValues(params float[]! values) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetIntValues(params int[]! values) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetKeyframes(params AndroidX.Core.Animation.Keyframe![]! values) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetObjectValues(params Java.Lang.Object![]! values) -> void
virtual AndroidX.Core.Animation.PropertyValuesHolder.SetProperty(Android.Util.Property! property) -> void
virtual AndroidX.Core.Animation.RectEvaluator.Evaluate(float fraction, Android.Graphics.Rect! startValue, Android.Graphics.Rect! endValue) -> Android.Graphics.Rect!
virtual AndroidX.Core.Animation.TimeAnimator.SetTimeListener(AndroidX.Core.Animation.TimeAnimator.ITimeListener? listener) -> void
virtual AndroidX.Core.Animation.ValueAnimator.AnimatedFraction.get -> float
virtual AndroidX.Core.Animation.ValueAnimator.AnimatedValue.get -> Java.Lang.Object!
virtual AndroidX.Core.Animation.ValueAnimator.CurrentPlayTime.get -> long
virtual AndroidX.Core.Animation.ValueAnimator.CurrentPlayTime.set -> void
virtual AndroidX.Core.Animation.ValueAnimator.GetAnimatedValue(string! propertyName) -> Java.Lang.Object?
virtual AndroidX.Core.Animation.ValueAnimator.GetValues() -> AndroidX.Core.Animation.PropertyValuesHolder![]!
virtual AndroidX.Core.Animation.ValueAnimator.NameForTrace.get -> string!
virtual AndroidX.Core.Animation.ValueAnimator.NameForTrace.set -> void
virtual AndroidX.Core.Animation.ValueAnimator.RepeatCount.get -> int
virtual AndroidX.Core.Animation.ValueAnimator.RepeatCount.set -> void
virtual AndroidX.Core.Animation.ValueAnimator.RepeatMode.get -> int
virtual AndroidX.Core.Animation.ValueAnimator.RepeatMode.set -> void
virtual AndroidX.Core.Animation.ValueAnimator.Reverse() -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetCurrentFraction(float fraction) -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetEvaluator(AndroidX.Core.Animation.ITypeEvaluator! value) -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetFloatValues(params float[]! values) -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetIntValues(params int[]! values) -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetObjectValues(params Java.Lang.Object![]! values) -> void
virtual AndroidX.Core.Animation.ValueAnimator.SetValues(params AndroidX.Core.Animation.PropertyValuesHolder![]! values) -> void
