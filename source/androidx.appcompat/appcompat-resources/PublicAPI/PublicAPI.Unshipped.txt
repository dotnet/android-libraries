#nullable enable
AndroidX.AppCompat.Content.Res.AppCompatResources
AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat
AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.AnimatedStateListDrawableCompat() -> void
AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.AnimatedStateListDrawableCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableContainer
AndroidX.AppCompat.Graphics.Drawable.DrawableContainer.DrawableContainer() -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat
AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.DrawableContainerCompat() -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.DrawableContainerCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableWrapper
AndroidX.AppCompat.Graphics.Drawable.DrawableWrapper.DrawableWrapper(Android.Graphics.Drawables.Drawable! drawable) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat
AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.DrawableWrapperCompat(Android.Graphics.Drawables.Drawable? drawable) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.DrawableWrapperCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat
AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.StateListDrawableCompat() -> void
AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.StateListDrawableCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Resources.Compatibility
AndroidX.AppCompat.Widget.DrawableUtils
AndroidX.AppCompat.Widget.DrawableUtils.DrawableUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ResourceManagerInternal
AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate
AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate.AsldcInflateDelegate(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ResourceManagerInternal.GetDrawable(Android.Content.Context! context, int resId) -> Android.Graphics.Drawables.Drawable?
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks.CreateDrawableFor(AndroidX.AppCompat.Widget.ResourceManagerInternal! p0, Android.Content.Context! p1, int p2) -> Android.Graphics.Drawables.Drawable?
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks.GetTintListForDrawableRes(Android.Content.Context! p0, int p1) -> Android.Content.Res.ColorStateList?
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks.GetTintModeForDrawableRes(int p0) -> Android.Graphics.PorterDuff.Mode?
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks.TintDrawable(Android.Content.Context! p0, int p1, Android.Graphics.Drawables.Drawable! p2) -> bool
AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks.TintDrawableUsingColorFilter(Android.Content.Context! p0, int p1, Android.Graphics.Drawables.Drawable! p2) -> bool
AndroidX.AppCompat.Widget.ResourceManagerInternal.OnConfigurationChanged(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ResourceManagerInternal.ResourceManagerInternal() -> void
AndroidX.AppCompat.Widget.ResourceManagerInternal.SetHooks(AndroidX.AppCompat.Widget.ResourceManagerInternal.IResourceManagerHooks? hooks) -> void
AndroidX.AppCompat.Widget.TintContextWrapper
AndroidX.AppCompat.Widget.TintContextWrapper.TintContextWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.TintInfo
AndroidX.AppCompat.Widget.TintInfo.MHasTintList.get -> bool
AndroidX.AppCompat.Widget.TintInfo.MHasTintList.set -> void
AndroidX.AppCompat.Widget.TintInfo.MHasTintMode.get -> bool
AndroidX.AppCompat.Widget.TintInfo.MHasTintMode.set -> void
AndroidX.AppCompat.Widget.TintInfo.MTintList.get -> Android.Content.Res.ColorStateList?
AndroidX.AppCompat.Widget.TintInfo.MTintList.set -> void
AndroidX.AppCompat.Widget.TintInfo.MTintMode.get -> Android.Graphics.PorterDuff.Mode?
AndroidX.AppCompat.Widget.TintInfo.MTintMode.set -> void
AndroidX.AppCompat.Widget.TintInfo.TintInfo() -> void
AndroidX.AppCompat.Widget.TintInfo.TintInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.VectorEnabledTintResources
AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetQuantityText(int p0, int p1) -> string?
AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetText(int p0) -> string?
AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetText(int p0, string? p1) -> string?
AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetTextArray(int p0) -> string![]?
AndroidX.AppCompat.Widget.VectorEnabledTintResources.VectorEnabledTintResources(Android.Content.Context! context, Android.Content.Res.Resources! res) -> void
AndroidX.AppCompat.Widget.VectorEnabledTintResources.VectorEnabledTintResources(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const AndroidX.AppCompat.Widget.VectorEnabledTintResources.MaxSdkWhereRequired = 20 -> int
override AndroidX.AppCompat.Content.Res.AppCompatResources.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.Draw(Android.Graphics.Canvas! canvas) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.Opacity.get -> int
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.SetAlpha(int alpha) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.SetColorFilter(Android.Graphics.ColorFilter? colorFilter) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.Draw(Android.Graphics.Canvas! canvas) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.Opacity.get -> int
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.SetAlpha(int alpha) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.SetColorFilter(Android.Graphics.ColorFilter? cf) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Resources.Compatibility.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.DrawableUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.DrawableUtils.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.DrawableUtils.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ResourceManagerInternal.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TintContextWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TintContextWrapper.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.TintContextWrapper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.TintInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TintInfo.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.TintInfo.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.Configuration.get -> Android.Content.Res.Configuration?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.DisplayMetrics.get -> Android.Util.DisplayMetrics?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetAnimation(int p0) -> System.Xml.XmlReader?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetBoolean(int p0) -> bool
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetColorStateList(int p0) -> Android.Content.Res.ColorStateList?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDimension(int p0) -> float
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDimensionPixelOffset(int p0) -> int
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDimensionPixelSize(int p0) -> int
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDrawable(int id) -> Android.Graphics.Drawables.Drawable?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDrawable(int p0, Android.Content.Res.Resources.Theme? p1) -> Android.Graphics.Drawables.Drawable?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDrawableForDensity(int p0, int p1) -> Android.Graphics.Drawables.Drawable?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetDrawableForDensity(int p0, int p1, Android.Content.Res.Resources.Theme? p2) -> Android.Graphics.Drawables.Drawable?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetFraction(int p0, int p1, int p2) -> float
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetIdentifier(string? p0, string? p1, string? p2) -> int
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetIntArray(int p0) -> int[]?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetInteger(int p0) -> int
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetLayout(int p0) -> System.Xml.XmlReader?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetMovie(int p0) -> Android.Graphics.Movie?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetQuantityString(int p0, int p1) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetQuantityString(int p0, int p1, params Java.Lang.Object![]? p2) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetQuantityTextFormatted(int p0, int p1) -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetResourceEntryName(int p0) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetResourceName(int p0) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetResourcePackageName(int p0) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetResourceTypeName(int p0) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetString(int p0) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetString(int p0, params Java.Lang.Object![]? p1) -> string?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetStringArray(int p0) -> string![]?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetTextArrayFormatted(int p0) -> Java.Lang.ICharSequence![]?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetTextFormatted(int p0) -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetTextFormatted(int p0, Java.Lang.ICharSequence? p1) -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetValue(int p0, Android.Util.TypedValue? p1, bool p2) -> void
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetValue(string? p0, Android.Util.TypedValue? p1, bool p2) -> void
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetValueForDensity(int p0, int p1, Android.Util.TypedValue? p2, bool p3) -> void
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetXml(int p0) -> System.Xml.XmlReader?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ObtainAttributes(Android.Util.IAttributeSet? p0, int[]? p1) -> Android.Content.Res.TypedArray?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ObtainTypedArray(int p0) -> Android.Content.Res.TypedArray?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.OpenRawResource(int p0) -> System.IO.Stream?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.OpenRawResource(int p0, Android.Util.TypedValue? p1) -> System.IO.Stream?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.OpenRawResourceFd(int p0) -> Android.Content.Res.AssetFileDescriptor?
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ParseBundleExtra(string? p0, Android.Util.IAttributeSet? p1, Android.OS.Bundle? p2) -> void
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ParseBundleExtras(System.Xml.XmlReader? p0, Android.OS.Bundle? p1) -> void
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.VectorEnabledTintResources.UpdateConfiguration(Android.Content.Res.Configuration? p0, Android.Util.DisplayMetrics? p1) -> void
override sealed AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.GetConstantState() -> Android.Graphics.Drawables.Drawable.ConstantState?
static AndroidX.AppCompat.Content.Res.AppCompatResources.GetColorStateList(Android.Content.Context! context, int resId) -> Android.Content.Res.ColorStateList?
static AndroidX.AppCompat.Content.Res.AppCompatResources.GetDrawable(Android.Content.Context! context, int resId) -> Android.Graphics.Drawables.Drawable?
static AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.Create(Android.Content.Context! context, int resId, Android.Content.Res.Resources.Theme? theme) -> AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat?
static AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.CreateFromXmlInner(Android.Content.Context! context, Android.Content.Res.Resources! resources, System.Xml.XmlReader! parser, Android.Util.IAttributeSet! attrs, Android.Content.Res.Resources.Theme? theme) -> AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat!
static AndroidX.AppCompat.Widget.DrawableUtils.CanSafelyMutateDrawable(Android.Graphics.Drawables.Drawable! drawable) -> bool
static AndroidX.AppCompat.Widget.DrawableUtils.GetOpticalBounds(Android.Graphics.Drawables.Drawable! drawable) -> Android.Graphics.Rect!
static AndroidX.AppCompat.Widget.DrawableUtils.InsetsNone.get -> Android.Graphics.Rect?
static AndroidX.AppCompat.Widget.DrawableUtils.ParseTintMode(int value, Android.Graphics.PorterDuff.Mode? defaultMode) -> Android.Graphics.PorterDuff.Mode?
static AndroidX.AppCompat.Widget.ResourceManagerInternal.Get() -> AndroidX.AppCompat.Widget.ResourceManagerInternal?
static AndroidX.AppCompat.Widget.ResourceManagerInternal.GetPorterDuffColorFilter(int color, Android.Graphics.PorterDuff.Mode? mode) -> Android.Graphics.PorterDuffColorFilter?
static AndroidX.AppCompat.Widget.TintContextWrapper.Wrap(Android.Content.Context! context) -> Android.Content.Context?
static AndroidX.AppCompat.Widget.VectorEnabledTintResources.CompatVectorFromResourcesEnabled.get -> bool
static AndroidX.AppCompat.Widget.VectorEnabledTintResources.CompatVectorFromResourcesEnabled.set -> void
static AndroidX.AppCompat.Widget.VectorEnabledTintResources.ShouldBeUsed() -> bool
virtual AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.AddState(int[]! stateSet, Android.Graphics.Drawables.Drawable! drawable, int id) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.AnimatedStateListDrawableCompat.AddTransition(int fromId, int toId, Java.Lang.Object! transition, bool reversible) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.InvalidateDrawable(Android.Graphics.Drawables.Drawable! who) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.ScheduleDrawable(Android.Graphics.Drawables.Drawable! who, Java.Lang.IRunnable! what, long when) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.SetEnterFadeDuration(int ms) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.SetExitFadeDuration(int ms) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableContainerCompat.UnscheduleDrawable(Android.Graphics.Drawables.Drawable! who, Java.Lang.IRunnable! what) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.Drawable.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.Drawable.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.InvalidateDrawable(Android.Graphics.Drawables.Drawable? who) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.ScheduleDrawable(Android.Graphics.Drawables.Drawable? who, Java.Lang.IRunnable? what, long when) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawableWrapperCompat.UnscheduleDrawable(Android.Graphics.Drawables.Drawable? who, Java.Lang.IRunnable? what) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.AddState(int[]? stateSet, Android.Graphics.Drawables.Drawable? drawable) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.StateListDrawableCompat.Inflate(Android.Content.Context! context, Android.Content.Res.Resources! r, System.Xml.XmlReader! parser, Android.Util.IAttributeSet! attrs, Android.Content.Res.Resources.Theme? theme) -> void
virtual AndroidX.AppCompat.Widget.ResourceManagerInternal.AsldcInflateDelegate.CreateFromXmlInner(Android.Content.Context! context, System.Xml.XmlReader! parser, Android.Util.IAttributeSet! attrs, Android.Content.Res.Resources.Theme? theme) -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.VectorEnabledTintResources.GetColor(int p0) -> Android.Graphics.ColorObject?
