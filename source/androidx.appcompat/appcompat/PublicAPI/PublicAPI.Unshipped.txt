#nullable enable
AndroidX.AppCompat.App.ActionBar
AndroidX.AppCompat.App.ActionBar.ActionBar() -> void
AndroidX.AppCompat.App.ActionBar.ActionBar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.ActionBar.IDisplayOptions
AndroidX.AppCompat.App.ActionBar.INavigationMode
AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener
AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener.OnMenuVisibilityChanged(bool isVisible) -> void
AndroidX.AppCompat.App.ActionBar.IOnNavigationListener
AndroidX.AppCompat.App.ActionBar.IOnNavigationListener.OnNavigationItemSelected(int itemPosition, long itemId) -> bool
AndroidX.AppCompat.App.ActionBar.ITabListener
AndroidX.AppCompat.App.ActionBar.ITabListener.OnTabReselected(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.ITabListener.OnTabSelected(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.ITabListener.OnTabUnselected(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams
AndroidX.AppCompat.App.ActionBar.LayoutParams.Gravity.get -> int
AndroidX.AppCompat.App.ActionBar.LayoutParams.Gravity.set -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(Android.Content.Context! c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? source) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(AndroidX.AppCompat.App.ActionBar.LayoutParams? source) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(int gravity) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(int width, int height, int gravity) -> void
AndroidX.AppCompat.App.ActionBar.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.ActionBar.MenuVisibility -> System.EventHandler<AndroidX.AppCompat.App.ActionBar.MenuVisibilityEventArgs!>!
AndroidX.AppCompat.App.ActionBar.MenuVisibilityEventArgs
AndroidX.AppCompat.App.ActionBar.MenuVisibilityEventArgs.IsVisible.get -> bool
AndroidX.AppCompat.App.ActionBar.MenuVisibilityEventArgs.MenuVisibilityEventArgs(bool isVisible) -> void
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs.Handled.get -> bool
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs.Handled.set -> void
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs.ItemId.get -> long
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs.ItemPosition.get -> int
AndroidX.AppCompat.App.ActionBar.NavigationEventArgs.NavigationEventArgs(bool handled, int itemPosition, long itemId) -> void
AndroidX.AppCompat.App.ActionBar.SetHomeActionContentDescription(string? description) -> void
AndroidX.AppCompat.App.ActionBar.SetWindowTitle(string? title) -> void
AndroidX.AppCompat.App.ActionBar.Subtitle.get -> string?
AndroidX.AppCompat.App.ActionBar.Subtitle.set -> void
AndroidX.AppCompat.App.ActionBar.Tab
AndroidX.AppCompat.App.ActionBar.Tab.ContentDescription.get -> string?
AndroidX.AppCompat.App.ActionBar.Tab.SetContentDescription(string? contentDesc) -> AndroidX.AppCompat.App.ActionBar.Tab?
AndroidX.AppCompat.App.ActionBar.Tab.SetText(string? text) -> AndroidX.AppCompat.App.ActionBar.Tab?
AndroidX.AppCompat.App.ActionBar.Tab.Tab() -> void
AndroidX.AppCompat.App.ActionBar.Tab.Tab(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.ActionBar.Tab.Text.get -> string?
AndroidX.AppCompat.App.ActionBar.TabReselectedEventArgs
AndroidX.AppCompat.App.ActionBar.TabReselectedEventArgs.Ft.get -> AndroidX.Fragment.App.FragmentTransaction?
AndroidX.AppCompat.App.ActionBar.TabReselectedEventArgs.Tab.get -> AndroidX.AppCompat.App.ActionBar.Tab?
AndroidX.AppCompat.App.ActionBar.TabReselectedEventArgs.TabReselectedEventArgs(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.TabSelectedEventArgs
AndroidX.AppCompat.App.ActionBar.TabSelectedEventArgs.Ft.get -> AndroidX.Fragment.App.FragmentTransaction?
AndroidX.AppCompat.App.ActionBar.TabSelectedEventArgs.Tab.get -> AndroidX.AppCompat.App.ActionBar.Tab?
AndroidX.AppCompat.App.ActionBar.TabSelectedEventArgs.TabSelectedEventArgs(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.TabUnselectedEventArgs
AndroidX.AppCompat.App.ActionBar.TabUnselectedEventArgs.Ft.get -> AndroidX.Fragment.App.FragmentTransaction?
AndroidX.AppCompat.App.ActionBar.TabUnselectedEventArgs.Tab.get -> AndroidX.AppCompat.App.ActionBar.Tab?
AndroidX.AppCompat.App.ActionBar.TabUnselectedEventArgs.TabUnselectedEventArgs(AndroidX.AppCompat.App.ActionBar.Tab? tab, AndroidX.Fragment.App.FragmentTransaction? ft) -> void
AndroidX.AppCompat.App.ActionBar.Title.get -> string?
AndroidX.AppCompat.App.ActionBar.Title.set -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle
AndroidX.AppCompat.App.ActionBarDrawerToggle.ActionBarDrawerToggle(Android.App.Activity? activity, AndroidX.DrawerLayout.Widget.DrawerLayout? drawerLayout, AndroidX.AppCompat.Widget.Toolbar? toolbar, int openDrawerContentDescRes, int closeDrawerContentDescRes) -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle.ActionBarDrawerToggle(Android.App.Activity? activity, AndroidX.DrawerLayout.Widget.DrawerLayout? drawerLayout, int openDrawerContentDescRes, int closeDrawerContentDescRes) -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle.ActionBarDrawerToggle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate.ActionBarThemedContext.get -> Android.Content.Context?
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate.IsNavigationVisible.get -> bool
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate.SetActionBarDescription(int contentDescRes) -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate.SetActionBarUpIndicator(Android.Graphics.Drawables.Drawable? upDrawable, int contentDescRes) -> void
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate.ThemeUpIndicator.get -> Android.Graphics.Drawables.Drawable?
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegateProvider
AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegateProvider.DrawerToggleDelegate.get -> AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate?
AndroidX.AppCompat.App.AlertDialog
AndroidX.AppCompat.App.AlertDialog.AlertDialog(Android.Content.Context! context) -> void
AndroidX.AppCompat.App.AlertDialog.AlertDialog(Android.Content.Context! context, bool cancelable, Android.Content.IDialogInterfaceOnCancelListener? cancelListener) -> void
AndroidX.AppCompat.App.AlertDialog.AlertDialog(Android.Content.Context! context, bool cancelable, System.EventHandler! cancelHandler) -> void
AndroidX.AppCompat.App.AlertDialog.AlertDialog(Android.Content.Context! context, int themeResId) -> void
AndroidX.AppCompat.App.AlertDialog.AlertDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AlertDialog.Builder
AndroidX.AppCompat.App.AlertDialog.Builder.Builder(Android.Content.Context! context) -> void
AndroidX.AppCompat.App.AlertDialog.Builder.Builder(Android.Content.Context! context, int themeResId) -> void
AndroidX.AppCompat.App.AlertDialog.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AlertDialog.Builder.SetAdapter(Android.Widget.IListAdapter! adapter, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetCursor(Android.Database.ICursor! cursor, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler, string! labelColumn) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(Java.Lang.ICharSequence![]! items, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(int itemsId, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(string![]! items, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(string![]? items, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetMessage(string? message) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(Android.Database.ICursor! cursor, string! isCheckedColumn, string! labelColumn, System.EventHandler<Android.Content.DialogMultiChoiceClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(Java.Lang.ICharSequence![]! items, bool[]! checkedItems, System.EventHandler<Android.Content.DialogMultiChoiceClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(int itemsId, bool[]! checkedItems, System.EventHandler<Android.Content.DialogMultiChoiceClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(string![]! items, bool[]! checkedItems, System.EventHandler<Android.Content.DialogMultiChoiceClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(string![]? items, bool[]? checkedItems, Android.Content.IDialogInterfaceOnMultiChoiceClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(Java.Lang.ICharSequence! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(int textId, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(string! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(string? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(Java.Lang.ICharSequence! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(int textId, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(string! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(string? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(Java.Lang.ICharSequence! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(int textId, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(string! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(string? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Android.Database.ICursor! cursor, int checkedItem, string! labelColumn, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Android.Widget.IListAdapter! adapter, int checkedItem, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Java.Lang.ICharSequence![]! items, int checkedItem, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(int itemsId, int checkedItem, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(string![]! items, int checkedItem, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> AndroidX.AppCompat.App.AlertDialog.Builder!
AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(string![]? items, int checkedItem, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.Builder.SetTitle(string? title) -> AndroidX.AppCompat.App.AlertDialog.Builder?
AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, Java.Lang.ICharSequence! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> void
AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, string! text, System.EventHandler<Android.Content.DialogClickEventArgs!>! handler) -> void
AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, string? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> void
AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, string? text, Android.Graphics.Drawables.Drawable? icon, Android.Content.IDialogInterfaceOnClickListener? listener) -> void
AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, string? text, Android.OS.Message? msg) -> void
AndroidX.AppCompat.App.AlertDialog.SetMessage(string? message) -> void
AndroidX.AppCompat.App.AppCompatActivity
AndroidX.AppCompat.App.AppCompatActivity.AppCompatActivity() -> void
AndroidX.AppCompat.App.AppCompatActivity.AppCompatActivity(int contentLayoutId) -> void
AndroidX.AppCompat.App.AppCompatActivity.AppCompatActivity(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AppCompatDelegate
AndroidX.AppCompat.App.AppCompatDelegate.AppCompatDelegate(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AppCompatDelegate.INightMode
AndroidX.AppCompat.App.AppCompatDelegate.SetTitle(string? title) -> void
AndroidX.AppCompat.App.AppCompatDialog
AndroidX.AppCompat.App.AppCompatDialog.AppCompatDialog(Android.Content.Context! context) -> void
AndroidX.AppCompat.App.AppCompatDialog.AppCompatDialog(Android.Content.Context! context, bool cancelable, Android.Content.IDialogInterfaceOnCancelListener? cancelListener) -> void
AndroidX.AppCompat.App.AppCompatDialog.AppCompatDialog(Android.Content.Context! context, int theme) -> void
AndroidX.AppCompat.App.AppCompatDialog.AppCompatDialog(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AppCompatDialogFragment
AndroidX.AppCompat.App.AppCompatDialogFragment.AppCompatDialogFragment() -> void
AndroidX.AppCompat.App.AppCompatDialogFragment.AppCompatDialogFragment(int contentLayoutId) -> void
AndroidX.AppCompat.App.AppCompatDialogFragment.AppCompatDialogFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AppCompatViewInflater
AndroidX.AppCompat.App.AppCompatViewInflater.AppCompatViewInflater() -> void
AndroidX.AppCompat.App.AppCompatViewInflater.AppCompatViewInflater(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.AppCompatViewInflater.CreateView(Android.Views.View? parent, string! name, Android.Content.Context! context, Android.Util.IAttributeSet! attrs, bool inheritContext, bool readAndroidTheme, bool readAppTheme, bool wrapContext) -> Android.Views.View?
AndroidX.AppCompat.App.AppLocalesMetadataHolderService
AndroidX.AppCompat.App.AppLocalesMetadataHolderService.AppLocalesMetadataHolderService() -> void
AndroidX.AppCompat.App.IAppCompatCallback
AndroidX.AppCompat.App.IAppCompatCallback.OnSupportActionModeFinished(AndroidX.AppCompat.View.ActionMode? mode) -> void
AndroidX.AppCompat.App.IAppCompatCallback.OnSupportActionModeStarted(AndroidX.AppCompat.View.ActionMode? mode) -> void
AndroidX.AppCompat.App.IAppCompatCallback.OnWindowStartingSupportActionMode(AndroidX.AppCompat.View.ActionMode.ICallback? callback_) -> AndroidX.AppCompat.View.ActionMode?
AndroidX.AppCompat.App.WindowDecorActionBar
AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl
AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.ActionModeImpl(AndroidX.AppCompat.App.WindowDecorActionBar? __self, Android.Content.Context? context, AndroidX.AppCompat.View.ActionMode.ICallback? callback) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.ActionModeImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.MenuVisibility -> System.EventHandler<AndroidX.AppCompat.App.ActionBar.MenuVisibilityEventArgs!>!
AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl
AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.TabImpl(AndroidX.AppCompat.App.WindowDecorActionBar? __self) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.TabImpl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.WindowDecorActionBar(Android.App.Activity? activity, bool overlayMode) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.WindowDecorActionBar(Android.App.Dialog? dialog) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.WindowDecorActionBar(Android.Views.View? layout) -> void
AndroidX.AppCompat.App.WindowDecorActionBar.WindowDecorActionBar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable
AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.DrawerArrowDrawable(Android.Content.Context? context) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.DrawerArrowDrawable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.IArrowDirection
AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Paint.get -> Android.Graphics.Paint?
AndroidX.AppCompat.Text.AllCapsTransformationMethod
AndroidX.AppCompat.Text.AllCapsTransformationMethod.AllCapsTransformationMethod(Android.Content.Context? context) -> void
AndroidX.AppCompat.Text.AllCapsTransformationMethod.AllCapsTransformationMethod(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Text.AllCapsTransformationMethod.GetTransformation(string? source, Android.Views.View? view) -> string?
AndroidX.AppCompat.Text.AllCapsTransformationMethod.OnFocusChanged(Android.Views.View? view, string? sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect? previouslyFocusedRect) -> void
AndroidX.AppCompat.View.ActionBarPolicy
AndroidX.AppCompat.View.ActionBarPolicy.ActionBarPolicy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.ActionMode
AndroidX.AppCompat.View.ActionMode.ActionMode() -> void
AndroidX.AppCompat.View.ActionMode.ActionMode(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.ActionMode.ICallback
AndroidX.AppCompat.View.ActionMode.ICallback.OnActionItemClicked(AndroidX.AppCompat.View.ActionMode? mode, Android.Views.IMenuItem? item) -> bool
AndroidX.AppCompat.View.ActionMode.ICallback.OnCreateActionMode(AndroidX.AppCompat.View.ActionMode? mode, Android.Views.IMenu? menu) -> bool
AndroidX.AppCompat.View.ActionMode.ICallback.OnDestroyActionMode(AndroidX.AppCompat.View.ActionMode? mode) -> void
AndroidX.AppCompat.View.ActionMode.ICallback.OnPrepareActionMode(AndroidX.AppCompat.View.ActionMode? mode, Android.Views.IMenu? menu) -> bool
AndroidX.AppCompat.View.ActionMode.Subtitle.get -> string?
AndroidX.AppCompat.View.ActionMode.Subtitle.set -> void
AndroidX.AppCompat.View.ActionMode.Title.get -> string?
AndroidX.AppCompat.View.ActionMode.Title.set -> void
AndroidX.AppCompat.View.ContextThemeWrapper
AndroidX.AppCompat.View.ContextThemeWrapper.ContextThemeWrapper() -> void
AndroidX.AppCompat.View.ContextThemeWrapper.ContextThemeWrapper(Android.Content.Context? base, Android.Content.Res.Resources.Theme? theme) -> void
AndroidX.AppCompat.View.ContextThemeWrapper.ContextThemeWrapper(Android.Content.Context? base, int themeResId) -> void
AndroidX.AppCompat.View.ContextThemeWrapper.ContextThemeWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.ICollapsibleActionView
AndroidX.AppCompat.View.ICollapsibleActionView.OnActionViewCollapsed() -> void
AndroidX.AppCompat.View.ICollapsibleActionView.OnActionViewExpanded() -> void
AndroidX.AppCompat.View.Menu.ActionMenuItem
AndroidX.AppCompat.View.Menu.ActionMenuItem.ActionMenuItem(Android.Content.Context? context, int group, int id, int categoryOrder, int ordering, Java.Lang.ICharSequence? title) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItem.ActionMenuItem(Android.Content.Context? context, int group, int id, int categoryOrder, int ordering, string? title) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItem.ActionMenuItem(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItem.ContentDescription.get -> string?
AndroidX.AppCompat.View.Menu.ActionMenuItem.SetContentDescription(string? contentDescription) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTitle(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTitleCondensed(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTooltipText(string? tooltipText) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.ActionMenuItem.Title.get -> string?
AndroidX.AppCompat.View.Menu.ActionMenuItem.TitleCondensed.get -> string?
AndroidX.AppCompat.View.Menu.ActionMenuItem.TooltipText.get -> string?
AndroidX.AppCompat.View.Menu.ActionMenuItemView
AndroidX.AppCompat.View.Menu.ActionMenuItemView.ActionMenuItemView(Android.Content.Context? context) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.ActionMenuItemView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.ActionMenuItemView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyle) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.ActionMenuItemView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback
AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.PopupCallback() -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.PopupCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetEnabled(bool enabled) -> void
AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetTitle(string? title) -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.BaseMenuPresenter(Android.Content.Context? context, int menuLayoutRes, int itemLayoutRes) -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.BaseMenuPresenter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MContext.get -> Android.Content.Context?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MContext.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MInflater.get -> Android.Views.LayoutInflater?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MInflater.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MMenu.get -> AndroidX.AppCompat.View.Menu.MenuBuilder?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MMenu.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MMenuView.get -> AndroidX.AppCompat.View.Menu.IMenuView?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MMenuView.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MSystemContext.get -> Android.Content.Context?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MSystemContext.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MSystemInflater.get -> Android.Views.LayoutInflater?
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.MSystemInflater.set -> void
AndroidX.AppCompat.View.Menu.BaseMenuPresenter.SetCallback(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback! callback) -> void
AndroidX.AppCompat.View.Menu.ExpandedMenuView
AndroidX.AppCompat.View.Menu.ExpandedMenuView.ExpandedMenuView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.View.Menu.ExpandedMenuView.ExpandedMenuView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.View.Menu.ExpandedMenuView.Initialize(AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> void
AndroidX.AppCompat.View.Menu.ExpandedMenuView.InvokeItem(AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
AndroidX.AppCompat.View.Menu.ExpandedMenuView.OnItemClick(Android.Widget.AdapterView? parent, Android.Views.View? v, int position, long id) -> void
AndroidX.AppCompat.View.Menu.ExpandedMenuView.WindowAnimations.get -> int
AndroidX.AppCompat.View.Menu.IMenuPresenter
AndroidX.AppCompat.View.Menu.IMenuPresenter.CollapseItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? p0, AndroidX.AppCompat.View.Menu.MenuItemImpl? p1) -> bool
AndroidX.AppCompat.View.Menu.IMenuPresenter.ExpandItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? p0, AndroidX.AppCompat.View.Menu.MenuItemImpl? p1) -> bool
AndroidX.AppCompat.View.Menu.IMenuPresenter.FlagActionItems() -> bool
AndroidX.AppCompat.View.Menu.IMenuPresenter.GetMenuView(Android.Views.ViewGroup? p0) -> AndroidX.AppCompat.View.Menu.IMenuView?
AndroidX.AppCompat.View.Menu.IMenuPresenter.Id.get -> int
AndroidX.AppCompat.View.Menu.IMenuPresenter.InitForMenu(Android.Content.Context? p0, AndroidX.AppCompat.View.Menu.MenuBuilder? p1) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenter.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? p0, bool p1) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenter.OnRestoreInstanceState(Android.OS.IParcelable? p0) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenter.OnSaveInstanceState() -> Android.OS.IParcelable?
AndroidX.AppCompat.View.Menu.IMenuPresenter.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? p0) -> bool
AndroidX.AppCompat.View.Menu.IMenuPresenter.SetCallback(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? p0) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenter.UpdateMenuView(bool p0) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenterCallback
AndroidX.AppCompat.View.Menu.IMenuPresenterCallback.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, bool p1) -> void
AndroidX.AppCompat.View.Menu.IMenuPresenterCallback.OnOpenSubMenu(AndroidX.AppCompat.View.Menu.MenuBuilder! p0) -> bool
AndroidX.AppCompat.View.Menu.IMenuView
AndroidX.AppCompat.View.Menu.IMenuView.Initialize(AndroidX.AppCompat.View.Menu.MenuBuilder? p0) -> void
AndroidX.AppCompat.View.Menu.IMenuView.WindowAnimations.get -> int
AndroidX.AppCompat.View.Menu.IMenuViewItemView
AndroidX.AppCompat.View.Menu.IMenuViewItemView.Initialize(AndroidX.AppCompat.View.Menu.MenuItemImpl? p0, int p1) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.ItemData.get -> AndroidX.AppCompat.View.Menu.MenuItemImpl?
AndroidX.AppCompat.View.Menu.IMenuViewItemView.PrefersCondensedTitle() -> bool
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetCheckable(bool p0) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetChecked(bool p0) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetEnabled(bool p0) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetIcon(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetShortcut(bool p0, char p1) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.SetTitle(Java.Lang.ICharSequence? p0) -> void
AndroidX.AppCompat.View.Menu.IMenuViewItemView.ShowsIcon() -> bool
AndroidX.AppCompat.View.Menu.IMenuViewItemViewExtensions
AndroidX.AppCompat.View.Menu.IShowableListMenu
AndroidX.AppCompat.View.Menu.IShowableListMenu.Dismiss() -> void
AndroidX.AppCompat.View.Menu.IShowableListMenu.IsShowing.get -> bool
AndroidX.AppCompat.View.Menu.IShowableListMenu.ListView.get -> Android.Widget.ListView?
AndroidX.AppCompat.View.Menu.IShowableListMenu.Show() -> void
AndroidX.AppCompat.View.Menu.ListMenuItemView
AndroidX.AppCompat.View.Menu.ListMenuItemView.ListMenuItemView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.View.Menu.ListMenuItemView.ListMenuItemView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.View.Menu.ListMenuItemView.ListMenuItemView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.ListMenuItemView.SetEnabled(bool enabled) -> void
AndroidX.AppCompat.View.Menu.ListMenuItemView.SetTitle(string? title) -> void
AndroidX.AppCompat.View.Menu.ListMenuPresenter
AndroidX.AppCompat.View.Menu.ListMenuPresenter.ListMenuPresenter(Android.Content.Context? context, int itemLayoutRes) -> void
AndroidX.AppCompat.View.Menu.ListMenuPresenter.ListMenuPresenter(int itemLayoutRes, int themeRes) -> void
AndroidX.AppCompat.View.Menu.ListMenuPresenter.ListMenuPresenter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuAdapter
AndroidX.AppCompat.View.Menu.MenuAdapter.MenuAdapter(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, Android.Views.LayoutInflater? inflater, bool overflowOnly, int itemLayoutRes) -> void
AndroidX.AppCompat.View.Menu.MenuAdapter.MenuAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder
AndroidX.AppCompat.View.Menu.MenuBuilder.Add(int group, int id, int categoryOrder, string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuBuilder.Add(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuBuilder.AddInternal(int group, int id, int categoryOrder, string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(int group, int id, int categoryOrder, string? title) -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(string? title) -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.MenuBuilder.Close(bool closeAllMenus) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder.HeaderTitle.get -> string?
AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback
AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback.OnMenuItemSelected(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, Android.Views.IMenuItem! p1) -> bool
AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback.OnMenuModeChange(AndroidX.AppCompat.View.Menu.MenuBuilder! p0) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder.IItemInvoker
AndroidX.AppCompat.View.Menu.MenuBuilder.IItemInvoker.InvokeItem(AndroidX.AppCompat.View.Menu.MenuItemImpl? p0) -> bool
AndroidX.AppCompat.View.Menu.MenuBuilder.MenuBuilder(Android.Content.Context? context) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder.MenuBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder.SetGroupDividerEnabled(bool enabled) -> void
AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderTitleInt(string? title) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
AndroidX.AppCompat.View.Menu.MenuItemImpl
AndroidX.AppCompat.View.Menu.MenuItemImpl.ActionFormatChanged() -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.ActionProvider.get -> Android.Views.ActionProvider?
AndroidX.AppCompat.View.Menu.MenuItemImpl.ActionView.get -> Android.Views.View?
AndroidX.AppCompat.View.Menu.MenuItemImpl.AlphabeticModifiers.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.AlphabeticShortcut.get -> char
AndroidX.AppCompat.View.Menu.MenuItemImpl.CollapseActionView() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.ContentDescription.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemImpl.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.View.Menu.MenuItemImpl.ExclusiveCheckable.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.ExclusiveCheckable.set -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.ExpandActionView() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.GroupId.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.HasCollapsibleActionView.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.HasSubMenu.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.Icon.get -> Android.Graphics.Drawables.Drawable?
AndroidX.AppCompat.View.Menu.MenuItemImpl.IconTintList.get -> Android.Content.Res.ColorStateList?
AndroidX.AppCompat.View.Menu.MenuItemImpl.IconTintMode.get -> Android.Graphics.PorterDuff.Mode?
AndroidX.AppCompat.View.Menu.MenuItemImpl.Intent.get -> Android.Content.Intent?
AndroidX.AppCompat.View.Menu.MenuItemImpl.Invoke() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsActionButton.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsActionButton.set -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsActionViewExpanded.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsCheckable.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsChecked.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsEnabled.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.IsVisible.get -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.ItemId.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.MenuInfo.get -> Android.Views.IContextMenuContextMenuInfo?
AndroidX.AppCompat.View.Menu.MenuItemImpl.NumericModifiers.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.NumericShortcut.get -> char
AndroidX.AppCompat.View.Menu.MenuItemImpl.Order.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.Ordering.get -> int
AndroidX.AppCompat.View.Menu.MenuItemImpl.RequestsActionButton() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.RequiresActionButton() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.RequiresOverflow() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetActionProvider(Android.Views.ActionProvider? actionProvider) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetActionView(Android.Views.View? view) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetActionView(int resId) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetActionViewExpanded(bool isExpanded) -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetAlphabeticShortcut(char alphaChar) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetAlphabeticShortcut(char alphaChar, int alphaModifiers) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetCallback(Java.Lang.IRunnable? callback) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetCheckable(bool checkable) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetChecked(bool checked) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetContentDescription(Java.Lang.ICharSequence? contentDescription) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetContentDescription(string? contentDescription) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetEnabled(bool enabled) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetIcon(int iconResId) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetIconTintList(Android.Content.Res.ColorStateList? iconTintList) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetIconTintMode(Android.Graphics.PorterDuff.Mode? iconTintMode) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetIntent(Android.Content.Intent? intent) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetNumericShortcut(char numericChar) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetNumericShortcut(char numericChar, int numericModifiers) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetOnActionExpandListener(Android.Views.IMenuItemOnActionExpandListener? listener) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetOnMenuItemClickListener(Android.Views.IMenuItemOnMenuItemClickListener? clickListener) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetShortcut(char numericChar, char alphaChar) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetShortcut(char numericChar, char alphaChar, int numericModifiers, int alphaModifiers) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetShowAsAction(Android.Views.ShowAsAction actionEnum) -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetShowAsActionFlags(Android.Views.ShowAsAction actionEnum) -> Android.Views.IMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetSubMenu(AndroidX.AppCompat.View.Menu.SubMenuBuilder? subMenu) -> void
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetSupportActionProvider(AndroidX.Core.View.ActionProvider? actionProvider) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTitle(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTitle(int title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTitle(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTitleCondensed(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTitleCondensed(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTooltipText(Java.Lang.ICharSequence? tooltipText) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetTooltipText(string? tooltipText) -> AndroidX.Core.Internal.View.ISupportMenuItem!
AndroidX.AppCompat.View.Menu.MenuItemImpl.SetVisible(bool shown) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemImpl.ShouldShowIcon() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.ShowsTextAsAction() -> bool
AndroidX.AppCompat.View.Menu.MenuItemImpl.SubMenu.get -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.MenuItemImpl.SupportActionProvider.get -> AndroidX.Core.View.ActionProvider?
AndroidX.AppCompat.View.Menu.MenuItemImpl.Title.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemImpl.TitleCondensed.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemImpl.TitleCondensedFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.View.Menu.MenuItemImpl.TitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.View.Menu.MenuItemImpl.TooltipText.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemImpl.TooltipTextFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ContentDescription.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.MenuItemWrapperICS(Android.Content.Context? context, AndroidX.Core.Internal.View.ISupportMenuItem? object) -> void
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.MenuItemWrapperICS(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetContentDescription(string? contentDescription) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTitle(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTitleCondensed(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTooltipText(string? tooltipText) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.Title.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.TitleCondensed.get -> string?
AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.TooltipText.get -> string?
AndroidX.AppCompat.View.Menu.MenuPopup
AndroidX.AppCompat.View.Menu.MenuPopup.MenuPopup(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuPopupHelper
AndroidX.AppCompat.View.Menu.MenuPopupHelper.MenuPopupHelper(Android.Content.Context! context, AndroidX.AppCompat.View.Menu.MenuBuilder! menu) -> void
AndroidX.AppCompat.View.Menu.MenuPopupHelper.MenuPopupHelper(Android.Content.Context! context, AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.View! anchorView) -> void
AndroidX.AppCompat.View.Menu.MenuPopupHelper.MenuPopupHelper(Android.Content.Context! context, AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.View! anchorView, bool overflowOnly, int popupStyleAttr) -> void
AndroidX.AppCompat.View.Menu.MenuPopupHelper.MenuPopupHelper(Android.Content.Context! context, AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.View! anchorView, bool overflowOnly, int popupStyleAttr, int popupStyleRes) -> void
AndroidX.AppCompat.View.Menu.MenuPopupHelper.MenuPopupHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.MenuWrapperICS
AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(int groupId, int itemId, int order, string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(string? title) -> Android.Views.IMenuItem?
AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(int groupId, int itemId, int order, string? title) -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(string? title) -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.MenuWrapperICS.MenuWrapperICS(Android.Content.Context? context, AndroidX.Core.Internal.View.ISupportMenu? object) -> void
AndroidX.AppCompat.View.Menu.MenuWrapperICS.MenuWrapperICS(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.SubMenuBuilder
AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderTitle(string? title) -> Android.Views.ISubMenu?
AndroidX.AppCompat.View.Menu.SubMenuBuilder.SubMenuBuilder(Android.Content.Context? context, AndroidX.AppCompat.View.Menu.MenuBuilder? parentMenu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> void
AndroidX.AppCompat.View.Menu.SubMenuBuilder.SubMenuBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper.Subtitle.get -> string?
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper.Subtitle.set -> void
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper.SupportActionModeWrapper() -> void
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper.Title.get -> string?
AndroidX.AppCompat.View.Menu.SupportActionModeWrapper.Title.set -> void
AndroidX.AppCompat.View.StandaloneActionMode
AndroidX.AppCompat.View.StandaloneActionMode.StandaloneActionMode(Android.Content.Context? context, AndroidX.AppCompat.Widget.ActionBarContextView? view, AndroidX.AppCompat.View.ActionMode.ICallback? callback, bool isFocusable) -> void
AndroidX.AppCompat.View.StandaloneActionMode.StandaloneActionMode(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.SupportMenuInflater
AndroidX.AppCompat.View.SupportMenuInflater.SupportMenuInflater(Android.Content.Context? context) -> void
AndroidX.AppCompat.View.SupportMenuInflater.SupportMenuInflater(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet
AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.ViewPropertyAnimatorCompatSet() -> void
AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.ViewPropertyAnimatorCompatSet(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.WindowCallbackWrapper
AndroidX.AppCompat.View.WindowCallbackWrapper.WindowCallbackWrapper(Android.Views.Window.ICallback? wrapped) -> void
AndroidX.AppCompat.View.WindowCallbackWrapper.WindowCallbackWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.View.WindowCallbackWrapper.Wrapped.get -> Android.Views.Window.ICallback?
AndroidX.AppCompat.Widget.AbsActionBarView
AndroidX.AppCompat.Widget.AbsActionBarView.AbsActionBarView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MActionMenuPresenter.get -> AndroidX.AppCompat.Widget.ActionMenuPresenter?
AndroidX.AppCompat.Widget.AbsActionBarView.MActionMenuPresenter.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MContentHeight.get -> int
AndroidX.AppCompat.Widget.AbsActionBarView.MContentHeight.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MMenuView.get -> AndroidX.AppCompat.Widget.ActionMenuView?
AndroidX.AppCompat.Widget.AbsActionBarView.MMenuView.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MPopupContext.get -> Android.Content.Context?
AndroidX.AppCompat.Widget.AbsActionBarView.MPopupContext.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MVisAnimListener.get -> AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener?
AndroidX.AppCompat.Widget.AbsActionBarView.MVisAnimListener.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.MVisibilityAnim.get -> AndroidX.Core.View.ViewPropertyAnimatorCompat?
AndroidX.AppCompat.Widget.AbsActionBarView.MVisibilityAnim.set -> void
AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener
AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.VisibilityAnimListener(AndroidX.AppCompat.Widget.AbsActionBarView? __self) -> void
AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.VisibilityAnimListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionBarContainer
AndroidX.AppCompat.Widget.ActionBarContainer.ActionBarContainer(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.ActionBarContainer.ActionBarContainer(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionBarContainer.ActionBarContainer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionBarContextView
AndroidX.AppCompat.Widget.ActionBarContextView.ActionBarContextView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ActionBarContextView.ActionBarContextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionBarContextView.ActionBarContextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyle) -> void
AndroidX.AppCompat.Widget.ActionBarContextView.ActionBarContextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionBarContextView.Subtitle.get -> string?
AndroidX.AppCompat.Widget.ActionBarContextView.Subtitle.set -> void
AndroidX.AppCompat.Widget.ActionBarContextView.Title.get -> string?
AndroidX.AppCompat.Widget.ActionBarContextView.Title.set -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ActionBarOverlayLayout(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ActionBarOverlayLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ActionBarOverlayLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.EnableContentAnimations(bool p0) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.HideForSystem() -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.OnContentScrollStarted() -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.OnContentScrollStopped() -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.OnWindowVisibilityChanged(int p0) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback.ShowForSystem() -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.LayoutParams(Android.Content.Context? c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? source) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.MarginLayoutParams? source) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetWindowTitle(string? title) -> void
AndroidX.AppCompat.Widget.ActionBarOverlayLayout.Title.get -> string?
AndroidX.AppCompat.Widget.ActionMenuPresenter
AndroidX.AppCompat.Widget.ActionMenuPresenter.ActionMenuPresenter(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.ActionMenuPresenter.ActionMenuPresenter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionMenuView
AndroidX.AppCompat.Widget.ActionMenuView.ActionMenuView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ActionMenuView.ActionMenuView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionMenuView.ActionMenuView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionMenuView.IActionMenuChildView
AndroidX.AppCompat.Widget.ActionMenuView.IActionMenuChildView.NeedsDividerAfter() -> bool
AndroidX.AppCompat.Widget.ActionMenuView.IActionMenuChildView.NeedsDividerBefore() -> bool
AndroidX.AppCompat.Widget.ActionMenuView.IOnMenuItemClickListener
AndroidX.AppCompat.Widget.ActionMenuView.IOnMenuItemClickListener.OnMenuItemClick(Android.Views.IMenuItem? item) -> bool
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.CellsUsed.get -> int
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.CellsUsed.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.Expandable.get -> bool
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.Expandable.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.ExtraPixels.get -> int
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.ExtraPixels.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.IsOverflowButton.get -> bool
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.IsOverflowButton.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.LayoutParams(Android.Content.Context? c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? other) -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.LayoutParams(AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams? other) -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.PreventEdgeOffset.get -> bool
AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.PreventEdgeOffset.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClick -> System.EventHandler<AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs!>!
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs.Item.get -> Android.Views.IMenuItem?
AndroidX.AppCompat.Widget.ActionMenuView.MenuItemClickEventArgs.MenuItemClickEventArgs(bool handled, Android.Views.IMenuItem? item) -> void
AndroidX.AppCompat.Widget.ActivityChooserModel
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityChooserModel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.ActivityResolveInfo(Android.Content.PM.ResolveInfo? resolveInfo) -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.CompareTo(Java.Lang.Object? another) -> int
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.ResolveInfo.get -> Android.Content.PM.ResolveInfo?
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.ResolveInfo.set -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.Weight.get -> float
AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.Weight.set -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Activity.get -> Android.Content.ComponentName?
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Activity.set -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.HistoricalRecord(Android.Content.ComponentName? activityName, long time, float weight) -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.HistoricalRecord(string? activityName, long time, float weight) -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Time.get -> long
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Time.set -> void
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Weight.get -> float
AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.Weight.set -> void
AndroidX.AppCompat.Widget.ActivityChooserView
AndroidX.AppCompat.Widget.ActivityChooserView.ActivityChooserView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ActivityChooserView.ActivityChooserView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActivityChooserView.ActivityChooserView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyle) -> void
AndroidX.AppCompat.Widget.ActivityChooserView.ActivityChooserView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout
AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout.InnerLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout.InnerLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AlertDialogLayout
AndroidX.AppCompat.Widget.AlertDialogLayout.AlertDialogLayout(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.AlertDialogLayout.AlertDialogLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AlertDialogLayout.AlertDialogLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.AppCompatAutoCompleteTextView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.AppCompatAutoCompleteTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.AppCompatAutoCompleteTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.AppCompatAutoCompleteTextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView? __self) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatAutoCompleteTextView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatButton
AndroidX.AppCompat.Widget.AppCompatButton.AppCompatButton(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatButton.AppCompatButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatButton.AppCompatButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatButton.AppCompatButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatButton.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatButton.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatButton? __self) -> void
AndroidX.AppCompat.Widget.AppCompatButton.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatButton.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatButton, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox
AndroidX.AppCompat.Widget.AppCompatCheckBox.AppCompatCheckBox(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.AppCompatCheckBox(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.AppCompatCheckBox(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.AppCompatCheckBox(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatCheckBox.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatCheckBox? __self) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatCheckBox.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatCheckBox, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.AppCompatCheckedTextView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.AppCompatCheckedTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.AppCompatCheckedTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.AppCompatCheckedTextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatCheckedTextView? __self) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatCheckedTextView.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatCheckedTextView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatDrawableManager
AndroidX.AppCompat.Widget.AppCompatDrawableManager.AppCompatDrawableManager() -> void
AndroidX.AppCompat.Widget.AppCompatDrawableManager.GetDrawable(Android.Content.Context! context, int resId) -> Android.Graphics.Drawables.Drawable?
AndroidX.AppCompat.Widget.AppCompatDrawableManager.OnConfigurationChanged(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatEditText
AndroidX.AppCompat.Widget.AppCompatEditText.AppCompatEditText(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.AppCompatEditText(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.AppCompatEditText(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.AppCompatEditText(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatEditText.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatEditText? __self) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatEditText.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatEditText, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton
AndroidX.AppCompat.Widget.AppCompatImageButton.AppCompatImageButton(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.AppCompatImageButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.AppCompatImageButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.AppCompatImageButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatImageButton.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatImageButton? __self) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatImageButton.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatImageButton, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatImageHelper
AndroidX.AppCompat.Widget.AppCompatImageHelper.AppCompatImageHelper(Android.Widget.ImageView! view) -> void
AndroidX.AppCompat.Widget.AppCompatImageHelper.AppCompatImageHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatImageView
AndroidX.AppCompat.Widget.AppCompatImageView.AppCompatImageView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.AppCompatImageView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.AppCompatImageView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.AppCompatImageView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatImageView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatImageView? __self) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatImageView.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatImageView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.AppCompatMultiAutoCompleteTextView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.AppCompatMultiAutoCompleteTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.AppCompatMultiAutoCompleteTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.AppCompatMultiAutoCompleteTextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView? __self) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatMultiAutoCompleteTextView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton
AndroidX.AppCompat.Widget.AppCompatRadioButton.AppCompatRadioButton(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.AppCompatRadioButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.AppCompatRadioButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.AppCompatRadioButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatRadioButton.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatRadioButton? __self) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatRadioButton.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatRadioButton, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatRatingBar
AndroidX.AppCompat.Widget.AppCompatRatingBar.AppCompatRatingBar(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatRatingBar.AppCompatRatingBar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatRatingBar.AppCompatRatingBar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatRatingBar.AppCompatRatingBar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatSeekBar
AndroidX.AppCompat.Widget.AppCompatSeekBar.AppCompatSeekBar(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatSeekBar.AppCompatSeekBar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatSeekBar.AppCompatSeekBar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatSeekBar.AppCompatSeekBar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int mode) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int mode, Android.Content.Res.Resources.Theme? popupTheme) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(Android.Content.Context! context, int mode) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.AppCompatSpinner(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatSpinner.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatSpinner? __self) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatSpinner.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatSpinner, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatTextView
AndroidX.AppCompat.Widget.AppCompatTextView.AppCompatTextView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.AppCompatTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.AppCompatTextView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.AppCompatTextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatTextView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatTextView? __self) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatTextView.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatTextView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton
AndroidX.AppCompat.Widget.AppCompatToggleButton.AppCompatToggleButton(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.AppCompatToggleButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.AppCompatToggleButton(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.AppCompatToggleButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.InspectionCompanion
AndroidX.AppCompat.Widget.AppCompatToggleButton.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.AppCompatToggleButton? __self) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.AppCompatToggleButton.InspectionCompanion.ReadProperties(Java.Lang.Object! appCompatToggleButton, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.ButtonBarLayout
AndroidX.AppCompat.Widget.ButtonBarLayout.ButtonBarLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ButtonBarLayout.ButtonBarLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ContentFrameLayout
AndroidX.AppCompat.Widget.ContentFrameLayout.AttachedFromWindow -> System.EventHandler!
AndroidX.AppCompat.Widget.ContentFrameLayout.ContentFrameLayout(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ContentFrameLayout.ContentFrameLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ContentFrameLayout.ContentFrameLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.ContentFrameLayout.ContentFrameLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ContentFrameLayout.DetachedFromWindow -> System.EventHandler!
AndroidX.AppCompat.Widget.ContentFrameLayout.IOnAttachListener
AndroidX.AppCompat.Widget.ContentFrameLayout.IOnAttachListener.OnAttachedFromWindow() -> void
AndroidX.AppCompat.Widget.ContentFrameLayout.IOnAttachListener.OnDetachedFromWindow() -> void
AndroidX.AppCompat.Widget.DialogTitle
AndroidX.AppCompat.Widget.DialogTitle.DialogTitle(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.DialogTitle.DialogTitle(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.DialogTitle.DialogTitle(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.DialogTitle.DialogTitle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.DropDownListView
AndroidX.AppCompat.Widget.DropDownListView.DropDownListView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.FitWindowsFrameLayout
AndroidX.AppCompat.Widget.FitWindowsFrameLayout.FitSystemWindows -> System.EventHandler<AndroidX.AppCompat.Widget.FitWindowsViewGroupOnFitSystemWindowsEventArgs!>!
AndroidX.AppCompat.Widget.FitWindowsFrameLayout.FitWindowsFrameLayout(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.FitWindowsFrameLayout.FitWindowsFrameLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.FitWindowsFrameLayout.FitWindowsFrameLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.FitWindowsLinearLayout
AndroidX.AppCompat.Widget.FitWindowsLinearLayout.FitSystemWindows -> System.EventHandler<AndroidX.AppCompat.Widget.FitWindowsViewGroupOnFitSystemWindowsEventArgs!>!
AndroidX.AppCompat.Widget.FitWindowsLinearLayout.FitWindowsLinearLayout(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.FitWindowsLinearLayout.FitWindowsLinearLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.FitWindowsLinearLayout.FitWindowsLinearLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.FitWindowsViewGroupOnFitSystemWindowsEventArgs
AndroidX.AppCompat.Widget.FitWindowsViewGroupOnFitSystemWindowsEventArgs.FitWindowsViewGroupOnFitSystemWindowsEventArgs(Android.Graphics.Rect? insets) -> void
AndroidX.AppCompat.Widget.FitWindowsViewGroupOnFitSystemWindowsEventArgs.Insets.get -> Android.Graphics.Rect?
AndroidX.AppCompat.Widget.ForwardingListener
AndroidX.AppCompat.Widget.ForwardingListener.ForwardingListener(Android.Views.View? src) -> void
AndroidX.AppCompat.Widget.ForwardingListener.ForwardingListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.IDecorContentParent
AndroidX.AppCompat.Widget.IDecorContentParent.CanShowOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.DismissPopups() -> void
AndroidX.AppCompat.Widget.IDecorContentParent.HasIcon.get -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.HasLogo.get -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.HideOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.InitFeature(int p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.IsOverflowMenuShowPending.get -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.IsOverflowMenuShowing.get -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.RestoreToolbarHierarchyState(Android.Util.SparseArray? p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SaveToolbarHierarchyState(Android.Util.SparseArray? p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetIcon(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetIcon(int p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetLogo(int p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetMenu(Android.Views.IMenu? p0, AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? p1) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetMenuPrepared() -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetUiOptions(int p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetWindowCallback(Android.Views.Window.ICallback? p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.SetWindowTitle(Java.Lang.ICharSequence? p0) -> void
AndroidX.AppCompat.Widget.IDecorContentParent.ShowOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorContentParent.TitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.Widget.IDecorContentParentExtensions
AndroidX.AppCompat.Widget.IDecorToolbar
AndroidX.AppCompat.Widget.IDecorToolbar.AnimateToVisibility(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.CanShowOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.CollapseActionView() -> void
AndroidX.AppCompat.Widget.IDecorToolbar.Context.get -> Android.Content.Context?
AndroidX.AppCompat.Widget.IDecorToolbar.CustomView.get -> Android.Views.View?
AndroidX.AppCompat.Widget.IDecorToolbar.CustomView.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.DismissPopupMenus() -> void
AndroidX.AppCompat.Widget.IDecorToolbar.DisplayOptions.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.DisplayOptions.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.DropdownItemCount.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.DropdownSelectedPosition.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.DropdownSelectedPosition.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.HasEmbeddedTabs.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.HasExpandedActionView.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.HasIcon.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.HasLogo.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.Height.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.HideOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.InitIndeterminateProgress() -> void
AndroidX.AppCompat.Widget.IDecorToolbar.InitProgress() -> void
AndroidX.AppCompat.Widget.IDecorToolbar.IsOverflowMenuShowPending.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.IsOverflowMenuShowing.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.IsTitleTruncated.get -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.Menu.get -> Android.Views.IMenu?
AndroidX.AppCompat.Widget.IDecorToolbar.NavigationMode.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.NavigationMode.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.RestoreHierarchyState(Android.Util.SparseArray? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SaveHierarchyState(Android.Util.SparseArray? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetCollapsible(bool p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetDefaultNavigationContentDescription(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetDefaultNavigationIcon(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetDropdownParams(Android.Widget.ISpinnerAdapter? p0, Android.Widget.AdapterView.IOnItemSelectedListener? p1) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetEmbeddedTabView(AndroidX.AppCompat.Widget.ScrollingTabContainerView? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetHomeButtonEnabled(bool p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetIcon(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetIcon(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetLogo(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetLogo(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetMenu(Android.Views.IMenu? p0, AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? p1) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetMenuCallbacks(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? p0, AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback? p1) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetMenuPrepared() -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetNavigationContentDescription(Java.Lang.ICharSequence? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetNavigationContentDescription(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetNavigationIcon(Android.Graphics.Drawables.Drawable? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetNavigationIcon(int p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetWindowCallback(Android.Views.Window.ICallback? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetWindowTitle(Java.Lang.ICharSequence? p0) -> void
AndroidX.AppCompat.Widget.IDecorToolbar.SetupAnimatorToVisibility(int p0, long p1) -> AndroidX.Core.View.ViewPropertyAnimatorCompat?
AndroidX.AppCompat.Widget.IDecorToolbar.ShowOverflowMenu() -> bool
AndroidX.AppCompat.Widget.IDecorToolbar.SubtitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.Widget.IDecorToolbar.SubtitleFormatted.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.TitleFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.Widget.IDecorToolbar.TitleFormatted.set -> void
AndroidX.AppCompat.Widget.IDecorToolbar.ViewGroup.get -> Android.Views.ViewGroup?
AndroidX.AppCompat.Widget.IDecorToolbar.Visibility.get -> int
AndroidX.AppCompat.Widget.IDecorToolbar.Visibility.set -> void
AndroidX.AppCompat.Widget.IDecorToolbarExtensions
AndroidX.AppCompat.Widget.IEmojiCompatConfigurationView
AndroidX.AppCompat.Widget.IEmojiCompatConfigurationView.EmojiCompatEnabled.get -> bool
AndroidX.AppCompat.Widget.IEmojiCompatConfigurationView.EmojiCompatEnabled.set -> void
AndroidX.AppCompat.Widget.IFitWindowsViewGroup
AndroidX.AppCompat.Widget.IFitWindowsViewGroup.SetOnFitSystemWindowsListener(AndroidX.AppCompat.Widget.IFitWindowsViewGroupOnFitSystemWindowsListener? p0) -> void
AndroidX.AppCompat.Widget.IFitWindowsViewGroupOnFitSystemWindowsListener
AndroidX.AppCompat.Widget.IFitWindowsViewGroupOnFitSystemWindowsListener.OnFitSystemWindows(Android.Graphics.Rect? insets) -> void
AndroidX.AppCompat.Widget.IMenuItemHoverListener
AndroidX.AppCompat.Widget.IMenuItemHoverListener.OnItemHoverEnter(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, Android.Views.IMenuItem! p1) -> void
AndroidX.AppCompat.Widget.IMenuItemHoverListener.OnItemHoverExit(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, Android.Views.IMenuItem! p1) -> void
AndroidX.AppCompat.Widget.IThemedSpinnerAdapter
AndroidX.AppCompat.Widget.IThemedSpinnerAdapter.DropDownViewTheme.get -> Android.Content.Res.Resources.Theme?
AndroidX.AppCompat.Widget.IThemedSpinnerAdapter.DropDownViewTheme.set -> void
AndroidX.AppCompat.Widget.IWithHint
AndroidX.AppCompat.Widget.IWithHint.HintFormatted.get -> Java.Lang.ICharSequence?
AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs
AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs.ItemHoverEnterEventArgs(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, Android.Views.IMenuItem! p1) -> void
AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs.P0.get -> AndroidX.AppCompat.View.Menu.MenuBuilder!
AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs.P1.get -> Android.Views.IMenuItem!
AndroidX.AppCompat.Widget.ItemHoverExitEventArgs
AndroidX.AppCompat.Widget.ItemHoverExitEventArgs.ItemHoverExitEventArgs(AndroidX.AppCompat.View.Menu.MenuBuilder! p0, Android.Views.IMenuItem! p1) -> void
AndroidX.AppCompat.Widget.ItemHoverExitEventArgs.P0.get -> AndroidX.AppCompat.View.Menu.MenuBuilder!
AndroidX.AppCompat.Widget.ItemHoverExitEventArgs.P1.get -> Android.Views.IMenuItem!
AndroidX.AppCompat.Widget.LinearLayoutCompat
AndroidX.AppCompat.Widget.LinearLayoutCompat.IDividerMode
AndroidX.AppCompat.Widget.LinearLayoutCompat.IOrientationMode
AndroidX.AppCompat.Widget.LinearLayoutCompat.InspectionCompanion
AndroidX.AppCompat.Widget.LinearLayoutCompat.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.LinearLayoutCompat? __self) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.InspectionCompanion.ReadProperties(Java.Lang.Object! linearLayoutCompat, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(Android.Content.Context? c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? p) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(Android.Views.ViewGroup.MarginLayoutParams? source) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(int width, int height, float weight) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LinearLayoutCompat(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LinearLayoutCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LinearLayoutCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.LinearLayoutCompat.LinearLayoutCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ListPopupWindow
AndroidX.AppCompat.Widget.ListPopupWindow.ListPopupWindow(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ListPopupWindow.ListPopupWindow(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ListPopupWindow.ListPopupWindow(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.ListPopupWindow.ListPopupWindow(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.AppCompat.Widget.ListPopupWindow.ListPopupWindow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.MenuPopupWindow
AndroidX.AppCompat.Widget.MenuPopupWindow.ItemHoverEnter -> System.EventHandler<AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs!>!
AndroidX.AppCompat.Widget.MenuPopupWindow.ItemHoverExit -> System.EventHandler<AndroidX.AppCompat.Widget.ItemHoverExitEventArgs!>!
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.ItemHoverEnter -> System.EventHandler<AndroidX.AppCompat.Widget.ItemHoverEnterEventArgs!>!
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.ItemHoverExit -> System.EventHandler<AndroidX.AppCompat.Widget.ItemHoverExitEventArgs!>!
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.MenuDropDownListView(Android.Content.Context? context, bool hijackFocus) -> void
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.MenuDropDownListView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuPopupWindow(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.AppCompat.Widget.MenuPopupWindow.MenuPopupWindow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.PopupMenu
AndroidX.AppCompat.Widget.PopupMenu.DismissEvent -> System.EventHandler<AndroidX.AppCompat.Widget.PopupMenu.DismissEventArgs!>!
AndroidX.AppCompat.Widget.PopupMenu.DismissEventArgs
AndroidX.AppCompat.Widget.PopupMenu.DismissEventArgs.DismissEventArgs(AndroidX.AppCompat.Widget.PopupMenu? menu) -> void
AndroidX.AppCompat.Widget.PopupMenu.DismissEventArgs.Menu.get -> AndroidX.AppCompat.Widget.PopupMenu?
AndroidX.AppCompat.Widget.PopupMenu.IOnDismissListener
AndroidX.AppCompat.Widget.PopupMenu.IOnDismissListener.OnDismiss(AndroidX.AppCompat.Widget.PopupMenu? menu) -> void
AndroidX.AppCompat.Widget.PopupMenu.IOnMenuItemClickListener
AndroidX.AppCompat.Widget.PopupMenu.IOnMenuItemClickListener.OnMenuItemClick(Android.Views.IMenuItem? item) -> bool
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClick -> System.EventHandler<AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs!>!
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs.Item.get -> Android.Views.IMenuItem?
AndroidX.AppCompat.Widget.PopupMenu.MenuItemClickEventArgs.MenuItemClickEventArgs(bool handled, Android.Views.IMenuItem? item) -> void
AndroidX.AppCompat.Widget.PopupMenu.PopupMenu(Android.Content.Context! context, Android.Views.View! anchor) -> void
AndroidX.AppCompat.Widget.PopupMenu.PopupMenu(Android.Content.Context! context, Android.Views.View! anchor, int gravity) -> void
AndroidX.AppCompat.Widget.PopupMenu.PopupMenu(Android.Content.Context! context, Android.Views.View! anchor, int gravity, int popupStyleAttr, int popupStyleRes) -> void
AndroidX.AppCompat.Widget.PopupMenu.PopupMenu(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView
AndroidX.AppCompat.Widget.ScrollingTabContainerView.MVisAnimListener.get -> AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener?
AndroidX.AppCompat.Widget.ScrollingTabContainerView.MVisAnimListener.set -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView.MVisibilityAnim.get -> Android.Views.ViewPropertyAnimator?
AndroidX.AppCompat.Widget.ScrollingTabContainerView.MVisibilityAnim.set -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView.ScrollingTabContainerView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView.ScrollingTabContainerView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener
AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.VisibilityAnimListener(AndroidX.AppCompat.Widget.ScrollingTabContainerView? __self) -> void
AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.VisibilityAnimListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.SearchView
AndroidX.AppCompat.Widget.SearchView.Close -> System.EventHandler<AndroidX.AppCompat.Widget.SearchView.CloseEventArgs!>!
AndroidX.AppCompat.Widget.SearchView.CloseEventArgs
AndroidX.AppCompat.Widget.SearchView.CloseEventArgs.CloseEventArgs(bool handled) -> void
AndroidX.AppCompat.Widget.SearchView.CloseEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.SearchView.CloseEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.SearchView.IOnCloseListener
AndroidX.AppCompat.Widget.SearchView.IOnCloseListener.OnClose() -> bool
AndroidX.AppCompat.Widget.SearchView.IOnQueryTextListener
AndroidX.AppCompat.Widget.SearchView.IOnQueryTextListener.OnQueryTextChange(string? newText) -> bool
AndroidX.AppCompat.Widget.SearchView.IOnQueryTextListener.OnQueryTextSubmit(string? newText) -> bool
AndroidX.AppCompat.Widget.SearchView.IOnSuggestionListener
AndroidX.AppCompat.Widget.SearchView.IOnSuggestionListener.OnSuggestionClick(int position) -> bool
AndroidX.AppCompat.Widget.SearchView.IOnSuggestionListener.OnSuggestionSelect(int position) -> bool
AndroidX.AppCompat.Widget.SearchView.InspectionCompanion
AndroidX.AppCompat.Widget.SearchView.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.SearchView? __self) -> void
AndroidX.AppCompat.Widget.SearchView.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.SearchView.InspectionCompanion.ReadProperties(Java.Lang.Object! searchView, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.SearchView.OnQueryRefine(string? queryText) -> void
AndroidX.AppCompat.Widget.SearchView.Query.get -> string?
AndroidX.AppCompat.Widget.SearchView.QueryHint.get -> string?
AndroidX.AppCompat.Widget.SearchView.QueryHint.set -> void
AndroidX.AppCompat.Widget.SearchView.QueryTextChange -> System.EventHandler<AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs!>!
AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs
AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs.NewText.get -> string?
AndroidX.AppCompat.Widget.SearchView.QueryTextChangeEventArgs.QueryTextChangeEventArgs(bool handled, string? newText) -> void
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmit -> System.EventHandler<AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs!>!
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs.NewText.get -> string?
AndroidX.AppCompat.Widget.SearchView.QueryTextSubmitEventArgs.QueryTextSubmitEventArgs(bool handled, string? newText) -> void
AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete
AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.SearchAutoComplete(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.SearchAutoComplete(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.SearchAutoComplete(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyle) -> void
AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.SearchAutoComplete(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.SearchView.SearchView(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.SearchView.SearchView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.SearchView.SearchView(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.SearchView.SearchView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.SearchView.SetQuery(string? query, bool submit) -> void
AndroidX.AppCompat.Widget.SearchView.SuggestionClick -> System.EventHandler<AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs!>!
AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs
AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs.Position.get -> int
AndroidX.AppCompat.Widget.SearchView.SuggestionClickEventArgs.SuggestionClickEventArgs(bool handled, int position) -> void
AndroidX.AppCompat.Widget.SearchView.SuggestionSelect -> System.EventHandler<AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs!>!
AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs
AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs.Position.get -> int
AndroidX.AppCompat.Widget.SearchView.SuggestionSelectEventArgs.SuggestionSelectEventArgs(bool handled, int position) -> void
AndroidX.AppCompat.Widget.ShareActionProvider
AndroidX.AppCompat.Widget.ShareActionProvider.IOnShareTargetSelectedListener
AndroidX.AppCompat.Widget.ShareActionProvider.IOnShareTargetSelectedListener.OnShareTargetSelected(AndroidX.AppCompat.Widget.ShareActionProvider? source, Android.Content.Intent? intent) -> bool
AndroidX.AppCompat.Widget.ShareActionProvider.ShareActionProvider(Android.Content.Context? context) -> void
AndroidX.AppCompat.Widget.ShareActionProvider.ShareActionProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelected -> System.EventHandler<AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs!>!
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs.Intent.get -> Android.Content.Intent?
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs.ShareTargetSelectedEventArgs(bool handled, AndroidX.AppCompat.Widget.ShareActionProvider? source, Android.Content.Intent? intent) -> void
AndroidX.AppCompat.Widget.ShareActionProvider.ShareTargetSelectedEventArgs.Source.get -> AndroidX.AppCompat.Widget.ShareActionProvider?
AndroidX.AppCompat.Widget.SwitchCompat
AndroidX.AppCompat.Widget.SwitchCompat.InspectionCompanion
AndroidX.AppCompat.Widget.SwitchCompat.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.SwitchCompat? __self) -> void
AndroidX.AppCompat.Widget.SwitchCompat.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.SwitchCompat.InspectionCompanion.ReadProperties(Java.Lang.Object! switchCompat, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.SwitchCompat.SetEnforceSwitchWidth(bool enforceSwitchWidth) -> void
AndroidX.AppCompat.Widget.SwitchCompat.SwitchCompat(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.SwitchCompat.SwitchCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.SwitchCompat.SwitchCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.SwitchCompat.SwitchCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.SwitchCompat.TextOff.get -> string?
AndroidX.AppCompat.Widget.SwitchCompat.TextOff.set -> void
AndroidX.AppCompat.Widget.SwitchCompat.TextOn.get -> string?
AndroidX.AppCompat.Widget.SwitchCompat.TextOn.set -> void
AndroidX.AppCompat.Widget.SwitchCompat.ThumbPosition.get -> float
AndroidX.AppCompat.Widget.ThemeUtils
AndroidX.AppCompat.Widget.ThemeUtils.ThemeUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper
AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper.DropDownViewInflater.get -> Android.Views.LayoutInflater!
AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper.DropDownViewTheme.get -> Android.Content.Res.Resources.Theme?
AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper.DropDownViewTheme.set -> void
AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper.ThemedSpinnerAdapterHelper(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.TintTypedArray
AndroidX.AppCompat.Widget.TintTypedArray.GetText(int index) -> string?
AndroidX.AppCompat.Widget.TintTypedArray.GetTextArray(int index) -> string![]?
AndroidX.AppCompat.Widget.TintTypedArray.TintTypedArray(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.Toolbar
AndroidX.AppCompat.Widget.Toolbar.CollapseContentDescription.get -> string?
AndroidX.AppCompat.Widget.Toolbar.CollapseContentDescription.set -> void
AndroidX.AppCompat.Widget.Toolbar.IOnMenuItemClickListener
AndroidX.AppCompat.Widget.Toolbar.IOnMenuItemClickListener.OnMenuItemClick(Android.Views.IMenuItem? item) -> bool
AndroidX.AppCompat.Widget.Toolbar.InspectionCompanion
AndroidX.AppCompat.Widget.Toolbar.InspectionCompanion.InspectionCompanion(AndroidX.AppCompat.Widget.Toolbar? __self) -> void
AndroidX.AppCompat.Widget.Toolbar.InspectionCompanion.MapProperties(Android.Views.Inspectors.IPropertyMapper! propertyMapper) -> void
AndroidX.AppCompat.Widget.Toolbar.InspectionCompanion.ReadProperties(Java.Lang.Object! toolbar, Android.Views.Inspectors.IPropertyReader! propertyReader) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(Android.Content.Context! c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? source) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(Android.Views.ViewGroup.MarginLayoutParams? source) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(AndroidX.AppCompat.App.ActionBar.LayoutParams? source) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(AndroidX.AppCompat.Widget.Toolbar.LayoutParams? source) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(int gravity) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(int width, int height, int gravity) -> void
AndroidX.AppCompat.Widget.Toolbar.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.Toolbar.LogoDescription.get -> string?
AndroidX.AppCompat.Widget.Toolbar.LogoDescription.set -> void
AndroidX.AppCompat.Widget.Toolbar.MenuItemClick -> System.EventHandler<AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs!>!
AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs
AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs.Handled.get -> bool
AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs.Handled.set -> void
AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs.Item.get -> Android.Views.IMenuItem?
AndroidX.AppCompat.Widget.Toolbar.MenuItemClickEventArgs.MenuItemClickEventArgs(bool handled, Android.Views.IMenuItem? item) -> void
AndroidX.AppCompat.Widget.Toolbar.NavigationClick -> System.EventHandler<AndroidX.AppCompat.Widget.Toolbar.NavigationClickEventArgs!>!
AndroidX.AppCompat.Widget.Toolbar.NavigationClickEventArgs
AndroidX.AppCompat.Widget.Toolbar.NavigationClickEventArgs.NavigationClickEventArgs() -> void
AndroidX.AppCompat.Widget.Toolbar.NavigationClickEventArgs.View.get -> Android.Views.View!
AndroidX.AppCompat.Widget.Toolbar.NavigationContentDescription.get -> string?
AndroidX.AppCompat.Widget.Toolbar.NavigationContentDescription.set -> void
AndroidX.AppCompat.Widget.Toolbar.SavedState
AndroidX.AppCompat.Widget.Toolbar.SavedState.SavedState(Android.OS.IParcelable? superState) -> void
AndroidX.AppCompat.Widget.Toolbar.SavedState.SavedState(Android.OS.Parcel? source) -> void
AndroidX.AppCompat.Widget.Toolbar.SavedState.SavedState(Android.OS.Parcel? source, Java.Lang.ClassLoader? loader) -> void
AndroidX.AppCompat.Widget.Toolbar.SavedState.SavedState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.Toolbar.Subtitle.get -> string?
AndroidX.AppCompat.Widget.Toolbar.Subtitle.set -> void
AndroidX.AppCompat.Widget.Toolbar.Title.get -> string?
AndroidX.AppCompat.Widget.Toolbar.Title.set -> void
AndroidX.AppCompat.Widget.Toolbar.Toolbar(Android.Content.Context! context) -> void
AndroidX.AppCompat.Widget.Toolbar.Toolbar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.Toolbar.Toolbar(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.AppCompat.Widget.Toolbar.Toolbar(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetNavigationContentDescription(string? description) -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetWindowTitle(string? title) -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Subtitle.get -> string?
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Subtitle.set -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Title.get -> string?
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Title.set -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ToolbarWidgetWrapper(AndroidX.AppCompat.Widget.Toolbar? toolbar, bool style) -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ToolbarWidgetWrapper(AndroidX.AppCompat.Widget.Toolbar? toolbar, bool style, int defaultNavigationContentDescription, int defaultNavigationIcon) -> void
AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ToolbarWidgetWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.TooltipCompat
AndroidX.AppCompat.Widget.TooltipCompat.TooltipCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.AppCompat.Widget.ViewStubCompat
AndroidX.AppCompat.Widget.ViewStubCompat.IOnInflateListener
AndroidX.AppCompat.Widget.ViewStubCompat.IOnInflateListener.OnInflate(AndroidX.AppCompat.Widget.ViewStubCompat? p0, Android.Views.View? p1) -> void
AndroidX.AppCompat.Widget.ViewStubCompat.Inflate() -> Android.Views.View?
AndroidX.AppCompat.Widget.ViewStubCompat.InflateEvent -> System.EventHandler<AndroidX.AppCompat.Widget.ViewStubCompat.InflateEventArgs!>!
AndroidX.AppCompat.Widget.ViewStubCompat.InflateEventArgs
AndroidX.AppCompat.Widget.ViewStubCompat.InflateEventArgs.InflateEventArgs(AndroidX.AppCompat.Widget.ViewStubCompat? p0, Android.Views.View? p1) -> void
AndroidX.AppCompat.Widget.ViewStubCompat.InflateEventArgs.P0.get -> AndroidX.AppCompat.Widget.ViewStubCompat?
AndroidX.AppCompat.Widget.ViewStubCompat.InflateEventArgs.P1.get -> Android.Views.View?
AndroidX.AppCompat.Widget.ViewStubCompat.InflatedId.get -> int
AndroidX.AppCompat.Widget.ViewStubCompat.InflatedId.set -> void
AndroidX.AppCompat.Widget.ViewStubCompat.LayoutInflater.get -> Android.Views.LayoutInflater?
AndroidX.AppCompat.Widget.ViewStubCompat.LayoutInflater.set -> void
AndroidX.AppCompat.Widget.ViewStubCompat.LayoutResource.get -> int
AndroidX.AppCompat.Widget.ViewStubCompat.LayoutResource.set -> void
AndroidX.AppCompat.Widget.ViewStubCompat.SetOnInflateListener(AndroidX.AppCompat.Widget.ViewStubCompat.IOnInflateListener? inflateListener) -> void
AndroidX.AppCompat.Widget.ViewStubCompat.ViewStubCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.AppCompat.Widget.ViewStubCompat.ViewStubCompat(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyle) -> void
AndroidX.AppCompat.Widget.ViewUtils
AndroidX.AppCompat.Widget.ViewUtils.ViewUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.AppCompat.App.ActionBar.AddOnMenuVisibilityListener(AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener? listener) -> void
abstract AndroidX.AppCompat.App.ActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
abstract AndroidX.AppCompat.App.ActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, bool setSelected) -> void
abstract AndroidX.AppCompat.App.ActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, int position) -> void
abstract AndroidX.AppCompat.App.ActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, int position, bool setSelected) -> void
abstract AndroidX.AppCompat.App.ActionBar.CustomView.get -> Android.Views.View?
abstract AndroidX.AppCompat.App.ActionBar.CustomView.set -> void
abstract AndroidX.AppCompat.App.ActionBar.DisplayOptions.get -> int
abstract AndroidX.AppCompat.App.ActionBar.DisplayOptions.set -> void
abstract AndroidX.AppCompat.App.ActionBar.GetTabAt(int index) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Height.get -> int
abstract AndroidX.AppCompat.App.ActionBar.Hide() -> void
abstract AndroidX.AppCompat.App.ActionBar.IsShowing.get -> bool
abstract AndroidX.AppCompat.App.ActionBar.NavigationItemCount.get -> int
abstract AndroidX.AppCompat.App.ActionBar.NavigationMode.get -> int
abstract AndroidX.AppCompat.App.ActionBar.NavigationMode.set -> void
abstract AndroidX.AppCompat.App.ActionBar.NewTab() -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.RemoveAllTabs() -> void
abstract AndroidX.AppCompat.App.ActionBar.RemoveOnMenuVisibilityListener(AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener? listener) -> void
abstract AndroidX.AppCompat.App.ActionBar.RemoveTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
abstract AndroidX.AppCompat.App.ActionBar.RemoveTabAt(int position) -> void
abstract AndroidX.AppCompat.App.ActionBar.SelectTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
abstract AndroidX.AppCompat.App.ActionBar.SelectedNavigationIndex.get -> int
abstract AndroidX.AppCompat.App.ActionBar.SelectedTab.get -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetCustomView(Android.Views.View? view, AndroidX.AppCompat.App.ActionBar.LayoutParams? layoutParams) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetCustomView(int resId) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayHomeAsUpEnabled(bool showHomeAsUp) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayOptions(int options, int mask) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayShowCustomEnabled(bool showCustom) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayShowHomeEnabled(bool showHome) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayShowTitleEnabled(bool showTitle) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetDisplayUseLogoEnabled(bool useLogo) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetIcon(int resId) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetListNavigationCallbacks(Android.Widget.ISpinnerAdapter? adapter, AndroidX.AppCompat.App.ActionBar.IOnNavigationListener? callback_) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetLogo(Android.Graphics.Drawables.Drawable? logo) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetLogo(int resId) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetSelectedNavigationItem(int position) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetSubtitle(int resId) -> void
abstract AndroidX.AppCompat.App.ActionBar.SetTitle(int resId) -> void
abstract AndroidX.AppCompat.App.ActionBar.Show() -> void
abstract AndroidX.AppCompat.App.ActionBar.SubtitleFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.App.ActionBar.SubtitleFormatted.set -> void
abstract AndroidX.AppCompat.App.ActionBar.Tab.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.App.ActionBar.Tab.CustomView.get -> Android.Views.View?
abstract AndroidX.AppCompat.App.ActionBar.Tab.Icon.get -> Android.Graphics.Drawables.Drawable?
abstract AndroidX.AppCompat.App.ActionBar.Tab.Position.get -> int
abstract AndroidX.AppCompat.App.ActionBar.Tab.Select() -> void
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetContentDescription(Java.Lang.ICharSequence? contentDesc) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetContentDescription(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetCustomView(Android.Views.View? view) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetCustomView(int layoutResId) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetIcon(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetTabListener(AndroidX.AppCompat.App.ActionBar.ITabListener? listener) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetTag(Java.Lang.Object? obj) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetText(Java.Lang.ICharSequence? text) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.SetText(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
abstract AndroidX.AppCompat.App.ActionBar.Tab.Tag.get -> Java.Lang.Object?
abstract AndroidX.AppCompat.App.ActionBar.Tab.TextFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.App.ActionBar.TabCount.get -> int
abstract AndroidX.AppCompat.App.ActionBar.TitleFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.App.ActionBar.TitleFormatted.set -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.AddContentView(Android.Views.View? v, Android.Views.ViewGroup.LayoutParams? lp) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.ApplyDayNight() -> bool
abstract AndroidX.AppCompat.App.AppCompatDelegate.CreateView(Android.Views.View? parent, string? name, Android.Content.Context! context, Android.Util.IAttributeSet! attrs) -> Android.Views.View?
abstract AndroidX.AppCompat.App.AppCompatDelegate.DrawerToggleDelegate.get -> AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate?
abstract AndroidX.AppCompat.App.AppCompatDelegate.FindViewById(int id) -> Java.Lang.Object?
abstract AndroidX.AppCompat.App.AppCompatDelegate.HandleNativeActionModesEnabled.get -> bool
abstract AndroidX.AppCompat.App.AppCompatDelegate.HandleNativeActionModesEnabled.set -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.HasWindowFeature(int featureId) -> bool
abstract AndroidX.AppCompat.App.AppCompatDelegate.InstallViewFactory() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.InvalidateOptionsMenu() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.MenuInflater.get -> Android.Views.MenuInflater?
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnCreate(Android.OS.Bundle? savedInstanceState) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnDestroy() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnPostCreate(Android.OS.Bundle? savedInstanceState) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnPostResume() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnSaveInstanceState(Android.OS.Bundle? outState) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnStart() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.OnStop() -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.RequestWindowFeature(int featureId) -> bool
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetContentView(Android.Views.View? v) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetContentView(Android.Views.View? v, Android.Views.ViewGroup.LayoutParams? lp) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetContentView(int resId) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetLocalNightMode(int mode) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetSupportActionBar(AndroidX.AppCompat.Widget.Toolbar? toolbar) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.SetTitle(Java.Lang.ICharSequence? title) -> void
abstract AndroidX.AppCompat.App.AppCompatDelegate.StartSupportActionMode(AndroidX.AppCompat.View.ActionMode.ICallback! callback_) -> AndroidX.AppCompat.View.ActionMode?
abstract AndroidX.AppCompat.App.AppCompatDelegate.SupportActionBar.get -> AndroidX.AppCompat.App.ActionBar?
abstract AndroidX.AppCompat.View.ActionMode.CustomView.get -> Android.Views.View?
abstract AndroidX.AppCompat.View.ActionMode.CustomView.set -> void
abstract AndroidX.AppCompat.View.ActionMode.Finish() -> void
abstract AndroidX.AppCompat.View.ActionMode.Invalidate() -> void
abstract AndroidX.AppCompat.View.ActionMode.Menu.get -> Android.Views.IMenu?
abstract AndroidX.AppCompat.View.ActionMode.MenuInflater.get -> Android.Views.MenuInflater?
abstract AndroidX.AppCompat.View.ActionMode.SetSubtitle(int resId) -> void
abstract AndroidX.AppCompat.View.ActionMode.SetTitle(int resId) -> void
abstract AndroidX.AppCompat.View.ActionMode.SubtitleFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.View.ActionMode.SubtitleFormatted.set -> void
abstract AndroidX.AppCompat.View.ActionMode.TitleFormatted.get -> Java.Lang.ICharSequence?
abstract AndroidX.AppCompat.View.ActionMode.TitleFormatted.set -> void
abstract AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.Popup.get -> AndroidX.AppCompat.View.Menu.IShowableListMenu?
abstract AndroidX.AppCompat.View.Menu.BaseMenuPresenter.BindItemView(AndroidX.AppCompat.View.Menu.MenuItemImpl? p0, AndroidX.AppCompat.View.Menu.IMenuViewItemView? p1) -> void
abstract AndroidX.AppCompat.View.Menu.BaseMenuPresenter.OnRestoreInstanceState(Android.OS.IParcelable? p0) -> void
abstract AndroidX.AppCompat.View.Menu.BaseMenuPresenter.OnSaveInstanceState() -> Android.OS.IParcelable?
abstract AndroidX.AppCompat.View.Menu.MenuPopup.AddMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.Dismiss() -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.FlagActionItems() -> bool
abstract AndroidX.AppCompat.View.Menu.MenuPopup.IsShowing.get -> bool
abstract AndroidX.AppCompat.View.Menu.MenuPopup.ListView.get -> Android.Widget.ListView?
abstract AndroidX.AppCompat.View.Menu.MenuPopup.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? p0, bool p1) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.OnRestoreInstanceState(Android.OS.IParcelable? p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.OnSaveInstanceState() -> Android.OS.IParcelable?
abstract AndroidX.AppCompat.View.Menu.MenuPopup.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? p0) -> bool
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetAnchorView(Android.Views.View? p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetCallback(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetForceShowIcon(bool p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetGravity(int p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetHorizontalOffset(int p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetOnDismissListener(Android.Widget.PopupWindow.IOnDismissListener? p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetShowTitle(bool p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.SetVerticalOffset(int p0) -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.Show() -> void
abstract AndroidX.AppCompat.View.Menu.MenuPopup.UpdateMenuView(bool p0) -> void
abstract AndroidX.AppCompat.Widget.ForwardingListener.Popup.get -> AndroidX.AppCompat.View.Menu.IShowableListMenu?
const AndroidX.AppCompat.App.ActionBar.DisplayHomeAsUp = 4 -> int
const AndroidX.AppCompat.App.ActionBar.DisplayShowCustom = 16 -> int
const AndroidX.AppCompat.App.ActionBar.DisplayShowHome = 2 -> int
const AndroidX.AppCompat.App.ActionBar.DisplayShowTitle = 8 -> int
const AndroidX.AppCompat.App.ActionBar.DisplayUseLogo = 1 -> int
const AndroidX.AppCompat.App.ActionBar.NavigationModeList = 1 -> int
const AndroidX.AppCompat.App.ActionBar.NavigationModeStandard = 0 -> int
const AndroidX.AppCompat.App.ActionBar.NavigationModeTabs = 2 -> int
const AndroidX.AppCompat.App.ActionBar.Tab.InvalidPosition = -1 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.FeatureActionModeOverlay = 10 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.FeatureSupportActionBar = 108 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.FeatureSupportActionBarOverlay = 109 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightAuto = 0 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightAutoBattery = 3 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightAutoTime = 0 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightFollowSystem = -1 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightNo = 1 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightUnspecified = -100 -> int
const AndroidX.AppCompat.App.AppCompatDelegate.ModeNightYes = 2 -> int
const AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowDirectionEnd = 3 -> int
const AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowDirectionLeft = 0 -> int
const AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowDirectionRight = 1 -> int
const AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowDirectionStart = 2 -> int
const AndroidX.AppCompat.View.Menu.ListMenuPresenter.ViewsTag = "android:menu:list" -> string!
const AndroidX.AppCompat.Widget.ActivityChooserModel.DefaultHistoryFileName = "activity_choser_model_history.xml" -> string!
const AndroidX.AppCompat.Widget.ActivityChooserModel.DefaultHistoryMaxLength = 50 -> int
const AndroidX.AppCompat.Widget.DropDownListView.InvalidPosition = -1 -> int
const AndroidX.AppCompat.Widget.DropDownListView.NoPosition = -1 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.Horizontal = 0 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividerBeginning = 1 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividerEnd = 4 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividerMiddle = 2 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividerNone = 0 -> int
const AndroidX.AppCompat.Widget.LinearLayoutCompat.Vertical = 1 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.InputMethodFromFocusable = 0 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.InputMethodNeeded = 1 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.InputMethodNotNeeded = 2 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.MatchParent = -1 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.PositionPromptAbove = 0 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.PositionPromptBelow = 1 -> int
const AndroidX.AppCompat.Widget.ListPopupWindow.WrapContent = -2 -> int
const AndroidX.AppCompat.Widget.ShareActionProvider.DefaultShareHistoryFileName = "share_history.xml" -> string!
override AndroidX.AppCompat.App.ActionBar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.ActionBar.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.ActionBar.LayoutParams.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.ActionBar.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.ActionBar.Tab.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.ActionBar.Tab.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.ActionBar.Tab.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.ActionBar.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.ActionBar.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.ActionBarDrawerToggle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.ActionBarDrawerToggle.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.ActionBarDrawerToggle.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AlertDialog.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AlertDialog.Builder.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AlertDialog.Builder.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AlertDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AlertDialog.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AlertDialog.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppCompatActivity.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppCompatActivity.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AppCompatActivity.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppCompatDelegate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppCompatDelegate.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AppCompatDelegate.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppCompatDialog.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppCompatDialog.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AppCompatDialog.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppCompatDialogFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppCompatDialogFragment.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AppCompatDialogFragment.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppCompatViewInflater.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppCompatViewInflater.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.AppCompatViewInflater.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.AppLocalesMetadataHolderService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.AppLocalesMetadataHolderService.OnBind(Android.Content.Intent! intent) -> Android.OS.IBinder!
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.CustomView.get -> Android.Views.View?
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.CustomView.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.Finish() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.Invalidate() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.Menu.get -> Android.Views.IMenu?
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.MenuInflater.get -> Android.Views.MenuInflater?
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.SetSubtitle(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.SetTitle(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.SubtitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.SubtitleFormatted.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.TitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.TitleFormatted.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.AddOnMenuVisibilityListener(AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener? listener) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, bool setSelected) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, int position) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, int position, bool setSelected) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.CustomView.get -> Android.Views.View?
override AndroidX.AppCompat.App.WindowDecorActionBar.CustomView.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.DisplayOptions.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.DisplayOptions.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.GetTabAt(int index) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.Height.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.Hide() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.IsShowing.get -> bool
override AndroidX.AppCompat.App.WindowDecorActionBar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.WindowDecorActionBar.NavigationItemCount.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.NavigationMode.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.NavigationMode.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.NewTab() -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.RemoveAllTabs() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.RemoveOnMenuVisibilityListener(AndroidX.AppCompat.App.ActionBar.IOnMenuVisibilityListener? listener) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.RemoveTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.RemoveTabAt(int position) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SelectTab(AndroidX.AppCompat.App.ActionBar.Tab? tab) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SelectedNavigationIndex.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.SelectedTab.get -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetCustomView(Android.Views.View? view, AndroidX.AppCompat.App.ActionBar.LayoutParams? layoutParams) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetCustomView(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayHomeAsUpEnabled(bool showHomeAsUp) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayOptions(int options, int mask) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayShowCustomEnabled(bool showCustom) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayShowHomeEnabled(bool showHome) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayShowTitleEnabled(bool showTitle) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetDisplayUseLogoEnabled(bool useLogo) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetIcon(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetListNavigationCallbacks(Android.Widget.ISpinnerAdapter? adapter, AndroidX.AppCompat.App.ActionBar.IOnNavigationListener? callback) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetLogo(Android.Graphics.Drawables.Drawable? logo) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetLogo(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetSelectedNavigationItem(int position) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetSubtitle(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SetTitle(int resId) -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.Show() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.SubtitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.SubtitleFormatted.set -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.TabCount.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.CustomView.get -> Android.Views.View?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.Icon.get -> Android.Graphics.Drawables.Drawable?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.Position.get -> int
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.Select() -> void
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetContentDescription(Java.Lang.ICharSequence? contentDesc) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetContentDescription(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetCustomView(Android.Views.View? view) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetCustomView(int layoutResId) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetIcon(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetTabListener(AndroidX.AppCompat.App.ActionBar.ITabListener? callback) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetTag(Java.Lang.Object? tag) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetText(Java.Lang.ICharSequence? text) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetText(int resId) -> AndroidX.AppCompat.App.ActionBar.Tab?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.Tag.get -> Java.Lang.Object?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.TextFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.WindowDecorActionBar.ThresholdClass.get -> nint
override AndroidX.AppCompat.App.WindowDecorActionBar.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.App.WindowDecorActionBar.TitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.App.WindowDecorActionBar.TitleFormatted.set -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Draw(Android.Graphics.Canvas! canvas) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Opacity.get -> int
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.SetAlpha(int alpha) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.SetColorFilter(Android.Graphics.ColorFilter? colorFilter) -> void
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ThresholdClass.get -> nint
override AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Text.AllCapsTransformationMethod.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Text.AllCapsTransformationMethod.ThresholdClass.get -> nint
override AndroidX.AppCompat.Text.AllCapsTransformationMethod.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.ActionBarPolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.ActionBarPolicy.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.ActionBarPolicy.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.ActionMode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.ActionMode.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.ActionMode.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.ContextThemeWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.ContextThemeWrapper.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.ContextThemeWrapper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.ActionMenuItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ActionMenuItem.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.ActionMenuItem.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.ActionMenuItemView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.BaseMenuPresenter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.BaseMenuPresenter.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.BaseMenuPresenter.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.ExpandedMenuView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ListMenuItemView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ListMenuItemView.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.ListMenuItemView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.ListMenuPresenter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.ListMenuPresenter.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.ListMenuPresenter.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuAdapter.Count.get -> int
override AndroidX.AppCompat.View.Menu.MenuAdapter.GetItem(int position) -> Java.Lang.Object?
override AndroidX.AppCompat.View.Menu.MenuAdapter.GetItemId(int position) -> long
override AndroidX.AppCompat.View.Menu.MenuAdapter.GetView(int position, Android.Views.View? convertView, Android.Views.ViewGroup? parent) -> Android.Views.View?
override AndroidX.AppCompat.View.Menu.MenuAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuAdapter.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuAdapter.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuBuilder.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuBuilder.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuItemImpl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuPopup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuPopup.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuPopup.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuPopupHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuPopupHelper.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuPopupHelper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.MenuWrapperICS.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.MenuWrapperICS.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.MenuWrapperICS.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.Menu.SubMenuBuilder.ActionViewStatesKey.get -> string?
override AndroidX.AppCompat.View.Menu.SubMenuBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.Menu.SubMenuBuilder.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.Menu.SubMenuBuilder.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.StandaloneActionMode.CustomView.get -> Android.Views.View?
override AndroidX.AppCompat.View.StandaloneActionMode.CustomView.set -> void
override AndroidX.AppCompat.View.StandaloneActionMode.Finish() -> void
override AndroidX.AppCompat.View.StandaloneActionMode.Invalidate() -> void
override AndroidX.AppCompat.View.StandaloneActionMode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.StandaloneActionMode.Menu.get -> Android.Views.IMenu?
override AndroidX.AppCompat.View.StandaloneActionMode.MenuInflater.get -> Android.Views.MenuInflater?
override AndroidX.AppCompat.View.StandaloneActionMode.SetSubtitle(int resId) -> void
override AndroidX.AppCompat.View.StandaloneActionMode.SetTitle(int resId) -> void
override AndroidX.AppCompat.View.StandaloneActionMode.SubtitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.View.StandaloneActionMode.SubtitleFormatted.set -> void
override AndroidX.AppCompat.View.StandaloneActionMode.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.StandaloneActionMode.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.StandaloneActionMode.TitleFormatted.get -> Java.Lang.ICharSequence?
override AndroidX.AppCompat.View.StandaloneActionMode.TitleFormatted.set -> void
override AndroidX.AppCompat.View.SupportMenuInflater.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.SupportMenuInflater.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.SupportMenuInflater.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.View.WindowCallbackWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.View.WindowCallbackWrapper.ThresholdClass.get -> nint
override AndroidX.AppCompat.View.WindowCallbackWrapper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AbsActionBarView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AbsActionBarView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AbsActionBarView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionBarContainer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionBarContainer.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.AppCompat.Widget.ActionBarContainer.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionBarContainer.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionBarContextView.AnimateToVisibility(int p0) -> void
override AndroidX.AppCompat.Widget.ActionBarContextView.AnimatedVisibility.get -> int
override AndroidX.AppCompat.Widget.ActionBarContextView.CanShowOverflowMenu() -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.ContentHeight.get -> int
override AndroidX.AppCompat.Widget.ActionBarContextView.ContentHeight.set -> void
override AndroidX.AppCompat.Widget.ActionBarContextView.DismissPopupMenus() -> void
override AndroidX.AppCompat.Widget.ActionBarContextView.HideOverflowMenu() -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.IsOverflowMenuShowPending.get -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.IsOverflowMenuShowing.get -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.IsOverflowReserved.get -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionBarContextView.OnHoverEvent(Android.Views.MotionEvent? p0) -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.AppCompat.Widget.ActionBarContextView.OnTouchEvent(Android.Views.MotionEvent? p0) -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.PostShowOverflowMenu() -> void
override AndroidX.AppCompat.Widget.ActionBarContextView.SetupAnimatorToVisibility(int p0, long p1) -> AndroidX.Core.View.ViewPropertyAnimatorCompat?
override AndroidX.AppCompat.Widget.ActionBarContextView.ShowOverflowMenu() -> bool
override AndroidX.AppCompat.Widget.ActionBarContextView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionBarContextView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnLayout(bool changed, int left, int top, int right, int bottom) -> void
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionMenuPresenter.BindItemView(AndroidX.AppCompat.View.Menu.MenuItemImpl? item, AndroidX.AppCompat.View.Menu.IMenuViewItemView? itemView) -> void
override AndroidX.AppCompat.Widget.ActionMenuPresenter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionMenuPresenter.OnRestoreInstanceState(Android.OS.IParcelable? state) -> void
override AndroidX.AppCompat.Widget.ActionMenuPresenter.OnSaveInstanceState() -> Android.OS.IParcelable?
override AndroidX.AppCompat.Widget.ActionMenuPresenter.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionMenuPresenter.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionMenuView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActionMenuView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActionMenuView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityResolveInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActivityChooserModel.HistoricalRecord.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActivityChooserModel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActivityChooserModel.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActivityChooserModel.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActivityChooserView.InnerLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ActivityChooserView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ActivityChooserView.OnLayout(bool changed, int left, int top, int right, int bottom) -> void
override AndroidX.AppCompat.Widget.ActivityChooserView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ActivityChooserView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AlertDialogLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AlertDialogLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AlertDialogLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatButton.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatButton.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatButton.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatCheckBox.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatCheckBox.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatCheckBox.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatCheckBox.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatCheckedTextView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatCheckedTextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatCheckedTextView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatCheckedTextView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatDrawableManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatEditText.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatEditText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatEditText.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatEditText.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatImageButton.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatImageButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatImageButton.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatImageButton.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatImageHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatImageHelper.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatImageHelper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatImageView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatImageView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatImageView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatImageView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatRadioButton.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatRadioButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatRadioButton.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatRadioButton.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatRatingBar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatRatingBar.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatRatingBar.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatSeekBar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatSeekBar.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatSeekBar.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatSpinner.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatSpinner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatSpinner.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatSpinner.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatTextView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatTextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatTextView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatTextView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.AppCompatToggleButton.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatToggleButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.AppCompatToggleButton.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.AppCompatToggleButton.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ButtonBarLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ButtonBarLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ButtonBarLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ContentFrameLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ContentFrameLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ContentFrameLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.DialogTitle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.DialogTitle.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.DialogTitle.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.DropDownListView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.DropDownListView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.DropDownListView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.FitWindowsFrameLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.FitWindowsFrameLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.FitWindowsFrameLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.FitWindowsLinearLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.FitWindowsLinearLayout.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.FitWindowsLinearLayout.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ForwardingListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ForwardingListener.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ForwardingListener.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.LinearLayoutCompat.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.LinearLayoutCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.LinearLayoutCompat.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.LinearLayoutCompat.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.AppCompat.Widget.LinearLayoutCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.LinearLayoutCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ListPopupWindow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ListPopupWindow.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ListPopupWindow.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.MenuPopupWindow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.HasFocus.get -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.HasWindowFocus.get -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.IsFocused.get -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.IsInTouchMode.get -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.LookForSelectablePosition(int p0, bool p1) -> int
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.MeasureHeightOfChildrenCompat(int p0, int p1, int p2, int p3, int p4) -> int
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.OnForwardedEvent(Android.Views.MotionEvent? p0, int p1) -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.OnHoverEvent(Android.Views.MotionEvent? ev) -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.OnTouchEvent(Android.Views.MotionEvent? p0) -> bool
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.MenuPopupWindow.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.MenuPopupWindow.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.PopupMenu.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.PopupMenu.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.PopupMenu.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.SearchView.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.SearchView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.SearchView.SearchAutoComplete.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.SearchView.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.SearchView.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ShareActionProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ShareActionProvider.OnCreateActionView() -> Android.Views.View?
override AndroidX.AppCompat.Widget.ShareActionProvider.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ShareActionProvider.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.SwitchCompat.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.SwitchCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.SwitchCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.SwitchCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ThemeUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ThemeUtils.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ThemeUtils.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ThemedSpinnerAdapterHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TintTypedArray.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TintTypedArray.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.TintTypedArray.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.Toolbar.InspectionCompanion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.Toolbar.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.Toolbar.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.Toolbar.LayoutParams.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.Toolbar.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.Toolbar.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.AppCompat.Widget.Toolbar.SavedState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.Toolbar.SavedState.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.Toolbar.SavedState.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.Toolbar.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.Toolbar.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.TooltipCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.TooltipCompat.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.TooltipCompat.ThresholdType.get -> System.Type!
override AndroidX.AppCompat.Widget.ViewStubCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ViewUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.AppCompat.Widget.ViewUtils.ThresholdClass.get -> nint
override AndroidX.AppCompat.Widget.ViewUtils.ThresholdType.get -> System.Type!
override sealed AndroidX.AppCompat.App.AppCompatActivity.OnMenuItemSelected(int featureId, Android.Views.IMenuItem! item) -> bool
static AndroidX.AppCompat.App.AppCompatDelegate.ApplicationLocales.get -> AndroidX.Core.OS.LocaleListCompat!
static AndroidX.AppCompat.App.AppCompatDelegate.ApplicationLocales.set -> void
static AndroidX.AppCompat.App.AppCompatDelegate.CompatVectorFromResourcesEnabled.get -> bool
static AndroidX.AppCompat.App.AppCompatDelegate.CompatVectorFromResourcesEnabled.set -> void
static AndroidX.AppCompat.App.AppCompatDelegate.Create(Android.App.Activity! activity, AndroidX.AppCompat.App.IAppCompatCallback? callback) -> AndroidX.AppCompat.App.AppCompatDelegate!
static AndroidX.AppCompat.App.AppCompatDelegate.Create(Android.App.Dialog! dialog, AndroidX.AppCompat.App.IAppCompatCallback? callback) -> AndroidX.AppCompat.App.AppCompatDelegate!
static AndroidX.AppCompat.App.AppCompatDelegate.Create(Android.Content.Context! context, Android.App.Activity! activity, AndroidX.AppCompat.App.IAppCompatCallback? callback) -> AndroidX.AppCompat.App.AppCompatDelegate!
static AndroidX.AppCompat.App.AppCompatDelegate.Create(Android.Content.Context! context, Android.Views.Window! window, AndroidX.AppCompat.App.IAppCompatCallback? callback) -> AndroidX.AppCompat.App.AppCompatDelegate!
static AndroidX.AppCompat.App.AppCompatDelegate.DefaultNightMode.get -> int
static AndroidX.AppCompat.App.AppCompatDelegate.DefaultNightMode.set -> void
static AndroidX.AppCompat.App.AppLocalesMetadataHolderService.GetServiceInfo(Android.Content.Context! context) -> Android.Content.PM.ServiceInfo!
static AndroidX.AppCompat.View.ActionBarPolicy.Get(Android.Content.Context? context) -> AndroidX.AppCompat.View.ActionBarPolicy?
static AndroidX.AppCompat.View.Menu.IMenuViewItemViewExtensions.SetTitle(this AndroidX.AppCompat.View.Menu.IMenuViewItemView! self, string? p0) -> void
static AndroidX.AppCompat.View.Menu.MenuPopup.MeasureIndividualMenuWidth(Android.Widget.IListAdapter? adapter, Android.Views.ViewGroup? parent, Android.Content.Context? context, int maxAllowedWidth) -> int
static AndroidX.AppCompat.View.Menu.MenuPopup.ShouldPreserveIconSpacing(AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> bool
static AndroidX.AppCompat.View.Menu.MenuPopup.ToMenuAdapter(Android.Widget.IListAdapter? adapter) -> AndroidX.AppCompat.View.Menu.MenuAdapter?
static AndroidX.AppCompat.Widget.AbsActionBarView.Next(int x, int val, bool isRtl) -> int
static AndroidX.AppCompat.Widget.ActivityChooserModel.Get(Android.Content.Context? context, string? historyFileName) -> Android.Database.DataSetObservable?
static AndroidX.AppCompat.Widget.AppCompatDrawableManager.Get() -> AndroidX.AppCompat.Widget.AppCompatDrawableManager?
static AndroidX.AppCompat.Widget.AppCompatDrawableManager.GetPorterDuffColorFilter(int color, Android.Graphics.PorterDuff.Mode? mode) -> Android.Graphics.PorterDuffColorFilter?
static AndroidX.AppCompat.Widget.AppCompatDrawableManager.Preload() -> void
static AndroidX.AppCompat.Widget.IDecorContentParentExtensions.SetWindowTitle(this AndroidX.AppCompat.Widget.IDecorContentParent! self, string? p0) -> void
static AndroidX.AppCompat.Widget.IDecorToolbarExtensions.SetNavigationContentDescription(this AndroidX.AppCompat.Widget.IDecorToolbar! self, string? p0) -> void
static AndroidX.AppCompat.Widget.IDecorToolbarExtensions.SetWindowTitle(this AndroidX.AppCompat.Widget.IDecorToolbar! self, string? p0) -> void
static AndroidX.AppCompat.Widget.ThemeUtils.CheckAppCompatTheme(Android.Views.View! view, Android.Content.Context! context) -> void
static AndroidX.AppCompat.Widget.ThemeUtils.CreateDisabledStateList(int textColor, int disabledTextColor) -> Android.Content.Res.ColorStateList!
static AndroidX.AppCompat.Widget.ThemeUtils.GetDisabledThemeAttrColor(Android.Content.Context! context, int attr) -> int
static AndroidX.AppCompat.Widget.ThemeUtils.GetThemeAttrColor(Android.Content.Context! context, int attr) -> int
static AndroidX.AppCompat.Widget.ThemeUtils.GetThemeAttrColorStateList(Android.Content.Context! context, int attr) -> Android.Content.Res.ColorStateList?
static AndroidX.AppCompat.Widget.TintTypedArray.ObtainStyledAttributes(Android.Content.Context? context, Android.Util.IAttributeSet? set, int[]? attrs) -> AndroidX.AppCompat.Widget.TintTypedArray?
static AndroidX.AppCompat.Widget.TintTypedArray.ObtainStyledAttributes(Android.Content.Context? context, Android.Util.IAttributeSet? set, int[]? attrs, int defStyleAttr, int defStyleRes) -> AndroidX.AppCompat.Widget.TintTypedArray?
static AndroidX.AppCompat.Widget.TintTypedArray.ObtainStyledAttributes(Android.Content.Context? context, int resid, int[]? attrs) -> AndroidX.AppCompat.Widget.TintTypedArray?
static AndroidX.AppCompat.Widget.Toolbar.SavedState.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.AppCompat.Widget.TooltipCompat.SetTooltipText(Android.Views.View! view, Java.Lang.ICharSequence? tooltipText) -> void
static AndroidX.AppCompat.Widget.TooltipCompat.SetTooltipText(Android.Views.View! view, string? tooltipText) -> void
static AndroidX.AppCompat.Widget.ViewUtils.ComputeFitSystemWindows(Android.Views.View! view, Android.Graphics.Rect! inoutInsets, Android.Graphics.Rect! outLocalInsets) -> void
static AndroidX.AppCompat.Widget.ViewUtils.IsLayoutRtl(Android.Views.View? view) -> bool
static AndroidX.AppCompat.Widget.ViewUtils.MakeOptionalFitsSystemWindows(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.App.ActionBar.CloseOptionsMenu() -> bool
virtual AndroidX.AppCompat.App.ActionBar.CollapseActionView() -> bool
virtual AndroidX.AppCompat.App.ActionBar.DispatchMenuVisibilityChanged(bool visible) -> void
virtual AndroidX.AppCompat.App.ActionBar.Elevation.get -> float
virtual AndroidX.AppCompat.App.ActionBar.Elevation.set -> void
virtual AndroidX.AppCompat.App.ActionBar.HideOffset.get -> int
virtual AndroidX.AppCompat.App.ActionBar.HideOffset.set -> void
virtual AndroidX.AppCompat.App.ActionBar.HideOnContentScrollEnabled.get -> bool
virtual AndroidX.AppCompat.App.ActionBar.HideOnContentScrollEnabled.set -> void
virtual AndroidX.AppCompat.App.ActionBar.InvalidateOptionsMenu() -> bool
virtual AndroidX.AppCompat.App.ActionBar.IsTitleTruncated.get -> bool
virtual AndroidX.AppCompat.App.ActionBar.OnConfigurationChanged(Android.Content.Res.Configuration? config) -> void
virtual AndroidX.AppCompat.App.ActionBar.OnKeyShortcut(int keyCode, Android.Views.KeyEvent? ev) -> bool
virtual AndroidX.AppCompat.App.ActionBar.OnMenuKeyEvent(Android.Views.KeyEvent? e) -> bool
virtual AndroidX.AppCompat.App.ActionBar.OpenOptionsMenu() -> bool
virtual AndroidX.AppCompat.App.ActionBar.SetDefaultDisplayHomeAsUpEnabled(bool enabled) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetHomeActionContentDescription(Java.Lang.ICharSequence? description) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetHomeActionContentDescription(int resId) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetHomeAsUpIndicator(Android.Graphics.Drawables.Drawable? indicator) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetHomeAsUpIndicator(int resId) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetHomeButtonEnabled(bool enabled) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetShowHideAnimationEnabled(bool enabled) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetSplitBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetStackedBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.App.ActionBar.SetWindowTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.AppCompat.App.ActionBar.StartActionMode(AndroidX.AppCompat.View.ActionMode.ICallback? callback) -> AndroidX.AppCompat.View.ActionMode?
virtual AndroidX.AppCompat.App.ActionBar.ThemedContext.get -> Android.Content.Context?
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerArrowDrawable.get -> AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable!
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerArrowDrawable.set -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerIndicatorEnabled.get -> bool
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerIndicatorEnabled.set -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerSlideAnimationEnabled.get -> bool
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.DrawerSlideAnimationEnabled.set -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnDrawerClosed(Android.Views.View? drawerView) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnDrawerOpened(Android.Views.View? drawerView) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnDrawerSlide(Android.Views.View? drawerView, float slideOffset) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnDrawerStateChanged(int newState) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.OnOptionsItemSelected(Android.Views.IMenuItem? item) -> bool
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.SetHomeAsUpIndicator(Android.Graphics.Drawables.Drawable? indicator) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.SetHomeAsUpIndicator(int resId) -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.SyncState() -> void
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.ToolbarNavigationClickListener.get -> Android.Views.View.IOnClickListener?
virtual AndroidX.AppCompat.App.ActionBarDrawerToggle.ToolbarNavigationClickListener.set -> void
virtual AndroidX.AppCompat.App.AlertDialog.Builder.Context.get -> Android.Content.Context!
virtual AndroidX.AppCompat.App.AlertDialog.Builder.Create() -> AndroidX.AppCompat.App.AlertDialog!
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetAdapter(Android.Widget.IListAdapter? adapter, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetCancelable(bool cancelable) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetCursor(Android.Database.ICursor? cursor, Android.Content.IDialogInterfaceOnClickListener? listener, string? labelColumn) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetCustomTitle(Android.Views.View? customTitleView) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetIcon(int iconId) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetIconAttribute(int attrId) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetInverseBackgroundForced(bool useInverseBackground) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(Java.Lang.ICharSequence![]? items, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetItems(int itemsId, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetMessage(Java.Lang.ICharSequence? message) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetMessage(int messageId) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(Android.Database.ICursor? cursor, string? isCheckedColumn, string? labelColumn, Android.Content.IDialogInterfaceOnMultiChoiceClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(Java.Lang.ICharSequence![]? items, bool[]? checkedItems, Android.Content.IDialogInterfaceOnMultiChoiceClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetMultiChoiceItems(int itemsId, bool[]? checkedItems, Android.Content.IDialogInterfaceOnMultiChoiceClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(Java.Lang.ICharSequence? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButton(int textId, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNegativeButtonIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(Java.Lang.ICharSequence? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButton(int textId, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetNeutralButtonIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetOnCancelListener(Android.Content.IDialogInterfaceOnCancelListener? onCancelListener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetOnDismissListener(Android.Content.IDialogInterfaceOnDismissListener? onDismissListener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetOnItemSelectedListener(Android.Widget.AdapterView.IOnItemSelectedListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetOnKeyListener(Android.Content.IDialogInterfaceOnKeyListener? onKeyListener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(Java.Lang.ICharSequence? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButton(int textId, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetPositiveButtonIcon(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetRecycleOnMeasureEnabled(bool enabled) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Android.Database.ICursor? cursor, int checkedItem, string? labelColumn, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Android.Widget.IListAdapter? adapter, int checkedItem, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(Java.Lang.ICharSequence![]? items, int checkedItem, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetSingleChoiceItems(int itemsId, int checkedItem, Android.Content.IDialogInterfaceOnClickListener? listener) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetTitle(Java.Lang.ICharSequence? title) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetTitle(int titleId) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetView(Android.Views.View? view) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetView(Android.Views.View? view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.SetView(int layoutResId) -> AndroidX.AppCompat.App.AlertDialog.Builder?
virtual AndroidX.AppCompat.App.AlertDialog.Builder.Show() -> AndroidX.AppCompat.App.AlertDialog?
virtual AndroidX.AppCompat.App.AlertDialog.GetButton(int whichButton) -> Android.Widget.Button?
virtual AndroidX.AppCompat.App.AlertDialog.ListView.get -> Android.Widget.ListView?
virtual AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, Java.Lang.ICharSequence? text, Android.Content.IDialogInterfaceOnClickListener? listener) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, Java.Lang.ICharSequence? text, Android.Graphics.Drawables.Drawable? icon, Android.Content.IDialogInterfaceOnClickListener? listener) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetButton(int whichButton, Java.Lang.ICharSequence? text, Android.OS.Message? msg) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetCustomTitle(Android.Views.View? customTitleView) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetIcon(int resId) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetIconAttribute(int attrId) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetMessage(Java.Lang.ICharSequence? message) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetView(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.App.AlertDialog.SetView(Android.Views.View? view, int viewSpacingLeft, int viewSpacingTop, int viewSpacingRight, int viewSpacingBottom) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.Delegate.get -> AndroidX.AppCompat.App.AppCompatDelegate!
virtual AndroidX.AppCompat.App.AppCompatActivity.DrawerToggleDelegate.get -> AndroidX.AppCompat.App.ActionBarDrawerToggle.IDelegate?
virtual AndroidX.AppCompat.App.AppCompatActivity.OnCreateSupportNavigateUpTaskStack(AndroidX.Core.App.TaskStackBuilder! builder) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnLocalesChanged(AndroidX.Core.OS.LocaleListCompat! locales) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnNightModeChanged(int mode) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnPrepareSupportNavigateUpTaskStack(AndroidX.Core.App.TaskStackBuilder! builder) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnSupportActionModeFinished(AndroidX.AppCompat.View.ActionMode! mode) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnSupportActionModeStarted(AndroidX.AppCompat.View.ActionMode! mode) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnSupportContentChanged() -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.OnSupportNavigateUp() -> bool
virtual AndroidX.AppCompat.App.AppCompatActivity.OnWindowStartingSupportActionMode(AndroidX.AppCompat.View.ActionMode.ICallback! callback) -> AndroidX.AppCompat.View.ActionMode?
virtual AndroidX.AppCompat.App.AppCompatActivity.SetSupportActionBar(AndroidX.AppCompat.Widget.Toolbar? toolbar) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.SetSupportProgress(int progress) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.SetSupportProgressBarIndeterminate(bool indeterminate) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.SetSupportProgressBarIndeterminateVisibility(bool visible) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.SetSupportProgressBarVisibility(bool visible) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.StartSupportActionMode(AndroidX.AppCompat.View.ActionMode.ICallback! callback) -> AndroidX.AppCompat.View.ActionMode?
virtual AndroidX.AppCompat.App.AppCompatActivity.SupportActionBar.get -> AndroidX.AppCompat.App.ActionBar?
virtual AndroidX.AppCompat.App.AppCompatActivity.SupportNavigateUpTo(Android.Content.Intent! upIntent) -> void
virtual AndroidX.AppCompat.App.AppCompatActivity.SupportParentActivityIntent.get -> Android.Content.Intent?
virtual AndroidX.AppCompat.App.AppCompatActivity.SupportRequestWindowFeature(int featureId) -> bool
virtual AndroidX.AppCompat.App.AppCompatActivity.SupportShouldUpRecreateTask(Android.Content.Intent! targetIntent) -> bool
virtual AndroidX.AppCompat.App.AppCompatDelegate.AttachBaseContext(Android.Content.Context? context) -> void
virtual AndroidX.AppCompat.App.AppCompatDelegate.AttachBaseContext2(Android.Content.Context! context) -> Android.Content.Context!
virtual AndroidX.AppCompat.App.AppCompatDelegate.ContextForDelegate.get -> Android.Content.Context?
virtual AndroidX.AppCompat.App.AppCompatDelegate.LocalNightMode.get -> int
virtual AndroidX.AppCompat.App.AppCompatDelegate.SetOnBackInvokedDispatcher(Android.Window.IOnBackInvokedDispatcher? dispatcher) -> void
virtual AndroidX.AppCompat.App.AppCompatDelegate.SetTheme(int themeResId) -> void
virtual AndroidX.AppCompat.App.AppCompatDialog.Delegate.get -> AndroidX.AppCompat.App.AppCompatDelegate!
virtual AndroidX.AppCompat.App.AppCompatDialog.OnSupportActionModeFinished(AndroidX.AppCompat.View.ActionMode? mode) -> void
virtual AndroidX.AppCompat.App.AppCompatDialog.OnSupportActionModeStarted(AndroidX.AppCompat.View.ActionMode? mode) -> void
virtual AndroidX.AppCompat.App.AppCompatDialog.OnWindowStartingSupportActionMode(AndroidX.AppCompat.View.ActionMode.ICallback? callback) -> AndroidX.AppCompat.View.ActionMode?
virtual AndroidX.AppCompat.App.AppCompatDialog.SupportActionBar.get -> AndroidX.AppCompat.App.ActionBar?
virtual AndroidX.AppCompat.App.AppCompatDialog.SupportRequestWindowFeature(int featureId) -> bool
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateAutoCompleteTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatButton!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateCheckBox(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatCheckBox!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateCheckedTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatCheckedTextView!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatEditText!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateImageButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatImageButton!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateImageView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatImageView!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateMultiAutoCompleteTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateRadioButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatRadioButton!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateRatingBar(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatRatingBar!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateSeekBar(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatSeekBar!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateSpinner(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatSpinner!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatTextView!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateToggleButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> AndroidX.AppCompat.Widget.AppCompatToggleButton!
virtual AndroidX.AppCompat.App.AppCompatViewInflater.CreateView(Android.Content.Context? context, string? name, Android.Util.IAttributeSet? attrs) -> Android.Views.View?
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.DispatchOnCreate() -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, bool allMenusAreClosing) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.OnCloseSubMenu(AndroidX.AppCompat.View.Menu.SubMenuBuilder? menu) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.OnMenuItemSelected(AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.IMenuItem! item) -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.OnMenuModeChange(AndroidX.AppCompat.View.Menu.MenuBuilder! menu) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ActionModeImpl.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? subMenu) -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.AnimateToMode(bool toActionMode) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.DoHide(bool fromSystem) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.DoShow(bool fromSystem) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.EnableContentAnimations(bool enabled) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.HasIcon.get -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.HasLogo.get -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.HideForSystem() -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.OnContentScrollStarted() -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.OnContentScrollStopped() -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.OnWindowVisibilityChanged(int visibility) -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.RequestFocus() -> bool
virtual AndroidX.AppCompat.App.WindowDecorActionBar.ShowForSystem() -> void
virtual AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.Callback.get -> AndroidX.AppCompat.App.ActionBar.ITabListener?
virtual AndroidX.AppCompat.App.WindowDecorActionBar.TabImpl.SetPosition(int position) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowHeadLength.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowHeadLength.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowShaftLength.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.ArrowShaftLength.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.BarLength.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.BarLength.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.BarThickness.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.BarThickness.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Color.get -> int
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Color.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Direction.get -> int
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Direction.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.GapSize.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.GapSize.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Progress.get -> float
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.Progress.set -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.SetVerticalMirror(bool verticalMirror) -> void
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.SpinEnabled.get -> bool
virtual AndroidX.AppCompat.Graphics.Drawable.DrawerArrowDrawable.SpinEnabled.set -> void
virtual AndroidX.AppCompat.Text.AllCapsTransformationMethod.GetTransformationFormatted(Java.Lang.ICharSequence? source, Android.Views.View? view) -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Text.AllCapsTransformationMethod.OnFocusChanged(Android.Views.View? view, Java.Lang.ICharSequence? sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect? previouslyFocusedRect) -> void
virtual AndroidX.AppCompat.View.ActionBarPolicy.EmbeddedMenuWidthLimit.get -> int
virtual AndroidX.AppCompat.View.ActionBarPolicy.EnableHomeButtonByDefault() -> bool
virtual AndroidX.AppCompat.View.ActionBarPolicy.HasEmbeddedTabs.get -> bool
virtual AndroidX.AppCompat.View.ActionBarPolicy.MaxActionButtons.get -> int
virtual AndroidX.AppCompat.View.ActionBarPolicy.ShowsOverflowMenuButton() -> bool
virtual AndroidX.AppCompat.View.ActionBarPolicy.StackedTabMaxWidth.get -> int
virtual AndroidX.AppCompat.View.ActionBarPolicy.TabContainerHeight.get -> int
virtual AndroidX.AppCompat.View.ActionMode.IsTitleOptional.get -> bool
virtual AndroidX.AppCompat.View.ActionMode.IsUiFocusable.get -> bool
virtual AndroidX.AppCompat.View.ActionMode.Tag.get -> Java.Lang.Object?
virtual AndroidX.AppCompat.View.ActionMode.Tag.set -> void
virtual AndroidX.AppCompat.View.ActionMode.TitleOptionalHint.get -> bool
virtual AndroidX.AppCompat.View.ActionMode.TitleOptionalHint.set -> void
virtual AndroidX.AppCompat.View.ContextThemeWrapper.ApplyOverrideConfiguration(Android.Content.Res.Configuration? overrideConfiguration) -> void
virtual AndroidX.AppCompat.View.ContextThemeWrapper.OnApplyThemeResource(Android.Content.Res.Resources.Theme? theme, int resid, bool first) -> void
virtual AndroidX.AppCompat.View.ContextThemeWrapper.ThemeResId.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.ActionProvider.get -> Android.Views.ActionProvider?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.ActionView.get -> Android.Views.View?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.AlphabeticModifiers.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.AlphabeticShortcut.get -> char
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.CollapseActionView() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.ExpandActionView() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.GroupId.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.HasSubMenu.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.Icon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IconTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IconTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.Intent.get -> Android.Content.Intent?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.Invoke() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IsActionViewExpanded.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IsCheckable.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IsChecked.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IsEnabled.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.IsVisible.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.ItemId.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.MenuInfo.get -> Android.Views.IContextMenuContextMenuInfo?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.NumericModifiers.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.NumericShortcut.get -> char
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.Order.get -> int
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.RequiresActionButton() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.RequiresOverflow() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetActionProvider(Android.Views.ActionProvider? actionProvider) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetActionView(Android.Views.View? actionView) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetActionView(int resId) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetAlphabeticShortcut(char alphaChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetAlphabeticShortcut(char alphaChar, int alphaModifiers) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetCheckable(bool checkable) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetChecked(bool checked) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetContentDescription(Java.Lang.ICharSequence? contentDescription) -> AndroidX.Core.Internal.View.ISupportMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetEnabled(bool enabled) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetExclusiveCheckable(bool exclusive) -> AndroidX.AppCompat.View.Menu.ActionMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetIcon(int iconRes) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetIconTintList(Android.Content.Res.ColorStateList? iconTintList) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetIconTintMode(Android.Graphics.PorterDuff.Mode? iconTintMode) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetIntent(Android.Content.Intent? intent) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetNumericShortcut(char numericChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetNumericShortcut(char numericChar, int numericModifiers) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetOnActionExpandListener(Android.Views.IMenuItemOnActionExpandListener? listener) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetOnMenuItemClickListener(Android.Views.IMenuItemOnMenuItemClickListener? menuItemClickListener) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetShortcut(char numericChar, char alphaChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetShortcut(char numericChar, char alphaChar, int numericModifiers, int alphaModifiers) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetShowAsAction(Android.Views.ShowAsAction show) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetShowAsActionFlags(Android.Views.ShowAsAction actionEnum) -> Android.Views.IMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetSupportActionProvider(AndroidX.Core.View.ActionProvider? actionProvider) -> AndroidX.Core.Internal.View.ISupportMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTitle(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTitle(int title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTitleCondensed(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetTooltipText(Java.Lang.ICharSequence? tooltipText) -> AndroidX.Core.Internal.View.ISupportMenuItem!
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SetVisible(bool visible) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SubMenu.get -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.SupportActionProvider.get -> AndroidX.Core.View.ActionProvider?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.TitleCondensedFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItem.TooltipTextFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.HasText.get -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.Initialize(AndroidX.AppCompat.View.Menu.MenuItemImpl? itemData, int menuType) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.ItemData.get -> AndroidX.AppCompat.View.Menu.MenuItemImpl?
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.NeedsDividerAfter() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.NeedsDividerBefore() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.OnClick(Android.Views.View? v) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.PrefersCondensedTitle() -> bool
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetCheckable(bool checkable) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetChecked(bool checked) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetExpandedFormat(bool expandedFormat) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetItemInvoker(AndroidX.AppCompat.View.Menu.MenuBuilder.IItemInvoker? invoker) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetPopupCallback(AndroidX.AppCompat.View.Menu.ActionMenuItemView.PopupCallback? popupCallback) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetShortcut(bool showShortcut, char shortcutKey) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.SetTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.AppCompat.View.Menu.ActionMenuItemView.ShowsIcon() -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.AddItemView(Android.Views.View? itemView, int childIndex) -> void
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.Callback.get -> AndroidX.AppCompat.View.Menu.IMenuPresenterCallback?
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.Callback.set -> void
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.CollapseItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.CreateItemView(Android.Views.ViewGroup? parent) -> AndroidX.AppCompat.View.Menu.IMenuViewItemView?
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.ExpandItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.FilterLeftoverView(Android.Views.ViewGroup? parent, int childIndex) -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.FlagActionItems() -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.GetItemView(AndroidX.AppCompat.View.Menu.MenuItemImpl? item, Android.Views.View? convertView, Android.Views.ViewGroup? parent) -> Android.Views.View?
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.GetMenuView(Android.Views.ViewGroup? root) -> AndroidX.AppCompat.View.Menu.IMenuView?
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.Id.get -> int
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.Id.set -> void
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.InitForMenu(Android.Content.Context? context, AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> void
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, bool allMenusAreClosing) -> void
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? menu) -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.ShouldIncludeItem(int childIndex, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.BaseMenuPresenter.UpdateMenuView(bool cleared) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.AdjustListItemSelectionBounds(Android.Graphics.Rect? rect) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.Initialize(AndroidX.AppCompat.View.Menu.MenuItemImpl? itemData, int menuType) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.ItemData.get -> AndroidX.AppCompat.View.Menu.MenuItemImpl?
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.PrefersCondensedTitle() -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetCheckable(bool checkable) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetChecked(bool checked) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetForceShowIcon(bool forceShow) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetGroupDividerEnabled(bool groupDividerEnabled) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetShortcut(bool showShortcut, char shortcutKey) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.SetTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuItemView.ShowsIcon() -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.Adapter.get -> Android.Widget.IListAdapter?
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.CollapseItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.ExpandItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.FlagActionItems() -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.GetMenuView(Android.Views.ViewGroup? root) -> AndroidX.AppCompat.View.Menu.IMenuView?
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.Id.get -> int
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.Id.set -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.InitForMenu(Android.Content.Context? context, AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, bool allMenusAreClosing) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.OnItemClick(Android.Widget.AdapterView? parent, Android.Views.View? view, int position, long id) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.OnRestoreInstanceState(Android.OS.IParcelable? state) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.OnSaveInstanceState() -> Android.OS.IParcelable?
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? subMenu) -> bool
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.RestoreHierarchyState(Android.OS.Bundle? inState) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.SaveHierarchyState(Android.OS.Bundle? outState) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.SetCallback(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? cb) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.SetItemIndexOffset(int offset) -> void
virtual AndroidX.AppCompat.View.Menu.ListMenuPresenter.UpdateMenuView(bool cleared) -> void
virtual AndroidX.AppCompat.View.Menu.MenuAdapter.AdapterMenu.get -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuAdapter.ForceShowIcon.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuAdapter.ForceShowIcon.set -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ActionItems.get -> System.Collections.Generic.IList<AndroidX.AppCompat.View.Menu.MenuItemImpl!>?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ActionViewStatesKey.get -> string?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Add(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Add(int group, int id, int categoryOrder, Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Add(int group, int id, int categoryOrder, int title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Add(int titleRes) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddIntentOptions(int group, int id, int categoryOrder, Android.Content.ComponentName? caller, Android.Content.Intent![]? specifics, Android.Content.Intent? intent, Android.Views.MenuAppendFlags flags, Android.Views.IMenuItem![]? outSpecificItems) -> int
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddInternal(int group, int id, int categoryOrder, Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddMenuPresenter(AndroidX.AppCompat.View.Menu.IMenuPresenter? presenter) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddMenuPresenter(AndroidX.AppCompat.View.Menu.IMenuPresenter? presenter, Android.Content.Context? menuContext) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(Java.Lang.ICharSequence? title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(int group, int id, int categoryOrder, Java.Lang.ICharSequence? title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(int group, int id, int categoryOrder, int title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.AddSubMenu(int titleRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ChangeMenuMode() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Clear() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ClearAll() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ClearHeader() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Close() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.CollapseItemActionView(AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Context.get -> Android.Content.Context?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ExpandItemActionView(AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ExpandedItem.get -> AndroidX.AppCompat.View.Menu.MenuItemImpl?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.FindGroupIndex(int group) -> int
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.FindGroupIndex(int group, int start) -> int
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.FindItem(int id) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.FindItemIndex(int id) -> int
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.FlagActionItems() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.GetItem(int index) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.GroupDividerEnabled.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.GroupDividerEnabled.set -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.HasVisibleItems.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.HeaderIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.HeaderTitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.HeaderView.get -> Android.Views.View?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.IsDispatchingItemsChanged.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.IsShortcutKey(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.NonActionItems.get -> System.Collections.Generic.IList<AndroidX.AppCompat.View.Menu.MenuItemImpl!>?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.OnItemsChanged(bool structureChanged) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.PerformIdentifierAction(int id, Android.Views.MenuPerformFlags flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.PerformItemAction(Android.Views.IMenuItem? item, AndroidX.AppCompat.View.Menu.IMenuPresenter? preferredPresenter, int flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.PerformItemAction(Android.Views.IMenuItem? item, int flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.PerformShortcut(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e, Android.Views.MenuPerformFlags flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RemoveGroup(int group) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RemoveItem(int id) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RemoveItemAt(int index) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RemoveMenuPresenter(AndroidX.AppCompat.View.Menu.IMenuPresenter? presenter) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RestoreActionViewStates(Android.OS.Bundle? states) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RestorePresenterStates(Android.OS.Bundle? state) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.RootMenu.get -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SaveActionViewStates(Android.OS.Bundle? outStates) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SavePresenterStates(Android.OS.Bundle? outState) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetCallback(AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback? cb) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetCurrentMenuInfo(Android.Views.IContextMenuContextMenuInfo? menuInfo) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetDefaultShowAsAction(int defaultShowAsAction) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetGroupCheckable(int group, bool checkable, bool exclusive) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetGroupEnabled(int group, bool enabled) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetGroupVisible(int group, bool visible) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderIconInt(Android.Graphics.Drawables.Drawable? icon) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderIconInt(int iconRes) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderTitleInt(Java.Lang.ICharSequence? title) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderTitleInt(int titleRes) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetHeaderViewInt(Android.Views.View? view) -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetOptionalIconsVisible(bool visible) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetOverrideVisibleItems(bool override) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.SetQwertyMode(bool isQwerty) -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ShortcutsVisible.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.ShortcutsVisible.set -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.Size() -> int
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.StartDispatchingItemsChanged() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.StopDispatchingItemsChanged() -> void
virtual AndroidX.AppCompat.View.Menu.MenuBuilder.VisibleItems.get -> System.Collections.Generic.IList<AndroidX.AppCompat.View.Menu.MenuItemImpl!>!
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ActionProvider.get -> Android.Views.ActionProvider?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ActionView.get -> Android.Views.View?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.AlphabeticModifiers.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.AlphabeticShortcut.get -> char
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.CollapseActionView() -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ExpandActionView() -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.GroupId.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.HasSubMenu.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.Icon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IconTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IconTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.Intent.get -> Android.Content.Intent?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IsActionViewExpanded.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IsCheckable.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IsChecked.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IsEnabled.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.IsVisible.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.ItemId.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.MenuInfo.get -> Android.Views.IContextMenuContextMenuInfo?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.NumericModifiers.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.NumericShortcut.get -> char
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.Order.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetActionProvider(Android.Views.ActionProvider? provider) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetActionView(Android.Views.View? view) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetActionView(int resId) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetAlphabeticShortcut(char alphaChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetAlphabeticShortcut(char alphaChar, int alphaModifiers) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetCheckable(bool checkable) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetChecked(bool checked) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetContentDescription(Java.Lang.ICharSequence? contentDescription) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetEnabled(bool enabled) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetExclusiveCheckable(bool checkable) -> void
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetIcon(int iconRes) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetIconTintList(Android.Content.Res.ColorStateList? tint) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetIconTintMode(Android.Graphics.PorterDuff.Mode? tintMode) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetIntent(Android.Content.Intent? intent) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetNumericShortcut(char numericChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetNumericShortcut(char numericChar, int numericModifiers) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetOnActionExpandListener(Android.Views.IMenuItemOnActionExpandListener? listener) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetOnMenuItemClickListener(Android.Views.IMenuItemOnMenuItemClickListener? menuItemClickListener) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetShortcut(char numericChar, char alphaChar) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetShortcut(char numericChar, char alphaChar, int numericModifiers, int alphaModifiers) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetShowAsAction(Android.Views.ShowAsAction actionEnum) -> void
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetShowAsActionFlags(Android.Views.ShowAsAction actionEnum) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTitle(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTitle(int title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTitleCondensed(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetTooltipText(Java.Lang.ICharSequence? tooltipText) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SetVisible(bool visible) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.SubMenu.get -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.TitleCondensedFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.MenuItemWrapperICS.TooltipTextFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.View.Menu.MenuPopup.CloseMenuOnSubMenuOpened() -> bool
virtual AndroidX.AppCompat.View.Menu.MenuPopup.CollapseItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuPopup.EpicenterBounds.get -> Android.Graphics.Rect?
virtual AndroidX.AppCompat.View.Menu.MenuPopup.EpicenterBounds.set -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopup.ExpandItemActionView(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuPopup.GetMenuView(Android.Views.ViewGroup? root) -> AndroidX.AppCompat.View.Menu.IMenuView?
virtual AndroidX.AppCompat.View.Menu.MenuPopup.Id.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuPopup.InitForMenu(Android.Content.Context! context, AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopup.OnItemClick(Android.Widget.AdapterView? parent, Android.Views.View? view, int position, long id) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Dismiss() -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Gravity.get -> int
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Gravity.set -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.IsShowing.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.ListView.get -> Android.Widget.ListView?
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.OnDismiss() -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Popup.get -> Java.Lang.Object!
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.SetAnchorView(Android.Views.View! anchor) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.SetForceShowIcon(bool forceShowIcon) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.SetOnDismissListener(Android.Widget.PopupWindow.IOnDismissListener? listener) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.SetPresenterCallback(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? cb) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Show() -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.Show(int x, int y) -> void
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.TryShow() -> bool
virtual AndroidX.AppCompat.View.Menu.MenuPopupHelper.TryShow(int x, int y) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(int groupId, int itemId, int order, Java.Lang.ICharSequence? title) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(int groupId, int itemId, int order, int titleRes) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Add(int titleRes) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddIntentOptions(int groupId, int itemId, int order, Android.Content.ComponentName? caller, Android.Content.Intent![]? specifics, Android.Content.Intent? intent, Android.Views.MenuAppendFlags flags, Android.Views.IMenuItem![]? outSpecificItems) -> int
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(Java.Lang.ICharSequence? title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(int groupId, int itemId, int order, Java.Lang.ICharSequence? title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(int groupId, int itemId, int order, int titleRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.AddSubMenu(int titleRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Clear() -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Close() -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.FindItem(int id) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.GetItem(int index) -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.HasVisibleItems.get -> bool
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.IsShortcutKey(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.PerformIdentifierAction(int id, Android.Views.MenuPerformFlags flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.PerformShortcut(Android.Views.Keycode keyCode, Android.Views.KeyEvent? e, Android.Views.MenuPerformFlags flags) -> bool
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.RemoveGroup(int groupId) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.RemoveItem(int id) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.SetGroupCheckable(int group, bool checkable, bool exclusive) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.SetGroupEnabled(int group, bool enabled) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.SetGroupVisible(int group, bool visible) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.SetQwertyMode(bool isQwerty) -> void
virtual AndroidX.AppCompat.View.Menu.MenuWrapperICS.Size() -> int
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.IsQwertyMode.get -> bool
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.Item.get -> Android.Views.IMenuItem?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.ParentMenu.get -> Android.Views.IMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderIcon(Android.Graphics.Drawables.Drawable? icon) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderIcon(int iconRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderTitle(Java.Lang.ICharSequence? title) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderTitle(int titleRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetHeaderView(Android.Views.View? view) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetIcon(Android.Graphics.Drawables.Drawable? icon) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.Menu.SubMenuBuilder.SetIcon(int iconRes) -> Android.Views.ISubMenu?
virtual AndroidX.AppCompat.View.StandaloneActionMode.OnCloseMenu(AndroidX.AppCompat.View.Menu.MenuBuilder? menu, bool allMenusAreClosing) -> void
virtual AndroidX.AppCompat.View.StandaloneActionMode.OnCloseSubMenu(AndroidX.AppCompat.View.Menu.SubMenuBuilder? menu) -> void
virtual AndroidX.AppCompat.View.StandaloneActionMode.OnMenuItemSelected(AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.IMenuItem! item) -> bool
virtual AndroidX.AppCompat.View.StandaloneActionMode.OnMenuModeChange(AndroidX.AppCompat.View.Menu.MenuBuilder! menu) -> void
virtual AndroidX.AppCompat.View.StandaloneActionMode.OnSubMenuSelected(AndroidX.AppCompat.View.Menu.SubMenuBuilder? subMenu) -> bool
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.Cancel() -> void
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.Play(AndroidX.Core.View.ViewPropertyAnimatorCompat? animator) -> AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet?
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.PlaySequentially(AndroidX.Core.View.ViewPropertyAnimatorCompat? anim1, AndroidX.Core.View.ViewPropertyAnimatorCompat? anim2) -> AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet?
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.SetDuration(long duration) -> AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet?
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.SetInterpolator(Android.Views.Animations.IInterpolator? interpolator) -> AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet?
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.SetListener(AndroidX.Core.View.IViewPropertyAnimatorListener? listener) -> AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet?
virtual AndroidX.AppCompat.View.ViewPropertyAnimatorCompatSet.Start() -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchGenericMotionEvent(Android.Views.MotionEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchKeyEvent(Android.Views.KeyEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchKeyShortcutEvent(Android.Views.KeyEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchTouchEvent(Android.Views.MotionEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.DispatchTrackballEvent(Android.Views.MotionEvent? e) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnActionModeFinished(Android.Views.ActionMode? mode) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnActionModeStarted(Android.Views.ActionMode? mode) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnAttachedToWindow() -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnContentChanged() -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnCreatePanelMenu(int featureId, Android.Views.IMenu? menu) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnCreatePanelView(int featureId) -> Android.Views.View?
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnDetachedFromWindow() -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnMenuItemSelected(int featureId, Android.Views.IMenuItem? item) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnMenuOpened(int featureId, Android.Views.IMenu? menu) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnPanelClosed(int featureId, Android.Views.IMenu? menu) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnPointerCaptureChanged(bool hasCapture) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnPreparePanel(int featureId, Android.Views.View? view, Android.Views.IMenu? menu) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnProvideKeyboardShortcuts(System.Collections.Generic.IList<Android.Views.KeyboardShortcutGroup!>? data, Android.Views.IMenu? menu, int deviceId) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnSearchRequested() -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnSearchRequested(Android.Views.SearchEvent? searchEvent) -> bool
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnWindowAttributesChanged(Android.Views.WindowManagerLayoutParams? attrs) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnWindowFocusChanged(bool hasFocus) -> void
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback? callback) -> Android.Views.ActionMode?
virtual AndroidX.AppCompat.View.WindowCallbackWrapper.OnWindowStartingActionMode(Android.Views.ActionMode.ICallback? callback, Android.Views.ActionModeType type) -> Android.Views.ActionMode?
virtual AndroidX.AppCompat.Widget.AbsActionBarView.AnimateToVisibility(int visibility) -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.AnimatedVisibility.get -> int
virtual AndroidX.AppCompat.Widget.AbsActionBarView.CanShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.ContentHeight.get -> int
virtual AndroidX.AppCompat.Widget.AbsActionBarView.ContentHeight.set -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.DismissPopupMenus() -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.IsOverflowReserved.get -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.MeasureChildView(Android.Views.View? child, int availableWidth, int childSpecHeight, int spacing) -> int
virtual AndroidX.AppCompat.Widget.AbsActionBarView.PositionChild(Android.Views.View? child, int x, int y, int contentHeight, bool reverse) -> int
virtual AndroidX.AppCompat.Widget.AbsActionBarView.PostShowOverflowMenu() -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.SetupAnimatorToVisibility(int visibility, long duration) -> AndroidX.Core.View.ViewPropertyAnimatorCompat?
virtual AndroidX.AppCompat.Widget.AbsActionBarView.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.OnAnimationCancel(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.OnAnimationEnd(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.OnAnimationStart(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.Widget.AbsActionBarView.VisibilityAnimListener.WithFinalVisibility(AndroidX.Core.View.ViewPropertyAnimatorCompat? animation, int visibility) -> Java.Lang.Object?
virtual AndroidX.AppCompat.Widget.ActionBarContainer.OnFinishInflate() -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.SetPrimaryBackground(Android.Graphics.Drawables.Drawable? bg) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.SetSplitBackground(Android.Graphics.Drawables.Drawable? bg) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.SetStackedBackground(Android.Graphics.Drawables.Drawable? bg) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.SetTabContainer(AndroidX.AppCompat.Widget.ScrollingTabContainerView? tabView) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.SetTransitioning(bool isTransitioning) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContainer.TabContainer.get -> Android.Views.View?
virtual AndroidX.AppCompat.Widget.ActionBarContextView.CloseMode() -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.InitForMode(AndroidX.AppCompat.View.ActionMode? mode) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.KillMode() -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.OnDetachedFromWindow() -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.SetCustomView(Android.Views.View? view) -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.SubtitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.ActionBarContextView.SubtitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.ActionBarContextView.TitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.ActionBarContextView.TitleOptional.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarContextView.TitleOptional.set -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ActionBarHideOffset.get -> int
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ActionBarHideOffset.set -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.CanShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.DismissPopups() -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.HasIcon.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.HasLogo.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.HideOnContentScrollEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.HideOnContentScrollEnabled.set -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.InitFeature(int windowFeature) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IsInOverlayMode.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnNestedPreScroll(Android.Views.View? target, int dx, int dy, int[]? consumed, int type) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnNestedScroll(Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnNestedScroll(Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, int[]? consumed) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnNestedScrollAccepted(Android.Views.View! child, Android.Views.View! target, int axes, int type) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnNestedScrollAccepted(Android.Views.View? child, Android.Views.View? target, Android.Views.ScrollAxis axes, int type) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnStartNestedScroll(Android.Views.View! child, Android.Views.View! target, int axes, int type) -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnStartNestedScroll(Android.Views.View? child, Android.Views.View? target, Android.Views.ScrollAxis axes, int type) -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.OnStopNestedScroll(Android.Views.View? target, int type) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.RestoreToolbarHierarchyState(Android.Util.SparseArray? toolbarStates) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SaveToolbarHierarchyState(Android.Util.SparseArray? toolbarStates) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetActionBarVisibilityCallback(AndroidX.AppCompat.Widget.ActionBarOverlayLayout.IActionBarVisibilityCallback? cb) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetHasNonEmbeddedTabs(bool hasNonEmbeddedTabs) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetIcon(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetIcon(int resId) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetLogo(int resId) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetMenu(Android.Views.IMenu? menu, AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? cb) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetMenuPrepared() -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetOverlayMode(bool overlayMode) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetShowingForActionMode(bool showing) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetUiOptions(int uiOptions) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetWindowCallback(Android.Views.Window.ICallback? cb) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.SetWindowTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionBarOverlayLayout.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.DismissPopupMenus() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.FilterLeftoverView(Android.Views.ViewGroup? parent, int childIndex) -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.HideSubMenus() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.IsOverflowReserved.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.OnSubUiVisibilityChanged(bool isVisible) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.OverflowIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.OverflowIcon.set -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.SetExpandedActionViewsExclusive(bool isExclusive) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.SetItemLimit(int itemCount) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.SetMenuView(AndroidX.AppCompat.Widget.ActionMenuView? menuView) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.SetReserveOverflow(bool reserveOverflow) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.SetWidthLimit(int width, bool strict) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuPresenter.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.DismissPopupMenus() -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.GenerateOverflowButtonLayoutParams() -> AndroidX.AppCompat.Widget.ActionMenuView.LayoutParams?
virtual AndroidX.AppCompat.Widget.ActionMenuView.HasSupportDividerBeforeChildAt(int childIndex) -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.Initialize(AndroidX.AppCompat.View.Menu.MenuBuilder? menu) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.InvokeItem(AndroidX.AppCompat.View.Menu.MenuItemImpl? item) -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.Menu.get -> Android.Views.IMenu?
virtual AndroidX.AppCompat.Widget.ActionMenuView.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.OnDetachedFromWindow() -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.OverflowIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.ActionMenuView.OverflowIcon.set -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.OverflowReserved.get -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.OverflowReserved.set -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.PeekMenu() -> AndroidX.AppCompat.View.Menu.MenuBuilder?
virtual AndroidX.AppCompat.Widget.ActionMenuView.PopupTheme.get -> int
virtual AndroidX.AppCompat.Widget.ActionMenuView.PopupTheme.set -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.SetExpandedActionViewsExclusive(bool exclusive) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.SetMenuCallbacks(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? pcb, AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback? mcb) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.SetOnMenuItemClickListener(AndroidX.AppCompat.Widget.ActionMenuView.IOnMenuItemClickListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ActionMenuView.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ActionMenuView.WindowAnimations.get -> int
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.ActivityCount.get -> int
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.ChooseActivity(int index) -> Android.Content.Intent?
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.DefaultActivity.get -> Android.Content.PM.ResolveInfo?
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.GetActivity(int index) -> Android.Content.PM.ResolveInfo?
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.GetActivityIndex(Android.Content.PM.ResolveInfo? activity) -> int
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.HistoryMaxSize.get -> int
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.HistoryMaxSize.set -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.HistorySize.get -> int
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.Intent.get -> Android.Content.Intent?
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.Intent.set -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserModel.SetDefaultActivity(int index) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.DataModel.get -> Android.Database.DataSetObservable?
virtual AndroidX.AppCompat.Widget.ActivityChooserView.DismissPopup() -> bool
virtual AndroidX.AppCompat.Widget.ActivityChooserView.IsShowingPopup.get -> bool
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetDefaultActionButtonContentDescription(int resourceId) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetExpandActivityOverflowButtonContentDescription(int resourceId) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetExpandActivityOverflowButtonDrawable(Android.Graphics.Drawables.Drawable? drawable) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetInitialActivityCount(int itemCount) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetOnDismissListener(Android.Widget.PopupWindow.IOnDismissListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.SetProvider(AndroidX.Core.View.ActionProvider? provider) -> void
virtual AndroidX.AppCompat.Widget.ActivityChooserView.ShowPopup() -> bool
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatAutoCompleteTextView.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatButton.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.SetSupportAllCaps(bool allCaps) -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatButton.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportButtonTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportButtonTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportButtonTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportButtonTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckBox.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCheckMarkTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCheckMarkTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCheckMarkTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCheckMarkTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatCheckedTextView.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatEditText.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatEditText.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatEditText.OnReceiveContent(AndroidX.Core.View.ContentInfoCompat! payload) -> AndroidX.Core.View.ContentInfoCompat?
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatEditText.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportImageTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportImageTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportImageTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatImageButton.SupportImageTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageHelper.LoadFromAttributes(Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageHelper.SetImageResource(int resId) -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportImageTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportImageTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportImageTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatImageView.SupportImageTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatMultiAutoCompleteTextView.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportButtonTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportButtonTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportButtonTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportButtonTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatRadioButton.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatSpinner.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatSpinner.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatSpinner.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatSpinner.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatTextView.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SetPrecomputedText(AndroidX.Core.Text.PrecomputedTextCompat! precomputed) -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SetTextFuture(Java.Util.Concurrent.IFuture? future) -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatTextView.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatTextView.TextMetricsParamsCompat.get -> AndroidX.Core.Text.PrecomputedTextCompat.Params!
virtual AndroidX.AppCompat.Widget.AppCompatTextView.TextMetricsParamsCompat.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportBackgroundTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportBackgroundTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportBackgroundTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportBackgroundTintMode.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportCompoundDrawablesTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportCompoundDrawablesTintList.set -> void
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportCompoundDrawablesTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.AppCompatToggleButton.SupportCompoundDrawablesTintMode.set -> void
virtual AndroidX.AppCompat.Widget.ButtonBarLayout.SetAllowStacking(bool allowStacking) -> void
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.DispatchFitSystemWindows(Android.Graphics.Rect? insets) -> void
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.FixedHeightMajor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.FixedHeightMinor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.FixedWidthMajor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.FixedWidthMinor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.MinWidthMajor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.MinWidthMinor.get -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.SetAttachListener(AndroidX.AppCompat.Widget.ContentFrameLayout.IOnAttachListener? attachListener) -> void
virtual AndroidX.AppCompat.Widget.ContentFrameLayout.SetDecorPadding(int left, int top, int right, int bottom) -> void
virtual AndroidX.AppCompat.Widget.DropDownListView.LookForSelectablePosition(int position, bool lookDown) -> int
virtual AndroidX.AppCompat.Widget.DropDownListView.MeasureHeightOfChildrenCompat(int widthMeasureSpec, int startPosition, int endPosition, int maxHeight, int disallowPartialChildPosition) -> int
virtual AndroidX.AppCompat.Widget.DropDownListView.OnForwardedEvent(Android.Views.MotionEvent? e, int activePointerId) -> bool
virtual AndroidX.AppCompat.Widget.FitWindowsFrameLayout.SetOnFitSystemWindowsListener(AndroidX.AppCompat.Widget.IFitWindowsViewGroupOnFitSystemWindowsListener? listener) -> void
virtual AndroidX.AppCompat.Widget.FitWindowsLinearLayout.SetOnFitSystemWindowsListener(AndroidX.AppCompat.Widget.IFitWindowsViewGroupOnFitSystemWindowsListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ForwardingListener.OnForwardingStarted() -> bool
virtual AndroidX.AppCompat.Widget.ForwardingListener.OnForwardingStopped() -> bool
virtual AndroidX.AppCompat.Widget.ForwardingListener.OnTouch(Android.Views.View? v, Android.Views.MotionEvent? e) -> bool
virtual AndroidX.AppCompat.Widget.ForwardingListener.OnViewAttachedToWindow(Android.Views.View? v) -> void
virtual AndroidX.AppCompat.Widget.ForwardingListener.OnViewDetachedFromWindow(Android.Views.View? v) -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.BaselineAligned.get -> bool
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.BaselineAligned.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.BaselineAlignedChildIndex.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.BaselineAlignedChildIndex.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.DividerDrawable.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.DividerDrawable.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.DividerPadding.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.DividerPadding.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.DividerWidth.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.Gravity.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.Gravity.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.HasDividerBeforeChildAt(int childIndex) -> bool
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.MeasureWithLargestChildEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.MeasureWithLargestChildEnabled.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.Orientation.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.Orientation.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.SetHorizontalGravity(int horizontalGravity) -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.SetVerticalGravity(int verticalGravity) -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividers.get -> int
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.ShowDividers.set -> void
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.WeightSum.get -> float
virtual AndroidX.AppCompat.Widget.LinearLayoutCompat.WeightSum.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.AnchorView.get -> Android.Views.View?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.AnchorView.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.AnimationStyle.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.AnimationStyle.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Background.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.ClearListSelection() -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.CreateDragToOpenListener(Android.Views.View? src) -> Android.Views.View.IOnTouchListener?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Dismiss() -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.DropDownAlwaysVisible.get -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.DropDownAlwaysVisible.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.EpicenterBounds.get -> Android.Graphics.Rect?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.EpicenterBounds.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Height.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Height.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.HorizontalOffset.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.HorizontalOffset.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.InputMethodMode.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.InputMethodMode.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.IsInputMethodNotNeeded.get -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.IsShowing.get -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.ListView.get -> Android.Widget.ListView?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Modal.get -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Modal.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.OnKeyDown(int keyCode, Android.Views.KeyEvent! e) -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.OnKeyPreIme(int keyCode, Android.Views.KeyEvent! e) -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.OnKeyUp(int keyCode, Android.Views.KeyEvent! e) -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.PerformItemClick(int position) -> bool
virtual AndroidX.AppCompat.Widget.ListPopupWindow.PostShow() -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.PromptPosition.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.PromptPosition.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SelectedItem.get -> Java.Lang.Object?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SelectedItemId.get -> long
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SelectedItemPosition.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SelectedView.get -> Android.Views.View?
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetAdapter(Android.Widget.IListAdapter? adapter) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetContentWidth(int width) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetDropDownGravity(int gravity) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetForceIgnoreOutsideTouch(bool forceIgnoreOutsideTouch) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetListSelector(Android.Graphics.Drawables.Drawable? selector) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetOnDismissListener(Android.Widget.PopupWindow.IOnDismissListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetOnItemClickListener(Android.Widget.AdapterView.IOnItemClickListener? clickListener) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetOnItemSelectedListener(Android.Widget.AdapterView.IOnItemSelectedListener? selectedListener) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetOverlapAnchor(bool overlapAnchor) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetPromptView(Android.Views.View? prompt) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetSelection(int position) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SetWindowLayoutType(int layoutType) -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Show() -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SoftInputMode.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.SoftInputMode.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.VerticalOffset.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.VerticalOffset.set -> void
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Width.get -> int
virtual AndroidX.AppCompat.Widget.ListPopupWindow.Width.set -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.ClearSelection() -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.SetHoverListener(AndroidX.AppCompat.Widget.IMenuItemHoverListener? hoverListener) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.MenuDropDownListView.SetSelector(Android.Graphics.Drawables.Drawable? p0) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.OnItemHoverEnter(AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.IMenuItem! item) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.OnItemHoverExit(AndroidX.AppCompat.View.Menu.MenuBuilder! menu, Android.Views.IMenuItem! item) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.SetEnterTransition(Java.Lang.Object? enterTransition) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.SetExitTransition(Java.Lang.Object? exitTransition) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.SetHoverListener(AndroidX.AppCompat.Widget.IMenuItemHoverListener? hoverListener) -> void
virtual AndroidX.AppCompat.Widget.MenuPopupWindow.SetTouchModal(bool touchModal) -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.Dismiss() -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.DragToOpenListener.get -> Android.Views.View.IOnTouchListener!
virtual AndroidX.AppCompat.Widget.PopupMenu.Gravity.get -> int
virtual AndroidX.AppCompat.Widget.PopupMenu.Gravity.set -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.Inflate(int menuRes) -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.Menu.get -> Android.Views.IMenu!
virtual AndroidX.AppCompat.Widget.PopupMenu.MenuInflater.get -> Android.Views.MenuInflater!
virtual AndroidX.AppCompat.Widget.PopupMenu.SetForceShowIcon(bool forceShowIcon) -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.SetOnDismissListener(AndroidX.AppCompat.Widget.PopupMenu.IOnDismissListener? listener) -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.SetOnMenuItemClickListener(AndroidX.AppCompat.Widget.PopupMenu.IOnMenuItemClickListener? listener) -> void
virtual AndroidX.AppCompat.Widget.PopupMenu.Show() -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, bool setSelected) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.AddTab(AndroidX.AppCompat.App.ActionBar.Tab? tab, int position, bool setSelected) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.AnimateToTab(int position) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.AnimateToVisibility(int visibility) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.OnAttachedToWindow() -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.OnDetachedFromWindow() -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.OnItemSelected(Android.Widget.AdapterView? adapterView, Android.Views.View? view, int position, long id) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.OnNothingSelected(Android.Widget.AdapterView? adapterView) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.RemoveAllTabs() -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.RemoveTabAt(int position) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.SetAllowCollapse(bool allowCollapse) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.SetContentHeight(int contentHeight) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.SetTabSelected(int position) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.UpdateTab(int position) -> void
virtual AndroidX.AppCompat.Widget.ScrollingTabContainerView.VisibilityAnimListener.WithFinalVisibility(Android.Views.ViewPropertyAnimator? animation, int visibility) -> Android.Animation.AnimatorListenerAdapter?
virtual AndroidX.AppCompat.Widget.SearchView.Iconified.get -> bool
virtual AndroidX.AppCompat.Widget.SearchView.Iconified.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.ImeOptions.get -> int
virtual AndroidX.AppCompat.Widget.SearchView.ImeOptions.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.InputType.get -> int
virtual AndroidX.AppCompat.Widget.SearchView.InputType.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.IsIconfiedByDefault.get -> bool
virtual AndroidX.AppCompat.Widget.SearchView.MaxWidth.get -> int
virtual AndroidX.AppCompat.Widget.SearchView.MaxWidth.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.OnActionViewCollapsed() -> void
virtual AndroidX.AppCompat.Widget.SearchView.OnActionViewExpanded() -> void
virtual AndroidX.AppCompat.Widget.SearchView.OnQueryRefine(Java.Lang.ICharSequence? queryText) -> void
virtual AndroidX.AppCompat.Widget.SearchView.QueryFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.SearchView.QueryHintFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.SearchView.QueryHintFormatted.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.QueryRefinementEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.SearchView.QueryRefinementEnabled.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetAppSearchData(Android.OS.Bundle? appSearchData) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetIconifiedByDefault(bool iconified) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetOnCloseListener(AndroidX.AppCompat.Widget.SearchView.IOnCloseListener? listener) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetOnQueryTextFocusChangeListener(Android.Views.View.IOnFocusChangeListener? listener) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetOnQueryTextListener(AndroidX.AppCompat.Widget.SearchView.IOnQueryTextListener? listener) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetOnSearchClickListener(Android.Views.View.IOnClickListener? listener) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetOnSuggestionListener(AndroidX.AppCompat.Widget.SearchView.IOnSuggestionListener? listener) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetQuery(Java.Lang.ICharSequence? query, bool submit) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SetSearchableInfo(Android.App.SearchableInfo? searchable) -> void
virtual AndroidX.AppCompat.Widget.SearchView.SubmitButtonEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.SearchView.SubmitButtonEnabled.set -> void
virtual AndroidX.AppCompat.Widget.SearchView.SuggestionsAdapter.get -> AndroidX.CursorAdapter.Widget.CursorAdapter?
virtual AndroidX.AppCompat.Widget.SearchView.SuggestionsAdapter.set -> void
virtual AndroidX.AppCompat.Widget.ShareActionProvider.SetOnShareTargetSelectedListener(AndroidX.AppCompat.Widget.ShareActionProvider.IOnShareTargetSelectedListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ShareActionProvider.SetShareHistoryFileName(string? shareHistoryFile) -> void
virtual AndroidX.AppCompat.Widget.ShareActionProvider.SetShareIntent(Android.Content.Intent? shareIntent) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.EmojiCompatEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.SwitchCompat.EmojiCompatEnabled.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.OnMeasure(int widthMeasureSpec, int heightMeasureSpec) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SetSwitchTextAppearance(Android.Content.Context? context, int resid) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SetSwitchTypeface(Android.Graphics.Typeface? tf, int style) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SetSwitchTypeface(Android.Graphics.Typeface? typeface) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SetThumbResource(int resId) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SetTrackResource(int resId) -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.ShowText.get -> bool
virtual AndroidX.AppCompat.Widget.SwitchCompat.ShowText.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SplitTrack.get -> bool
virtual AndroidX.AppCompat.Widget.SwitchCompat.SplitTrack.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SwitchMinWidth.get -> int
virtual AndroidX.AppCompat.Widget.SwitchCompat.SwitchMinWidth.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.SwitchPadding.get -> int
virtual AndroidX.AppCompat.Widget.SwitchCompat.SwitchPadding.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.TextOffFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.SwitchCompat.TextOffFormatted.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.TextOnFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.SwitchCompat.TextOnFormatted.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbDrawable.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbDrawable.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTextPadding.get -> int
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTextPadding.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTintList.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.SwitchCompat.ThumbTintMode.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackDrawable.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackDrawable.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackTintList.get -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackTintList.set -> void
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackTintMode.get -> Android.Graphics.PorterDuff.Mode?
virtual AndroidX.AppCompat.Widget.SwitchCompat.TrackTintMode.set -> void
virtual AndroidX.AppCompat.Widget.TintTypedArray.ChangingConfigurations.get -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetBoolean(int index, bool defValue) -> bool
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetColor(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetColorStateList(int index) -> Android.Content.Res.ColorStateList?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetDimension(int index, float defValue) -> float
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetDimensionPixelOffset(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetDimensionPixelSize(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetDrawable(int index) -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetDrawableIfKnown(int index) -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetFloat(int index, float defValue) -> float
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetFont(int index, int style, AndroidX.Core.Content.Resources.ResourcesCompat.FontCallback? fontCallback) -> Android.Graphics.Typeface?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetFraction(int index, int base, int pbase, float defValue) -> float
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetIndex(int at) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetInt(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetInteger(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetLayoutDimension(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetLayoutDimension(int index, string? name) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetNonResourceString(int index) -> string?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetResourceId(int index, int defValue) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetString(int index) -> string?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetTextArrayFormatted(int index) -> Java.Lang.ICharSequence![]?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetTextFormatted(int index) -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetType(int index) -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.GetValue(int index, Android.Util.TypedValue? outValue) -> bool
virtual AndroidX.AppCompat.Widget.TintTypedArray.HasValue(int index) -> bool
virtual AndroidX.AppCompat.Widget.TintTypedArray.IndexCount.get -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.Length() -> int
virtual AndroidX.AppCompat.Widget.TintTypedArray.PeekValue(int index) -> Android.Util.TypedValue?
virtual AndroidX.AppCompat.Widget.TintTypedArray.PositionDescription.get -> string?
virtual AndroidX.AppCompat.Widget.TintTypedArray.Recycle() -> void
virtual AndroidX.AppCompat.Widget.TintTypedArray.Resources.get -> Android.Content.Res.Resources?
virtual AndroidX.AppCompat.Widget.TintTypedArray.WrappedTypeArray.get -> Android.Content.Res.TypedArray?
virtual AndroidX.AppCompat.Widget.Toolbar.AddMenuProvider(AndroidX.Core.View.IMenuProvider! provider) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.AddMenuProvider(AndroidX.Core.View.IMenuProvider! provider, AndroidX.Lifecycle.ILifecycleOwner! owner) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.AddMenuProvider(AndroidX.Core.View.IMenuProvider! provider, AndroidX.Lifecycle.ILifecycleOwner! owner, AndroidX.Lifecycle.Lifecycle.State! state) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.BackInvokedCallbackEnabled.get -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.BackInvokedCallbackEnabled.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.CanShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.CollapseActionView() -> void
virtual AndroidX.AppCompat.Widget.Toolbar.CollapseContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.Toolbar.CollapseContentDescriptionFormatted.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.CollapseIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.Toolbar.CollapseIcon.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetEnd.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetEndWithActions.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetEndWithActions.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetLeft.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetRight.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetStart.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetStartWithNavigation.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.ContentInsetStartWithNavigation.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.CurrentContentInsetEnd.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.CurrentContentInsetLeft.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.CurrentContentInsetRight.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.CurrentContentInsetStart.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.DismissPopupMenus() -> void
virtual AndroidX.AppCompat.Widget.Toolbar.HasExpandedActionView.get -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.InflateMenu(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.InvalidateMenu() -> void
virtual AndroidX.AppCompat.Widget.Toolbar.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.IsTitleTruncated.get -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.Logo.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.Toolbar.Logo.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.LogoDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.Toolbar.LogoDescriptionFormatted.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.Menu.get -> Android.Views.IMenu?
virtual AndroidX.AppCompat.Widget.Toolbar.NavigationContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.Toolbar.NavigationContentDescriptionFormatted.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.NavigationIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.Toolbar.NavigationIcon.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.OverflowIcon.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.AppCompat.Widget.Toolbar.OverflowIcon.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.PopupTheme.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.PopupTheme.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.RemoveMenuProvider(AndroidX.Core.View.IMenuProvider! provider) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetCollapseContentDescription(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetCollapseIcon(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetCollapsible(bool collapsible) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetContentInsetsAbsolute(int contentInsetLeft, int contentInsetRight) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetContentInsetsRelative(int contentInsetStart, int contentInsetEnd) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetLogo(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetLogoDescription(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetMenuCallbacks(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? pcb, AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback? mcb) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetNavigationContentDescription(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetNavigationIcon(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetNavigationOnClickListener(Android.Views.View.IOnClickListener? listener) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetOnMenuItemClickListener(AndroidX.AppCompat.Widget.Toolbar.IOnMenuItemClickListener? listener) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetSubtitle(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetSubtitleTextAppearance(Android.Content.Context? context, int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetSubtitleTextColor(Android.Content.Res.ColorStateList! color) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetSubtitleTextColor(int color) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetTitle(int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetTitleMargin(int start, int top, int end, int bottom) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetTitleTextAppearance(Android.Content.Context? context, int resId) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetTitleTextColor(Android.Content.Res.ColorStateList! color) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.SetTitleTextColor(int color) -> void
virtual AndroidX.AppCompat.Widget.Toolbar.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.Toolbar.SubtitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.Toolbar.SubtitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.Toolbar.TitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginBottom.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginBottom.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginEnd.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginEnd.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginStart.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginStart.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginTop.get -> int
virtual AndroidX.AppCompat.Widget.Toolbar.TitleMarginTop.set -> void
virtual AndroidX.AppCompat.Widget.Toolbar.Wrapper.get -> AndroidX.AppCompat.Widget.IDecorToolbar?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.AnimateToVisibility(int visibility) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.CanShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.CollapseActionView() -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Context.get -> Android.Content.Context?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.CustomView.get -> Android.Views.View?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.CustomView.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DismissPopupMenus() -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DisplayOptions.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DisplayOptions.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DropdownItemCount.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DropdownSelectedPosition.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.DropdownSelectedPosition.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.HasEmbeddedTabs.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.HasExpandedActionView.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.HasIcon.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.HasLogo.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Height.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.HideOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.InitIndeterminateProgress() -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.InitProgress() -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.IsOverflowMenuShowPending.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.IsOverflowMenuShowing.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.IsTitleTruncated.get -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Menu.get -> Android.Views.IMenu?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.NavigationMode.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.NavigationMode.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.RestoreHierarchyState(Android.Util.SparseArray? toolbarStates) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SaveHierarchyState(Android.Util.SparseArray? toolbarStates) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetCollapsible(bool collapsible) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetDefaultNavigationContentDescription(int defaultNavigationContentDescription) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetDefaultNavigationIcon(Android.Graphics.Drawables.Drawable? defaultNavigationIcon) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetDropdownParams(Android.Widget.ISpinnerAdapter? adapter, Android.Widget.AdapterView.IOnItemSelectedListener? listener) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetEmbeddedTabView(AndroidX.AppCompat.Widget.ScrollingTabContainerView? tabView) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetHomeButtonEnabled(bool enable) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetIcon(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetIcon(int resId) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetLogo(Android.Graphics.Drawables.Drawable? d) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetLogo(int resId) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetMenu(Android.Views.IMenu? menu, AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? cb) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetMenuCallbacks(AndroidX.AppCompat.View.Menu.IMenuPresenterCallback? actionMenuPresenterCallback, AndroidX.AppCompat.View.Menu.MenuBuilder.ICallback? menuBuilderCallback) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetMenuPrepared() -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetNavigationContentDescription(Java.Lang.ICharSequence? description) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetNavigationContentDescription(int resId) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetNavigationIcon(Android.Graphics.Drawables.Drawable? icon) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetNavigationIcon(int resId) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetWindowCallback(Android.Views.Window.ICallback? cb) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetWindowTitle(Java.Lang.ICharSequence? title) -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SetupAnimatorToVisibility(int visibility, long duration) -> AndroidX.Core.View.ViewPropertyAnimatorCompat?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ShowOverflowMenu() -> bool
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SubtitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.SubtitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.TitleFormatted.set -> void
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.ViewGroup.get -> Android.Views.ViewGroup?
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Visibility.get -> int
virtual AndroidX.AppCompat.Widget.ToolbarWidgetWrapper.Visibility.set -> void
