#nullable enable
Square.OkHttp3.TLS.Certificates
Square.OkHttp3.TLS.HandshakeCertificates
Square.OkHttp3.TLS.HandshakeCertificates.Builder
Square.OkHttp3.TLS.HandshakeCertificates.Builder.AddInsecureHost(string! hostname) -> Square.OkHttp3.TLS.HandshakeCertificates.Builder!
Square.OkHttp3.TLS.HandshakeCertificates.Builder.AddPlatformTrustedCertificates() -> Square.OkHttp3.TLS.HandshakeCertificates.Builder!
Square.OkHttp3.TLS.HandshakeCertificates.Builder.AddTrustedCertificate(Java.Security.Cert.X509Certificate! certificate) -> Square.OkHttp3.TLS.HandshakeCertificates.Builder!
Square.OkHttp3.TLS.HandshakeCertificates.Builder.Build() -> Square.OkHttp3.TLS.HandshakeCertificates!
Square.OkHttp3.TLS.HandshakeCertificates.Builder.Builder() -> void
Square.OkHttp3.TLS.HandshakeCertificates.Builder.HeldCertificate(Square.OkHttp3.TLS.HeldCertificate! heldCertificate, params Java.Security.Cert.X509Certificate![]! intermediates) -> Square.OkHttp3.TLS.HandshakeCertificates.Builder!
Square.OkHttp3.TLS.HandshakeCertificates.KeyManager() -> Javax.Net.Ssl.IX509KeyManager!
Square.OkHttp3.TLS.HandshakeCertificates.SslContext() -> Javax.Net.Ssl.SSLContext!
Square.OkHttp3.TLS.HandshakeCertificates.SslSocketFactory() -> Javax.Net.Ssl.SSLSocketFactory!
Square.OkHttp3.TLS.HandshakeCertificates.TrustManager() -> Javax.Net.Ssl.IX509TrustManager!
Square.OkHttp3.TLS.HandshakeCertificates._deprecated_keyManager() -> Javax.Net.Ssl.IX509KeyManager!
Square.OkHttp3.TLS.HandshakeCertificates._deprecated_trustManager() -> Javax.Net.Ssl.IX509TrustManager!
Square.OkHttp3.TLS.HeldCertificate
Square.OkHttp3.TLS.HeldCertificate.Builder
Square.OkHttp3.TLS.HeldCertificate.Builder.AddSubjectAlternativeName(string! altName) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.Build() -> Square.OkHttp3.TLS.HeldCertificate!
Square.OkHttp3.TLS.HeldCertificate.Builder.Builder() -> void
Square.OkHttp3.TLS.HeldCertificate.Builder.CertificateAuthority(int maxIntermediateCas) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.CommonName(string! cn) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.Companion
Square.OkHttp3.TLS.HeldCertificate.Builder.Duration(long duration, Java.Util.Concurrent.TimeUnit! unit) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.Ecdsa256() -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.KeyPair(Java.Security.IPublicKey! publicKey, Java.Security.IPrivateKey! privateKey) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.KeyPair(Java.Security.KeyPair! keyPair) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.OrganizationalUnit(string! ou) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.Rsa2048() -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.SerialNumber(Java.Math.BigInteger! serialNumber) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.SerialNumber(long serialNumber) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.SignedBy(Square.OkHttp3.TLS.HeldCertificate? signedBy) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Builder.ValidityInterval(long notBefore, long notAfter) -> Square.OkHttp3.TLS.HeldCertificate.Builder!
Square.OkHttp3.TLS.HeldCertificate.Certificate() -> Java.Security.Cert.X509Certificate!
Square.OkHttp3.TLS.HeldCertificate.CertificatePem() -> string!
Square.OkHttp3.TLS.HeldCertificate.Companion
Square.OkHttp3.TLS.HeldCertificate.Companion.Decode(string! certificateAndPrivateKeyPem) -> Square.OkHttp3.TLS.HeldCertificate!
Square.OkHttp3.TLS.HeldCertificate.HeldCertificate(Java.Security.KeyPair! keyPair, Java.Security.Cert.X509Certificate! certificate) -> void
Square.OkHttp3.TLS.HeldCertificate.KeyPair() -> Java.Security.KeyPair!
Square.OkHttp3.TLS.HeldCertificate.PrivateKeyPkcs1Pem() -> string!
Square.OkHttp3.TLS.HeldCertificate.PrivateKeyPkcs8Pem() -> string!
Square.OkHttp3.TLS.HeldCertificate._deprecated_certificate() -> Java.Security.Cert.X509Certificate!
Square.OkHttp3.TLS.HeldCertificate._deprecated_keyPair() -> Java.Security.KeyPair!
Square.OkHttp3.TLS.Internal.TlsUtil
Square.OkHttp3.TLS.Internal.TlsUtil.GetPassword() -> char[]!
override Square.OkHttp3.TLS.Certificates.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HandshakeCertificates.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HandshakeCertificates.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HeldCertificate.Builder.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HeldCertificate.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HeldCertificate.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.HeldCertificate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkHttp3.TLS.Internal.TlsUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Square.OkHttp3.TLS.Certificates.CertificatePem(Java.Security.Cert.X509Certificate! obj) -> string!
static Square.OkHttp3.TLS.Certificates.DecodeCertificatePem(string! obj) -> Java.Security.Cert.X509Certificate!
static Square.OkHttp3.TLS.HeldCertificate.Decode(string! certificateAndPrivateKeyPem) -> Square.OkHttp3.TLS.HeldCertificate!
static Square.OkHttp3.TLS.Internal.TlsUtil.Instance.get -> Square.OkHttp3.TLS.Internal.TlsUtil!
static Square.OkHttp3.TLS.Internal.TlsUtil.Localhost() -> Square.OkHttp3.TLS.HandshakeCertificates!
static Square.OkHttp3.TLS.Internal.TlsUtil.NewKeyManager(string? keyStoreType, Square.OkHttp3.TLS.HeldCertificate? heldCertificate, params Java.Security.Cert.X509Certificate![]! intermediates) -> Javax.Net.Ssl.IX509KeyManager!
static Square.OkHttp3.TLS.Internal.TlsUtil.NewTrustManager(string? keyStoreType, System.Collections.Generic.IList<Java.Security.Cert.X509Certificate!>! trustedCertificates, System.Collections.Generic.IList<string!>! insecureHosts) -> Javax.Net.Ssl.IX509TrustManager!
