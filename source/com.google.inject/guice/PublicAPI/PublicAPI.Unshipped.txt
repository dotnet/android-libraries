#nullable enable
Xamarin.Google.Inject.AbstractModule
Xamarin.Google.Inject.AbstractModule.AbstractModule() -> void
Xamarin.Google.Inject.AbstractModule.AbstractModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder
Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder.AnnotatedWith(Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder.AnnotatedWith(Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
Xamarin.Google.Inject.Binder.IAnnotatedConstantBindingBuilder
Xamarin.Google.Inject.Binder.IAnnotatedConstantBindingBuilder.AnnotatedWith(Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Binder.IConstantBindingBuilder?
Xamarin.Google.Inject.Binder.IAnnotatedConstantBindingBuilder.AnnotatedWith(Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Binder.IConstantBindingBuilder?
Xamarin.Google.Inject.Binder.IAnnotatedElementBuilder
Xamarin.Google.Inject.Binder.IAnnotatedElementBuilder.AnnotatedWith(Java.Lang.Annotation.IAnnotation? annotation) -> void
Xamarin.Google.Inject.Binder.IAnnotatedElementBuilder.AnnotatedWith(Java.Lang.Class? annotationType) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(Java.Lang.Class? value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(Java.Lang.Object? value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(bool value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(char value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(double value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(float value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(int value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(long value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(sbyte value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(short value) -> void
Xamarin.Google.Inject.Binder.IConstantBindingBuilder.To(string? value) -> void
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.To(Java.Lang.Class? implementation) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.To(Xamarin.Google.Inject.Key? targetKey) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.To(Xamarin.Google.Inject.TypeLiteral? implementation) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToConstructor(Java.Lang.Reflect.Constructor? constructor) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToConstructor(Java.Lang.Reflect.Constructor? constructor, Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToInstance(Java.Lang.Object? instance) -> void
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToProvider(Jakarta.Inject.IProvider? provider) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToProvider(Java.Lang.Class? providerType) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToProvider(Xamarin.Google.Inject.IProvider? provider) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToProvider(Xamarin.Google.Inject.Key? providerKey) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.ILinkedBindingBuilder.ToProvider(Xamarin.Google.Inject.TypeLiteral? providerType) -> Xamarin.Google.Inject.Binder.IScopedBindingBuilder?
Xamarin.Google.Inject.Binder.IScopedBindingBuilder
Xamarin.Google.Inject.Binder.IScopedBindingBuilder.AsEagerSingleton() -> void
Xamarin.Google.Inject.Binder.IScopedBindingBuilder.In(Java.Lang.Class? scopeAnnotation) -> void
Xamarin.Google.Inject.Binder.IScopedBindingBuilder.In(Xamarin.Google.Inject.IScope? scope) -> void
Xamarin.Google.Inject.BindingAnnotationAttribute
Xamarin.Google.Inject.BindingAnnotationAttribute.BindingAnnotationAttribute() -> void
Xamarin.Google.Inject.ConfigurationException
Xamarin.Google.Inject.ConfigurationException.ConfigurationException(Java.Lang.IIterable? messages) -> void
Xamarin.Google.Inject.ConfigurationException.ErrorMessages.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.Message!>?
Xamarin.Google.Inject.ConfigurationException.PartialValue.get -> Java.Lang.Object?
Xamarin.Google.Inject.ConfigurationException.WithPartialValue(Java.Lang.Object? partialValue) -> Xamarin.Google.Inject.ConfigurationException?
Xamarin.Google.Inject.CreationException
Xamarin.Google.Inject.CreationException.CreationException(System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.Message!>? messages) -> void
Xamarin.Google.Inject.CreationException.CreationException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.ExposedAttribute
Xamarin.Google.Inject.ExposedAttribute.ExposedAttribute() -> void
Xamarin.Google.Inject.Guice
Xamarin.Google.Inject.IBindingAnnotation
Xamarin.Google.Inject.IExposed
Xamarin.Google.Inject.IImplementedBy
Xamarin.Google.Inject.IImplementedBy.Value() -> Java.Lang.Class?
Xamarin.Google.Inject.IInject
Xamarin.Google.Inject.IInject.Optional() -> bool
Xamarin.Google.Inject.IMembersInjector
Xamarin.Google.Inject.IMembersInjector.InjectMembers(Java.Lang.Object? instance) -> void
Xamarin.Google.Inject.IProvidedBy
Xamarin.Google.Inject.IProvidedBy.Value() -> Java.Lang.Class?
Xamarin.Google.Inject.IProvider
Xamarin.Google.Inject.IProvider.Get() -> Java.Lang.Object?
Xamarin.Google.Inject.IProvides
Xamarin.Google.Inject.IRestrictedBindingSource
Xamarin.Google.Inject.IRestrictedBindingSource.ExemptModules() -> string?
Xamarin.Google.Inject.IRestrictedBindingSource.Explanation() -> string?
Xamarin.Google.Inject.IRestrictedBindingSource.Permits() -> Java.Lang.Class![]?
Xamarin.Google.Inject.IRestrictedBindingSource.RestrictionLevel() -> Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel?
Xamarin.Google.Inject.IRestrictedBindingSourcePermit
Xamarin.Google.Inject.IScope
Xamarin.Google.Inject.IScope.Scope(Xamarin.Google.Inject.Key? key, Xamarin.Google.Inject.IProvider? unscoped) -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.IScope.ToString() -> string?
Xamarin.Google.Inject.IScopeAnnotation
Xamarin.Google.Inject.ISingleton
Xamarin.Google.Inject.ImplementedByAttribute
Xamarin.Google.Inject.ImplementedByAttribute.ImplementedByAttribute() -> void
Xamarin.Google.Inject.ImplementedByAttribute.Value.get -> Java.Lang.Class?
Xamarin.Google.Inject.ImplementedByAttribute.Value.set -> void
Xamarin.Google.Inject.InjectAttribute
Xamarin.Google.Inject.InjectAttribute.InjectAttribute() -> void
Xamarin.Google.Inject.InjectAttribute.Optional.get -> bool
Xamarin.Google.Inject.InjectAttribute.Optional.set -> void
Xamarin.Google.Inject.Internal.Aop.ClassBuilding
Xamarin.Google.Inject.Internal.Aop.ClassDefining
Xamarin.Google.Inject.Internal.Util.Classes
Xamarin.Google.Inject.Internal.Util.Classes.Classes() -> void
Xamarin.Google.Inject.Internal.Util.ContinuousStopwatch
Xamarin.Google.Inject.Internal.Util.ContinuousStopwatch.Reset() -> long
Xamarin.Google.Inject.Internal.Util.ContinuousStopwatch.ResetAndLog(string? label) -> void
Xamarin.Google.Inject.Internal.Util.SourceProvider
Xamarin.Google.Inject.Internal.Util.SourceProvider.Caller.get -> Java.Lang.StackTraceElement?
Xamarin.Google.Inject.Internal.Util.SourceProvider.GetFromClassNames(System.Collections.Generic.IList<string!>? moduleClassNames) -> Java.Lang.Object?
Xamarin.Google.Inject.Internal.Util.SourceProvider.PlusSkippedClasses(params Java.Lang.Class![]? moreClassesToSkip) -> Xamarin.Google.Inject.Internal.Util.SourceProvider?
Xamarin.Google.Inject.Internal.Util.StackTraceElements
Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement
Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement.InMemoryStackTraceElement(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Key
Xamarin.Google.Inject.Key.Annotation.get -> Java.Lang.Annotation.IAnnotation?
Xamarin.Google.Inject.Key.AnnotationType.get -> Java.Lang.Class?
Xamarin.Google.Inject.Key.Key() -> void
Xamarin.Google.Inject.Key.Key(Java.Lang.Annotation.IAnnotation? annotation) -> void
Xamarin.Google.Inject.Key.Key(Java.Lang.Class? annotationType) -> void
Xamarin.Google.Inject.Key.Key(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Key.TypeLiteral.get -> Xamarin.Google.Inject.TypeLiteral?
Xamarin.Google.Inject.Matcher.AbstractMatcher
Xamarin.Google.Inject.Matcher.AbstractMatcher.AbstractMatcher() -> void
Xamarin.Google.Inject.Matcher.AbstractMatcher.AbstractMatcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Matcher.IMatcher
Xamarin.Google.Inject.Matcher.IMatcher.And(Xamarin.Google.Inject.Matcher.IMatcher? other) -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Matcher.IMatcher.Matches(Java.Lang.Object? t) -> bool
Xamarin.Google.Inject.Matcher.IMatcher.Or(Xamarin.Google.Inject.Matcher.IMatcher? other) -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Matcher.Matchers
Xamarin.Google.Inject.Matcher.Matchers.Matchers(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Multibindings.ClassMapKeyAttribute
Xamarin.Google.Inject.Multibindings.ClassMapKeyAttribute.ClassMapKeyAttribute() -> void
Xamarin.Google.Inject.Multibindings.ClassMapKeyAttribute.Value.get -> Java.Lang.Class?
Xamarin.Google.Inject.Multibindings.ClassMapKeyAttribute.Value.set -> void
Xamarin.Google.Inject.Multibindings.IClassMapKey
Xamarin.Google.Inject.Multibindings.IClassMapKey.Value() -> Java.Lang.Class?
Xamarin.Google.Inject.Multibindings.IMapKey
Xamarin.Google.Inject.Multibindings.IMapKey.UnwrapValue() -> bool
Xamarin.Google.Inject.Multibindings.IProvidesIntoMap
Xamarin.Google.Inject.Multibindings.IProvidesIntoOptional
Xamarin.Google.Inject.Multibindings.IProvidesIntoOptional.Value() -> Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType?
Xamarin.Google.Inject.Multibindings.IProvidesIntoSet
Xamarin.Google.Inject.Multibindings.IStringMapKey
Xamarin.Google.Inject.Multibindings.IStringMapKey.Value() -> string?
Xamarin.Google.Inject.Multibindings.MapBinder
Xamarin.Google.Inject.Multibindings.MapBinder.MapBinder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Multibindings.MapKeyAttribute
Xamarin.Google.Inject.Multibindings.MapKeyAttribute.MapKeyAttribute() -> void
Xamarin.Google.Inject.Multibindings.MapKeyAttribute.UnwrapValue.get -> bool
Xamarin.Google.Inject.Multibindings.MapKeyAttribute.UnwrapValue.set -> void
Xamarin.Google.Inject.Multibindings.Multibinder
Xamarin.Google.Inject.Multibindings.Multibinder.Multibinder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Multibindings.MultibindingsScanner
Xamarin.Google.Inject.Multibindings.MultibindingsScanner.MultibindingsScanner(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Multibindings.OptionalBinder
Xamarin.Google.Inject.Multibindings.OptionalBinder.OptionalBinder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Multibindings.ProvidesIntoMapAttribute
Xamarin.Google.Inject.Multibindings.ProvidesIntoMapAttribute.ProvidesIntoMapAttribute() -> void
Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalAttribute
Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalAttribute.ProvidesIntoOptionalAttribute() -> void
Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType
Xamarin.Google.Inject.Multibindings.ProvidesIntoSetAttribute
Xamarin.Google.Inject.Multibindings.ProvidesIntoSetAttribute.ProvidesIntoSetAttribute() -> void
Xamarin.Google.Inject.Multibindings.StringMapKeyAttribute
Xamarin.Google.Inject.Multibindings.StringMapKeyAttribute.StringMapKeyAttribute() -> void
Xamarin.Google.Inject.Multibindings.StringMapKeyAttribute.Value.get -> string?
Xamarin.Google.Inject.Multibindings.StringMapKeyAttribute.Value.set -> void
Xamarin.Google.Inject.Name.INamed
Xamarin.Google.Inject.Name.INamed.Value() -> string?
Xamarin.Google.Inject.Name.NamedAttribute
Xamarin.Google.Inject.Name.NamedAttribute.NamedAttribute() -> void
Xamarin.Google.Inject.Name.NamedAttribute.Value.get -> string?
Xamarin.Google.Inject.Name.NamedAttribute.Value.set -> void
Xamarin.Google.Inject.Name.Names
Xamarin.Google.Inject.Name.Names.Names(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.OutOfScopeException
Xamarin.Google.Inject.OutOfScopeException.OutOfScopeException(Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.OutOfScopeException.OutOfScopeException(string? message) -> void
Xamarin.Google.Inject.OutOfScopeException.OutOfScopeException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.PrivateModule
Xamarin.Google.Inject.PrivateModule.AddError(Java.Lang.Throwable? t) -> void
Xamarin.Google.Inject.PrivateModule.AddError(Xamarin.Google.Inject.Spi.Message? message) -> void
Xamarin.Google.Inject.PrivateModule.AddError(string? message, params Java.Lang.Object![]? arguments) -> void
Xamarin.Google.Inject.PrivateModule.Bind(Java.Lang.Class? clazz) -> Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder?
Xamarin.Google.Inject.PrivateModule.Bind(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
Xamarin.Google.Inject.PrivateModule.Bind(Xamarin.Google.Inject.TypeLiteral? typeLiteral) -> Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder?
Xamarin.Google.Inject.PrivateModule.BindConstant() -> Xamarin.Google.Inject.Binder.IAnnotatedConstantBindingBuilder?
Xamarin.Google.Inject.PrivateModule.BindInterceptor(Xamarin.Google.Inject.Matcher.IMatcher? classMatcher, Xamarin.Google.Inject.Matcher.IMatcher? methodMatcher, params Xamarin.AopAlliance.Intercept.IMethodInterceptor![]? interceptors) -> void
Xamarin.Google.Inject.PrivateModule.BindScope(Java.Lang.Class? scopeAnnotation, Xamarin.Google.Inject.IScope? scope) -> void
Xamarin.Google.Inject.PrivateModule.ConvertToTypes(Xamarin.Google.Inject.Matcher.IMatcher? typeMatcher, Xamarin.Google.Inject.Spi.ITypeConverter? converter) -> void
Xamarin.Google.Inject.PrivateModule.CurrentStage() -> Xamarin.Google.Inject.Stage?
Xamarin.Google.Inject.PrivateModule.Expose(Java.Lang.Class? type) -> Xamarin.Google.Inject.Binder.IAnnotatedElementBuilder?
Xamarin.Google.Inject.PrivateModule.Expose(Xamarin.Google.Inject.Key? key) -> void
Xamarin.Google.Inject.PrivateModule.Expose(Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Binder.IAnnotatedElementBuilder?
Xamarin.Google.Inject.PrivateModule.GetProvider(Java.Lang.Class? type) -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.PrivateModule.GetProvider(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.PrivateModule.PrivateModule() -> void
Xamarin.Google.Inject.PrivateModule.PrivateModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.PrivateModule.RequestInjection(Java.Lang.Object? instance) -> void
Xamarin.Google.Inject.PrivateModule.RequestStaticInjection(params Java.Lang.Class![]? types) -> void
Xamarin.Google.Inject.PrivateModule.RequireBinding(Java.Lang.Class? type) -> void
Xamarin.Google.Inject.PrivateModule.RequireBinding(Xamarin.Google.Inject.Key? key) -> void
Xamarin.Google.Inject.ProvidedByAttribute
Xamarin.Google.Inject.ProvidedByAttribute.ProvidedByAttribute() -> void
Xamarin.Google.Inject.ProvidedByAttribute.Value.get -> Java.Lang.Class?
Xamarin.Google.Inject.ProvidedByAttribute.Value.set -> void
Xamarin.Google.Inject.ProvidesAttribute
Xamarin.Google.Inject.ProvidesAttribute.ProvidesAttribute() -> void
Xamarin.Google.Inject.ProvisionException
Xamarin.Google.Inject.ProvisionException.ErrorMessages.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.Message!>?
Xamarin.Google.Inject.ProvisionException.ProvisionException(Java.Lang.IIterable? messages) -> void
Xamarin.Google.Inject.ProvisionException.ProvisionException(string? message) -> void
Xamarin.Google.Inject.ProvisionException.ProvisionException(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.RestrictedBindingSourceAttribute
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.ExemptModules.get -> string?
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.ExemptModules.set -> void
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.Explanation.get -> string?
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.Explanation.set -> void
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.Permits.get -> Java.Lang.Class![]?
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.Permits.set -> void
Xamarin.Google.Inject.RestrictedBindingSourceAttribute.RestrictedBindingSourceAttribute() -> void
Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel
Xamarin.Google.Inject.ScopeAnnotationAttribute
Xamarin.Google.Inject.ScopeAnnotationAttribute.ScopeAnnotationAttribute() -> void
Xamarin.Google.Inject.Scopes
Xamarin.Google.Inject.Scopes.Scopes(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.SingletonAttribute
Xamarin.Google.Inject.SingletonAttribute.SingletonAttribute() -> void
Xamarin.Google.Inject.Spi.BindingSourceRestriction
Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor
Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.DefaultBindingScopingVisitor() -> void
Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.DefaultBindingScopingVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor
Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor.DefaultBindingTargetVisitor() -> void
Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor.DefaultBindingTargetVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.DefaultElementVisitor
Xamarin.Google.Inject.Spi.DefaultElementVisitor.DefaultElementVisitor() -> void
Xamarin.Google.Inject.Spi.DefaultElementVisitor.DefaultElementVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.Dependency
Xamarin.Google.Inject.Spi.Dependency.InjectionPoint.get -> Xamarin.Google.Inject.Spi.InjectionPoint?
Xamarin.Google.Inject.Spi.Dependency.IsNullable.get -> bool
Xamarin.Google.Inject.Spi.Dependency.Key.get -> Xamarin.Google.Inject.Key?
Xamarin.Google.Inject.Spi.Dependency.ParameterIndex.get -> int
Xamarin.Google.Inject.Spi.DisableCircularProxiesOption
Xamarin.Google.Inject.Spi.DisableCircularProxiesOption.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ElementSource
Xamarin.Google.Inject.Spi.ElementSource.DeclaringSource.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ElementSource.ModuleClassNames.get -> System.Collections.Generic.IList<string!>?
Xamarin.Google.Inject.Spi.ElementSource.OriginalElementSource.get -> Xamarin.Google.Inject.Spi.ElementSource?
Xamarin.Google.Inject.Spi.Elements
Xamarin.Google.Inject.Spi.Elements.Elements() -> void
Xamarin.Google.Inject.Spi.ErrorDetail
Xamarin.Google.Inject.Spi.ErrorDetail.ErrorDetail(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.ErrorDetail.ErrorDetail(string? message, System.Collections.Generic.IList<Java.Lang.Object!>? sources, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.Spi.ErrorDetail.Format(int index, System.Collections.IList? mergeableErrors, Java.Util.Formatter? formatter) -> void
Xamarin.Google.Inject.Spi.IBindingScopingVisitor
Xamarin.Google.Inject.Spi.IBindingScopingVisitor.VisitEagerSingleton() -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.IBindingScopingVisitor.VisitNoScoping() -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.IBindingScopingVisitor.VisitScope(Xamarin.Google.Inject.IScope? scope) -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.IBindingScopingVisitor.VisitScopeAnnotation(Java.Lang.Class? scopeAnnotation) -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.IHasDependencies
Xamarin.Google.Inject.Spi.IHasDependencies.Dependencies.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.Dependency!>?
Xamarin.Google.Inject.Spi.IInjectionListener
Xamarin.Google.Inject.Spi.IInjectionListener.AfterInjection(Java.Lang.Object? injectee) -> void
Xamarin.Google.Inject.Spi.IProviderWithDependencies
Xamarin.Google.Inject.Spi.IProvidesMethodBinding
Xamarin.Google.Inject.Spi.IProvidesMethodBinding.Annotation.get -> Java.Lang.Annotation.IAnnotation?
Xamarin.Google.Inject.Spi.IProvidesMethodBinding.EnclosingInstance.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.IProvidesMethodBinding.Key.get -> Xamarin.Google.Inject.Key?
Xamarin.Google.Inject.Spi.IProvidesMethodBinding.Method.get -> Java.Lang.Reflect.Method?
Xamarin.Google.Inject.Spi.IProvisionListener
Xamarin.Google.Inject.Spi.IProvisionListener.OnProvision(Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation? provision) -> void
Xamarin.Google.Inject.Spi.IToolable
Xamarin.Google.Inject.Spi.ITypeConverter
Xamarin.Google.Inject.Spi.ITypeConverter.Convert(string? value, Xamarin.Google.Inject.TypeLiteral? toType) -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ITypeEncounter
Xamarin.Google.Inject.Spi.ITypeEncounter.AddError(Java.Lang.Throwable? t) -> void
Xamarin.Google.Inject.Spi.ITypeEncounter.AddError(Xamarin.Google.Inject.Spi.Message? message) -> void
Xamarin.Google.Inject.Spi.ITypeEncounter.AddError(string? message, params Java.Lang.Object![]? arguments) -> void
Xamarin.Google.Inject.Spi.ITypeEncounter.BindInterceptor(Xamarin.Google.Inject.Matcher.IMatcher? methodMatcher, params Xamarin.AopAlliance.Intercept.IMethodInterceptor![]? interceptors) -> void
Xamarin.Google.Inject.Spi.ITypeEncounter.GetMembersInjector(Java.Lang.Class? type) -> Xamarin.Google.Inject.IMembersInjector?
Xamarin.Google.Inject.Spi.ITypeEncounter.GetMembersInjector(Xamarin.Google.Inject.TypeLiteral? typeLiteral) -> Xamarin.Google.Inject.IMembersInjector?
Xamarin.Google.Inject.Spi.ITypeEncounter.GetProvider(Java.Lang.Class? type) -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.Spi.ITypeEncounter.GetProvider(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.Spi.ITypeEncounter.Register(Xamarin.Google.Inject.IMembersInjector? membersInjector) -> void
Xamarin.Google.Inject.Spi.ITypeEncounter.Register(Xamarin.Google.Inject.Spi.IInjectionListener? listener) -> void
Xamarin.Google.Inject.Spi.ITypeListener
Xamarin.Google.Inject.Spi.ITypeListener.Hear(Xamarin.Google.Inject.TypeLiteral? type, Xamarin.Google.Inject.Spi.ITypeEncounter? encounter) -> void
Xamarin.Google.Inject.Spi.InjectionEventArgs
Xamarin.Google.Inject.Spi.InjectionEventArgs.Injectee.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.InjectionEventArgs.InjectionEventArgs(Java.Lang.Object? injectee) -> void
Xamarin.Google.Inject.Spi.InjectionPoint
Xamarin.Google.Inject.Spi.InjectionPoint.DeclaringType.get -> Xamarin.Google.Inject.TypeLiteral?
Xamarin.Google.Inject.Spi.InjectionPoint.Dependencies.get -> System.Collections.Generic.IList<Xamarin.Google.Inject.Spi.Dependency!>?
Xamarin.Google.Inject.Spi.InjectionPoint.IsOptional.get -> bool
Xamarin.Google.Inject.Spi.InjectionPoint.IsToolable.get -> bool
Xamarin.Google.Inject.Spi.InjectionPoint.Member.get -> Java.Lang.Reflect.IMember?
Xamarin.Google.Inject.Spi.InjectionRequest
Xamarin.Google.Inject.Spi.InjectionRequest.InjectionPoints.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
Xamarin.Google.Inject.Spi.InjectionRequest.InjectionRequest(Java.Lang.Object? source, Xamarin.Google.Inject.TypeLiteral? type, Java.Lang.Object? instance) -> void
Xamarin.Google.Inject.Spi.InjectionRequest.Instance.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.InjectionRequest.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.InjectionRequest.Type.get -> Xamarin.Google.Inject.TypeLiteral?
Xamarin.Google.Inject.Spi.InterceptorBinding
Xamarin.Google.Inject.Spi.InterceptorBinding.ClassMatcher.get -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Spi.InterceptorBinding.Interceptors.get -> System.Collections.Generic.IList<Xamarin.AopAlliance.Intercept.IMethodInterceptor!>?
Xamarin.Google.Inject.Spi.InterceptorBinding.MethodMatcher.get -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Spi.InterceptorBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.MembersInjectorLookup
Xamarin.Google.Inject.Spi.MembersInjectorLookup.Delegate.get -> Xamarin.Google.Inject.IMembersInjector?
Xamarin.Google.Inject.Spi.MembersInjectorLookup.InitializeDelegate(Xamarin.Google.Inject.IMembersInjector? delegate) -> void
Xamarin.Google.Inject.Spi.MembersInjectorLookup.InjectionPoints.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
Xamarin.Google.Inject.Spi.MembersInjectorLookup.MembersInjector.get -> Xamarin.Google.Inject.IMembersInjector?
Xamarin.Google.Inject.Spi.MembersInjectorLookup.MembersInjectorLookup(Java.Lang.Object? source, Xamarin.Google.Inject.TypeLiteral? type) -> void
Xamarin.Google.Inject.Spi.MembersInjectorLookup.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.MembersInjectorLookup.Type.get -> Xamarin.Google.Inject.TypeLiteral?
Xamarin.Google.Inject.Spi.Message
Xamarin.Google.Inject.Spi.Message.Cause.get -> Java.Lang.Throwable?
Xamarin.Google.Inject.Spi.Message.ErrorDetail.get -> Xamarin.Google.Inject.Spi.ErrorDetail?
Xamarin.Google.Inject.Spi.Message.GetMessage() -> string?
Xamarin.Google.Inject.Spi.Message.Message(Java.Lang.Object? source, string? message) -> void
Xamarin.Google.Inject.Spi.Message.Message(System.Collections.Generic.IList<Java.Lang.Object!>? sources, string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.Spi.Message.Message(string? message) -> void
Xamarin.Google.Inject.Spi.Message.Message(string? message, Java.Lang.Throwable? cause) -> void
Xamarin.Google.Inject.Spi.Message.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.Message.Sources.get -> System.Collections.Generic.IList<Java.Lang.Object!>?
Xamarin.Google.Inject.Spi.Message.WithSource(System.Collections.Generic.IList<Java.Lang.Object!>? newSources) -> Xamarin.Google.Inject.Spi.Message?
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.ModuleAnnotatedMethodScanner() -> void
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.ModuleAnnotatedMethodScanner(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding.ModuleAnnotatedMethodScannerBinding(Java.Lang.Object? source, Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner? scanner) -> void
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding.Scanner.get -> Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner?
Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ProviderLookup
Xamarin.Google.Inject.Spi.ProviderLookup.Delegate.get -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.Spi.ProviderLookup.Dependency.get -> Xamarin.Google.Inject.Spi.Dependency?
Xamarin.Google.Inject.Spi.ProviderLookup.InitializeDelegate(Xamarin.Google.Inject.IProvider? delegate) -> void
Xamarin.Google.Inject.Spi.ProviderLookup.Key.get -> Xamarin.Google.Inject.Key?
Xamarin.Google.Inject.Spi.ProviderLookup.Provider.get -> Xamarin.Google.Inject.IProvider?
Xamarin.Google.Inject.Spi.ProviderLookup.ProviderLookup(Java.Lang.Object? source, Xamarin.Google.Inject.Key? key) -> void
Xamarin.Google.Inject.Spi.ProviderLookup.ProviderLookup(Java.Lang.Object? source, Xamarin.Google.Inject.Spi.Dependency? dependency) -> void
Xamarin.Google.Inject.Spi.ProviderLookup.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ProvisionEventArgs
Xamarin.Google.Inject.Spi.ProvisionEventArgs.Provision.get -> Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation?
Xamarin.Google.Inject.Spi.ProvisionEventArgs.ProvisionEventArgs(Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation? provision) -> void
Xamarin.Google.Inject.Spi.ProvisionListenerBinding
Xamarin.Google.Inject.Spi.ProvisionListenerBinding.Listeners.get -> System.Collections.Generic.IList<Xamarin.Google.Inject.Spi.IProvisionListener!>?
Xamarin.Google.Inject.Spi.ProvisionListenerBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation
Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.ProvisionListenerProvisionInvocation() -> void
Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.ProvisionListenerProvisionInvocation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Spi.RequireAtInjectOnConstructorsOption
Xamarin.Google.Inject.Spi.RequireAtInjectOnConstructorsOption.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.RequireExactBindingAnnotationsOption
Xamarin.Google.Inject.Spi.RequireExactBindingAnnotationsOption.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.RequireExplicitBindingsOption
Xamarin.Google.Inject.Spi.RequireExplicitBindingsOption.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.ScopeBinding
Xamarin.Google.Inject.Spi.ScopeBinding.AnnotationType.get -> Java.Lang.Class?
Xamarin.Google.Inject.Spi.ScopeBinding.Scope.get -> Xamarin.Google.Inject.IScope?
Xamarin.Google.Inject.Spi.ScopeBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.StaticInjectionRequest
Xamarin.Google.Inject.Spi.StaticInjectionRequest.InjectionPoints.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
Xamarin.Google.Inject.Spi.StaticInjectionRequest.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.StaticInjectionRequest.Type.get -> Java.Lang.Class?
Xamarin.Google.Inject.Spi.ToolableAttribute
Xamarin.Google.Inject.Spi.ToolableAttribute.ToolableAttribute() -> void
Xamarin.Google.Inject.Spi.TypeConverterBinding
Xamarin.Google.Inject.Spi.TypeConverterBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.TypeConverterBinding.TypeConverter.get -> Xamarin.Google.Inject.Spi.ITypeConverter?
Xamarin.Google.Inject.Spi.TypeConverterBinding.TypeConverterBinding(Java.Lang.Object? source, Xamarin.Google.Inject.Matcher.IMatcher? typeMatcher, Xamarin.Google.Inject.Spi.ITypeConverter? typeConverter) -> void
Xamarin.Google.Inject.Spi.TypeConverterBinding.TypeMatcher.get -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Spi.TypeEventArgs
Xamarin.Google.Inject.Spi.TypeEventArgs.Encounter.get -> Xamarin.Google.Inject.Spi.ITypeEncounter?
Xamarin.Google.Inject.Spi.TypeEventArgs.Type.get -> Xamarin.Google.Inject.TypeLiteral?
Xamarin.Google.Inject.Spi.TypeEventArgs.TypeEventArgs(Xamarin.Google.Inject.TypeLiteral? type, Xamarin.Google.Inject.Spi.ITypeEncounter? encounter) -> void
Xamarin.Google.Inject.Spi.TypeListenerBinding
Xamarin.Google.Inject.Spi.TypeListenerBinding.Listener.get -> Xamarin.Google.Inject.Spi.ITypeListener?
Xamarin.Google.Inject.Spi.TypeListenerBinding.Source.get -> Java.Lang.Object?
Xamarin.Google.Inject.Spi.TypeListenerBinding.TypeMatcher.get -> Xamarin.Google.Inject.Matcher.IMatcher?
Xamarin.Google.Inject.Stage
Xamarin.Google.Inject.TypeLiteral
Xamarin.Google.Inject.TypeLiteral.RawType.get -> Java.Lang.Class?
Xamarin.Google.Inject.TypeLiteral.Type.get -> Java.Lang.Reflect.IType?
Xamarin.Google.Inject.TypeLiteral.TypeLiteral() -> void
Xamarin.Google.Inject.TypeLiteral.TypeLiteral(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Inject.Util.Enhanced
Xamarin.Google.Inject.Util.Modules
Xamarin.Google.Inject.Util.Providers
Xamarin.Google.Inject.Util.Types
abstract Xamarin.Google.Inject.PrivateModule.Configure() -> void
abstract Xamarin.Google.Inject.Spi.ErrorDetail.FormatDetail(System.Collections.IList? mergeableErrors, Java.Util.Formatter? formatter) -> void
abstract Xamarin.Google.Inject.Spi.ErrorDetail.WithSources(System.Collections.Generic.IList<Java.Lang.Object!>? newSources) -> Java.Lang.Object?
abstract Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.AnnotationClasses() -> System.Collections.Generic.ICollection<Java.Lang.Class!>?
abstract Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.Provision() -> Java.Lang.Object?
override Xamarin.Google.Inject.AbstractModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.AbstractModule.ThresholdClass.get -> nint
override Xamarin.Google.Inject.AbstractModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.ConfigurationException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.CreationException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.CreationException.ThresholdClass.get -> nint
override Xamarin.Google.Inject.CreationException.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Guice.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Aop.ClassBuilding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Aop.ClassDefining.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Util.Classes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Util.ContinuousStopwatch.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Util.SourceProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Internal.Util.StackTraceElements.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Key.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Key.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Matcher.AbstractMatcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Matcher.AbstractMatcher.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Matcher.AbstractMatcher.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Matcher.Matchers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Matcher.Matchers.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Matcher.Matchers.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Multibindings.MapBinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Multibindings.MapBinder.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Multibindings.MapBinder.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Multibindings.Multibinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Multibindings.Multibinder.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Multibindings.Multibinder.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Multibindings.MultibindingsScanner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Multibindings.MultibindingsScanner.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Multibindings.MultibindingsScanner.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Multibindings.OptionalBinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Multibindings.OptionalBinder.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Multibindings.OptionalBinder.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Name.Names.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Name.Names.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Name.Names.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.OutOfScopeException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.PrivateModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.PrivateModule.ThresholdClass.get -> nint
override Xamarin.Google.Inject.PrivateModule.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.ProvisionException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Scopes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Scopes.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Scopes.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.BindingSourceRestriction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.DefaultBindingTargetVisitor.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.DefaultElementVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.DefaultElementVisitor.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.DefaultElementVisitor.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.Dependency.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.DisableCircularProxiesOption.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ElementSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.Elements.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ErrorDetail.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ErrorDetail.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.ErrorDetail.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.InjectionPoint.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.InjectionRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.InterceptorBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.MembersInjectorLookup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.Message.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ProviderLookup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ProvisionListenerBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.ThresholdClass.get -> nint
override Xamarin.Google.Inject.Spi.ProvisionListenerProvisionInvocation.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Spi.RequireAtInjectOnConstructorsOption.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.RequireExactBindingAnnotationsOption.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.RequireExplicitBindingsOption.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.ScopeBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.StaticInjectionRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.TypeConverterBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Spi.TypeListenerBinding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Stage.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.TypeLiteral.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.TypeLiteral.ThresholdClass.get -> nint
override Xamarin.Google.Inject.TypeLiteral.ThresholdType.get -> System.Type!
override Xamarin.Google.Inject.Util.Enhanced.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Util.Modules.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Util.Providers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Inject.Util.Types.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Google.Inject.Key.Equals(Java.Lang.Object? o) -> bool
override sealed Xamarin.Google.Inject.Key.GetHashCode() -> int
override sealed Xamarin.Google.Inject.Key.ToString() -> string?
override sealed Xamarin.Google.Inject.TypeLiteral.Equals(Java.Lang.Object? o) -> bool
override sealed Xamarin.Google.Inject.TypeLiteral.GetHashCode() -> int
override sealed Xamarin.Google.Inject.TypeLiteral.ToString() -> string?
static Xamarin.Google.Inject.Internal.Aop.ClassBuilding.BuildFastClass(Java.Lang.Class? hostClass) -> Java.Util.Functions.IFunction?
static Xamarin.Google.Inject.Internal.Aop.ClassBuilding.CanEnhance(Java.Lang.Reflect.Executable? member) -> bool
static Xamarin.Google.Inject.Internal.Aop.ClassBuilding.CanFastInvoke(Java.Lang.Reflect.Executable? member) -> bool
static Xamarin.Google.Inject.Internal.Aop.ClassBuilding.Signature(Java.Lang.Reflect.Constructor? constructor) -> string?
static Xamarin.Google.Inject.Internal.Aop.ClassBuilding.Signature(Java.Lang.Reflect.Method? method) -> string?
static Xamarin.Google.Inject.Internal.Aop.ClassDefining.CanDowncastToProxy(Java.Lang.Class? hostClass) -> bool
static Xamarin.Google.Inject.Internal.Aop.ClassDefining.CanLoadProxyByName(Java.Lang.Class? hostClass) -> bool
static Xamarin.Google.Inject.Internal.Aop.ClassDefining.Define(Java.Lang.Class? hostClass, byte[]? bytecode) -> Java.Lang.Class?
static Xamarin.Google.Inject.Internal.Aop.ClassDefining.HasPackageAccess.get -> bool
static Xamarin.Google.Inject.Internal.Util.Classes.IsConcrete(Java.Lang.Class? clazz) -> bool
static Xamarin.Google.Inject.Internal.Util.Classes.IsInnerClass(Java.Lang.Class? clazz) -> bool
static Xamarin.Google.Inject.Internal.Util.Classes.MemberType(Java.Lang.Reflect.IMember? member) -> Java.Lang.Class?
static Xamarin.Google.Inject.Internal.Util.Classes.ToString(Java.Lang.Reflect.IMember? member) -> string?
static Xamarin.Google.Inject.Internal.Util.SourceProvider.DefaultInstance.get -> Xamarin.Google.Inject.Internal.Util.SourceProvider?
static Xamarin.Google.Inject.Internal.Util.SourceProvider.UnknownSource.get -> Java.Lang.Object?
static Xamarin.Google.Inject.Internal.Util.StackTraceElements.ClearCache() -> void
static Xamarin.Google.Inject.Internal.Util.StackTraceElements.ConvertToInMemoryStackTraceElement(Java.Lang.StackTraceElement![]? stackTraceElements) -> Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement![]?
static Xamarin.Google.Inject.Internal.Util.StackTraceElements.ConvertToStackTraceElement(Xamarin.Google.Inject.Internal.Util.StackTraceElements.InMemoryStackTraceElement![]? inMemoryStackTraceElements) -> Java.Lang.StackTraceElement![]?
static Xamarin.Google.Inject.Internal.Util.StackTraceElements.ForMember(Java.Lang.Reflect.IMember? member) -> Java.Lang.Object?
static Xamarin.Google.Inject.Internal.Util.StackTraceElements.ForType(Java.Lang.Class? implementation) -> Java.Lang.Object?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Class? type) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Class? type, Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Class? type, Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Reflect.IType? type) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Reflect.IType? type, Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Java.Lang.Reflect.IType? type, Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Xamarin.Google.Inject.TypeLiteral? typeLiteral) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Xamarin.Google.Inject.TypeLiteral? typeLiteral, Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Key.Get(Xamarin.Google.Inject.TypeLiteral? typeLiteral, Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Key?
static Xamarin.Google.Inject.Matcher.Matchers.AnnotatedWith(Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.AnnotatedWith(Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.Any() -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.IdenticalTo(Java.Lang.Object? value) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.InPackage(Java.Lang.Package? targetPackage) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.InSubpackage(string? targetPackageName) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.Not(Xamarin.Google.Inject.Matcher.IMatcher? p) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.Only(Java.Lang.Object? value) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.Returns(Xamarin.Google.Inject.Matcher.IMatcher? returnType) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Matcher.Matchers.SubclassesOf(Java.Lang.Class? superclass) -> Xamarin.Google.Inject.Matcher.IMatcher?
static Xamarin.Google.Inject.Multibindings.MultibindingsScanner.Scanner() -> Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScanner?
static Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType.Actual.get -> Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType?
static Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType.Default.get -> Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType?
static Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType.ValueOf(string? name) -> Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType?
static Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType.Values() -> Xamarin.Google.Inject.Multibindings.ProvidesIntoOptionalType![]?
static Xamarin.Google.Inject.Name.Names.Named(string? name) -> Xamarin.Google.Inject.Name.INamed?
static Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel.Error.get -> Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel?
static Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel.ValueOf(string? name) -> Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel?
static Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel.Values() -> Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel![]?
static Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel.Warning.get -> Xamarin.Google.Inject.RestrictedBindingSourceRestrictionLevel?
static Xamarin.Google.Inject.Scopes.IsCircularProxy(Java.Lang.Object? object) -> bool
static Xamarin.Google.Inject.Scopes.NoScope.get -> Xamarin.Google.Inject.IScope?
static Xamarin.Google.Inject.Scopes.Singleton.get -> Xamarin.Google.Inject.IScope?
static Xamarin.Google.Inject.Spi.Dependency.ForInjectionPoints(System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>? injectionPoints) -> System.Collections.ICollection?
static Xamarin.Google.Inject.Spi.Dependency.Get(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.Spi.Dependency?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForConstructor(Java.Lang.Reflect.Constructor? constructor) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForConstructor(Java.Lang.Reflect.Constructor? constructor, Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForConstructorOf(Java.Lang.Class? type) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForConstructorOf(Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForConstructorOf(Xamarin.Google.Inject.TypeLiteral? type, bool atInjectRequired) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForInstanceMethodsAndFields(Java.Lang.Class? type) -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForInstanceMethodsAndFields(Xamarin.Google.Inject.TypeLiteral? type) -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForMethod(Java.Lang.Reflect.Method? method, Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Spi.InjectionPoint?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForStaticMethodsAndFields(Java.Lang.Class? type) -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
static Xamarin.Google.Inject.Spi.InjectionPoint.ForStaticMethodsAndFields(Xamarin.Google.Inject.TypeLiteral? type) -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.InjectionPoint!>?
static Xamarin.Google.Inject.Spi.InjectionPoint.GetAnnotations(Java.Lang.Reflect.Field? field) -> Java.Lang.Annotation.IAnnotation![]?
static Xamarin.Google.Inject.Stage.Development.get -> Xamarin.Google.Inject.Stage?
static Xamarin.Google.Inject.Stage.Production.get -> Xamarin.Google.Inject.Stage?
static Xamarin.Google.Inject.Stage.Tool.get -> Xamarin.Google.Inject.Stage?
static Xamarin.Google.Inject.Stage.ValueOf(string? name) -> Xamarin.Google.Inject.Stage?
static Xamarin.Google.Inject.Stage.Values() -> Xamarin.Google.Inject.Stage![]?
static Xamarin.Google.Inject.TypeLiteral.Get(Java.Lang.Class? type) -> Xamarin.Google.Inject.TypeLiteral?
static Xamarin.Google.Inject.TypeLiteral.Get(Java.Lang.Reflect.IType? type) -> Xamarin.Google.Inject.TypeLiteral?
static Xamarin.Google.Inject.Util.Enhanced.IsEnhanced(Java.Lang.Class? clazz) -> bool
static Xamarin.Google.Inject.Util.Enhanced.UnenhancedClass(Java.Lang.Class? clazz) -> Java.Util.Optional?
static Xamarin.Google.Inject.Util.Providers.Guicify(Jakarta.Inject.IProvider? provider) -> Xamarin.Google.Inject.IProvider?
static Xamarin.Google.Inject.Util.Providers.Guicify(Xamarin.Google.Inject.IProvider? provider) -> Xamarin.Google.Inject.IProvider?
static Xamarin.Google.Inject.Util.Providers.Of(Java.Lang.Object? instance) -> Xamarin.Google.Inject.IProvider?
static Xamarin.Google.Inject.Util.Types.ArrayOf(Java.Lang.Reflect.IType? componentType) -> Java.Lang.Reflect.IGenericArrayType?
static Xamarin.Google.Inject.Util.Types.CollectionOf(Java.Lang.Reflect.IType? elementType) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.JakartaProviderOf(Java.Lang.Reflect.IType? type) -> Java.Lang.Reflect.IType?
static Xamarin.Google.Inject.Util.Types.ListOf(Java.Lang.Reflect.IType? elementType) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.MapOf(Java.Lang.Reflect.IType? keyType, Java.Lang.Reflect.IType? valueType) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.NewParameterizedType(Java.Lang.Reflect.IType? rawType, params Java.Lang.Reflect.IType![]? typeArguments) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.NewParameterizedTypeWithOwner(Java.Lang.Reflect.IType? ownerType, Java.Lang.Reflect.IType? rawType, params Java.Lang.Reflect.IType![]? typeArguments) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.ProviderOf(Java.Lang.Reflect.IType? providedType) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.SetOf(Java.Lang.Reflect.IType? elementType) -> Java.Lang.Reflect.IParameterizedType?
static Xamarin.Google.Inject.Util.Types.SubtypeOf(Java.Lang.Reflect.IType? bound) -> Java.Lang.Reflect.IWildcardType?
static Xamarin.Google.Inject.Util.Types.SupertypeOf(Java.Lang.Reflect.IType? bound) -> Java.Lang.Reflect.IWildcardType?
virtual Xamarin.Google.Inject.AbstractModule.AddError(Java.Lang.Throwable? t) -> void
virtual Xamarin.Google.Inject.AbstractModule.AddError(Xamarin.Google.Inject.Spi.Message? message) -> void
virtual Xamarin.Google.Inject.AbstractModule.AddError(string? message, params Java.Lang.Object![]? arguments) -> void
virtual Xamarin.Google.Inject.AbstractModule.Bind(Java.Lang.Class? clazz) -> Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder?
virtual Xamarin.Google.Inject.AbstractModule.Bind(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
virtual Xamarin.Google.Inject.AbstractModule.Bind(Xamarin.Google.Inject.TypeLiteral? typeLiteral) -> Xamarin.Google.Inject.Binder.IAnnotatedBindingBuilder?
virtual Xamarin.Google.Inject.AbstractModule.BindConstant() -> Xamarin.Google.Inject.Binder.IAnnotatedConstantBindingBuilder?
virtual Xamarin.Google.Inject.AbstractModule.BindInterceptor(Xamarin.Google.Inject.Matcher.IMatcher? classMatcher, Xamarin.Google.Inject.Matcher.IMatcher? methodMatcher, params Xamarin.AopAlliance.Intercept.IMethodInterceptor![]? interceptors) -> void
virtual Xamarin.Google.Inject.AbstractModule.BindListener(Xamarin.Google.Inject.Matcher.IMatcher? typeMatcher, Xamarin.Google.Inject.Spi.ITypeListener? listener) -> void
virtual Xamarin.Google.Inject.AbstractModule.BindScope(Java.Lang.Class? scopeAnnotation, Xamarin.Google.Inject.IScope? scope) -> void
virtual Xamarin.Google.Inject.AbstractModule.Configure() -> void
virtual Xamarin.Google.Inject.AbstractModule.ConvertToTypes(Xamarin.Google.Inject.Matcher.IMatcher? typeMatcher, Xamarin.Google.Inject.Spi.ITypeConverter? converter) -> void
virtual Xamarin.Google.Inject.AbstractModule.CurrentStage() -> Xamarin.Google.Inject.Stage?
virtual Xamarin.Google.Inject.AbstractModule.GetMembersInjector(Java.Lang.Class? type) -> Xamarin.Google.Inject.IMembersInjector?
virtual Xamarin.Google.Inject.AbstractModule.GetMembersInjector(Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.IMembersInjector?
virtual Xamarin.Google.Inject.AbstractModule.GetProvider(Java.Lang.Class? type) -> Xamarin.Google.Inject.IProvider?
virtual Xamarin.Google.Inject.AbstractModule.GetProvider(Xamarin.Google.Inject.Key? key) -> Xamarin.Google.Inject.IProvider?
virtual Xamarin.Google.Inject.AbstractModule.RequestInjection(Java.Lang.Object? instance) -> void
virtual Xamarin.Google.Inject.AbstractModule.RequestInjection(Xamarin.Google.Inject.TypeLiteral? type, Java.Lang.Object? instance) -> void
virtual Xamarin.Google.Inject.AbstractModule.RequestStaticInjection(params Java.Lang.Class![]? types) -> void
virtual Xamarin.Google.Inject.AbstractModule.RequireBinding(Java.Lang.Class? type) -> void
virtual Xamarin.Google.Inject.AbstractModule.RequireBinding(Xamarin.Google.Inject.Key? key) -> void
virtual Xamarin.Google.Inject.CreationException.ErrorMessages.get -> System.Collections.Generic.ICollection<Xamarin.Google.Inject.Spi.Message!>?
virtual Xamarin.Google.Inject.Key.HasAttributes.get -> bool
virtual Xamarin.Google.Inject.Key.OfType(Java.Lang.Class? type) -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Key.OfType(Java.Lang.Reflect.IType? type) -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Key.OfType(Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Key.WithAnnotation(Java.Lang.Annotation.IAnnotation? annotation) -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Key.WithAnnotation(Java.Lang.Class? annotationType) -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Key.WithoutAttributes() -> Xamarin.Google.Inject.Key?
virtual Xamarin.Google.Inject.Multibindings.MapBinder.AddBinding(Java.Lang.Object? key) -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
virtual Xamarin.Google.Inject.Multibindings.MapBinder.PermitDuplicates() -> Xamarin.Google.Inject.Multibindings.MapBinder?
virtual Xamarin.Google.Inject.Multibindings.Multibinder.AddBinding() -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
virtual Xamarin.Google.Inject.Multibindings.Multibinder.PermitDuplicates() -> Xamarin.Google.Inject.Multibindings.Multibinder?
virtual Xamarin.Google.Inject.Multibindings.OptionalBinder.SetBinding() -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
virtual Xamarin.Google.Inject.Multibindings.OptionalBinder.SetDefault() -> Xamarin.Google.Inject.Binder.ILinkedBindingBuilder?
virtual Xamarin.Google.Inject.PrivateModule.BindListener(Xamarin.Google.Inject.Matcher.IMatcher? typeMatcher, Xamarin.Google.Inject.Spi.ITypeListener? listener) -> void
virtual Xamarin.Google.Inject.PrivateModule.GetMembersInjector(Java.Lang.Class? type) -> Xamarin.Google.Inject.IMembersInjector?
virtual Xamarin.Google.Inject.PrivateModule.GetMembersInjector(Xamarin.Google.Inject.TypeLiteral? type) -> Xamarin.Google.Inject.IMembersInjector?
virtual Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.VisitEagerSingleton() -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.VisitNoScoping() -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.VisitOther() -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.VisitScope(Xamarin.Google.Inject.IScope? scope) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultBindingScopingVisitor.VisitScopeAnnotation(Java.Lang.Class? scopeAnnotation) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.DisableCircularProxiesOption? option) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.InjectionRequest? injectionRequest) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.InterceptorBinding? interceptorBinding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.MembersInjectorLookup? lookup) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.Message? message) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.ModuleAnnotatedMethodScannerBinding? binding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.ProviderLookup? providerLookup) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.ProvisionListenerBinding? binding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.RequireAtInjectOnConstructorsOption? option) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.RequireExactBindingAnnotationsOption? option) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.RequireExplicitBindingsOption? option) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.ScopeBinding? scopeBinding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.StaticInjectionRequest? staticInjectionRequest) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.TypeConverterBinding? typeConverterBinding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.DefaultElementVisitor.Visit(Xamarin.Google.Inject.Spi.TypeListenerBinding? binding) -> Java.Lang.Object?
virtual Xamarin.Google.Inject.Spi.ErrorDetail.Cause.get -> Java.Lang.Throwable?
virtual Xamarin.Google.Inject.Spi.ErrorDetail.ErrorIdentifier.get -> Java.Util.Optional?
virtual Xamarin.Google.Inject.Spi.ErrorDetail.IsMergeable(Xamarin.Google.Inject.Spi.ErrorDetail? otherError) -> bool
virtual Xamarin.Google.Inject.Spi.ErrorDetail.LearnMoreLink.get -> Java.Util.Optional?
virtual Xamarin.Google.Inject.Spi.ErrorDetail.Message.get -> string?
virtual Xamarin.Google.Inject.Spi.ErrorDetail.Sources.get -> System.Collections.Generic.IList<Java.Lang.Object!>?
virtual Xamarin.Google.Inject.TypeLiteral.GetExceptionTypes(Java.Lang.Reflect.IMember? methodOrConstructor) -> System.Collections.IList?
virtual Xamarin.Google.Inject.TypeLiteral.GetFieldType(Java.Lang.Reflect.Field? field) -> Xamarin.Google.Inject.TypeLiteral?
virtual Xamarin.Google.Inject.TypeLiteral.GetParameterTypes(Java.Lang.Reflect.IMember? methodOrConstructor) -> System.Collections.IList?
virtual Xamarin.Google.Inject.TypeLiteral.GetReturnType(Java.Lang.Reflect.Method? method) -> Xamarin.Google.Inject.TypeLiteral?
virtual Xamarin.Google.Inject.TypeLiteral.GetSupertype(Java.Lang.Class? supertype) -> Xamarin.Google.Inject.TypeLiteral?
