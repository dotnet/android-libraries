#nullable enable
AndroidX.Slice.SliceMetadata
AndroidX.Slice.SliceMetadata.ISliceLoadingState
AndroidX.Slice.SliceMetadata.SliceMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceMetadata.Subtitle.get -> string?
AndroidX.Slice.SliceMetadata.Summary.get -> string?
AndroidX.Slice.SliceMetadata.Title.get -> string?
AndroidX.Slice.SliceStructure
AndroidX.Slice.SliceStructure.SliceStructure(AndroidX.Slice.Slice? s) -> void
AndroidX.Slice.SliceStructure.SliceStructure(AndroidX.Slice.SliceItem? s) -> void
AndroidX.Slice.SliceStructure.SliceStructure(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceUtils
AndroidX.Slice.SliceUtils.ISliceActionListener
AndroidX.Slice.SliceUtils.ISliceActionListener.OnSliceAction(Android.Net.Uri? p0, Android.Content.Context? p1, Android.Content.Intent? p2) -> void
AndroidX.Slice.SliceUtils.SerializeOptions
AndroidX.Slice.SliceUtils.SerializeOptions.SerializeOptions() -> void
AndroidX.Slice.SliceUtils.SerializeOptions.SerializeOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceUtils.SliceActionEventArgs
AndroidX.Slice.SliceUtils.SliceActionEventArgs.P0.get -> Android.Net.Uri?
AndroidX.Slice.SliceUtils.SliceActionEventArgs.P1.get -> Android.Content.Context?
AndroidX.Slice.SliceUtils.SliceActionEventArgs.P2.get -> Android.Content.Intent?
AndroidX.Slice.SliceUtils.SliceActionEventArgs.SliceActionEventArgs(Android.Net.Uri? p0, Android.Content.Context? p1, Android.Content.Intent? p2) -> void
AndroidX.Slice.SliceUtils.SliceParseException
AndroidX.Slice.SliceUtils.SliceParseException.SliceParseException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceUtils.SliceParseException.SliceParseException(string? s) -> void
AndroidX.Slice.SliceUtils.SliceParseException.SliceParseException(string? s, Java.Lang.Throwable? e) -> void
AndroidX.Slice.SliceUtils.SliceUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceViewManager
AndroidX.Slice.SliceViewManager.ISliceCallback
AndroidX.Slice.SliceViewManager.ISliceCallback.OnSliceUpdated(AndroidX.Slice.Slice! p0) -> void
AndroidX.Slice.SliceViewManager.SliceViewManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.SliceViewManagerBase
AndroidX.Slice.SliceViewManagerBase.MContext.get -> Android.Content.Context?
AndroidX.Slice.SliceViewManagerBase.MContext.set -> void
AndroidX.Slice.SliceViewManagerBase.SliceViewManagerBase(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.ActionRow
AndroidX.Slice.Widget.ActionRow.ActionRow(Android.Content.Context? context, bool fullActions) -> void
AndroidX.Slice.Widget.ActionRow.ActionRow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.EventInfo
AndroidX.Slice.Widget.EventInfo.ActionCount.get -> int
AndroidX.Slice.Widget.EventInfo.ActionCount.set -> void
AndroidX.Slice.Widget.EventInfo.ActionIndex.get -> int
AndroidX.Slice.Widget.EventInfo.ActionIndex.set -> void
AndroidX.Slice.Widget.EventInfo.ActionPosition.get -> int
AndroidX.Slice.Widget.EventInfo.ActionPosition.set -> void
AndroidX.Slice.Widget.EventInfo.ActionType.get -> int
AndroidX.Slice.Widget.EventInfo.ActionType.set -> void
AndroidX.Slice.Widget.EventInfo.EventInfo(int sliceMode, int actionType, int rowTemplateType, int rowIndex) -> void
AndroidX.Slice.Widget.EventInfo.EventInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.EventInfo.ISliceActionType
AndroidX.Slice.Widget.EventInfo.ISliceButtonPosition
AndroidX.Slice.Widget.EventInfo.ISliceRowType
AndroidX.Slice.Widget.EventInfo.RowIndex.get -> int
AndroidX.Slice.Widget.EventInfo.RowIndex.set -> void
AndroidX.Slice.Widget.EventInfo.RowTemplateType.get -> int
AndroidX.Slice.Widget.EventInfo.RowTemplateType.set -> void
AndroidX.Slice.Widget.EventInfo.SliceMode.get -> int
AndroidX.Slice.Widget.EventInfo.SliceMode.set -> void
AndroidX.Slice.Widget.EventInfo.State.get -> int
AndroidX.Slice.Widget.EventInfo.State.set -> void
AndroidX.Slice.Widget.GridContent
AndroidX.Slice.Widget.GridContent.CellContent
AndroidX.Slice.Widget.GridContent.CellContent.CellContent(AndroidX.Slice.SliceItem? cellItem) -> void
AndroidX.Slice.Widget.GridContent.CellContent.CellContent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.GridContent.CellContent.ContentDescription.get -> string?
AndroidX.Slice.Widget.GridContent.ContentDescription.get -> string?
AndroidX.Slice.Widget.GridContent.GridContent(Android.Content.Context? context, AndroidX.Slice.SliceItem? gridItem) -> void
AndroidX.Slice.Widget.GridContent.GridContent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.GridContent.Title.get -> string?
AndroidX.Slice.Widget.GridRowView
AndroidX.Slice.Widget.GridRowView.GridRowView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.GridRowView.GridRowView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Slice.Widget.GridRowView.GridRowView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.LargeSliceAdapter
AndroidX.Slice.Widget.LargeSliceAdapter.LargeSliceAdapter(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.LargeSliceAdapter.LargeSliceAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.LargeSliceAdapter.SliceObserver -> System.EventHandler<AndroidX.Slice.Widget.SliceView.SliceActionEventArgs!>!
AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder
AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.MSliceChildView.get -> AndroidX.Slice.Widget.SliceChildView?
AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.MSliceChildView.set -> void
AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.SliceViewHolder(AndroidX.Slice.Widget.LargeSliceAdapter? __self, Android.Views.View? itemView) -> void
AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.SliceViewHolder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper
AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.SliceWrapper(AndroidX.Slice.SliceItem? item, Java.Lang.Object? idGen, int mode) -> void
AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.SliceWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.LargeTemplateView
AndroidX.Slice.Widget.LargeTemplateView.LargeTemplateView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.LargeTemplateView.LargeTemplateView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.ListContent
AndroidX.Slice.Widget.ListContent.ListContent(Android.Content.Context? context, AndroidX.Slice.Slice? slice) -> void
AndroidX.Slice.Widget.ListContent.ListContent(Android.Content.Context? context, AndroidX.Slice.Slice? slice, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Slice.Widget.ListContent.ListContent(Android.Content.Context? context, AndroidX.Slice.Slice? slice, AndroidX.Slice.Widget.SliceStyle? styles) -> void
AndroidX.Slice.Widget.ListContent.ListContent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.MessageView
AndroidX.Slice.Widget.MessageView.MessageView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.MessageView.MessageView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.RemoteInputView
AndroidX.Slice.Widget.RemoteInputView.BeforeTextChanged(string? s, int start, int count, int after) -> void
AndroidX.Slice.Widget.RemoteInputView.OnTextChanged(string? s, int start, int before, int count) -> void
AndroidX.Slice.Widget.RemoteInputView.RemoteEditText
AndroidX.Slice.Widget.RemoteInputView.RemoteEditText.RemoteEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Slice.Widget.RemoteInputView.RemoteEditText.RemoteEditText(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.RemoteInputView.RemoteInputView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Slice.Widget.RemoteInputView.RemoteInputView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.RowContent
AndroidX.Slice.Widget.RowContent.ContentDescription.get -> string?
AndroidX.Slice.Widget.RowContent.RowContent(Android.Content.Context? context, AndroidX.Slice.SliceItem? rowSlice, bool isHeader) -> void
AndroidX.Slice.Widget.RowContent.RowContent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.RowView
AndroidX.Slice.Widget.RowView.MLoadingActions.get -> System.Collections.ICollection?
AndroidX.Slice.Widget.RowView.MLoadingActions.set -> void
AndroidX.Slice.Widget.RowView.RowView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.RowView.RowView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.ShortcutContent
AndroidX.Slice.Widget.ShortcutContent.ShortcutContent(AndroidX.Slice.Widget.ListContent! content) -> void
AndroidX.Slice.Widget.ShortcutContent.ShortcutContent(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.ShortcutView
AndroidX.Slice.Widget.ShortcutView.ShortcutView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.ShortcutView.ShortcutView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.SliceActionView
AndroidX.Slice.Widget.SliceActionView.SliceActionView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.SliceActionView.SliceActionView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.SliceChildView
AndroidX.Slice.Widget.SliceChildView.MInsetBottom.get -> int
AndroidX.Slice.Widget.SliceChildView.MInsetBottom.set -> void
AndroidX.Slice.Widget.SliceChildView.MInsetEnd.get -> int
AndroidX.Slice.Widget.SliceChildView.MInsetEnd.set -> void
AndroidX.Slice.Widget.SliceChildView.MInsetStart.get -> int
AndroidX.Slice.Widget.SliceChildView.MInsetStart.set -> void
AndroidX.Slice.Widget.SliceChildView.MInsetTop.get -> int
AndroidX.Slice.Widget.SliceChildView.MInsetTop.set -> void
AndroidX.Slice.Widget.SliceChildView.MLastUpdated.get -> long
AndroidX.Slice.Widget.SliceChildView.MLastUpdated.set -> void
AndroidX.Slice.Widget.SliceChildView.MMode.get -> int
AndroidX.Slice.Widget.SliceChildView.MMode.set -> void
AndroidX.Slice.Widget.SliceChildView.MObserver.get -> AndroidX.Slice.Widget.SliceView.IOnSliceActionListener?
AndroidX.Slice.Widget.SliceChildView.MObserver.set -> void
AndroidX.Slice.Widget.SliceChildView.MShowLastUpdated.get -> bool
AndroidX.Slice.Widget.SliceChildView.MShowLastUpdated.set -> void
AndroidX.Slice.Widget.SliceChildView.MSliceStyle.get -> AndroidX.Slice.Widget.SliceStyle?
AndroidX.Slice.Widget.SliceChildView.MSliceStyle.set -> void
AndroidX.Slice.Widget.SliceChildView.MTintColor.get -> int
AndroidX.Slice.Widget.SliceChildView.MTintColor.set -> void
AndroidX.Slice.Widget.SliceChildView.SliceAction -> System.EventHandler<AndroidX.Slice.Widget.SliceView.SliceActionEventArgs!>!
AndroidX.Slice.Widget.SliceChildView.SliceChildView(Android.Content.Context! context) -> void
AndroidX.Slice.Widget.SliceChildView.SliceChildView(Android.Content.Context? context, Android.Util.IAttributeSet? attributeSet) -> void
AndroidX.Slice.Widget.SliceChildView.SliceChildView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.SliceLiveData
AndroidX.Slice.Widget.SliceLiveData.ErrorEventArgs
AndroidX.Slice.Widget.SliceLiveData.ErrorEventArgs.ErrorEventArgs(int p0, Java.Lang.Throwable? p1) -> void
AndroidX.Slice.Widget.SliceLiveData.ErrorEventArgs.P0.get -> int
AndroidX.Slice.Widget.SliceLiveData.ErrorEventArgs.P1.get -> Java.Lang.Throwable?
AndroidX.Slice.Widget.SliceLiveData.IOnErrorListener
AndroidX.Slice.Widget.SliceLiveData.IOnErrorListener.OnSliceError(int p0, Java.Lang.Throwable? p1) -> void
AndroidX.Slice.Widget.SliceLiveData.IOnErrorListenerErrorType
AndroidX.Slice.Widget.SliceLiveData.OnErrorListener
AndroidX.Slice.Widget.SliceLiveData.OnErrorListenerConsts
AndroidX.Slice.Widget.SliceStyle
AndroidX.Slice.Widget.SliceStyle.SliceStyle(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Slice.Widget.SliceStyle.SliceStyle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.SliceView
AndroidX.Slice.Widget.SliceView.IOnSliceActionListener
AndroidX.Slice.Widget.SliceView.IOnSliceActionListener.OnSliceAction(AndroidX.Slice.Widget.EventInfo! p0, AndroidX.Slice.SliceItem! p1) -> void
AndroidX.Slice.Widget.SliceView.ISliceMode
AndroidX.Slice.Widget.SliceView.SliceAction -> System.EventHandler<AndroidX.Slice.Widget.SliceView.SliceActionEventArgs!>!
AndroidX.Slice.Widget.SliceView.SliceActionEventArgs
AndroidX.Slice.Widget.SliceView.SliceActionEventArgs.P0.get -> AndroidX.Slice.Widget.EventInfo!
AndroidX.Slice.Widget.SliceView.SliceActionEventArgs.P1.get -> AndroidX.Slice.SliceItem!
AndroidX.Slice.Widget.SliceView.SliceActionEventArgs.SliceActionEventArgs(AndroidX.Slice.Widget.EventInfo! p0, AndroidX.Slice.SliceItem! p1) -> void
AndroidX.Slice.Widget.SliceView.SliceView(Android.Content.Context? context) -> void
AndroidX.Slice.Widget.SliceView.SliceView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Slice.Widget.SliceView.SliceView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Slice.Widget.SliceView.SliceView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Slice.Widget.SliceView.SliceView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Slice.Widget.SliceViewUtil
AndroidX.Slice.Widget.SliceViewUtil.SliceViewUtil(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.Slice.SliceViewManager.BindSlice(Android.Content.Intent! p0) -> AndroidX.Slice.Slice?
abstract AndroidX.Slice.SliceViewManager.BindSlice(Android.Net.Uri! p0) -> AndroidX.Slice.Slice?
abstract AndroidX.Slice.SliceViewManager.GetSliceDescendants(Android.Net.Uri! p0) -> System.Collections.Generic.ICollection<Android.Net.Uri!>!
abstract AndroidX.Slice.SliceViewManager.MapIntentToUri(Android.Content.Intent! p0) -> Android.Net.Uri?
abstract AndroidX.Slice.SliceViewManager.PinSlice(Android.Net.Uri! p0) -> void
abstract AndroidX.Slice.SliceViewManager.RegisterSliceCallback(Android.Net.Uri! p0, AndroidX.Slice.SliceViewManager.ISliceCallback! p1) -> void
abstract AndroidX.Slice.SliceViewManager.RegisterSliceCallback(Android.Net.Uri! p0, Java.Util.Concurrent.IExecutor! p1, AndroidX.Slice.SliceViewManager.ISliceCallback! p2) -> void
abstract AndroidX.Slice.SliceViewManager.UnpinSlice(Android.Net.Uri! p0) -> void
abstract AndroidX.Slice.SliceViewManager.UnregisterSliceCallback(Android.Net.Uri! p0, AndroidX.Slice.SliceViewManager.ISliceCallback! p1) -> void
abstract AndroidX.Slice.Widget.SliceChildView.ResetView() -> void
const AndroidX.Slice.SliceMetadata.LoadedAll = 2 -> int
const AndroidX.Slice.SliceMetadata.LoadedNone = 0 -> int
const AndroidX.Slice.SliceMetadata.LoadedPartial = 1 -> int
const AndroidX.Slice.SliceUtils.LoadingAll = 0 -> int
const AndroidX.Slice.SliceUtils.LoadingComplete = 2 -> int
const AndroidX.Slice.SliceUtils.LoadingPartial = 1 -> int
const AndroidX.Slice.SliceUtils.SerializeOptions.ModeConvert = 2 -> int
const AndroidX.Slice.SliceUtils.SerializeOptions.ModeRemove = 1 -> int
const AndroidX.Slice.SliceUtils.SerializeOptions.ModeThrow = 0 -> int
const AndroidX.Slice.Widget.EventInfo.ActionTypeButton = 1 -> int
const AndroidX.Slice.Widget.EventInfo.ActionTypeContent = 3 -> int
const AndroidX.Slice.Widget.EventInfo.ActionTypeSeeMore = 4 -> int
const AndroidX.Slice.Widget.EventInfo.ActionTypeSlider = 2 -> int
const AndroidX.Slice.Widget.EventInfo.ActionTypeToggle = 0 -> int
const AndroidX.Slice.Widget.EventInfo.PositionCell = 2 -> int
const AndroidX.Slice.Widget.EventInfo.PositionEnd = 1 -> int
const AndroidX.Slice.Widget.EventInfo.PositionStart = 0 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeGrid = 1 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeList = 0 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeMessaging = 2 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeProgress = 5 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeShortcut = -1 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeSlider = 4 -> int
const AndroidX.Slice.Widget.EventInfo.RowTypeToggle = 3 -> int
const AndroidX.Slice.Widget.EventInfo.StateOff = 0 -> int
const AndroidX.Slice.Widget.EventInfo.StateOn = 1 -> int
const AndroidX.Slice.Widget.SliceLiveData.OnErrorListener.ErrorInvalidInput = 3 -> int
const AndroidX.Slice.Widget.SliceLiveData.OnErrorListener.ErrorSliceNoLongerPresent = 2 -> int
const AndroidX.Slice.Widget.SliceLiveData.OnErrorListener.ErrorStructureChanged = 1 -> int
const AndroidX.Slice.Widget.SliceLiveData.OnErrorListener.ErrorUnknown = 0 -> int
const AndroidX.Slice.Widget.SliceView.ModeLarge = 2 -> int
const AndroidX.Slice.Widget.SliceView.ModeShortcut = 3 -> int
const AndroidX.Slice.Widget.SliceView.ModeSmall = 1 -> int
override AndroidX.Slice.SliceMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceMetadata.ThresholdClass.get -> nint
override AndroidX.Slice.SliceMetadata.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceStructure.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceStructure.ThresholdClass.get -> nint
override AndroidX.Slice.SliceStructure.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceUtils.SerializeOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceUtils.SerializeOptions.ThresholdClass.get -> nint
override AndroidX.Slice.SliceUtils.SerializeOptions.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceUtils.SliceParseException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceUtils.SliceParseException.ThresholdClass.get -> nint
override AndroidX.Slice.SliceUtils.SliceParseException.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceUtils.ThresholdClass.get -> nint
override AndroidX.Slice.SliceUtils.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceViewManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceViewManager.ThresholdClass.get -> nint
override AndroidX.Slice.SliceViewManager.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceViewManagerBase.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.SliceViewManagerBase.RegisterSliceCallback(Android.Net.Uri! uri, AndroidX.Slice.SliceViewManager.ISliceCallback! callback) -> void
override AndroidX.Slice.SliceViewManagerBase.RegisterSliceCallback(Android.Net.Uri! uri, Java.Util.Concurrent.IExecutor! executor, AndroidX.Slice.SliceViewManager.ISliceCallback! callback) -> void
override AndroidX.Slice.SliceViewManagerBase.ThresholdClass.get -> nint
override AndroidX.Slice.SliceViewManagerBase.ThresholdType.get -> System.Type!
override AndroidX.Slice.SliceViewManagerBase.UnregisterSliceCallback(Android.Net.Uri! uri, AndroidX.Slice.SliceViewManager.ISliceCallback! callback) -> void
override AndroidX.Slice.Widget.ActionRow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.ActionRow.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.ActionRow.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.EventInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.EventInfo.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.EventInfo.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.GridContent.CellContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.GridContent.CellContent.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.GridContent.CellContent.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.GridContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.GridContent.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.GridContent.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.GridRowView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.GridRowView.ResetView() -> void
override AndroidX.Slice.Widget.GridRowView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.GridRowView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.LargeSliceAdapter.ItemCount.get -> int
override AndroidX.Slice.Widget.LargeSliceAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.LargeSliceAdapter.OnBindViewHolder(AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder? holder, int position) -> void
override AndroidX.Slice.Widget.LargeSliceAdapter.OnCreateViewHolder(Android.Views.ViewGroup? parent, int viewType) -> AndroidX.RecyclerView.Widget.RecyclerView.ViewHolder?
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.LargeSliceAdapter.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.LargeSliceAdapter.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.LargeTemplateView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.LargeTemplateView.ResetView() -> void
override AndroidX.Slice.Widget.LargeTemplateView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.LargeTemplateView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.ListContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.ListContent.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.ListContent.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.MessageView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.MessageView.ResetView() -> void
override AndroidX.Slice.Widget.MessageView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.MessageView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.RemoteInputView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.RemoteInputView.RemoteEditText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.RemoteInputView.RemoteEditText.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.RemoteInputView.RemoteEditText.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.RemoteInputView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.RemoteInputView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.RowContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.RowContent.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.RowContent.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.RowView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.RowView.ResetView() -> void
override AndroidX.Slice.Widget.RowView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.RowView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.ShortcutContent.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.ShortcutContent.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.ShortcutContent.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.ShortcutView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.ShortcutView.ResetView() -> void
override AndroidX.Slice.Widget.ShortcutView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.ShortcutView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.SliceActionView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceActionView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.SliceActionView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.SliceChildView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceChildView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.SliceChildView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.SliceLiveData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceStyle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceStyle.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.SliceStyle.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.SliceView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceView.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.Slice.Widget.SliceView.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.SliceView.ThresholdType.get -> System.Type!
override AndroidX.Slice.Widget.SliceViewUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Slice.Widget.SliceViewUtil.ThresholdClass.get -> nint
override AndroidX.Slice.Widget.SliceViewUtil.ThresholdType.get -> System.Type!
static AndroidX.Slice.SliceMetadata.From(Android.Content.Context! context, AndroidX.Slice.Slice! slice) -> AndroidX.Slice.SliceMetadata?
static AndroidX.Slice.SliceMetadata.GetSliceActions(AndroidX.Slice.Slice! slice) -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
static AndroidX.Slice.SliceUtils.Convert(Android.Content.Context? context, AndroidX.Core.Graphics.Drawable.IconCompat? icon, AndroidX.Slice.SliceUtils.SerializeOptions? options) -> AndroidX.Core.Graphics.Drawable.IconCompat?
static AndroidX.Slice.SliceUtils.Convert(Android.Content.Context? context, AndroidX.Slice.Slice? slice, AndroidX.Slice.SliceUtils.SerializeOptions? options) -> AndroidX.Slice.Slice?
static AndroidX.Slice.SliceUtils.GetLoadingState(AndroidX.Slice.Slice! slice) -> int
static AndroidX.Slice.SliceUtils.GetSliceActions(AndroidX.Slice.Slice! slice) -> System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>?
static AndroidX.Slice.SliceUtils.GetSliceKeywords(AndroidX.Slice.Slice! slice) -> System.Collections.Generic.IList<string!>?
static AndroidX.Slice.SliceUtils.ParseSlice(Android.Content.Context! context, System.IO.Stream! input, string! encoding, AndroidX.Slice.SliceUtils.ISliceActionListener! listener) -> AndroidX.Slice.Slice!
static AndroidX.Slice.SliceUtils.SerializeSlice(AndroidX.Slice.Slice! s, Android.Content.Context! context, System.IO.Stream! output, AndroidX.Slice.SliceUtils.SerializeOptions! options) -> void
static AndroidX.Slice.SliceUtils.SerializeSlice(AndroidX.Slice.Slice! s, Android.Content.Context! context, System.IO.Stream! output, string! encoding, AndroidX.Slice.SliceUtils.SerializeOptions! options) -> void
static AndroidX.Slice.SliceUtils.StripSlice(AndroidX.Slice.Slice! s, int mode, bool isScrollable) -> AndroidX.Slice.Slice!
static AndroidX.Slice.SliceViewManager.GetInstance(Android.Content.Context! context) -> AndroidX.Slice.SliceViewManager!
static AndroidX.Slice.Widget.LargeSliceAdapter.SliceWrapper.GetFormat(AndroidX.Slice.SliceItem? item) -> int
static AndroidX.Slice.Widget.ListContent.GetRowType(Android.Content.Context? context, AndroidX.Slice.SliceItem? rowItem, bool isHeader, System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>? actions) -> int
static AndroidX.Slice.Widget.ListContent.IsValidHeader(AndroidX.Slice.SliceItem? sliceItem) -> bool
static AndroidX.Slice.Widget.RemoteInputView.Inflate(Android.Content.Context? context, Android.Views.ViewGroup? root) -> AndroidX.Slice.Widget.RemoteInputView?
static AndroidX.Slice.Widget.RemoteInputView.IsConfirmKey(int keyCode) -> bool
static AndroidX.Slice.Widget.RemoteInputView.ViewTag.get -> Java.Lang.Object?
static AndroidX.Slice.Widget.SliceLiveData.FromIntent(Android.Content.Context! context, Android.Content.Intent! intent) -> AndroidX.Lifecycle.LiveData!
static AndroidX.Slice.Widget.SliceLiveData.FromStream(Android.Content.Context! context, AndroidX.Slice.SliceViewManager? manager, System.IO.Stream! input, AndroidX.Slice.Widget.SliceLiveData.IOnErrorListener? listener) -> AndroidX.Lifecycle.LiveData!
static AndroidX.Slice.Widget.SliceLiveData.FromStream(Android.Content.Context! context, System.IO.Stream! input, AndroidX.Slice.Widget.SliceLiveData.IOnErrorListener? listener) -> AndroidX.Lifecycle.LiveData!
static AndroidX.Slice.Widget.SliceLiveData.FromUri(Android.Content.Context! context, Android.Net.Uri! uri) -> AndroidX.Lifecycle.LiveData!
static AndroidX.Slice.Widget.SliceLiveData.OldBasic.get -> AndroidX.Slice.SliceSpec?
static AndroidX.Slice.Widget.SliceLiveData.OldList.get -> AndroidX.Slice.SliceSpec?
static AndroidX.Slice.Widget.SliceLiveData.SupportedSpecs.get -> System.Collections.ICollection?
static AndroidX.Slice.Widget.SliceView.ModeToString(int mode) -> string?
static AndroidX.Slice.Widget.SliceView.SliceActionPriorityComparator.get -> Java.Util.IComparator?
static AndroidX.Slice.Widget.SliceViewUtil.ApplyAlpha(float alpha, int inputColor) -> int
static AndroidX.Slice.Widget.SliceViewUtil.ApplyAlphaAttr(Android.Content.Context! context, int attr, int inputColor) -> int
static AndroidX.Slice.Widget.SliceViewUtil.CreateCircledIcon(Android.Content.Context! context, int iconSizePx, AndroidX.Core.Graphics.Drawable.IconCompat? icon, bool isLarge, Android.Views.ViewGroup? parent) -> void
static AndroidX.Slice.Widget.SliceViewUtil.CreateIconFromDrawable(Android.Graphics.Drawables.Drawable? d) -> AndroidX.Core.Graphics.Drawable.IconCompat?
static AndroidX.Slice.Widget.SliceViewUtil.GetCircularBitmap(Android.Graphics.Bitmap? bitmap) -> Android.Graphics.Bitmap!
static AndroidX.Slice.Widget.SliceViewUtil.GetColorAccent(Android.Content.Context! context) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetColorAttr(Android.Content.Context! context, int attr) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetColorError(Android.Content.Context! context) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetDefaultColor(Android.Content.Context! context, int resId) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetDisabled(Android.Content.Context! context, int inputColor) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetDrawable(Android.Content.Context! context, int attr) -> Android.Graphics.Drawables.Drawable?
static AndroidX.Slice.Widget.SliceViewUtil.GetThemeAttr(Android.Content.Context! context, int attr) -> int
static AndroidX.Slice.Widget.SliceViewUtil.GetTimestampString(Android.Content.Context? context, long time) -> string?
static AndroidX.Slice.Widget.SliceViewUtil.GetTimestampStringFormatted(Android.Content.Context? context, long time) -> Java.Lang.ICharSequence?
static AndroidX.Slice.Widget.SliceViewUtil.ResolveLayoutDirection(int layoutDir) -> int
static AndroidX.Slice.Widget.SliceViewUtil.TintIndeterminateProgressBar(Android.Content.Context? context, Android.Widget.ProgressBar? bar) -> void
virtual AndroidX.Slice.SliceMetadata.Expiry.get -> long
virtual AndroidX.Slice.SliceMetadata.HasLargeMode.get -> bool
virtual AndroidX.Slice.SliceMetadata.HeaderType.get -> int
virtual AndroidX.Slice.SliceMetadata.InputRangeAction.get -> Android.App.PendingIntent?
virtual AndroidX.Slice.SliceMetadata.IsErrorSlice.get -> bool
virtual AndroidX.Slice.SliceMetadata.IsPermissionSlice.get -> bool
virtual AndroidX.Slice.SliceMetadata.LastUpdatedTime.get -> long
virtual AndroidX.Slice.SliceMetadata.LoadingState.get -> int
virtual AndroidX.Slice.SliceMetadata.PrimaryAction.get -> AndroidX.Slice.Core.ISliceAction?
virtual AndroidX.Slice.SliceMetadata.Range.get -> AndroidX.Core.Util.Pair?
virtual AndroidX.Slice.SliceMetadata.RangeValue.get -> int
virtual AndroidX.Slice.SliceMetadata.SendInputRangeAction(int newValue) -> bool
virtual AndroidX.Slice.SliceMetadata.SendToggleAction(AndroidX.Slice.Core.ISliceAction? toggleAction, bool toggleValue) -> bool
virtual AndroidX.Slice.SliceMetadata.SliceActions.get -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
virtual AndroidX.Slice.SliceMetadata.SliceKeywords.get -> System.Collections.Generic.IList<string!>?
virtual AndroidX.Slice.SliceMetadata.SubtitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.SliceMetadata.SummaryFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.SliceMetadata.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.SliceMetadata.Toggles.get -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.ActionMode.get -> int
virtual AndroidX.Slice.SliceUtils.SerializeOptions.CheckThrow(string? format) -> void
virtual AndroidX.Slice.SliceUtils.SerializeOptions.Format.get -> Android.Graphics.Bitmap.CompressFormat?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.ImageMode.get -> int
virtual AndroidX.Slice.SliceUtils.SerializeOptions.MaxHeight.get -> int
virtual AndroidX.Slice.SliceUtils.SerializeOptions.MaxWidth.get -> int
virtual AndroidX.Slice.SliceUtils.SerializeOptions.Quality.get -> int
virtual AndroidX.Slice.SliceUtils.SerializeOptions.SetActionMode(int mode) -> AndroidX.Slice.SliceUtils.SerializeOptions?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.SetImageConversionFormat(Android.Graphics.Bitmap.CompressFormat? format, int quality) -> AndroidX.Slice.SliceUtils.SerializeOptions?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.SetImageMode(int mode) -> AndroidX.Slice.SliceUtils.SerializeOptions?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.SetMaxImageHeight(int height) -> AndroidX.Slice.SliceUtils.SerializeOptions?
virtual AndroidX.Slice.SliceUtils.SerializeOptions.SetMaxImageWidth(int width) -> AndroidX.Slice.SliceUtils.SerializeOptions?
virtual AndroidX.Slice.Widget.ActionRow.SetActions(System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>! actions, int color) -> void
virtual AndroidX.Slice.Widget.EventInfo.SetPosition(int actionPosition, int actionIndex, int actionCount) -> void
virtual AndroidX.Slice.Widget.GridContent.ActualHeight.get -> int
virtual AndroidX.Slice.Widget.GridContent.CellContent.CellItems.get -> System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>?
virtual AndroidX.Slice.Widget.GridContent.CellContent.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.Widget.GridContent.CellContent.ContentIntent.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.CellContent.HasImage.get -> bool
virtual AndroidX.Slice.Widget.GridContent.CellContent.ImageMode.get -> int
virtual AndroidX.Slice.Widget.GridContent.CellContent.IsImageOnly.get -> bool
virtual AndroidX.Slice.Widget.GridContent.CellContent.IsValid.get -> bool
virtual AndroidX.Slice.Widget.GridContent.CellContent.Populate(AndroidX.Slice.SliceItem? cellItem) -> bool
virtual AndroidX.Slice.Widget.GridContent.CellContent.TextCount.get -> int
virtual AndroidX.Slice.Widget.GridContent.CellContent.TitleItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.ColorItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.Widget.GridContent.ContentIntent.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.GetGridContent() -> System.Collections.Generic.IList<AndroidX.Slice.Widget.GridContent.CellContent!>!
virtual AndroidX.Slice.Widget.GridContent.HasImage.get -> bool
virtual AndroidX.Slice.Widget.GridContent.IsAllImages.get -> bool
virtual AndroidX.Slice.Widget.GridContent.IsValid.get -> bool
virtual AndroidX.Slice.Widget.GridContent.LargestImageMode.get -> int
virtual AndroidX.Slice.Widget.GridContent.LayoutDirItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.MaxCellLineCount.get -> int
virtual AndroidX.Slice.Widget.GridContent.SeeMoreItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.GridContent.SmallHeight.get -> int
virtual AndroidX.Slice.Widget.GridContent.TitleFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.Widget.GridRowView.OnClick(Android.Views.View? view) -> void
virtual AndroidX.Slice.Widget.GridRowView.OnTouch(Android.Views.View? view, Android.Views.MotionEvent? e) -> bool
virtual AndroidX.Slice.Widget.LargeSliceAdapter.LoadingActions.get -> System.Collections.Generic.ICollection<AndroidX.Slice.SliceItem!>?
virtual AndroidX.Slice.Widget.LargeSliceAdapter.LoadingActions.set -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.OnSliceActionLoading(AndroidX.Slice.SliceItem? actionItem, int position) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetAllowTwoLines(bool allowTwoLines) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetInsets(int l, int t, int r, int b) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetLastUpdated(long lastUpdated) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetMaxSmallHeight(int maxSmallHeight) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetParents(AndroidX.Slice.Widget.SliceView? parent, AndroidX.Slice.Widget.LargeTemplateView? templateView) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetShowLastUpdated(bool showLastUpdated) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetSliceActions(System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>? actions) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetSliceItems(System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>? slices, int color, int mode) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetSliceObserver(AndroidX.Slice.Widget.SliceView.IOnSliceActionListener? observer) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SetStyle(AndroidX.Slice.Widget.SliceStyle? style) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.OnClick(Android.Views.View? v) -> void
virtual AndroidX.Slice.Widget.LargeSliceAdapter.SliceViewHolder.OnTouch(Android.Views.View? v, Android.Views.MotionEvent? e) -> bool
virtual AndroidX.Slice.Widget.LargeTemplateView.OnAttachedToWindow() -> void
virtual AndroidX.Slice.Widget.LargeTemplateView.OnForegroundActivated(Android.Views.MotionEvent? e) -> void
virtual AndroidX.Slice.Widget.LargeTemplateView.SetScrollable(bool scrollingEnabled) -> void
virtual AndroidX.Slice.Widget.ListContent.ColorItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ListContent.GetItemsForNonScrollingList(int height) -> System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>!
virtual AndroidX.Slice.Widget.ListContent.GetLargeHeight(int maxHeight, bool scrollable) -> int
virtual AndroidX.Slice.Widget.ListContent.GetListHeight(System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>? listItems) -> int
virtual AndroidX.Slice.Widget.ListContent.HasHeader.get -> bool
virtual AndroidX.Slice.Widget.ListContent.HeaderItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ListContent.HeaderTemplateType.get -> int
virtual AndroidX.Slice.Widget.ListContent.IsValid.get -> bool
virtual AndroidX.Slice.Widget.ListContent.LayoutDirItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ListContent.PrimaryAction.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ListContent.RowItems.get -> System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>!
virtual AndroidX.Slice.Widget.ListContent.SeeMoreItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ListContent.SetMaxSmallHeight(int maxSmallHeight) -> void
virtual AndroidX.Slice.Widget.ListContent.Slice.get -> AndroidX.Slice.Slice?
virtual AndroidX.Slice.Widget.ListContent.SliceActions.get -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
virtual AndroidX.Slice.Widget.ListContent.SmallHeight.get -> int
virtual AndroidX.Slice.Widget.RemoteInputView.AfterTextChanged(Android.Text.IEditable? s) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.BeforeTextChanged(Java.Lang.ICharSequence? s, int start, int count, int after) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.FocusAnimated() -> void
virtual AndroidX.Slice.Widget.RemoteInputView.OnClick(Android.Views.View? v) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.OnTextChanged(Java.Lang.ICharSequence? s, int start, int before, int count) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.SetAction(AndroidX.Slice.SliceItem? action) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.SetRemoteInput(Android.App.RemoteInput![]? remoteInputs, Android.App.RemoteInput? remoteInput) -> void
virtual AndroidX.Slice.Widget.RemoteInputView.SetRevealParameters(int cx, int cy, int r) -> void
virtual AndroidX.Slice.Widget.RowContent.ContentDescriptionFormatted.get -> Java.Lang.ICharSequence?
virtual AndroidX.Slice.Widget.RowContent.EndItems.get -> System.Collections.Generic.IList<AndroidX.Slice.SliceItem!>?
virtual AndroidX.Slice.Widget.RowContent.EndItemsContainAction() -> bool
virtual AndroidX.Slice.Widget.RowContent.GetActualHeight(int maxSmallHeight) -> int
virtual AndroidX.Slice.Widget.RowContent.GetSmallHeight(int maxSmallHeight) -> int
virtual AndroidX.Slice.Widget.RowContent.InputRangeThumb.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.IsDefaultSeeMore.get -> bool
virtual AndroidX.Slice.Widget.RowContent.IsValid.get -> bool
virtual AndroidX.Slice.Widget.RowContent.LayoutDirItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.LineCount.get -> int
virtual AndroidX.Slice.Widget.RowContent.PrimaryAction.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.Range.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.Slice.get -> AndroidX.Slice.SliceItem!
virtual AndroidX.Slice.Widget.RowContent.StartItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.SubtitleItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.SummaryItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.TitleItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.RowContent.ToggleItems.get -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
virtual AndroidX.Slice.Widget.RowView.OnClick(Android.Views.View? view) -> void
virtual AndroidX.Slice.Widget.RowView.SetSingleItem(bool isSingleItem) -> void
virtual AndroidX.Slice.Widget.ShortcutContent.ActionItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ShortcutContent.BuildSlice(AndroidX.Slice.Slice.Builder? s) -> AndroidX.Slice.Slice?
virtual AndroidX.Slice.Widget.ShortcutContent.ColorItem.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ShortcutContent.Icon.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.ShortcutContent.Label.get -> AndroidX.Slice.SliceItem?
virtual AndroidX.Slice.Widget.SliceActionView.Action.get -> AndroidX.Slice.Core.SliceActionImpl?
virtual AndroidX.Slice.Widget.SliceActionView.OnCheckedChanged(Android.Widget.CompoundButton? buttonView, bool isChecked) -> void
virtual AndroidX.Slice.Widget.SliceActionView.OnClick(Android.Views.View? v) -> void
virtual AndroidX.Slice.Widget.SliceActionView.SendAction() -> void
virtual AndroidX.Slice.Widget.SliceActionView.SetLoading(bool isLoading) -> void
virtual AndroidX.Slice.Widget.SliceActionView.Toggle() -> void
virtual AndroidX.Slice.Widget.SliceChildView.ActualHeight.get -> int
virtual AndroidX.Slice.Widget.SliceChildView.LoadingActions.get -> System.Collections.Generic.ICollection<AndroidX.Slice.SliceItem!>?
virtual AndroidX.Slice.Widget.SliceChildView.LoadingActions.set -> void
virtual AndroidX.Slice.Widget.SliceChildView.Mode.get -> int
virtual AndroidX.Slice.Widget.SliceChildView.Mode.set -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetActionLoading(AndroidX.Slice.SliceItem? item) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetAllowTwoLines(bool allowTwoLines) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetInsets(int l, int t, int r, int b) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetLastUpdated(long lastUpdated) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetMaxSmallHeight(int maxSmallHeight) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetShowLastUpdated(bool showLastUpdated) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetSliceActionListener(AndroidX.Slice.Widget.SliceView.IOnSliceActionListener? observer) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetSliceActions(System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>? actions) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetSliceContent(AndroidX.Slice.Widget.ListContent? content) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetSliceItem(AndroidX.Slice.SliceItem? slice, bool isHeader, int rowIndex, int rowCount, AndroidX.Slice.Widget.SliceView.IOnSliceActionListener? observer) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetStyle(AndroidX.Slice.Widget.SliceStyle? styles) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SetTint(int tintColor) -> void
virtual AndroidX.Slice.Widget.SliceChildView.SmallHeight.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.GridBottomPadding.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.GridSubtitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.GridTitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.GridTopPadding.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.HeaderSubtitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.HeaderTitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.SubtitleColor.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.SubtitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.TintColor.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.TintColor.set -> void
virtual AndroidX.Slice.Widget.SliceStyle.TitleColor.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.TitleSize.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.VerticalGridTextPadding.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.VerticalHeaderTextPadding.get -> int
virtual AndroidX.Slice.Widget.SliceStyle.VerticalTextPadding.get -> int
virtual AndroidX.Slice.Widget.SliceView.IsShowingActionRow.get -> bool
virtual AndroidX.Slice.Widget.SliceView.IsSliceViewClickable.get -> bool
virtual AndroidX.Slice.Widget.SliceView.Mode.get -> int
virtual AndroidX.Slice.Widget.SliceView.Mode.set -> void
virtual AndroidX.Slice.Widget.SliceView.OnChanged(Java.Lang.Object? slice) -> void
virtual AndroidX.Slice.Widget.SliceView.OnClick(Android.Views.View? v) -> void
virtual AndroidX.Slice.Widget.SliceView.Scrollable.get -> bool
virtual AndroidX.Slice.Widget.SliceView.Scrollable.set -> void
virtual AndroidX.Slice.Widget.SliceView.SetAccentColor(int accentColor) -> void
virtual AndroidX.Slice.Widget.SliceView.SetClickInfo(int[]? info) -> void
virtual AndroidX.Slice.Widget.SliceView.SetMode(int mode, bool animate) -> void
virtual AndroidX.Slice.Widget.SliceView.SetOnSliceActionListener(AndroidX.Slice.Widget.SliceView.IOnSliceActionListener? observer) -> void
virtual AndroidX.Slice.Widget.SliceView.SetShowActionRow(bool show) -> void
virtual AndroidX.Slice.Widget.SliceView.SetTint(int tintColor) -> void
virtual AndroidX.Slice.Widget.SliceView.Slice.get -> AndroidX.Slice.Slice?
virtual AndroidX.Slice.Widget.SliceView.Slice.set -> void
virtual AndroidX.Slice.Widget.SliceView.SliceActions.get -> System.Collections.Generic.IList<AndroidX.Slice.Core.ISliceAction!>?
virtual AndroidX.Slice.Widget.SliceView.SliceActions.set -> void
