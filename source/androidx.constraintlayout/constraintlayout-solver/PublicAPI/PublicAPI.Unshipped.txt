#nullable enable
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.ArrayLinkedVariables(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Clear() -> void
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Get(AndroidX.ConstraintLayout.Solver.SolverVariable? v) -> float
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.GetId(int index) -> int
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.GetNextIndice(int index) -> int
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.GetValue(int index) -> float
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.MCache.get -> AndroidX.ConstraintLayout.Solver.Cache?
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.MCache.set -> void
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Put(AndroidX.ConstraintLayout.Solver.SolverVariable? variable, float value) -> void
AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Remove(AndroidX.ConstraintLayout.Solver.SolverVariable? variable, bool removeFromDefinition) -> float
AndroidX.ConstraintLayout.Solver.ArrayRow
AndroidX.ConstraintLayout.Solver.ArrayRow.ArrayRow() -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.ArrayRow(AndroidX.ConstraintLayout.Solver.Cache? cache) -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.ArrayRow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Add(AndroidX.ConstraintLayout.Solver.SolverVariable? p0, float p1, bool p2) -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Clear() -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Contains(AndroidX.ConstraintLayout.Solver.SolverVariable? p0) -> bool
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.CurrentSize.get -> int
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Display() -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.DivideByAmount(float p0) -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Get(AndroidX.ConstraintLayout.Solver.SolverVariable? p0) -> float
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.GetVariable(int p0) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.GetVariableValue(int p0) -> float
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.IndexOf(AndroidX.ConstraintLayout.Solver.SolverVariable? p0) -> int
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Invert() -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Put(AndroidX.ConstraintLayout.Solver.SolverVariable? p0, float p1) -> void
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Remove(AndroidX.ConstraintLayout.Solver.SolverVariable? p0, bool p1) -> float
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.SizeInBytes() -> int
AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables.Use(AndroidX.ConstraintLayout.Solver.ArrayRow? p0, bool p1) -> float
AndroidX.ConstraintLayout.Solver.ArrayRow.Variables.get -> AndroidX.ConstraintLayout.Solver.ArrayRow.IArrayRowVariables?
AndroidX.ConstraintLayout.Solver.ArrayRow.Variables.set -> void
AndroidX.ConstraintLayout.Solver.Cache
AndroidX.ConstraintLayout.Solver.Cache.Cache() -> void
AndroidX.ConstraintLayout.Solver.Cache.Cache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.GoalRow
AndroidX.ConstraintLayout.Solver.GoalRow.GoalRow(AndroidX.ConstraintLayout.Solver.Cache? cache) -> void
AndroidX.ConstraintLayout.Solver.GoalRow.GoalRow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.LinearSystem
AndroidX.ConstraintLayout.Solver.LinearSystem.GraphOptimizer.get -> bool
AndroidX.ConstraintLayout.Solver.LinearSystem.GraphOptimizer.set -> void
AndroidX.ConstraintLayout.Solver.LinearSystem.HasSimpleDefinition.get -> bool
AndroidX.ConstraintLayout.Solver.LinearSystem.HasSimpleDefinition.set -> void
AndroidX.ConstraintLayout.Solver.LinearSystem.LinearSystem() -> void
AndroidX.ConstraintLayout.Solver.LinearSystem.LinearSystem(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.LinearSystem.NewgraphOptimizer.get -> bool
AndroidX.ConstraintLayout.Solver.LinearSystem.NewgraphOptimizer.set -> void
AndroidX.ConstraintLayout.Solver.Metrics
AndroidX.ConstraintLayout.Solver.Metrics.AdditionalMeasures.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.AdditionalMeasures.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.BarrierConnectionResolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.BarrierConnectionResolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Bfs.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Bfs.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.CenterConnectionResolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.CenterConnectionResolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.ChainConnectionResolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.ChainConnectionResolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Constraints.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Constraints.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.DetermineGroups.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.DetermineGroups.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Errors.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Errors.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Extravariables.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Extravariables.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.FullySolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.FullySolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.GraphOptimizer.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.GraphOptimizer.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.GraphSolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.GraphSolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Grouping.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Grouping.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.InfeasibleDetermineGroups.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.InfeasibleDetermineGroups.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Iterations.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Iterations.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.LastTableSize.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.LastTableSize.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Layouts.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Layouts.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.LinearSolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.LinearSolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MatchConnectionResolved.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MatchConnectionResolved.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MaxRows.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MaxRows.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MaxTableSize.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MaxTableSize.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MaxVariables.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MaxVariables.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuredMatchWidgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuredMatchWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuredWidgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuredWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Measures.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Measures.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresLayoutDuration.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresLayoutDuration.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWidgetsDuration.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWidgetsDuration.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWrap.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWrap.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWrapInfeasible.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MeasuresWrapInfeasible.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Metrics() -> void
AndroidX.ConstraintLayout.Solver.Metrics.Metrics(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Metrics.Minimize.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Minimize.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.MinimizeGoal.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.MinimizeGoal.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.NonresolvedWidgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.NonresolvedWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.OldresolvedWidgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.OldresolvedWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Optimize.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Optimize.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Pivots.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Pivots.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.ProblematicLayouts.get -> System.Collections.IList?
AndroidX.ConstraintLayout.Solver.Metrics.ProblematicLayouts.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Resolutions.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Resolutions.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.ResolvedWidgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.ResolvedWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Simpleconstraints.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Simpleconstraints.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Slackvariables.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Slackvariables.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.TableSizeIncrease.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.TableSizeIncrease.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Variables.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Variables.set -> void
AndroidX.ConstraintLayout.Solver.Metrics.Widgets.get -> long
AndroidX.ConstraintLayout.Solver.Metrics.Widgets.set -> void
AndroidX.ConstraintLayout.Solver.PriorityGoalRow
AndroidX.ConstraintLayout.Solver.PriorityGoalRow.PriorityGoalRow(AndroidX.ConstraintLayout.Solver.Cache? cache) -> void
AndroidX.ConstraintLayout.Solver.PriorityGoalRow.PriorityGoalRow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable
AndroidX.ConstraintLayout.Solver.SolverVariable.AddToRow(AndroidX.ConstraintLayout.Solver.ArrayRow? row) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.ComputedValue.get -> float
AndroidX.ConstraintLayout.Solver.SolverVariable.ComputedValue.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.Id.get -> int
AndroidX.ConstraintLayout.Solver.SolverVariable.Id.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.InGoal.get -> bool
AndroidX.ConstraintLayout.Solver.SolverVariable.InGoal.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.IsFinalValue.get -> bool
AndroidX.ConstraintLayout.Solver.SolverVariable.IsFinalValue.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.RemoveFromRow(AndroidX.ConstraintLayout.Solver.ArrayRow? row) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.SolverVariable(AndroidX.ConstraintLayout.Solver.SolverVariable.Type? type, string? prefix) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.SolverVariable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.SolverVariable(string? name, AndroidX.ConstraintLayout.Solver.SolverVariable.Type? type) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.Strength.get -> int
AndroidX.ConstraintLayout.Solver.SolverVariable.Strength.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.Type
AndroidX.ConstraintLayout.Solver.SolverVariable.UpdateReferencesWithNewDefinition(AndroidX.ConstraintLayout.Solver.LinearSystem? system, AndroidX.ConstraintLayout.Solver.ArrayRow? definition) -> void
AndroidX.ConstraintLayout.Solver.SolverVariable.UsageInRowCount.get -> int
AndroidX.ConstraintLayout.Solver.SolverVariable.UsageInRowCount.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariableValues
AndroidX.ConstraintLayout.Solver.SolverVariableValues.MCache.get -> AndroidX.ConstraintLayout.Solver.Cache?
AndroidX.ConstraintLayout.Solver.SolverVariableValues.MCache.set -> void
AndroidX.ConstraintLayout.Solver.SolverVariableValues.SolverVariableValues(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.ConstraintReference
AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ConstraintReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ConstraintReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.ConstraintReference.IConstraintReferenceFactory
AndroidX.ConstraintLayout.Solver.State.ConstraintReference.IConstraintReferenceFactory.Create(AndroidX.ConstraintLayout.Solver.State.State? p0) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
AndroidX.ConstraintLayout.Solver.State.Dimension
AndroidX.ConstraintLayout.Solver.State.Dimension.Dimension(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Dimension.Type
AndroidX.ConstraintLayout.Solver.State.HelperReference
AndroidX.ConstraintLayout.Solver.State.HelperReference.HelperReference(AndroidX.ConstraintLayout.Solver.State.State? state, AndroidX.ConstraintLayout.Solver.State.State.Helper? type) -> void
AndroidX.ConstraintLayout.Solver.State.HelperReference.HelperReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.HelperReference.MReferences.get -> System.Collections.IList?
AndroidX.ConstraintLayout.Solver.State.HelperReference.MReferences.set -> void
AndroidX.ConstraintLayout.Solver.State.HelperReference.MState.get -> AndroidX.ConstraintLayout.Solver.State.State?
AndroidX.ConstraintLayout.Solver.State.HelperReference.MState.set -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.AlignHorizontallyReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.AlignHorizontallyReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.AlignVerticallyReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.AlignVerticallyReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference
AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.BarrierReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.BarrierReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.ChainReference(AndroidX.ConstraintLayout.Solver.State.State? state, AndroidX.ConstraintLayout.Solver.State.State.Helper? type) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.ChainReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.MBias.get -> float
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.MBias.set -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.MStyle.get -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.MStyle.set -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference
AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.GuidelineReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.GuidelineReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference
AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.HorizontalChainReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.HorizontalChainReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference
AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.VerticalChainReference(AndroidX.ConstraintLayout.Solver.State.State? state) -> void
AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.VerticalChainReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.State.IReference
AndroidX.ConstraintLayout.Solver.State.IReference.Apply() -> void
AndroidX.ConstraintLayout.Solver.State.IReference.ConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.State.IReference.ConstraintWidget.set -> void
AndroidX.ConstraintLayout.Solver.State.IReference.Key.get -> Java.Lang.Object?
AndroidX.ConstraintLayout.Solver.State.IReference.Key.set -> void
AndroidX.ConstraintLayout.Solver.State.State
AndroidX.ConstraintLayout.Solver.State.State.Chain
AndroidX.ConstraintLayout.Solver.State.State.Constraint
AndroidX.ConstraintLayout.Solver.State.State.Direction
AndroidX.ConstraintLayout.Solver.State.State.Helper
AndroidX.ConstraintLayout.Solver.State.State.MHelperReferences.get -> System.Collections.IDictionary?
AndroidX.ConstraintLayout.Solver.State.State.MHelperReferences.set -> void
AndroidX.ConstraintLayout.Solver.State.State.MParent.get -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
AndroidX.ConstraintLayout.Solver.State.State.MParent.set -> void
AndroidX.ConstraintLayout.Solver.State.State.MReferences.get -> System.Collections.IDictionary?
AndroidX.ConstraintLayout.Solver.State.State.MReferences.set -> void
AndroidX.ConstraintLayout.Solver.State.State.State() -> void
AndroidX.ConstraintLayout.Solver.State.State.State(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.BasicMeasure(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? constraintWidgetContainer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.BasicMeasure(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer.DidMeasures() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer.Measure(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? p0, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure? p1) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.HorizontalBehavior.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.HorizontalBehavior.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.HorizontalDimension.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.HorizontalDimension.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.Measure() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.Measure(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasureStrategy.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasureStrategy.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredBaseline.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredBaseline.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredHasBaseline.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredHasBaseline.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredNeedsSolverPass.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredNeedsSolverPass.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.MeasuredWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.VerticalBehavior.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.VerticalBehavior.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.VerticalDimension.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.VerticalDimension.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.ChainRun(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget, int orientation) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.ChainRun(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DependencyGraph(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? container) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DependencyGraph(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.DelegateToWidgetRun.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.DelegateToWidgetRun.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.DependencyNode(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun? run) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.DependencyNode(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.ReadyToSolve.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.ReadyToSolve.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Resolved.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Resolved.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.UpdateDelegate.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.UpdateDelegate.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Value.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Value.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.Direct() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.Direct(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.Grouping() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.Grouping(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.HorizontalWidgetRun(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.HorizontalWidgetRun(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency.Update(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? p0) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.Baseline.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.Baseline.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.VerticalWidgetRun(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.VerticalWidgetRun(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.WidgetGroup(int orientation) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.WidgetGroup(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.AddTarget(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode? node, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode? target, int margin) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.DimensionBehavior.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.DimensionBehavior.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.End.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.End.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.GetLimitedDimension(int dimension, int orientation) -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.GetTarget(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor) -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.GetTarget(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor, int orientation) -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.MRunType.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.MRunType.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.MatchConstraintsType.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.MatchConstraintsType.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.Orientation.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.Orientation.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.Start.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode?
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.Start.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.WidgetRun(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.WidgetRun(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Barrier
AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Barrier() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Barrier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Barrier(string? debugName) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Chain
AndroidX.ConstraintLayout.Solver.Widgets.Chain.Chain() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Chain.Chain(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.ChainHead(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? first, int orientation, bool isRtl) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.ChainHead(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirst.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirst.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirstMatchConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirstMatchConstraintWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirstVisibleWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MFirstVisibleWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasComplexMatchWeights.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasComplexMatchWeights.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasDefinedWeights.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasDefinedWeights.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasRatio.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasRatio.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasUndefinedWeights.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHasUndefinedWeights.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHead.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MHead.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLast.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLast.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLastMatchConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLastMatchConstraintWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLastVisibleWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MLastVisibleWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MTotalWeight.get -> float
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MTotalWeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWeightedMatchConstraintsWidgets.get -> System.Collections.IList?
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWeightedMatchConstraintsWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWidgetsCount.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWidgetsCount.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWidgetsMatchCount.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.MWidgetsMatchCount.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ConstraintAnchor(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? owner, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? type) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ConstraintAnchor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MMargin.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MMargin.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MOwner.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MOwner.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MTarget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MTarget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MType.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.MType.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Opposite.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget() -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(int x, int y, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(string? debugName) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(string? debugName, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConstraintWidget(string? debugName, int x, int y, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalChainRun.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalChainRun.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalGroup.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalGroup.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalRun.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalRun.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsTerminalWidget.get -> System.Collections.Generic.IList<bool>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsTerminalWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MAnchors.get -> System.Collections.IList?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MAnchors.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MBaseline.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MBaseline.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MBottom.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MBottom.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MCenter.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MCenter.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MDimensionRatio.get -> float
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MDimensionRatio.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MDimensionRatioSide.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MDimensionRatioSide.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MHorizontalResolution.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MHorizontalResolution.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MIsHeightWrapContent.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MIsHeightWrapContent.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MIsWidthWrapContent.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MIsWidthWrapContent.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MLeft.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MLeft.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListAnchors.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor!>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListAnchors.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListDimensionBehaviors.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour!>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListDimensionBehaviors.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListNextMatchConstraintsWidget.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListNextMatchConstraintsWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListNextVisibleWidget.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>!
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MListNextVisibleWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintDefaultHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintDefaultHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintDefaultWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintDefaultWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMaxHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMaxHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMaxWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMaxWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMinHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMinHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMinWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintMinWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintPercentHeight.get -> float
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintPercentHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintPercentWidth.get -> float
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMatchConstraintPercentWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMinHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMinHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMinWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MMinWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MNextChainWidget.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MNextChainWidget.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MOffsetX.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MOffsetX.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MOffsetY.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MOffsetY.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MParent.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MParent.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MResolvedMatchConstraintDefault.get -> System.Collections.Generic.IList<int>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MResolvedMatchConstraintDefault.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MRight.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MRight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MTop.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MTop.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MVerticalResolution.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MVerticalResolution.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MWeight.get -> System.Collections.Generic.IList<float>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MWeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MX.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MX.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MY.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MY.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Measured.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Measured.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Run.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun!>?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Run.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalChainRun.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalChainRun.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalGroup.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalGroup.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalRun.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalRun.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ConstraintWidgetContainer() -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ConstraintWidgetContainer(int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ConstraintWidgetContainer(int x, int y, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ConstraintWidgetContainer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ConstraintWidgetContainer(string? debugName, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MDependencyGraph.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MDependencyGraph.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MGroupsWrapOptimized.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MGroupsWrapOptimized.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MHorizontalChainsSize.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MHorizontalChainsSize.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MHorizontalWrapOptimized.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MHorizontalWrapOptimized.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMeasure.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMeasure.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMeasurer.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMeasurer.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMetrics.get -> AndroidX.ConstraintLayout.Solver.Metrics?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MMetrics.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MSkipSolver.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MSkipSolver.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MSystem.get -> AndroidX.ConstraintLayout.Solver.LinearSystem?
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MSystem.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MVerticalChainsSize.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MVerticalChainsSize.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MVerticalWrapOptimized.get -> bool
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MVerticalWrapOptimized.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MWrapFixedHeight.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MWrapFixedHeight.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MWrapFixedWidth.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.MWrapFixedWidth.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Flow
AndroidX.ConstraintLayout.Solver.Widgets.Flow.Flow() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Flow.Flow(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Guideline
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.Guideline() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.Guideline(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativeBegin.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativeBegin.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativeEnd.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativeEnd.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativePercent.get -> float
AndroidX.ConstraintLayout.Solver.Widgets.Guideline.MRelativePercent.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.HelperWidget() -> void
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.HelperWidget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.MWidgets.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>?
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.MWidgets.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.MWidgetsCount.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.MWidgetsCount.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.IHelper
AndroidX.ConstraintLayout.Solver.Widgets.IHelper.Add(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? p0) -> void
AndroidX.ConstraintLayout.Solver.Widgets.IHelper.RemoveAllIds() -> void
AndroidX.ConstraintLayout.Solver.Widgets.IHelper.UpdateConstraints(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? p0) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Optimizer
AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.Optimizer() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.Optimizer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Height.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Height.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Rectangle() -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Rectangle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Width.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Width.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.X.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.X.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Y.get -> int
AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Y.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout
AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.MMeasure.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure?
AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.MMeasure.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.VirtualLayout() -> void
AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.VirtualLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.MChildren.get -> System.Collections.IList?
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.MChildren.set -> void
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.WidgetContainer() -> void
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.WidgetContainer(int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.WidgetContainer(int x, int y, int width, int height) -> void
AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.WidgetContainer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const AndroidX.ConstraintLayout.Solver.LinearSystem.Debug = false -> bool
const AndroidX.ConstraintLayout.Solver.LinearSystem.FullDebug = false -> bool
const AndroidX.ConstraintLayout.Solver.LinearSystem.Measure = false -> bool
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthBarrier = 6 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthCentering = 7 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthEquality = 5 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthFixed = 8 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthHigh = 3 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthHighest = 4 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthLow = 1 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthMedium = 2 -> int
const AndroidX.ConstraintLayout.Solver.SolverVariable.StrengthNone = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.AtMost = -2147483648 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Exactly = 1073741824 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Fixed = -3 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.MatchParent = -1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Unspecified = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.WrapContent = -2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Barrier.BOTTOM = 3 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Barrier.LEFT = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Barrier.RIGHT = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Barrier.TOP = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Chain.UseChainOptimization = false -> bool
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AnchorBaseline = 4 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AnchorBottom = 3 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AnchorLeft = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AnchorRight = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AnchorTop = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Both = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ChainPacked = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ChainSpread = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ChainSpreadInside = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Direct = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Gone = 8 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Horizontal = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Invisible = 4 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MatchConstraintPercent = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MatchConstraintRatio = 3 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MatchConstraintRatioResolved = 4 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MatchConstraintSpread = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MatchConstraintWrap = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Solver = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Unknown = -1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Vertical = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Visible = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.HorizontalAlignCenter = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.HorizontalAlignEnd = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.HorizontalAlignStart = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.VerticalAlignBaseline = 3 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.VerticalAlignBottom = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.VerticalAlignCenter = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.VerticalAlignTop = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.WrapAligned = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.WrapChain = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Flow.WrapNone = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.HORIZONTAL = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RELATIVE_BEGIN = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RELATIVE_END = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RELATIVE_PERCENT = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RELATIVE_UNKNOWN = -1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Guideline.VERTICAL = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationBarrier = 2 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationCacheMeasures = 256 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationChain = 4 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationDependencyOrdering = 512 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationDimensions = 8 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationDirect = 1 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationGraph = 64 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationGraphWrap = 128 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationGrouping = 1024 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationGroups = 32 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationNone = 0 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationRatio = 16 -> int
const AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.OptimizationStandard = 257 -> int
override AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.ArrayRow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.ArrayRow.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.ArrayRow.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Cache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Cache.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Cache.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.GoalRow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.GoalRow.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.GoalRow.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.LinearSystem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.LinearSystem.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.LinearSystem.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Metrics.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Metrics.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Metrics.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.PriorityGoalRow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.PriorityGoalRow.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.PriorityGoalRow.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.SolverVariable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.SolverVariable.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.SolverVariable.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.SolverVariable.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.SolverVariableValues.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.SolverVariableValues.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.SolverVariableValues.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.ConstraintReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Dimension.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Dimension.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Dimension.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Dimension.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.HelperReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.HelperReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.HelperReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.State.State.Chain.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.State.Constraint.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.State.Direction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.State.Helper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.State.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.State.State.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.State.State.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Barrier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Barrier.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Barrier.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Chain.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Chain.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Chain.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Flow.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Flow.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Flow.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Guideline.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Guideline.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Guideline.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.ThresholdType.get -> System.Type!
override AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.ThresholdClass.get -> nint
override AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.ThresholdType.get -> System.Type!
static AndroidX.ConstraintLayout.Solver.LinearSystem.ArrayRowCreation.get -> long
static AndroidX.ConstraintLayout.Solver.LinearSystem.ArrayRowCreation.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.CreateRowDimensionPercent(AndroidX.ConstraintLayout.Solver.LinearSystem? linearSystem, AndroidX.ConstraintLayout.Solver.SolverVariable? variableA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableC, float percent) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
static AndroidX.ConstraintLayout.Solver.LinearSystem.Metrics.get -> AndroidX.ConstraintLayout.Solver.Metrics?
static AndroidX.ConstraintLayout.Solver.LinearSystem.OptimizedArrayRowCreation.get -> long
static AndroidX.ConstraintLayout.Solver.LinearSystem.OptimizedArrayRowCreation.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.OptimizedEngine.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.OptimizedEngine.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.SMetrics.get -> AndroidX.ConstraintLayout.Solver.Metrics?
static AndroidX.ConstraintLayout.Solver.LinearSystem.SMetrics.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.SimplifySynonyms.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.SimplifySynonyms.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.SkipColumns.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.SkipColumns.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseBasicSynonyms.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseBasicSynonyms.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseDependencyOrdering.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseDependencyOrdering.set -> void
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseSynonyms.get -> bool
static AndroidX.ConstraintLayout.Solver.LinearSystem.UseSynonyms.set -> void
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Constant.get -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Error.get -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Slack.get -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Unknown.get -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Unrestricted.get -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type?
static AndroidX.ConstraintLayout.Solver.SolverVariable.Type.Values() -> AndroidX.ConstraintLayout.Solver.SolverVariable.Type![]?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Fixed(Java.Lang.Object? value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Fixed(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.FixedDimension.get -> Java.Lang.Object?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Parent() -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.ParentDimension.get -> Java.Lang.Object?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Percent(Java.Lang.Object? key, float value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.PercentDimension.get -> Java.Lang.Object?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Spread() -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.SpreadDimension.get -> Java.Lang.Object?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Suggested(Java.Lang.Object? startValue) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Suggested(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.Fixed.get -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.MatchConstraint.get -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.MatchParent.get -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.Values() -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type![]?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Type.Wrap.get -> AndroidX.ConstraintLayout.Solver.State.Dimension.Type?
static AndroidX.ConstraintLayout.Solver.State.Dimension.Wrap() -> AndroidX.ConstraintLayout.Solver.State.Dimension?
static AndroidX.ConstraintLayout.Solver.State.Dimension.WrapDimension.get -> Java.Lang.Object?
static AndroidX.ConstraintLayout.Solver.State.State.Chain.Packed.get -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
static AndroidX.ConstraintLayout.Solver.State.State.Chain.Spread.get -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
static AndroidX.ConstraintLayout.Solver.State.State.Chain.SpreadInside.get -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
static AndroidX.ConstraintLayout.Solver.State.State.Chain.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
static AndroidX.ConstraintLayout.Solver.State.State.Chain.Values() -> AndroidX.ConstraintLayout.Solver.State.State.Chain![]?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.BaselineToBaseline.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.BottomToBottom.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.BottomToTop.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.CenterHorizontally.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.CenterVertically.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.EndToEnd.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.EndToStart.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.LeftToLeft.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.LeftToRight.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.RightToLeft.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.RightToRight.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.StartToEnd.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.StartToStart.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.TopToBottom.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.TopToTop.get -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.State.State.Constraint?
static AndroidX.ConstraintLayout.Solver.State.State.Constraint.Values() -> AndroidX.ConstraintLayout.Solver.State.State.Constraint![]?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Bottom.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.End.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Left.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Right.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Start.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Top.get -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.State.State.Direction?
static AndroidX.ConstraintLayout.Solver.State.State.Direction.Values() -> AndroidX.ConstraintLayout.Solver.State.State.Direction![]?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.AlignHorizontally.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.AlignVertically.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.Barrier.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.Flow.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.HorizontalChain.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.Layer.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.Values() -> AndroidX.ConstraintLayout.Solver.State.State.Helper![]?
static AndroidX.ConstraintLayout.Solver.State.State.Helper.VerticalChain.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
static AndroidX.ConstraintLayout.Solver.State.State.Parent.get -> Java.Lang.Integer?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.SelfDimensions.get -> int
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.SelfDimensions.set -> void
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.TryGivenDimensions.get -> int
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.TryGivenDimensions.set -> void
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.UseGivenDimensions.get -> int
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure.UseGivenDimensions.set -> void
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.SolveChain(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? container, AndroidX.ConstraintLayout.Solver.LinearSystem? system, int orientation, int offset, AndroidX.ConstraintLayout.Solver.Widgets.ChainHead? chainHead, bool isChainSpread, bool isChainSpreadInside, bool isChainPacked) -> bool
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Direct.SolvingPass(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? layout, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer? measurer) -> void
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.FindDependents(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? constraintWidget, int orientation, System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup!>? list, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup? group) -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.SimpleSolvingPass(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? layout, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer? measurer) -> bool
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.Grouping.ValidInGroup(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? layoutHorizontal, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? layoutVertical, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? widgetHorizontal, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? widgetVertical) -> bool
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.Center.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.End.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.None.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.Start.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.ValueOf(string? name) -> Java.Lang.Enum?
static AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType.Values() -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.RunType![]?
static AndroidX.ConstraintLayout.Solver.Widgets.Chain.ApplyChainConstraints(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? constraintWidgetContainer, AndroidX.ConstraintLayout.Solver.LinearSystem? system, System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>? widgets, int orientation) -> void
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Baseline.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Bottom.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Center.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.CenterX.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.CenterY.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Left.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.None.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Right.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Top.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type.Values() -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type![]?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DefaultBias.get -> float
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DefaultBias.set -> void
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.Fixed.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.MatchConstraint.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.MatchParent.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.ValueOf(string? name) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.Values() -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour![]?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour.WrapContent.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
static AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Measure(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer? measurer, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.Measure? measure, int measureStrategy) -> bool
static AndroidX.ConstraintLayout.Solver.Widgets.Optimizer.Enabled(int optimizationLevel, int optimization) -> bool
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Add(AndroidX.ConstraintLayout.Solver.SolverVariable? variable, float value, bool removeFromDefinition) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Contains(AndroidX.ConstraintLayout.Solver.SolverVariable? variable) -> bool
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.CurrentSize.get -> int
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Display() -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.DivideByAmount(float amount) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.GetVariable(int index) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.GetVariableValue(int index) -> float
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Head.get -> int
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.IndexOf(AndroidX.ConstraintLayout.Solver.SolverVariable? variable) -> int
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Invert() -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.SizeInBytes() -> int
virtual AndroidX.ConstraintLayout.Solver.ArrayLinkedVariables.Use(AndroidX.ConstraintLayout.Solver.ArrayRow? definition, bool removeFromDefinition) -> float
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.AddError(AndroidX.ConstraintLayout.Solver.LinearSystem? system, int strength) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.AddError(AndroidX.ConstraintLayout.Solver.SolverVariable? error) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.Clear() -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowDimensionRatio(AndroidX.ConstraintLayout.Solver.SolverVariable? variableA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableB, AndroidX.ConstraintLayout.Solver.SolverVariable? variableC, AndroidX.ConstraintLayout.Solver.SolverVariable? variableD, float ratio) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowEqualDimension(float currentWeight, float totalWeights, float nextWeight, AndroidX.ConstraintLayout.Solver.SolverVariable? variableStartA, int marginStartA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableEndA, int marginEndA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableStartB, int marginStartB, AndroidX.ConstraintLayout.Solver.SolverVariable? variableEndB, int marginEndB) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowEqualMatchDimensions(float currentWeight, float totalWeights, float nextWeight, AndroidX.ConstraintLayout.Solver.SolverVariable? variableStartA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableEndA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableStartB, AndroidX.ConstraintLayout.Solver.SolverVariable? variableEndB) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowEquals(AndroidX.ConstraintLayout.Solver.SolverVariable? variable, int value) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowEquals(AndroidX.ConstraintLayout.Solver.SolverVariable? variableA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableB, int margin) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowGreaterThan(AndroidX.ConstraintLayout.Solver.SolverVariable? a, int b, AndroidX.ConstraintLayout.Solver.SolverVariable? slack) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowGreaterThan(AndroidX.ConstraintLayout.Solver.SolverVariable? variableA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableB, AndroidX.ConstraintLayout.Solver.SolverVariable? slack, int margin) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowLowerThan(AndroidX.ConstraintLayout.Solver.SolverVariable? variableA, AndroidX.ConstraintLayout.Solver.SolverVariable? variableB, AndroidX.ConstraintLayout.Solver.SolverVariable? slack, int margin) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.CreateRowWithAngle(AndroidX.ConstraintLayout.Solver.SolverVariable? at, AndroidX.ConstraintLayout.Solver.SolverVariable? ab, AndroidX.ConstraintLayout.Solver.SolverVariable? bt, AndroidX.ConstraintLayout.Solver.SolverVariable? bb, float angleComponent) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.GetPivotCandidate(AndroidX.ConstraintLayout.Solver.LinearSystem? system, bool[]? avoid) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.IsEmpty.get -> bool
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.Key.get -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.PickPivot(AndroidX.ConstraintLayout.Solver.SolverVariable? exclude) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.UpdateFromFinalVariable(AndroidX.ConstraintLayout.Solver.LinearSystem? system, AndroidX.ConstraintLayout.Solver.SolverVariable? variable, bool removeFromDefinition) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.UpdateFromRow(AndroidX.ConstraintLayout.Solver.LinearSystem? system, AndroidX.ConstraintLayout.Solver.ArrayRow? definition, bool removeFromDefinition) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.UpdateFromSynonymVariable(AndroidX.ConstraintLayout.Solver.LinearSystem? system, AndroidX.ConstraintLayout.Solver.SolverVariable? variable, bool removeFromDefinition) -> void
virtual AndroidX.ConstraintLayout.Solver.ArrayRow.UpdateFromSystem(AndroidX.ConstraintLayout.Solver.LinearSystem? system) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddCenterPoint(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, float angle, int radius) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddCentering(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int m1, float bias, AndroidX.ConstraintLayout.Solver.SolverVariable? c, AndroidX.ConstraintLayout.Solver.SolverVariable? d, int m2, int strength) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddConstraint(AndroidX.ConstraintLayout.Solver.ArrayRow? row) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddEquality(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin, int strength) -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddEquality(AndroidX.ConstraintLayout.Solver.SolverVariable? a, int value) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddGreaterBarrier(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin, bool hasMatchConstraintWidgets) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddGreaterThan(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin, int strength) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddLowerBarrier(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin, bool hasMatchConstraintWidgets) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddLowerThan(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin, int strength) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddRatio(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, AndroidX.ConstraintLayout.Solver.SolverVariable? c, AndroidX.ConstraintLayout.Solver.SolverVariable? d, float ratio, int strength) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.AddSynonym(AndroidX.ConstraintLayout.Solver.SolverVariable? a, AndroidX.ConstraintLayout.Solver.SolverVariable? b, int margin) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.Cache.get -> AndroidX.ConstraintLayout.Solver.Cache?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.CreateErrorVariable(int strength, string? prefix) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.CreateExtraVariable() -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.CreateObjectVariable(Java.Lang.Object? anchor) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.CreateRow() -> AndroidX.ConstraintLayout.Solver.ArrayRow?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.CreateSlackVariable() -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.DisplayReadableRows() -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.DisplayVariablesReadableRows() -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.FillMetrics(AndroidX.ConstraintLayout.Solver.Metrics? metrics) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.GetObjectVariableValue(Java.Lang.Object? obj) -> int
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.MemoryUsed.get -> int
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.Minimize() -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.NumEquations.get -> int
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.NumVariables.get -> int
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.RemoveRow(AndroidX.ConstraintLayout.Solver.ArrayRow? row) -> void
virtual AndroidX.ConstraintLayout.Solver.LinearSystem.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.Metrics.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.Name.get -> string?
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.Name.set -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.SetFinalValue(AndroidX.ConstraintLayout.Solver.LinearSystem? system, float value) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.SetSynonym(AndroidX.ConstraintLayout.Solver.LinearSystem? system, AndroidX.ConstraintLayout.Solver.SolverVariable? synonymVariable, float value) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariable.SetType(AndroidX.ConstraintLayout.Solver.SolverVariable.Type? type, string? prefix) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Add(AndroidX.ConstraintLayout.Solver.SolverVariable? v, float value, bool removeFromDefinition) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Clear() -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Contains(AndroidX.ConstraintLayout.Solver.SolverVariable? variable) -> bool
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.CurrentSize.get -> int
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Display() -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.DivideByAmount(float amount) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Get(AndroidX.ConstraintLayout.Solver.SolverVariable? variable) -> float
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.GetVariable(int index) -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.GetVariableValue(int index) -> float
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.IndexOf(AndroidX.ConstraintLayout.Solver.SolverVariable? variable) -> int
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Invert() -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Put(AndroidX.ConstraintLayout.Solver.SolverVariable? variable, float value) -> void
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Remove(AndroidX.ConstraintLayout.Solver.SolverVariable? v, bool removeFromDefinition) -> float
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.SizeInBytes() -> int
virtual AndroidX.ConstraintLayout.Solver.SolverVariableValues.Use(AndroidX.ConstraintLayout.Solver.ArrayRow? def, bool removeFromDefinition) -> float
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Apply() -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Baseline() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.BaselineToBaseline(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Bias(float value) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Bottom() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.BottomToBottom(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.BottomToTop(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.CenterHorizontally(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.CenterVertically(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Clear() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ClearHorizontal() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ClearVertical() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.ConstraintWidget.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.CreateConstraintWidget() -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.End() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.EndToEnd(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.EndToStart(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.GetVerticalChainStyle(int chainStyle) -> int
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Height.get -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.HorizontalBias(float value) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.HorizontalChainStyle.get -> int
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.HorizontalChainStyle.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.InvokeHeight(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.InvokeWidth(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Key.get -> Java.Lang.Object?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Key.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Left() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.LeftToLeft(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.LeftToRight(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Margin(Java.Lang.Object? marginValue) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Margin(int value) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.MarginGone(int value) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Right() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.RightToLeft(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.RightToRight(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.SetHeight(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.SetVerticalChainStyle(int chainStyle) -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.SetWidth(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Start() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.StartToEnd(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.StartToStart(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Top() -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.TopToBottom(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.TopToTop(Java.Lang.Object? reference) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Validate() -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.VerticalBias(float value) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.View.get -> Java.Lang.Object?
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.View.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.ConstraintReference.Width.get -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Apply(AndroidX.ConstraintLayout.Solver.State.State? state, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? constraintWidget, int orientation) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.FIXED(Java.Lang.Object? value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.FIXED(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Max(Java.Lang.Object? value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Max(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Min(Java.Lang.Object? value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Min(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.PERCENT(Java.Lang.Object? key, float value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.Ratio(float ratio) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.SUGGESTED(Java.Lang.Object? value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.Dimension.SUGGESTED(int value) -> AndroidX.ConstraintLayout.Solver.State.Dimension?
virtual AndroidX.ConstraintLayout.Solver.State.HelperReference.Add(params Java.Lang.Object![]? objects) -> AndroidX.ConstraintLayout.Solver.State.HelperReference?
virtual AndroidX.ConstraintLayout.Solver.State.HelperReference.Apply() -> void
virtual AndroidX.ConstraintLayout.Solver.State.HelperReference.HelperWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget?
virtual AndroidX.ConstraintLayout.Solver.State.HelperReference.HelperWidget.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.HelperReference.Type.get -> AndroidX.ConstraintLayout.Solver.State.State.Helper?
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.Bias(float bias) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.EndToEnd(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.EndToStart(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.StartToEnd(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference.StartToStart(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.Bias(float bias) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.BottomToBottom(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.BottomToTop(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.TopToBottom(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference.TopToTop(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.Margin(Java.Lang.Object? value) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.Margin(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference.SetBarrierDirection(AndroidX.ConstraintLayout.Solver.State.State.Direction? barrierDirection) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.Bias.get -> float
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.InvokeBias(float bias) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.InvokeStyle(AndroidX.ConstraintLayout.Solver.State.State.Chain? style) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.ChainReference.Style.get -> AndroidX.ConstraintLayout.Solver.State.State.Chain?
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Apply() -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.ConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.ConstraintWidget.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.End(Java.Lang.Object? margin) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Key.get -> Java.Lang.Object?
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Key.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Orientation.get -> int
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Orientation.set -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Percent(float percent) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference.Start(Java.Lang.Object? margin) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.EndToEnd(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.EndToStart(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.StartToEnd(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference.StartToStart(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.BottomToBottom(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.BottomToTop(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.TopToBottom(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference.TopToTop(Java.Lang.Object? target) -> void
virtual AndroidX.ConstraintLayout.Solver.State.State.Apply(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? container) -> void
virtual AndroidX.ConstraintLayout.Solver.State.State.Barrier(Java.Lang.Object? key, AndroidX.ConstraintLayout.Solver.State.State.Direction? direction) -> AndroidX.ConstraintLayout.Solver.State.Helpers.BarrierReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.CenterHorizontally(params Java.Lang.Object![]? references) -> AndroidX.ConstraintLayout.Solver.State.Helpers.AlignHorizontallyReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.CenterVertically(params Java.Lang.Object![]? references) -> AndroidX.ConstraintLayout.Solver.State.Helpers.AlignVerticallyReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.Constraints(Java.Lang.Object? key) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.ConvertDimension(Java.Lang.Object? value) -> int
virtual AndroidX.ConstraintLayout.Solver.State.State.CreateConstraintReference(Java.Lang.Object? key) -> AndroidX.ConstraintLayout.Solver.State.ConstraintReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.DirectMapping() -> void
virtual AndroidX.ConstraintLayout.Solver.State.State.Guideline(Java.Lang.Object? key, int orientation) -> AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.Height(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.State?
virtual AndroidX.ConstraintLayout.Solver.State.State.HorizontalChain(params Java.Lang.Object![]? references) -> AndroidX.ConstraintLayout.Solver.State.Helpers.HorizontalChainReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.HorizontalGuideline(Java.Lang.Object? key) -> AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.InvokeHelper(Java.Lang.Object? key, AndroidX.ConstraintLayout.Solver.State.State.Helper? type) -> AndroidX.ConstraintLayout.Solver.State.HelperReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.Map(Java.Lang.Object? key, Java.Lang.Object? view) -> void
virtual AndroidX.ConstraintLayout.Solver.State.State.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.State.State.SetHeight(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.State?
virtual AndroidX.ConstraintLayout.Solver.State.State.SetWidth(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.State?
virtual AndroidX.ConstraintLayout.Solver.State.State.VerticalChain(params Java.Lang.Object![]? references) -> AndroidX.ConstraintLayout.Solver.State.Helpers.VerticalChainReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.VerticalGuideline(Java.Lang.Object? key) -> AndroidX.ConstraintLayout.Solver.State.Helpers.GuidelineReference?
virtual AndroidX.ConstraintLayout.Solver.State.State.Width(AndroidX.ConstraintLayout.Solver.State.Dimension? dimension) -> AndroidX.ConstraintLayout.Solver.State.State?
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.SolverMeasure(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? layout, int optimizationLevel, int paddingX, int paddingY, int widthMode, int widthSize, int heightMode, int heightSize, int lastMeasureWidth, int lastMeasureHeight) -> long
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.UpdateHierarchy(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? layout) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.ChainRun.ApplyToWidget() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.BuildGraph() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.BuildGraph(System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun!>? runs) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DefineTerminalWidgets(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? horizontalBehavior, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? verticalBehavior) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DirectMeasure(bool optimizeWrap) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DirectMeasureSetup(bool optimizeWrap) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.DirectMeasureWithOrientation(bool optimizeWrap, int orientation) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.InvalidateGraph() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.InvalidateMeasures() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.MeasureWidgets() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyGraph.SetMeasurer(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer? measurer) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.AddDependency(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? dependency) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Clear() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Name() -> string?
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Resolve(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.DependencyNode.Update(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? node) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.HorizontalWidgetRun.ApplyToWidget() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.VerticalWidgetRun.ApplyToWidget() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Add(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Apply() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Authoritative.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Authoritative.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Cleanup(System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup!>? dependencyLists) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Clear() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Id.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.IntersectWith(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup? group) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.MeasureWrap(AndroidX.ConstraintLayout.Solver.LinearSystem? system, int orientation) -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.MoveTo(int orientation, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup? widgetGroup) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Orientation.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Orientation.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup.Size() -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.IsCenterConnection.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.IsDimensionResolved.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.IsResolved.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.Update(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? dependency) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.UpdateRunCenter(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? dependency, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? startAnchor, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? endAnchor, int orientation) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.UpdateRunEnd(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? dependency) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.UpdateRunStart(AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.IDependency? dependency) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.WrapDimension.get -> long
virtual AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun.WrapSize(int direction) -> long
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.AllSolved() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.AllowsGoneWidget() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.BarrierType.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.BarrierType.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Margin.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Margin.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.MarkWidgets() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.Orientation.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Barrier.SetAllowsGoneWidget(bool allowsGoneWidget) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.Define() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.First.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.FirstMatchConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.FirstVisibleWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.Head.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.Last.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.LastMatchConstraintWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.LastVisibleWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ChainHead.TotalWeight.get -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.AnchorType.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Connect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? toAnchor, int margin) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Connect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? toAnchor, int margin, int goneMargin, bool forceConnection) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.CopyFrom(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? source, System.Collections.Generic.IDictionary<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>? map) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Dependents.get -> Java.Util.HashSet?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.FinalValue.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.FinalValue.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.FindDependents(int orientation, System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup!>? list, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup? group) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.HasCenteredDependents.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.HasDependents.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.HasFinalValue.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsConnected.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsConnectionAllowed(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsConnectionAllowed(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsSideAnchor.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsSimilarDimensionConnection(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsValidConnection(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.IsVerticalAnchor.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Margin.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Margin.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Owner.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ResetFinalResolution() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.ResetSolverVariable(AndroidX.ConstraintLayout.Solver.Cache? cache) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.SetGoneMargin(int margin) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.SolverVariable.get -> AndroidX.ConstraintLayout.Solver.SolverVariable?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Target.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AddChildrenToSolverByDependency(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? container, AndroidX.ConstraintLayout.Solver.LinearSystem? system, Java.Util.HashSet? widgets, int orientation, bool addSelf) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AddToSolver(AndroidX.ConstraintLayout.Solver.LinearSystem? system, bool optimize) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.AllowedInBarrier() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Anchors.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor!>?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.BaselineDistance.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.BaselineDistance.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Bottom.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.CompanionWidget.get -> Java.Lang.Object?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.CompanionWidget.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Connect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? constraintFrom, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? constraintTo) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Connect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? constraintFrom, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? constraintTo, int margin) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Connect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? from, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? to, int margin) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ConnectCircularConstraint(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, float angle, int radius) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ContainerItemSkip.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ContainerItemSkip.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Copy(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? src, System.Collections.Generic.IDictionary<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>? map) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.CreateObjectVariables(AndroidX.ConstraintLayout.Solver.LinearSystem? system) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DebugName.get -> string?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DebugName.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionRatio.get -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionRatioSide.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.EnsureMeasureRequested() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.EnsureWidgetRuns() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetAnchor(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? anchorType) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetBiasPercent(int orientation) -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetDimensionBehaviour(int orientation) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetHasBaseline() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetLength(int orientation) -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetNextChainMember(int orientation) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetPreviousChainMember(int orientation) -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetRun(int orientation) -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetRun?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetX() -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.GetY() -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HasBaseline.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HasBaseline.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HasDanglingDimension(int orientation) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HasDependencies.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Height.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Height.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HeightWrapContent.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HeightWrapContent.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalBiasPercent.get -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalBiasPercent.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalChainControlWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalChainStyle.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalChainStyle.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalDimensionBehaviour.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalDimensionBehaviour.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.HorizontalMargin.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ImmediateConnect(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? startType, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? target, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? endType, int margin, int goneMargin) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.InPlaceholder.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.InPlaceholder.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.InVirtualLayout.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.InVirtualLayout.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsInHorizontalChain.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsInVerticalChain.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsResolvedHorizontally.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsResolvedVertically.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsRoot.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsSpreadHeight.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.IsSpreadWidth.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.LastHorizontalMeasureSpec.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.LastVerticalMeasureSpec.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Left.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MaxHeight.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MaxHeight.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MaxWidth.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MaxWidth.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MeasureRequested.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MeasureRequested.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MinHeight.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MinHeight.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MinWidth.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.MinWidth.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.OppositeDimensionDependsOn(int orientation) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.OppositeDimensionsTied() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.OptimizerWrapHeight.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.OptimizerWrapWidth.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Parent.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Parent.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Reset() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ResetAllConstraints() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ResetAnchor(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? anchor) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ResetAnchors() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ResetFinalResolution() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.ResetSolverVariables(AndroidX.ConstraintLayout.Solver.Cache? cache) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Right.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.RootX.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.RootY.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetDebugSolverName(AndroidX.ConstraintLayout.Solver.LinearSystem? system, string? name) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetDimension(int w, int h) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetDimensionRatio(float ratio, int dimensionRatioSide) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetDimensionRatio(string? ratio) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalBaseline(int baselineValue) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalFrame(int left, int top, int right, int bottom, int baseline, int orientation) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalHorizontal(int x1, int x2) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalLeft(int x1) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalTop(int y1) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFinalVertical(int y1, int y2) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFrame(int left, int top, int right, int bottom) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetFrame(int start, int end, int orientation) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetGoneMargin(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor.Type? type, int goneMargin) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetHorizontalDimension(int left, int right) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetHorizontalMatchStyle(int horizontalMatchStyle, int min, int max, float percent) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetHorizontalWeight(float horizontalWeight) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetInBarrier(int orientation, bool value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetLastMeasureSpec(int horizontal, int vertical) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetLength(int length, int orientation) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetOffset(int x, int y) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetOrigin(int x, int y) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetVerticalDimension(int top, int bottom) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetVerticalMatchStyle(int verticalMatchStyle, int min, int max, float percent) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetVerticalWeight(float verticalWeight) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetX(int x) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetY(int y) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.SetupDimensionRatio(bool hparentWrapContent, bool vparentWrapContent, bool horizontalDimensionFixed, bool verticalDimensionFixed) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Top.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Type.get -> string?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Type.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.UpdateFromRuns(bool updateHorizontal, bool updateVertical) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.UpdateFromSolver(AndroidX.ConstraintLayout.Solver.LinearSystem? system, bool optimize) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalBiasPercent.get -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalBiasPercent.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalChainControlWidget.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalChainStyle.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalChainStyle.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalDimensionBehaviour.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalDimensionBehaviour.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.VerticalMargin.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Visibility.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Visibility.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Width.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.Width.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.WidthWrapContent.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.WidthWrapContent.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.AddChildrenToSolver(AndroidX.ConstraintLayout.Solver.LinearSystem? system) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.AddHorizontalWrapMaxVariable(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? right) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.AddHorizontalWrapMinVariable(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor? left) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.DefineTerminalWidgets() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.DirectMeasure(bool optimizeWrap) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.DirectMeasureSetup(bool optimizeWrap) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.DirectMeasureWithOrientation(bool optimizeWrap, int orientation) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.FillMetrics(AndroidX.ConstraintLayout.Solver.Metrics? metrics) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.HandlesInternalConstraints() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.HorizontalGuidelines.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Guideline!>?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.InvalidateGraph() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.InvalidateMeasures() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.IsHeightMeasuredTooSmall.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.IsWidthMeasuredTooSmall.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Measure(int optimizationLevel, int widthMode, int widthSize, int heightMode, int heightSize, int lastMeasureWidth, int lastMeasureHeight, int paddingX, int paddingY) -> long
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Measurer.get -> AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.BasicMeasure.IMeasurer?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Measurer.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.OptimizationLevel.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.OptimizationLevel.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.OptimizeFor(int feature) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Rtl.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.Rtl.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.SetPadding(int left, int top, int right, int bottom) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.System.get -> AndroidX.ConstraintLayout.Solver.LinearSystem?
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.UpdateChildrenFromSolver(AndroidX.ConstraintLayout.Solver.LinearSystem? system, bool[]? flags) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.UpdateHierarchy() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer.VerticalGuidelines.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Guideline!>?
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetFirstHorizontalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetFirstHorizontalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetFirstVerticalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetFirstVerticalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetHorizontalAlign(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetHorizontalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetHorizontalGap(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetHorizontalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetLastHorizontalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetLastHorizontalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetLastVerticalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetLastVerticalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetMaxElementsWrap(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetOrientation(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetVerticalAlign(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetVerticalBias(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetVerticalGap(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetVerticalStyle(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Flow.SetWrapMode(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.Anchor.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintAnchor?
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.CyclePosition() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.IsPercent.get -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.Orientation.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.Orientation.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RelativeBegin.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RelativeBehaviour.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RelativeEnd.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.RelativePercent.get -> float
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetFinalValue(int position) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetGuideBegin(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetGuideEnd(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetGuidePercent(float value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetGuidePercent(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Guideline.SetMinimumPosition(int minimum) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.Add(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.AddDependents(System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup!>? dependencyLists, int orientation, AndroidX.ConstraintLayout.Solver.Widgets.Analyzer.WidgetGroup? group) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.FindGroupInDependents(int orientation) -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.RemoveAllIds() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.HelperWidget.UpdateConstraints(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer? container) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.CenterX.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.CenterY.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.Contains(int x, int y) -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.Rectangle.SetBounds(int x, int y, int width, int height) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.ApplyRtl(bool isRtl) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.CaptureWidgets() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.Measure(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? horizontalBehavior, int horizontalDimension, AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget.DimensionBehaviour? verticalBehavior, int verticalDimension) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.Measure(int widthMode, int widthSize, int heightMode, int heightSize) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.MeasureChildren() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.MeasuredHeight.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.MeasuredWidth.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.NeedSolverPass() -> bool
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.NeedsCallbackFromSolver(bool value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingBottom.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingBottom.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingLeft.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingLeft.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingRight.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingRight.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingTop.get -> int
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.PaddingTop.set -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.SetMeasure(int width, int height) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.SetPadding(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.SetPaddingEnd(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.VirtualLayout.SetPaddingStart(int value) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.Add(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.Add(params AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget![]? widgets) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.Children.get -> System.Collections.Generic.IList<AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget!>?
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.Layout() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.Remove(AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidget? widget) -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.RemoveAllChildren() -> void
virtual AndroidX.ConstraintLayout.Solver.Widgets.WidgetContainer.RootConstraintContainer.get -> AndroidX.ConstraintLayout.Solver.Widgets.ConstraintWidgetContainer?
