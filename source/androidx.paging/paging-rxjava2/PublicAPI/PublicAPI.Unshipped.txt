#nullable enable
AndroidX.Paging.RxJava2.PagingRx
AndroidX.Paging.RxJava2.RxPagingSource
AndroidX.Paging.RxJava2.RxPagingSource.RxPagingSource() -> void
AndroidX.Paging.RxJava2.RxPagingSource.RxPagingSource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Paging.RxJava2.RxRemoteMediator
AndroidX.Paging.RxJava2.RxRemoteMediator.RxRemoteMediator() -> void
AndroidX.Paging.RxJava2.RxRemoteMediator.RxRemoteMediator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Paging.RxPagedListBuilder
AndroidX.Paging.RxPagedListBuilder.BuildFlowable(ReactiveX.BackpressureStrategy! backpressureStrategy) -> ReactiveX.Flowable!
AndroidX.Paging.RxPagedListBuilder.BuildObservable() -> ReactiveX.Observable!
AndroidX.Paging.RxPagedListBuilder.RxPagedListBuilder(AndroidX.Paging.DataSource.Factory! dataSourceFactory, AndroidX.Paging.PagedList.Config! config) -> void
AndroidX.Paging.RxPagedListBuilder.RxPagedListBuilder(AndroidX.Paging.DataSource.Factory! dataSourceFactory, int pageSize) -> void
AndroidX.Paging.RxPagedListBuilder.RxPagedListBuilder(Kotlin.Jvm.Functions.IFunction0! pagingSourceFactory, AndroidX.Paging.PagedList.Config! config) -> void
AndroidX.Paging.RxPagedListBuilder.RxPagedListBuilder(Kotlin.Jvm.Functions.IFunction0! pagingSourceFactory, int pageSize) -> void
AndroidX.Paging.RxPagedListBuilder.SetBoundaryCallback(AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback) -> AndroidX.Paging.RxPagedListBuilder!
AndroidX.Paging.RxPagedListBuilder.SetFetchScheduler(ReactiveX.Scheduler! scheduler) -> AndroidX.Paging.RxPagedListBuilder!
AndroidX.Paging.RxPagedListBuilder.SetInitialLoadKey(Java.Lang.Object? key) -> AndroidX.Paging.RxPagedListBuilder!
AndroidX.Paging.RxPagedListBuilder.SetNotifyScheduler(ReactiveX.Scheduler! scheduler) -> AndroidX.Paging.RxPagedListBuilder!
AndroidX.Paging.RxPagedListKt
abstract AndroidX.Paging.RxJava2.RxPagingSource.LoadSingle(AndroidX.Paging.PagingSource.LoadParams! params) -> ReactiveX.Single!
abstract AndroidX.Paging.RxJava2.RxRemoteMediator.LoadSingle(AndroidX.Paging.LoadType! loadType, AndroidX.Paging.PagingState! state) -> ReactiveX.Single!
override AndroidX.Paging.RxJava2.PagingRx.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Paging.RxJava2.RxPagingSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Paging.RxJava2.RxPagingSource.ThresholdClass.get -> nint
override AndroidX.Paging.RxJava2.RxPagingSource.ThresholdType.get -> System.Type!
override AndroidX.Paging.RxJava2.RxRemoteMediator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Paging.RxJava2.RxRemoteMediator.ThresholdClass.get -> nint
override AndroidX.Paging.RxJava2.RxRemoteMediator.ThresholdType.get -> System.Type!
override AndroidX.Paging.RxPagedListBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Paging.RxPagedListKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed AndroidX.Paging.RxJava2.RxPagingSource.Load(AndroidX.Paging.PagingSource.LoadParams! params, Kotlin.Coroutines.IContinuation! p1) -> Java.Lang.Object?
override sealed AndroidX.Paging.RxJava2.RxRemoteMediator.Initialize(Kotlin.Coroutines.IContinuation! p0) -> Java.Lang.Object?
override sealed AndroidX.Paging.RxJava2.RxRemoteMediator.Load(AndroidX.Paging.LoadType! loadType, AndroidX.Paging.PagingState! state, Kotlin.Coroutines.IContinuation! p2) -> Java.Lang.Object?
static AndroidX.Paging.RxJava2.PagingRx.CachedIn(ReactiveX.Flowable! _this_cachedIn, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope) -> ReactiveX.Flowable!
static AndroidX.Paging.RxJava2.PagingRx.CachedIn(ReactiveX.Observable! _this_cachedIn, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope) -> ReactiveX.Observable!
static AndroidX.Paging.RxJava2.PagingRx.Filter(AndroidX.Paging.PagingData! _this_filterAsync, Kotlin.Jvm.Functions.IFunction1! predicate) -> AndroidX.Paging.PagingData!
static AndroidX.Paging.RxJava2.PagingRx.FlatMap(AndroidX.Paging.PagingData! _this_flatMapAsync, Kotlin.Jvm.Functions.IFunction1! transform) -> AndroidX.Paging.PagingData!
static AndroidX.Paging.RxJava2.PagingRx.GetFlowable(AndroidX.Paging.Pager! _this_flowable) -> ReactiveX.Flowable!
static AndroidX.Paging.RxJava2.PagingRx.GetObservable(AndroidX.Paging.Pager! _this_observable) -> ReactiveX.Observable!
static AndroidX.Paging.RxJava2.PagingRx.InsertSeparators(AndroidX.Paging.PagingData! _this_insertSeparatorsAsync, Kotlin.Jvm.Functions.IFunction2! generator) -> AndroidX.Paging.PagingData!
static AndroidX.Paging.RxJava2.PagingRx.Map(AndroidX.Paging.PagingData! _this_mapAsync, Kotlin.Jvm.Functions.IFunction1! transform) -> AndroidX.Paging.PagingData!
static AndroidX.Paging.RxPagedListKt.ToFlowable(AndroidX.Paging.DataSource.Factory! obj, AndroidX.Paging.PagedList.Config! config, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler, ReactiveX.BackpressureStrategy! backpressureStrategy) -> ReactiveX.Flowable!
static AndroidX.Paging.RxPagedListKt.ToFlowable(AndroidX.Paging.DataSource.Factory! obj, int pageSize, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler, ReactiveX.BackpressureStrategy! backpressureStrategy) -> ReactiveX.Flowable!
static AndroidX.Paging.RxPagedListKt.ToFlowable(Kotlin.Jvm.Functions.IFunction0! obj, AndroidX.Paging.PagedList.Config! config, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler, ReactiveX.BackpressureStrategy! backpressureStrategy) -> ReactiveX.Flowable!
static AndroidX.Paging.RxPagedListKt.ToFlowable(Kotlin.Jvm.Functions.IFunction0! obj, int pageSize, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler, ReactiveX.BackpressureStrategy! backpressureStrategy) -> ReactiveX.Flowable!
static AndroidX.Paging.RxPagedListKt.ToObservable(AndroidX.Paging.DataSource.Factory! obj, AndroidX.Paging.PagedList.Config! config, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler) -> ReactiveX.Observable!
static AndroidX.Paging.RxPagedListKt.ToObservable(AndroidX.Paging.DataSource.Factory! obj, int pageSize, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler) -> ReactiveX.Observable!
static AndroidX.Paging.RxPagedListKt.ToObservable(Kotlin.Jvm.Functions.IFunction0! obj, AndroidX.Paging.PagedList.Config! config, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler) -> ReactiveX.Observable!
static AndroidX.Paging.RxPagedListKt.ToObservable(Kotlin.Jvm.Functions.IFunction0! obj, int pageSize, Java.Lang.Object? initialLoadKey, AndroidX.Paging.PagedList.BoundaryCallback? boundaryCallback, ReactiveX.Scheduler? fetchScheduler, ReactiveX.Scheduler? notifyScheduler) -> ReactiveX.Observable!
virtual AndroidX.Paging.RxJava2.RxRemoteMediator.InitializeSingle() -> ReactiveX.Single!
