#nullable enable
Dagger.Assisted.AssistedAttribute
Dagger.Assisted.AssistedAttribute.AssistedAttribute() -> void
Dagger.Assisted.AssistedAttribute.Value.get -> string?
Dagger.Assisted.AssistedAttribute.Value.set -> void
Dagger.Assisted.AssistedFactoryAttribute
Dagger.Assisted.AssistedFactoryAttribute.AssistedFactoryAttribute() -> void
Dagger.Assisted.AssistedInjectAttribute
Dagger.Assisted.AssistedInjectAttribute.AssistedInjectAttribute() -> void
Dagger.Assisted.IAssisted
Dagger.Assisted.IAssisted.Value() -> string?
Dagger.Assisted.IAssistedFactory
Dagger.Assisted.IAssistedInject
Dagger.BindsAttribute
Dagger.BindsAttribute.BindsAttribute() -> void
Dagger.BindsInstanceAttribute
Dagger.BindsInstanceAttribute.BindsInstanceAttribute() -> void
Dagger.BindsOptionalOfAttribute
Dagger.BindsOptionalOfAttribute.BindsOptionalOfAttribute() -> void
Dagger.ComponentAttribute
Dagger.ComponentAttribute.ComponentAttribute() -> void
Dagger.ComponentAttribute.Dependencies.get -> Java.Lang.Class![]?
Dagger.ComponentAttribute.Dependencies.set -> void
Dagger.ComponentAttribute.Modules.get -> Java.Lang.Class![]?
Dagger.ComponentAttribute.Modules.set -> void
Dagger.IBinds
Dagger.IBindsInstance
Dagger.IBindsOptionalOf
Dagger.IComponent
Dagger.IComponent.Dependencies() -> Java.Lang.Class![]?
Dagger.IComponent.Modules() -> Java.Lang.Class![]?
Dagger.IComponentBuilder
Dagger.IComponentFactory
Dagger.ILazy
Dagger.ILazy.Get() -> Java.Lang.Object?
Dagger.IMapKey
Dagger.IMapKey.UnwrapValue() -> bool
Dagger.IMembersInjector
Dagger.IMembersInjector.InjectMembers(Java.Lang.Object? instance) -> void
Dagger.IModule
Dagger.IModule.Includes() -> Java.Lang.Class![]?
Dagger.IModule.Subcomponents() -> Java.Lang.Class![]?
Dagger.IProvides
Dagger.IReusable
Dagger.ISubcomponent
Dagger.ISubcomponent.Modules() -> Java.Lang.Class![]?
Dagger.ISubcomponentBuilder
Dagger.ISubcomponentFactory
Dagger.Internal.BetaAttribute
Dagger.Internal.BetaAttribute.BetaAttribute() -> void
Dagger.Internal.ComponentDefinitionTypeAttribute
Dagger.Internal.ComponentDefinitionTypeAttribute.ComponentDefinitionTypeAttribute() -> void
Dagger.Internal.ComponentDefinitionTypeAttribute.Value.get -> Java.Lang.Class?
Dagger.Internal.ComponentDefinitionTypeAttribute.Value.set -> void
Dagger.Internal.DaggerCollections
Dagger.Internal.DaggerGeneratedAttribute
Dagger.Internal.DaggerGeneratedAttribute.DaggerGeneratedAttribute() -> void
Dagger.Internal.DelegateFactory
Dagger.Internal.DelegateFactory.DelegateFactory() -> void
Dagger.Internal.DelegateFactory.Get() -> Java.Lang.Object?
Dagger.Internal.DelegateFactory.SetDelegatedProvider(JavaX.Inject.IProvider? delegate) -> void
Dagger.Internal.GwtIncompatibleAttribute
Dagger.Internal.GwtIncompatibleAttribute.GwtIncompatibleAttribute() -> void
Dagger.Internal.IBeta
Dagger.Internal.IComponentDefinitionType
Dagger.Internal.IComponentDefinitionType.Value() -> Java.Lang.Class?
Dagger.Internal.IDaggerGenerated
Dagger.Internal.IGwtIncompatible
Dagger.Internal.IIdentifierNameString
Dagger.Internal.IInjectedFieldSignature
Dagger.Internal.IInjectedFieldSignature.Value() -> string?
Dagger.Internal.IKeepFieldType
Dagger.Internal.IQualifierMetadata
Dagger.Internal.IQualifierMetadata.Value() -> string![]?
Dagger.Internal.IScopeMetadata
Dagger.Internal.IScopeMetadata.Value() -> string?
Dagger.Internal.IdentifierNameStringAttribute
Dagger.Internal.IdentifierNameStringAttribute.IdentifierNameStringAttribute() -> void
Dagger.Internal.InjectedFieldSignatureAttribute
Dagger.Internal.InjectedFieldSignatureAttribute.InjectedFieldSignatureAttribute() -> void
Dagger.Internal.InjectedFieldSignatureAttribute.Value.get -> string?
Dagger.Internal.InjectedFieldSignatureAttribute.Value.set -> void
Dagger.Internal.InstanceFactory
Dagger.Internal.InstanceFactory.Get() -> Java.Lang.Object?
Dagger.Internal.KeepFieldTypeAttribute
Dagger.Internal.KeepFieldTypeAttribute.KeepFieldTypeAttribute() -> void
Dagger.Internal.MapBuilder
Dagger.Internal.MapBuilder.Build() -> System.Collections.IDictionary?
Dagger.Internal.MapBuilder.Put(Java.Lang.Object? key, Java.Lang.Object? value) -> Dagger.Internal.MapBuilder?
Dagger.Internal.MapBuilder.PutAll(System.Collections.IDictionary? map) -> Dagger.Internal.MapBuilder?
Dagger.Internal.MapFactory
Dagger.Internal.MapFactory.Dictionary.get -> System.Collections.IDictionary?
Dagger.Internal.MapFactory.Get() -> Java.Lang.Object!
Dagger.Internal.MembersInjectors
Dagger.Internal.Preconditions
Dagger.Internal.ProviderOfLazy
Dagger.Internal.ProviderOfLazy.Get() -> Java.Lang.Object!
Dagger.Internal.ProviderOfLazy.Lazy.get -> Dagger.ILazy?
Dagger.Internal.Providers
Dagger.Internal.QualifierMetadataAttribute
Dagger.Internal.QualifierMetadataAttribute.QualifierMetadataAttribute() -> void
Dagger.Internal.QualifierMetadataAttribute.Value.get -> string![]?
Dagger.Internal.QualifierMetadataAttribute.Value.set -> void
Dagger.Internal.ScopeMetadataAttribute
Dagger.Internal.ScopeMetadataAttribute.ScopeMetadataAttribute() -> void
Dagger.Internal.ScopeMetadataAttribute.Value.get -> string?
Dagger.Internal.ScopeMetadataAttribute.Value.set -> void
Dagger.Internal.SetBuilder
Dagger.Internal.SetBuilder.Add(Java.Lang.Object? t) -> Dagger.Internal.SetBuilder?
Dagger.Internal.SetBuilder.AddAll(System.Collections.ICollection? collection) -> Dagger.Internal.SetBuilder?
Dagger.Internal.SetBuilder.Build() -> System.Collections.ICollection?
Dagger.Internal.SetFactory
Dagger.Internal.SetFactory.Builder
Dagger.Internal.SetFactory.Builder.AddCollectionProvider(JavaX.Inject.IProvider? collectionProvider) -> Dagger.Internal.SetFactory.Builder?
Dagger.Internal.SetFactory.Builder.AddProvider(JavaX.Inject.IProvider? individualProvider) -> Dagger.Internal.SetFactory.Builder?
Dagger.Internal.SetFactory.Builder.Build() -> Dagger.Internal.SetFactory?
Dagger.Internal.SetFactory.Collection.get -> System.Collections.ICollection?
Dagger.Internal.SetFactory.Get() -> Java.Lang.Object!
Dagger.MapKeyAttribute
Dagger.MapKeyAttribute.MapKeyAttribute() -> void
Dagger.MapKeyAttribute.UnwrapValue.get -> bool
Dagger.MapKeyAttribute.UnwrapValue.set -> void
Dagger.ModuleAttribute
Dagger.ModuleAttribute.Includes.get -> Java.Lang.Class![]?
Dagger.ModuleAttribute.Includes.set -> void
Dagger.ModuleAttribute.ModuleAttribute() -> void
Dagger.ModuleAttribute.Subcomponents.get -> Java.Lang.Class![]?
Dagger.ModuleAttribute.Subcomponents.set -> void
Dagger.Multibindings.ClassKeyAttribute
Dagger.Multibindings.ClassKeyAttribute.ClassKeyAttribute() -> void
Dagger.Multibindings.ClassKeyAttribute.Value.get -> Java.Lang.Class?
Dagger.Multibindings.ClassKeyAttribute.Value.set -> void
Dagger.Multibindings.ElementsIntoSetAttribute
Dagger.Multibindings.ElementsIntoSetAttribute.ElementsIntoSetAttribute() -> void
Dagger.Multibindings.IClassKey
Dagger.Multibindings.IClassKey.Value() -> Java.Lang.Class?
Dagger.Multibindings.IElementsIntoSet
Dagger.Multibindings.IIntKey
Dagger.Multibindings.IIntKey.Value() -> int
Dagger.Multibindings.IIntoMap
Dagger.Multibindings.IIntoSet
Dagger.Multibindings.ILazyClassKey
Dagger.Multibindings.ILazyClassKey.Value() -> Java.Lang.Class?
Dagger.Multibindings.ILongKey
Dagger.Multibindings.ILongKey.Value() -> long
Dagger.Multibindings.IMultibinds
Dagger.Multibindings.IStringKey
Dagger.Multibindings.IStringKey.Value() -> string?
Dagger.Multibindings.IntKeyAttribute
Dagger.Multibindings.IntKeyAttribute.IntKeyAttribute() -> void
Dagger.Multibindings.IntKeyAttribute.Value.get -> int
Dagger.Multibindings.IntKeyAttribute.Value.set -> void
Dagger.Multibindings.IntoMapAttribute
Dagger.Multibindings.IntoMapAttribute.IntoMapAttribute() -> void
Dagger.Multibindings.IntoSetAttribute
Dagger.Multibindings.IntoSetAttribute.IntoSetAttribute() -> void
Dagger.Multibindings.LazyClassKeyAttribute
Dagger.Multibindings.LazyClassKeyAttribute.LazyClassKeyAttribute() -> void
Dagger.Multibindings.LazyClassKeyAttribute.Value.get -> Java.Lang.Class?
Dagger.Multibindings.LazyClassKeyAttribute.Value.set -> void
Dagger.Multibindings.LongKeyAttribute
Dagger.Multibindings.LongKeyAttribute.LongKeyAttribute() -> void
Dagger.Multibindings.LongKeyAttribute.Value.get -> long
Dagger.Multibindings.LongKeyAttribute.Value.set -> void
Dagger.Multibindings.MultibindsAttribute
Dagger.Multibindings.MultibindsAttribute.MultibindsAttribute() -> void
Dagger.Multibindings.StringKeyAttribute
Dagger.Multibindings.StringKeyAttribute.StringKeyAttribute() -> void
Dagger.Multibindings.StringKeyAttribute.Value.get -> string?
Dagger.Multibindings.StringKeyAttribute.Value.set -> void
Dagger.ProvidesAttribute
Dagger.ProvidesAttribute.ProvidesAttribute() -> void
Dagger.ReusableAttribute
Dagger.ReusableAttribute.ReusableAttribute() -> void
Dagger.SubcomponentAttribute
Dagger.SubcomponentAttribute.Modules.get -> Java.Lang.Class![]?
Dagger.SubcomponentAttribute.Modules.set -> void
Dagger.SubcomponentAttribute.SubcomponentAttribute() -> void
override Dagger.Internal.DaggerCollections.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.DelegateFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.InstanceFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.MapBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.MapFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.MembersInjectors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.Preconditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.ProviderOfLazy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.Providers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.SetBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.SetFactory.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Dagger.Internal.SetFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Dagger.Internal.DaggerCollections.HasDuplicates(System.Collections.IList? list) -> bool
static Dagger.Internal.DaggerCollections.NewLinkedHashMapWithExpectedSize(int expectedSize) -> Java.Util.LinkedHashMap?
static Dagger.Internal.DaggerCollections.PresizedList(int size) -> System.Collections.IList?
static Dagger.Internal.DelegateFactory.SetDelegate(JavaX.Inject.IProvider? delegateFactory, JavaX.Inject.IProvider? delegate) -> void
static Dagger.Internal.MapBuilder.NewMapBuilder(int size) -> Dagger.Internal.MapBuilder?
static Dagger.Internal.MembersInjectors.NoOp() -> Dagger.IMembersInjector?
static Dagger.Internal.Preconditions.CheckBuilderRequirement(Java.Lang.Object? requirement, Java.Lang.Class? clazz) -> void
static Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference) -> Java.Lang.Object?
static Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessage) -> Java.Lang.Object?
static Dagger.Internal.Preconditions.CheckNotNull(Java.Lang.Object? reference, string? errorMessageTemplate, Java.Lang.Object? errorMessageArg) -> Java.Lang.Object?
static Dagger.Internal.Preconditions.CheckNotNullFromComponent(Java.Lang.Object? reference) -> Java.Lang.Object?
static Dagger.Internal.Preconditions.CheckNotNullFromProvides(Java.Lang.Object? reference) -> Java.Lang.Object?
static Dagger.Internal.SetBuilder.NewSetBuilder(int estimatedSize) -> Dagger.Internal.SetBuilder?
static Dagger.Internal.SetFactory.InvokeBuilder(int individualProviderSize, int collectionProviderSize) -> Dagger.Internal.SetFactory.Builder?
