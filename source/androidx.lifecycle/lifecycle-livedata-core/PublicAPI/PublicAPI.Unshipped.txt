#nullable enable
AndroidX.Lifecycle.IObserver
AndroidX.Lifecycle.IObserver.OnChanged(Java.Lang.Object? value) -> void
AndroidX.Lifecycle.LiveData
AndroidX.Lifecycle.LiveData.LifecycleBoundObserver
AndroidX.Lifecycle.LiveData.LifecycleBoundObserver.LifecycleBoundObserver(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Lifecycle.LiveData.LiveData() -> void
AndroidX.Lifecycle.LiveData.LiveData(Java.Lang.Object? value) -> void
AndroidX.Lifecycle.LiveData.LiveData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Lifecycle.LiveData.ObserverWrapper
AndroidX.Lifecycle.LiveData.ObserverWrapper.ObserverWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Lifecycle.LiveDataKt
AndroidX.Lifecycle.MutableLiveData
AndroidX.Lifecycle.MutableLiveData.MutableLiveData() -> void
AndroidX.Lifecycle.MutableLiveData.MutableLiveData(Java.Lang.Object? value) -> void
AndroidX.Lifecycle.MutableLiveData.MutableLiveData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
override AndroidX.Lifecycle.LiveData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Lifecycle.LiveData.LifecycleBoundObserver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Lifecycle.LiveData.LifecycleBoundObserver.ThresholdClass.get -> nint
override AndroidX.Lifecycle.LiveData.LifecycleBoundObserver.ThresholdType.get -> System.Type!
override AndroidX.Lifecycle.LiveData.ObserverWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Lifecycle.LiveData.ObserverWrapper.ThresholdClass.get -> nint
override AndroidX.Lifecycle.LiveData.ObserverWrapper.ThresholdType.get -> System.Type!
override AndroidX.Lifecycle.LiveData.ThresholdClass.get -> nint
override AndroidX.Lifecycle.LiveData.ThresholdType.get -> System.Type!
override AndroidX.Lifecycle.LiveDataKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Lifecycle.MutableLiveData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Lifecycle.MutableLiveData.ThresholdClass.get -> nint
override AndroidX.Lifecycle.MutableLiveData.ThresholdType.get -> System.Type!
static AndroidX.Lifecycle.LiveDataKt.Observe(AndroidX.Lifecycle.LiveData! obj, AndroidX.Lifecycle.ILifecycleOwner! owner, Kotlin.Jvm.Functions.IFunction1! onChanged) -> AndroidX.Lifecycle.IObserver!
virtual AndroidX.Lifecycle.LiveData.HasActiveObservers.get -> bool
virtual AndroidX.Lifecycle.LiveData.HasObservers.get -> bool
virtual AndroidX.Lifecycle.LiveData.IsInitialized.get -> bool
virtual AndroidX.Lifecycle.LiveData.LifecycleBoundObserver.OnStateChanged(AndroidX.Lifecycle.ILifecycleOwner? source, AndroidX.Lifecycle.Lifecycle.Event? e) -> void
virtual AndroidX.Lifecycle.LiveData.Observe(AndroidX.Lifecycle.ILifecycleOwner? owner, AndroidX.Lifecycle.IObserver? observer) -> void
virtual AndroidX.Lifecycle.LiveData.ObserveForever(AndroidX.Lifecycle.IObserver? observer) -> void
virtual AndroidX.Lifecycle.LiveData.OnActive() -> void
virtual AndroidX.Lifecycle.LiveData.OnInactive() -> void
virtual AndroidX.Lifecycle.LiveData.PostValue(Java.Lang.Object? value) -> void
virtual AndroidX.Lifecycle.LiveData.RemoveObserver(AndroidX.Lifecycle.IObserver? observer) -> void
virtual AndroidX.Lifecycle.LiveData.RemoveObservers(AndroidX.Lifecycle.ILifecycleOwner? owner) -> void
virtual AndroidX.Lifecycle.LiveData.SetValue(Java.Lang.Object? value) -> void
virtual AndroidX.Lifecycle.LiveData.Value.get -> Java.Lang.Object?
virtual AndroidX.Lifecycle.MutableLiveData.PostValue(Java.Lang.Object? value) -> void
virtual AndroidX.Lifecycle.MutableLiveData.SetValue(Java.Lang.Object? value) -> void
