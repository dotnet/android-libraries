#nullable enable
AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCommon
AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCommon.VectorDrawableCommon(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat
AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.VectorDrawableCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCommon.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCommon.ThresholdClass.get -> nint
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCommon.ThresholdType.get -> System.Type!
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.ApplyTheme(Android.Content.Res.Resources.Theme! t) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.ClearColorFilter() -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.Current.get -> Android.Graphics.Drawables.Drawable?
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.Draw(Android.Graphics.Canvas! canvas) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.GetPadding(Android.Graphics.Rect? padding) -> bool
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.GetState() -> int[]?
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.JumpToCurrentState() -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.MinimumHeight.get -> int
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.MinimumWidth.get -> int
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.OnBoundsChange(Android.Graphics.Rect? bounds) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.Opacity.get -> int
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetAlpha(int alpha) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetColorFilter(Android.Graphics.ColorFilter? colorFilter) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetFilterBitmap(bool filter) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetHotspot(float x, float y) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetHotspotBounds(int left, int top, int right, int bottom) -> void
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.SetState(int[]? stateSet) -> bool
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.ThresholdClass.get -> nint
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.ThresholdType.get -> System.Type!
override AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.TransparentRegion.get -> Android.Graphics.Region?
static AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.Create(Android.Content.Res.Resources! res, int resId, Android.Content.Res.Resources.Theme? theme) -> AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat?
static AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.CreateFromXmlInner(Android.Content.Res.Resources! r, System.Xml.XmlReader! parser, Android.Util.IAttributeSet! attrs, Android.Content.Res.Resources.Theme? theme) -> AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat!
virtual AndroidX.VectorDrawable.Graphics.Drawable.VectorDrawableCompat.PixelSize.get -> float
