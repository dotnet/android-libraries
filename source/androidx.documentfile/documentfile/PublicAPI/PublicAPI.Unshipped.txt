#nullable enable
AndroidX.DocumentFile.Provider.DocumentFile
AndroidX.DocumentFile.Provider.DocumentFile.DocumentFile(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.DocumentFile.Provider.DocumentFile.CanRead() -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.CanWrite() -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.CreateDirectory(string? displayName) -> AndroidX.DocumentFile.Provider.DocumentFile?
abstract AndroidX.DocumentFile.Provider.DocumentFile.CreateFile(string? mimeType, string? displayName) -> AndroidX.DocumentFile.Provider.DocumentFile?
abstract AndroidX.DocumentFile.Provider.DocumentFile.Delete() -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.Exists() -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.IsDirectory.get -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.IsFile.get -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.IsVirtual.get -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.LastModified() -> long
abstract AndroidX.DocumentFile.Provider.DocumentFile.Length() -> long
abstract AndroidX.DocumentFile.Provider.DocumentFile.ListFiles() -> AndroidX.DocumentFile.Provider.DocumentFile![]?
abstract AndroidX.DocumentFile.Provider.DocumentFile.Name.get -> string?
abstract AndroidX.DocumentFile.Provider.DocumentFile.RenameTo(string? displayName) -> bool
abstract AndroidX.DocumentFile.Provider.DocumentFile.Type.get -> string?
abstract AndroidX.DocumentFile.Provider.DocumentFile.Uri.get -> Android.Net.Uri?
override AndroidX.DocumentFile.Provider.DocumentFile.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DocumentFile.Provider.DocumentFile.ThresholdClass.get -> nint
override AndroidX.DocumentFile.Provider.DocumentFile.ThresholdType.get -> System.Type!
static AndroidX.DocumentFile.Provider.DocumentFile.FromFile(Java.IO.File? file) -> AndroidX.DocumentFile.Provider.DocumentFile?
static AndroidX.DocumentFile.Provider.DocumentFile.FromSingleUri(Android.Content.Context? context, Android.Net.Uri? singleUri) -> AndroidX.DocumentFile.Provider.DocumentFile?
static AndroidX.DocumentFile.Provider.DocumentFile.FromTreeUri(Android.Content.Context? context, Android.Net.Uri? treeUri) -> AndroidX.DocumentFile.Provider.DocumentFile?
static AndroidX.DocumentFile.Provider.DocumentFile.IsDocumentUri(Android.Content.Context? context, Android.Net.Uri? uri) -> bool
virtual AndroidX.DocumentFile.Provider.DocumentFile.FindFile(string? displayName) -> AndroidX.DocumentFile.Provider.DocumentFile?
virtual AndroidX.DocumentFile.Provider.DocumentFile.ParentFile.get -> AndroidX.DocumentFile.Provider.DocumentFile?
