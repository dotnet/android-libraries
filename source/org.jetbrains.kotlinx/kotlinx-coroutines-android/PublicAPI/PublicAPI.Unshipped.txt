#nullable enable
Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher
Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.HandlerDispatcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcherKt
abstract Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.ScheduleResumeAfterDelay(long timeMillis, Xamarin.KotlinX.Coroutines.ICancellableContinuation! continuation) -> void
override Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.ThresholdClass.get -> nint
override Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.ThresholdType.get -> System.Type!
override Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcherKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcherKt.AwaitFrame(Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
static Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcherKt.From(Android.OS.Handler! obj) -> Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher!
static Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcherKt.From(Android.OS.Handler! obj, string? name) -> Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher!
virtual Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.Delay(long time, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
virtual Xamarin.KotlinX.Coroutines.CoroutinesAndroid.HandlerDispatcher.InvokeOnTimeout(long timeMillis, Java.Lang.IRunnable! block, Kotlin.Coroutines.ICoroutineContext! context) -> Xamarin.KotlinX.Coroutines.IDisposableHandle!
