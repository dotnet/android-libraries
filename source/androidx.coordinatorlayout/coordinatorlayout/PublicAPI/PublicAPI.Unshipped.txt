#nullable enable
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.Behavior() -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.Behavior(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.Behavior(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.CoordinatorLayout(Android.Content.Context? context) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.CoordinatorLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.CoordinatorLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.CoordinatorLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IAttachedBehavior
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IAttachedBehavior.GetBehavior() -> AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior?
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IDefaultBehavior
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IDefaultBehavior.Value() -> Java.Lang.Class?
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IDispatchChangeEvent
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LastWindowInsets.get -> AndroidX.Core.View.WindowInsetsCompat?
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.AnchorGravity.get -> int
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.AnchorGravity.set -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.DodgeInsetEdges.get -> int
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.DodgeInsetEdges.set -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Gravity.get -> int
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Gravity.set -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.InsetEdge.get -> int
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.InsetEdge.set -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Keyline.get -> int
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Keyline.set -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams? p) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.MarginLayoutParams? p) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.LayoutParams(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams? p) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.SavedState(Android.OS.IParcelable? superState) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.SavedState(Android.OS.Parcel? source, Java.Lang.ClassLoader? loader) -> void
AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.SavedState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.AddEdge(Java.Lang.Object? node, Java.Lang.Object? incomingEdge) -> void
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.AddNode(Java.Lang.Object? node) -> void
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.Clear() -> void
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.Contains(Java.Lang.Object? node) -> bool
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.DirectedAcyclicGraph() -> void
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.GetIncomingEdges(Java.Lang.Object? node) -> System.Collections.IList?
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.GetOutgoingEdges(Java.Lang.Object? node) -> System.Collections.IList?
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.HasOutgoingEdges(Java.Lang.Object? node) -> bool
AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.SortedList.get -> System.Collections.IList?
AndroidX.CoordinatorLayout.Widget.ViewGroupUtils
AndroidX.CoordinatorLayout.Widget.ViewGroupUtils.ViewGroupUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.ThresholdClass.get -> nint
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.ThresholdType.get -> System.Type!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.ThresholdClass.get -> nint
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.ThresholdClass.get -> nint
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.ThresholdType.get -> System.Type!
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.ThresholdClass.get -> nint
override AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.ThresholdType.get -> System.Type!
override AndroidX.CoordinatorLayout.Widget.DirectedAcyclicGraph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.ViewGroupUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.CoordinatorLayout.Widget.ViewGroupUtils.ThresholdClass.get -> nint
override AndroidX.CoordinatorLayout.Widget.ViewGroupUtils.ThresholdType.get -> System.Type!
static AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.GetTag(Android.Views.View? child) -> Java.Lang.Object?
static AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.SetTag(Android.Views.View? child, Java.Lang.Object? tag) -> void
static AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SavedState.Creator.get -> Android.OS.IParcelableCreator?
static AndroidX.CoordinatorLayout.Widget.ViewGroupUtils.GetDescendantRect(Android.Views.ViewGroup? parent, Android.Views.View? descendant, Android.Graphics.Rect? out) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.BlocksInteractionBelow(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.GetInsetDodgeRect(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Graphics.Rect? rect) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.GetScrimColor(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child) -> int
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.GetScrimOpacity(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child) -> float
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.LayoutDependsOn(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Views.View? dependency) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnApplyWindowInsets(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, AndroidX.Core.View.WindowInsetsCompat? insets) -> AndroidX.Core.View.WindowInsetsCompat?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnAttachedToLayoutParams(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams? params) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnDependentViewChanged(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Views.View? dependency) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnDependentViewRemoved(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Views.View? dependency) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnDetachedFromLayoutParams() -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnInterceptTouchEvent(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Views.MotionEvent? ev) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnLayoutChild(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, int layoutDirection) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnMeasureChild(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedFling(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, float velocityX, float velocityY, bool consumed) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedPreFling(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, float velocityX, float velocityY) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedPreScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int dx, int dy, int[]? consumed) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedPreScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int dx, int dy, int[]? consumed, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, int[]? consumed) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedScrollAccepted(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? directTargetChild, Android.Views.View? target, int axes) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnNestedScrollAccepted(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? directTargetChild, Android.Views.View? target, int axes, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnRequestChildRectangleOnScreen(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Graphics.Rect? rectangle, bool immediate) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnRestoreInstanceState(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.OS.IParcelable? state) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnSaveInstanceState(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child) -> Android.OS.IParcelable?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnStartNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? directTargetChild, Android.Views.View? target, int axes) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnStartNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? directTargetChild, Android.Views.View? target, int axes, int type) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnStopNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnStopNestedScroll(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? coordinatorLayout, Java.Lang.Object? child, Android.Views.View? target, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior.OnTouchEvent(AndroidX.CoordinatorLayout.Widget.CoordinatorLayout? parent, Java.Lang.Object? child, Android.Views.MotionEvent? ev) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.DispatchDependentViewsChanged(Android.Views.View? view) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.DoViewsOverlap(Android.Views.View? first, Android.Views.View? second) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.GetDependencies(Android.Views.View? child) -> System.Collections.Generic.IList<Android.Views.View!>?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.GetDependents(Android.Views.View? child) -> System.Collections.Generic.IList<Android.Views.View!>?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.IsPointInChildBounds(Android.Views.View? child, int x, int y) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.AnchorId.get -> int
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.AnchorId.set -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Behavior.get -> AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.Behavior?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.LayoutParams.Behavior.set -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnAttachedToWindow() -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnDetachedFromWindow() -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnDraw(Android.Graphics.Canvas? c) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnLayoutChild(Android.Views.View? child, int layoutDirection) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnMeasureChild(Android.Views.View? child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnNestedPreScroll(Android.Views.View? target, int dx, int dy, int[]? consumed, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnNestedScroll(Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnNestedScroll(Android.Views.View? target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, int[]? consumed) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnNestedScrollAccepted(Android.Views.View! child, Android.Views.View! target, int nestedScrollAxes, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnNestedScrollAccepted(Android.Views.View? child, Android.Views.View? target, Android.Views.ScrollAxis axes, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnStartNestedScroll(Android.Views.View! child, Android.Views.View! target, int axes, int type) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnStartNestedScroll(Android.Views.View? child, Android.Views.View? target, Android.Views.ScrollAxis axes, int type) -> bool
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.OnStopNestedScroll(Android.Views.View? target, int type) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SetStatusBarBackgroundColor(int color) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.SetStatusBarBackgroundResource(int resId) -> void
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.StatusBarBackground.get -> Android.Graphics.Drawables.Drawable?
virtual AndroidX.CoordinatorLayout.Widget.CoordinatorLayout.StatusBarBackground.set -> void
