#nullable enable
AndroidX.Emoji.Text.EmojiCompat
AndroidX.Emoji.Text.EmojiCompat.Config
AndroidX.Emoji.Text.EmojiCompat.Config.Config(AndroidX.Emoji.Text.EmojiCompat.IMetadataRepoLoader! metadataLoader) -> void
AndroidX.Emoji.Text.EmojiCompat.Config.Config(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiCompat.Config.MetadataRepoLoader.get -> AndroidX.Emoji.Text.EmojiCompat.IMetadataRepoLoader?
AndroidX.Emoji.Text.EmojiCompat.EmojiCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiCompat.HasEmojiGlyph(string! sequence) -> bool
AndroidX.Emoji.Text.EmojiCompat.HasEmojiGlyph(string! sequence, int metadataVersion) -> bool
AndroidX.Emoji.Text.EmojiCompat.ILoadState
AndroidX.Emoji.Text.EmojiCompat.ILoadStrategy
AndroidX.Emoji.Text.EmojiCompat.IMetadataRepoLoader
AndroidX.Emoji.Text.EmojiCompat.IMetadataRepoLoader.Load(AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback! p0) -> void
AndroidX.Emoji.Text.EmojiCompat.IReplaceStrategy
AndroidX.Emoji.Text.EmojiCompat.InitCallback
AndroidX.Emoji.Text.EmojiCompat.InitCallback.InitCallback() -> void
AndroidX.Emoji.Text.EmojiCompat.InitCallback.InitCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback
AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.MetadataRepoLoaderCallback() -> void
AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.MetadataRepoLoaderCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiCompat.Process(string! charSequence) -> string?
AndroidX.Emoji.Text.EmojiCompat.Process(string! charSequence, int start, int end) -> string?
AndroidX.Emoji.Text.EmojiCompat.Process(string! charSequence, int start, int end, int maxEmojiCount) -> string?
AndroidX.Emoji.Text.EmojiCompat.Process(string! charSequence, int start, int end, int maxEmojiCount, int replaceStrategy) -> string?
AndroidX.Emoji.Text.EmojiMetadata
AndroidX.Emoji.Text.EmojiMetadata.EmojiMetadata(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiMetadata.IHasGlyph
AndroidX.Emoji.Text.EmojiSpan
AndroidX.Emoji.Text.EmojiSpan.EmojiSpan(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.EmojiSpan.Id.get -> int
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.ExponentialBackoffRetryPolicy(long totalMs) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.ExponentialBackoffRetryPolicy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.FontProviderHelper() -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.FontProviderHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontRequestEmojiCompatConfig(Android.Content.Context! context, AndroidX.Core.Provider.FontRequest! request) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontRequestEmojiCompatConfig(Android.Content.Context! context, AndroidX.Core.Provider.FontRequest! request, AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper! fontProviderHelper) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontRequestEmojiCompatConfig(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.RetryPolicy() -> void
AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.RetryPolicy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Text.MetadataRepo
AndroidX.Emoji.Text.MetadataRepo.GetEmojiCharArray() -> char[]?
AndroidX.Emoji.Text.MetadataRepo.MetadataList.get -> AndroidX.Text.Emoji.FlatBuffer.MetadataList?
AndroidX.Emoji.Text.TypefaceEmojiSpan
AndroidX.Emoji.Text.TypefaceEmojiSpan.TypefaceEmojiSpan(AndroidX.Emoji.Text.EmojiMetadata? metadata) -> void
AndroidX.Emoji.Widget.EditTextAttributeHelper
AndroidX.Emoji.Widget.EditTextAttributeHelper.EditTextAttributeHelper(Android.Views.View! view, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EditTextAttributeHelper.EditTextAttributeHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiButton
AndroidX.Emoji.Widget.EmojiButton.EmojiButton(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.EmojiButton.EmojiButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.EmojiButton.EmojiButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.EmojiButton.EmojiButton(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EmojiButton.EmojiButton(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiEditText
AndroidX.Emoji.Widget.EmojiEditText.EmojiEditText(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.EmojiEditText.EmojiEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.EmojiEditText.EmojiEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.EmojiEditText.EmojiEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EmojiEditText.EmojiEditText(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiEditTextHelper
AndroidX.Emoji.Widget.EmojiEditTextHelper.EmojiEditTextHelper(Android.Widget.EditText! editText) -> void
AndroidX.Emoji.Widget.EmojiEditTextHelper.GetKeyListener(Android.Text.Method.IKeyListener! keyListener) -> Android.Text.Method.IKeyListener!
AndroidX.Emoji.Widget.EmojiEditTextHelper.MaxEmojiCount.get -> int
AndroidX.Emoji.Widget.EmojiEditTextHelper.MaxEmojiCount.set -> void
AndroidX.Emoji.Widget.EmojiEditTextHelper.OnCreateInputConnection(Android.Views.InputMethods.IInputConnection? inputConnection, Android.Views.InputMethods.EditorInfo! outAttrs) -> Android.Views.InputMethods.IInputConnection?
AndroidX.Emoji.Widget.EmojiExtractEditText
AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiExtractEditText(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiExtractEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiExtractEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiExtractEditText(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiExtractEditText(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiExtractTextLayout
AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiExtractTextLayout(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiExtractTextLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiExtractTextLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiExtractTextLayout(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiExtractTextLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiTextView
AndroidX.Emoji.Widget.EmojiTextView.EmojiTextView(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.EmojiTextView.EmojiTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.EmojiTextView.EmojiTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.EmojiTextView.EmojiTextView(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.EmojiTextView.EmojiTextView(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.EmojiTextViewHelper
AndroidX.Emoji.Widget.EmojiTextViewHelper.EmojiTextViewHelper(Android.Widget.TextView! textView) -> void
AndroidX.Emoji.Widget.EmojiTextViewHelper.GetFilters(Android.Text.IInputFilter![]! filters) -> Android.Text.IInputFilter![]!
AndroidX.Emoji.Widget.EmojiTextViewHelper.SetAllCaps(bool allCaps) -> void
AndroidX.Emoji.Widget.EmojiTextViewHelper.UpdateTransformationMethod() -> void
AndroidX.Emoji.Widget.EmojiTextViewHelper.WrapTransformationMethod(Android.Text.Method.ITransformationMethod? transformationMethod) -> Android.Text.Method.ITransformationMethod?
AndroidX.Emoji.Widget.ExtractButtonCompat
AndroidX.Emoji.Widget.ExtractButtonCompat.ExtractButtonCompat(Android.Content.Context? context) -> void
AndroidX.Emoji.Widget.ExtractButtonCompat.ExtractButtonCompat(Android.Content.Context? context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.Emoji.Widget.ExtractButtonCompat.ExtractButtonCompat(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.Emoji.Widget.ExtractButtonCompat.ExtractButtonCompat(Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes) -> void
AndroidX.Emoji.Widget.ExtractButtonCompat.ExtractButtonCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Emoji.Widget.SpannableBuilder
AndroidX.Emoji.Widget.SpannableBuilder.BeginBatchEdit() -> void
AndroidX.Emoji.Widget.SpannableBuilder.EndBatchEdit() -> void
AndroidX.Text.Emoji.FlatBuffer.Constants
AndroidX.Text.Emoji.FlatBuffer.Constants.Constants() -> void
AndroidX.Text.Emoji.FlatBuffer.Constants.Constants(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateString(string? s) -> int
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder() -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder(Java.Nio.ByteBuffer? existing_bb) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder(Java.Nio.ByteBuffer? existing_bb, AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.IByteBufferFactory? bb_factory) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder(int initial_size) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder(int initial_size, AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.IByteBufferFactory? bb_factory) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.FlatBufferBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.HeapByteBufferFactory
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.HeapByteBufferFactory.HeapByteBufferFactory() -> void
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.HeapByteBufferFactory.NewByteBuffer(int capacity) -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.IByteBufferFactory
AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.IByteBufferFactory.NewByteBuffer(int p0) -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.MetadataItem
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.Codepoints(int j) -> int
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.CodepointsAsByteBuffer() -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.CodepointsLength() -> int
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.CompatAdded() -> short
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.EmojiStyle() -> bool
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.Height() -> short
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.Id() -> int
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.MetadataItem() -> void
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.SdkAdded() -> short
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.Width() -> short
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.__assign(int _i, Java.Nio.ByteBuffer? _bb) -> AndroidX.Text.Emoji.FlatBuffer.MetadataItem?
AndroidX.Text.Emoji.FlatBuffer.MetadataItem.__init(int _i, Java.Nio.ByteBuffer? _bb) -> void
AndroidX.Text.Emoji.FlatBuffer.MetadataList
AndroidX.Text.Emoji.FlatBuffer.MetadataList.List(AndroidX.Text.Emoji.FlatBuffer.MetadataItem? obj, int j) -> AndroidX.Text.Emoji.FlatBuffer.MetadataItem?
AndroidX.Text.Emoji.FlatBuffer.MetadataList.List(int j) -> AndroidX.Text.Emoji.FlatBuffer.MetadataItem?
AndroidX.Text.Emoji.FlatBuffer.MetadataList.ListLength() -> int
AndroidX.Text.Emoji.FlatBuffer.MetadataList.MetadataList() -> void
AndroidX.Text.Emoji.FlatBuffer.MetadataList.SourceSha() -> string?
AndroidX.Text.Emoji.FlatBuffer.MetadataList.SourceShaAsByteBuffer() -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.MetadataList.Version() -> int
AndroidX.Text.Emoji.FlatBuffer.MetadataList.__assign(int _i, Java.Nio.ByteBuffer? _bb) -> AndroidX.Text.Emoji.FlatBuffer.MetadataList?
AndroidX.Text.Emoji.FlatBuffer.MetadataList.__init(int _i, Java.Nio.ByteBuffer? _bb) -> void
AndroidX.Text.Emoji.FlatBuffer.Struct
AndroidX.Text.Emoji.FlatBuffer.Struct.Bb.get -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.Struct.Bb.set -> void
AndroidX.Text.Emoji.FlatBuffer.Struct.BbPos.get -> int
AndroidX.Text.Emoji.FlatBuffer.Struct.BbPos.set -> void
AndroidX.Text.Emoji.FlatBuffer.Struct.Struct() -> void
AndroidX.Text.Emoji.FlatBuffer.Struct.Struct(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Text.Emoji.FlatBuffer.Table
AndroidX.Text.Emoji.FlatBuffer.Table.Bb.get -> Java.Nio.ByteBuffer?
AndroidX.Text.Emoji.FlatBuffer.Table.Bb.set -> void
AndroidX.Text.Emoji.FlatBuffer.Table.BbPos.get -> int
AndroidX.Text.Emoji.FlatBuffer.Table.BbPos.set -> void
AndroidX.Text.Emoji.FlatBuffer.Table.Table() -> void
AndroidX.Text.Emoji.FlatBuffer.Table.Table(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.OnFailed(Java.Lang.Throwable? p0) -> void
abstract AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.OnLoaded(AndroidX.Emoji.Text.MetadataRepo! p0) -> void
abstract AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.RetryDelay.get -> long
const AndroidX.Emoji.Text.EmojiCompat.EditorInfoMetaversionKey = "android.support.text.emoji.emojiCompat_metadataVersion" -> string!
const AndroidX.Emoji.Text.EmojiCompat.EditorInfoReplaceAllKey = "android.support.text.emoji.emojiCompat_replaceAll" -> string!
const AndroidX.Emoji.Text.EmojiCompat.LoadStateDefault = 3 -> int
const AndroidX.Emoji.Text.EmojiCompat.LoadStateFailed = 2 -> int
const AndroidX.Emoji.Text.EmojiCompat.LoadStateLoading = 0 -> int
const AndroidX.Emoji.Text.EmojiCompat.LoadStateSucceeded = 1 -> int
const AndroidX.Emoji.Text.EmojiCompat.LoadStrategyDefault = 0 -> int
const AndroidX.Emoji.Text.EmojiCompat.LoadStrategyManual = 1 -> int
const AndroidX.Emoji.Text.EmojiCompat.ReplaceStrategyAll = 1 -> int
const AndroidX.Emoji.Text.EmojiCompat.ReplaceStrategyDefault = 0 -> int
const AndroidX.Emoji.Text.EmojiCompat.ReplaceStrategyNonExistent = 2 -> int
const AndroidX.Emoji.Text.EmojiMetadata.HasGlyphAbsent = 1 -> int
const AndroidX.Emoji.Text.EmojiMetadata.HasGlyphExists = 2 -> int
const AndroidX.Emoji.Text.EmojiMetadata.HasGlyphUnknown = 0 -> int
override AndroidX.Emoji.Text.EmojiCompat.Config.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiCompat.Config.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiCompat.Config.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.EmojiCompat.InitCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiCompat.InitCallback.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiCompat.InitCallback.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.EmojiCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiCompat.MetadataRepoLoaderCallback.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.EmojiCompat.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiCompat.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.EmojiMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiMetadata.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiMetadata.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.EmojiSpan.GetSize(Android.Graphics.Paint! paint, Java.Lang.ICharSequence? text, int start, int end, Android.Graphics.Paint.FontMetricsInt? fm) -> int
override AndroidX.Emoji.Text.EmojiSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.EmojiSpan.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.EmojiSpan.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.RetryDelay.get -> long
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ThresholdClass.get -> nint
override AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Text.MetadataRepo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Text.TypefaceEmojiSpan.Draw(Android.Graphics.Canvas! canvas, Java.Lang.ICharSequence? text, int start, int end, float x, int top, int y, int bottom, Android.Graphics.Paint! paint) -> void
override AndroidX.Emoji.Text.TypefaceEmojiSpan.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EditTextAttributeHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EditTextAttributeHelper.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EditTextAttributeHelper.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiButton.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EmojiButton.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiEditText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiEditText.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EmojiEditText.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiEditTextHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiExtractEditText.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiExtractEditText.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EmojiExtractEditText.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiExtractTextLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiExtractTextLayout.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EmojiExtractTextLayout.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiTextView.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.EmojiTextView.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.EmojiTextView.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.EmojiTextViewHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.ExtractButtonCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Emoji.Widget.ExtractButtonCompat.ThresholdClass.get -> nint
override AndroidX.Emoji.Widget.ExtractButtonCompat.ThresholdType.get -> System.Type!
override AndroidX.Emoji.Widget.SpannableBuilder.GetSpans(int queryStart, int queryEnd, Java.Lang.Class? kind) -> Java.Lang.Object![]?
override AndroidX.Emoji.Widget.SpannableBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.Constants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.Constants.ThresholdClass.get -> nint
override AndroidX.Text.Emoji.FlatBuffer.Constants.ThresholdType.get -> System.Type!
override AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.HeapByteBufferFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.ThresholdClass.get -> nint
override AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.ThresholdType.get -> System.Type!
override AndroidX.Text.Emoji.FlatBuffer.MetadataItem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.MetadataList.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.Struct.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.Struct.ThresholdClass.get -> nint
override AndroidX.Text.Emoji.FlatBuffer.Struct.ThresholdType.get -> System.Type!
override AndroidX.Text.Emoji.FlatBuffer.Table.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Text.Emoji.FlatBuffer.Table.ThresholdClass.get -> nint
override AndroidX.Text.Emoji.FlatBuffer.Table.ThresholdType.get -> System.Type!
static AndroidX.Emoji.Text.EmojiCompat.Get() -> AndroidX.Emoji.Text.EmojiCompat?
static AndroidX.Emoji.Text.EmojiCompat.HandleDeleteSurroundingText(Android.Views.InputMethods.IInputConnection! inputConnection, Android.Text.IEditable! editable, int beforeLength, int afterLength, bool inCodePoints) -> bool
static AndroidX.Emoji.Text.EmojiCompat.HandleOnKeyDown(Android.Text.IEditable! editable, int keyCode, Android.Views.KeyEvent? e) -> bool
static AndroidX.Emoji.Text.EmojiCompat.Init(AndroidX.Emoji.Text.EmojiCompat.Config! config) -> AndroidX.Emoji.Text.EmojiCompat?
static AndroidX.Emoji.Text.EmojiCompat.Reset(AndroidX.Emoji.Text.EmojiCompat.Config! config) -> AndroidX.Emoji.Text.EmojiCompat?
static AndroidX.Emoji.Text.EmojiCompat.Reset(AndroidX.Emoji.Text.EmojiCompat? emojiCompat) -> AndroidX.Emoji.Text.EmojiCompat?
static AndroidX.Emoji.Text.MetadataRepo.Create(Android.Content.Res.AssetManager! assetManager, string? assetPath) -> AndroidX.Emoji.Text.MetadataRepo?
static AndroidX.Emoji.Text.MetadataRepo.Create(Android.Graphics.Typeface! typeface, Java.Nio.ByteBuffer! byteBuffer) -> AndroidX.Emoji.Text.MetadataRepo?
static AndroidX.Emoji.Text.MetadataRepo.Create(Android.Graphics.Typeface! typeface, System.IO.Stream! inputStream) -> AndroidX.Emoji.Text.MetadataRepo?
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddCodepoints(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int codepointsOffset) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddCompatAdded(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, short compatAdded) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddEmojiStyle(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, bool emojiStyle) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddHeight(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, short height) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddId(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int id) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddSdkAdded(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, short sdkAdded) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.AddWidth(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, short width) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.CreateCodepointsVector(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int[]? data) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.CreateMetadataItem(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int id, bool emojiStyle, short sdkAdded, short compatAdded, short width, short height, int codepointsOffset) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.EndMetadataItem(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.GetRootAsMetadataItem(Java.Nio.ByteBuffer? _bb) -> AndroidX.Text.Emoji.FlatBuffer.MetadataItem?
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.GetRootAsMetadataItem(Java.Nio.ByteBuffer? _bb, AndroidX.Text.Emoji.FlatBuffer.MetadataItem? obj) -> AndroidX.Text.Emoji.FlatBuffer.MetadataItem?
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.StartCodepointsVector(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int numElems) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataItem.StartMetadataItem(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.AddList(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int listOffset) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.AddSourceSha(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int sourceShaOffset) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.AddVersion(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int version) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.CreateListVector(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int[]? data) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.CreateMetadataList(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int version, int listOffset, int sourceShaOffset) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.EndMetadataList(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder) -> int
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.FinishMetadataListBuffer(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int offset) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.GetRootAsMetadataList(Java.Nio.ByteBuffer? _bb) -> AndroidX.Text.Emoji.FlatBuffer.MetadataList?
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.GetRootAsMetadataList(Java.Nio.ByteBuffer? _bb, AndroidX.Text.Emoji.FlatBuffer.MetadataList? obj) -> AndroidX.Text.Emoji.FlatBuffer.MetadataList?
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.StartListVector(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder, int numElems) -> void
static AndroidX.Text.Emoji.FlatBuffer.MetadataList.StartMetadataList(AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder? builder) -> void
static AndroidX.Text.Emoji.FlatBuffer.Table.CompareStrings(int offset_1, byte[]? key, Java.Nio.ByteBuffer? bb) -> int
static AndroidX.Text.Emoji.FlatBuffer.Table.CompareStrings(int offset_1, int offset_2, Java.Nio.ByteBuffer? bb) -> int
static AndroidX.Text.Emoji.FlatBuffer.Table.Utf8Charset.get -> Java.Lang.ThreadLocal?
static AndroidX.Text.Emoji.FlatBuffer.Table.__has_identifier(Java.Nio.ByteBuffer? bb, string? ident) -> bool
static AndroidX.Text.Emoji.FlatBuffer.Table.__indirect(int offset, Java.Nio.ByteBuffer? bb) -> int
static AndroidX.Text.Emoji.FlatBuffer.Table.__offset(int vtable_offset, int offset, Java.Nio.ByteBuffer? bb) -> int
virtual AndroidX.Emoji.Text.EmojiCompat.AssetSignature.get -> string!
virtual AndroidX.Emoji.Text.EmojiCompat.Config.RegisterInitCallback(AndroidX.Emoji.Text.EmojiCompat.InitCallback! initCallback) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetEmojiSpanIndicatorColor(int color) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetEmojiSpanIndicatorEnabled(bool emojiSpanIndicatorEnabled) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetMetadataLoadStrategy(int strategy) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetReplaceAll(bool replaceAll) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetUseEmojiAsDefaultStyle(bool useEmojiAsDefaultStyle) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.SetUseEmojiAsDefaultStyle(bool useEmojiAsDefaultStyle, System.Collections.Generic.IList<Java.Lang.Integer!>? emojiAsDefaultStyleExceptions) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.Config.UnregisterInitCallback(AndroidX.Emoji.Text.EmojiCompat.InitCallback! initCallback) -> AndroidX.Emoji.Text.EmojiCompat.Config?
virtual AndroidX.Emoji.Text.EmojiCompat.HasEmojiGlyph(Java.Lang.ICharSequence! sequence) -> bool
virtual AndroidX.Emoji.Text.EmojiCompat.HasEmojiGlyph(Java.Lang.ICharSequence! sequence, int metadataVersion) -> bool
virtual AndroidX.Emoji.Text.EmojiCompat.InitCallback.OnFailed(Java.Lang.Throwable? throwable) -> void
virtual AndroidX.Emoji.Text.EmojiCompat.InitCallback.OnInitialized() -> void
virtual AndroidX.Emoji.Text.EmojiCompat.Load() -> void
virtual AndroidX.Emoji.Text.EmojiCompat.LoadState.get -> int
virtual AndroidX.Emoji.Text.EmojiCompat.ProcessFormatted(Java.Lang.ICharSequence! charSequence) -> Java.Lang.ICharSequence?
virtual AndroidX.Emoji.Text.EmojiCompat.ProcessFormatted(Java.Lang.ICharSequence! charSequence, int start, int end) -> Java.Lang.ICharSequence?
virtual AndroidX.Emoji.Text.EmojiCompat.ProcessFormatted(Java.Lang.ICharSequence! charSequence, int start, int end, int maxEmojiCount) -> Java.Lang.ICharSequence?
virtual AndroidX.Emoji.Text.EmojiCompat.ProcessFormatted(Java.Lang.ICharSequence! charSequence, int start, int end, int maxEmojiCount, int replaceStrategy) -> Java.Lang.ICharSequence?
virtual AndroidX.Emoji.Text.EmojiCompat.RegisterInitCallback(AndroidX.Emoji.Text.EmojiCompat.InitCallback! initCallback) -> void
virtual AndroidX.Emoji.Text.EmojiCompat.UnregisterInitCallback(AndroidX.Emoji.Text.EmojiCompat.InitCallback! initCallback) -> void
virtual AndroidX.Emoji.Text.EmojiCompat.UpdateEditorInfoAttrs(Android.Views.InputMethods.EditorInfo! outAttrs) -> void
virtual AndroidX.Emoji.Text.EmojiMetadata.CodepointsLength.get -> int
virtual AndroidX.Emoji.Text.EmojiMetadata.CompatAdded.get -> short
virtual AndroidX.Emoji.Text.EmojiMetadata.Draw(Android.Graphics.Canvas! canvas, float x, float y, Android.Graphics.Paint! paint) -> void
virtual AndroidX.Emoji.Text.EmojiMetadata.GetCodepointAt(int index) -> int
virtual AndroidX.Emoji.Text.EmojiMetadata.HasGlyph.get -> int
virtual AndroidX.Emoji.Text.EmojiMetadata.Height.get -> short
virtual AndroidX.Emoji.Text.EmojiMetadata.Id.get -> int
virtual AndroidX.Emoji.Text.EmojiMetadata.IsDefaultEmoji.get -> bool
virtual AndroidX.Emoji.Text.EmojiMetadata.SdkAdded.get -> short
virtual AndroidX.Emoji.Text.EmojiMetadata.SetHasGlyph(bool hasGlyph) -> void
virtual AndroidX.Emoji.Text.EmojiMetadata.Typeface.get -> Android.Graphics.Typeface?
virtual AndroidX.Emoji.Text.EmojiMetadata.Width.get -> short
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.BuildTypeface(Android.Content.Context! context, AndroidX.Core.Provider.FontsContractCompat.FontInfo! font) -> Android.Graphics.Typeface?
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.FetchFonts(Android.Content.Context! context, AndroidX.Core.Provider.FontRequest! request) -> AndroidX.Core.Provider.FontsContractCompat.FontFamilyResult?
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.RegisterObserver(Android.Content.Context! context, Android.Net.Uri! uri, Android.Database.ContentObserver! observer) -> void
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.FontProviderHelper.UnregisterObserver(Android.Content.Context! context, Android.Database.ContentObserver! observer) -> void
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.SetHandler(Android.OS.Handler? handler) -> AndroidX.Emoji.Text.FontRequestEmojiCompatConfig?
virtual AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.SetRetryPolicy(AndroidX.Emoji.Text.FontRequestEmojiCompatConfig.RetryPolicy? policy) -> AndroidX.Emoji.Text.FontRequestEmojiCompatConfig?
virtual AndroidX.Emoji.Widget.EditTextAttributeHelper.MaxEmojiCount.get -> int
virtual AndroidX.Emoji.Widget.EmojiEditText.MaxEmojiCount.get -> int
virtual AndroidX.Emoji.Widget.EmojiEditText.MaxEmojiCount.set -> void
virtual AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiReplaceStrategy.get -> int
virtual AndroidX.Emoji.Widget.EmojiExtractEditText.EmojiReplaceStrategy.set -> void
virtual AndroidX.Emoji.Widget.EmojiExtractEditText.MaxEmojiCount.get -> int
virtual AndroidX.Emoji.Widget.EmojiExtractEditText.MaxEmojiCount.set -> void
virtual AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiReplaceStrategy.get -> int
virtual AndroidX.Emoji.Widget.EmojiExtractTextLayout.EmojiReplaceStrategy.set -> void
virtual AndroidX.Emoji.Widget.EmojiExtractTextLayout.OnUpdateExtractingViews(Android.InputMethodServices.InputMethodService? inputMethodService, Android.Views.InputMethods.EditorInfo? ei) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddBoolean(bool x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddBoolean(int o, bool x, bool d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddByte(int o, sbyte x, int d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddByte(sbyte x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddDouble(double x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddDouble(int o, double x, double d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddFloat(float x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddFloat(int o, float x, double d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddInt(int o, int x, int d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddInt(int x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddLong(int o, long x, long d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddLong(long x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddOffset(int o, int x, int d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddOffset(int off) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddShort(int o, short x, int d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddShort(short x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.AddStruct(int voffset, int x, int d) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Clear() -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateByteVector(byte[]? arr) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateSortedVectorOfTables(Java.Lang.Object? obj, int[]? offsets) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateString(Java.Lang.ICharSequence? s) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateString(Java.Nio.ByteBuffer? s) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateUnintializedVector(int elem_size, int num_elems, int alignment) -> Java.Nio.ByteBuffer?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.CreateVectorOfTables(int[]? offsets) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.DataBuffer() -> Java.Nio.ByteBuffer?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.EndObject() -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.EndVector() -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Finish(int root_table) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Finish(int root_table, string? file_identifier) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Finished() -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.ForceDefaults(bool forceDefaults) -> AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Init(Java.Nio.ByteBuffer? existing_bb, AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.IByteBufferFactory? bb_factory) -> AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Nested(int obj) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.NotNested() -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Offset() -> int
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Pad(int byte_size) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Prep(int size, int additional_bytes) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutBoolean(bool x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutByte(sbyte x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutDouble(double x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutFloat(float x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutInt(int x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutLong(long x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.PutShort(short x) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Required(int table, int field) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.SizedByteArray() -> byte[]?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.SizedByteArray(int start, int length) -> byte[]?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.SizedInputStream() -> System.IO.Stream?
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.Slot(int voffset) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.StartObject(int numfields) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.FlatBufferBuilder.StartVector(int elem_size, int num_elems, int alignment) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.Table.ByteBuffer.get -> Java.Nio.ByteBuffer?
virtual AndroidX.Text.Emoji.FlatBuffer.Table.KeysCompare(Java.Lang.Integer? o1, Java.Lang.Integer? o2, Java.Nio.ByteBuffer? bb) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.Table.SortTables(int[]? offsets, Java.Nio.ByteBuffer? bb) -> void
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__indirect(int offset) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__offset(int vtable_offset) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__string(int offset) -> string?
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__union(AndroidX.Text.Emoji.FlatBuffer.Table? t, int offset) -> AndroidX.Text.Emoji.FlatBuffer.Table?
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__vector(int offset) -> int
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__vector_as_bytebuffer(int vector_offset, int elem_size) -> Java.Nio.ByteBuffer?
virtual AndroidX.Text.Emoji.FlatBuffer.Table.__vector_len(int offset) -> int
