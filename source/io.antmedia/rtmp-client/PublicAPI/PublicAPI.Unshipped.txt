#nullable enable
Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig
Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig.BuildConfig() -> void
Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer
Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.RTMPMuxer() -> void
Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.RTMPMuxer(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpClient() -> void
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpClient(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.ErrorCode.get -> int
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.ErrorCode.set -> void
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpIOException(int errorCode) -> void
Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpIOException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig.BuildType = "release" -> string!
const Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig.Debug = false -> bool
const Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig.LibraryPackageName = "io.antmedia.rtmp_client" -> string!
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.ConnectionLost = -14 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.DnsNotReachable = -6 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.HandshakeConnectFail = -11 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.HandshakeFail = -12 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.NoSslTlsSupp = -10 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.OpenAlloc = -2 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.OpenConnectStream = -3 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpAmfEncodeFail = -21 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpConnectFail = -13 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpGenericError = -26 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpIgnored = -25 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpKeyframeTsMismatch = -15 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpMemAllocFail = -17 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpPacketTooSmall = -19 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpReadCorruptStream = -16 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpSanityFail = -27 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpSendPacketFail = -20 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.RtmpStreamBadDatasize = -18 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.SocketConnectFail = -7 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.SocketCreateFail = -9 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.SocksNegotiationFail = -8 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.UnknownRtmpAmfType = -5 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.UnknownRtmpOption = -4 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.UrlIncorrectPort = -24 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.UrlMissingHostname = -23 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.UrlMissingProtocol = -22 -> int
const Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpReadDone = -1 -> int
override Xamarin.IO.AntMedia.Rtmp.Client.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.ThresholdClass.get -> nint
override Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.ThresholdType.get -> System.Type!
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.ThresholdClass.get -> nint
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.RtmpIOException.ThresholdType.get -> System.Type!
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.ThresholdClass.get -> nint
override Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.ThresholdType.get -> System.Type!
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.Close() -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.File_close() -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.File_open(string? p0) -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.IsConnected.get -> bool
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.Open(string? p0, int p1, int p2) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.Read(byte[]? p0, int p1, int p2) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.WriteAudio(byte[]? p0, int p1, int p2, long p3) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.WriteVideo(byte[]? p0, int p1, int p2, long p3) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RTMPMuxer.Write_flv_header(bool p0, bool p1) -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Close() -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.IsConnected.get -> bool
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Open(string? url, bool isPublishMode) -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Pause(bool pause) -> bool
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Read(byte[]? data, int offset, int size) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.SetReceiveTimeout(int receiveTimeoutInMs) -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.SetSendTimeout(int sendTimeoutInMs) -> void
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Write(byte[]? data) -> int
virtual Xamarin.IO.AntMedia.Rtmp.Client.RtmpClient.Write(byte[]? data, int offset, int size) -> int
