#nullable enable
Android.Gms.Measurement.Api.AppMeasurementSdk
Android.Gms.Measurement.Api.AppMeasurementSdk.AppMeasurementSdk(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty
Android.Gms.Measurement.Api.AppMeasurementSdk.Zza(bool p0) -> void
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.Active = "active" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.CreationTimestamp = "creation_timestamp" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.ExpiredEventName = "expired_event_name" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.ExpiredEventParams = "expired_event_params" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.Name = "name" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.Origin = "origin" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TimeToLive = "time_to_live" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TimedOutEventName = "timed_out_event_name" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TimedOutEventParams = "timed_out_event_params" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TriggerEventName = "trigger_event_name" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TriggerTimeout = "trigger_timeout" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TriggeredEventName = "triggered_event_name" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TriggeredEventParams = "triggered_event_params" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.TriggeredTimestamp = "triggered_timestamp" -> string!
const Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.Value = "value" -> string!
override Android.Gms.Measurement.Api.AppMeasurementSdk.ConditionalUserProperty.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Measurement.Api.AppMeasurementSdk.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Measurement.Api.AppMeasurementSdk.ThresholdClass.get -> nint
override Android.Gms.Measurement.Api.AppMeasurementSdk.ThresholdType.get -> System.Type!
static Android.Gms.Measurement.Api.AppMeasurementSdk.GetInstance(Android.Content.Context! context) -> Android.Gms.Measurement.Api.AppMeasurementSdk!
static Android.Gms.Measurement.Api.AppMeasurementSdk.GetInstance(Android.Content.Context! context, string! p1, string! p2, string? p3, Android.OS.Bundle! extraParameters) -> Android.Gms.Measurement.Api.AppMeasurementSdk!
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.AppIdOrigin.get -> string?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.AppInstanceId.get -> string?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.BeginAdUnitExposure(string! adUnitId) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.ClearConditionalUserProperty(string! userPropertyName, string? clearEventName, Android.OS.Bundle? clearEventParams) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.CurrentScreenClass.get -> string?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.CurrentScreenName.get -> string?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.EndAdUnitExposure(string! adUnitId) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.GenerateEventId() -> long
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.GetConditionalUserProperties(string? origin, string? propertyNamePrefix) -> System.Collections.Generic.IList<Android.OS.Bundle!>!
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.GetMaxUserProperties(string! origin) -> int
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.GetUserProperties(string? origin, string? propertyNamePrefix, bool includeInternal) -> System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>!
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.GmpAppId.get -> string?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.LogEvent(string! origin, string! name, Android.OS.Bundle? params) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.LogEventNoInterceptor(string! origin, string! name, Android.OS.Bundle? params, long timestampInMillis) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.PerformAction(Android.OS.Bundle! bundle) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.PerformActionWithResponse(Android.OS.Bundle! bundle) -> Android.OS.Bundle?
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetConditionalUserProperty(Android.OS.Bundle! conditionalUserProperty) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetConsent(Android.OS.Bundle! p0) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetCurrentScreen(Android.App.Activity! activity, string? screenName, string? screenClassOverride) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetMeasurementEnabled(Java.Lang.Boolean? p0) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetMeasurementEnabled(bool p0) -> void
virtual Android.Gms.Measurement.Api.AppMeasurementSdk.SetUserProperty(string! origin, string! name, Java.Lang.Object! value) -> void
