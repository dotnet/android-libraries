#nullable enable
Android.Gms.Iid.InstanceID
Android.Gms.Iid.InstanceID.GetTokenAsync(string! authorizedEntity, string! scope) -> System.Threading.Tasks.Task<string!>!
Android.Gms.Iid.InstanceID.GetTokenAsync(string! authorizedEntity, string! scope, Android.OS.Bundle! extras) -> System.Threading.Tasks.Task<string!>!
Android.Gms.Iid.InstanceID.InstanceID(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Gms.Iid.InstanceIDListenerService
Android.Gms.Iid.InstanceIDListenerService.InstanceIDListenerService() -> void
Android.Gms.Iid.InstanceIDListenerService.InstanceIDListenerService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Gms.Iid.MessengerCompat
Android.Gms.Iid.MessengerCompat.MessengerCompat(Android.OS.IBinder? p0) -> void
Android.Gms.Iid.MessengerCompat.MessengerCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Android.Gms.Iid.MessengerCompat.Send(Android.OS.Message? p0) -> void
Android.Gms.Iid.Zzb
Android.Gms.Iid.Zzb.Zzb() -> void
Android.Gms.Iid.Zzb.Zzb(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract Android.Gms.Iid.Zzb.HandleIntent(Android.Content.Intent? p0) -> void
const Android.Gms.Iid.InstanceID.ErrorMainThread = "MAIN_THREAD" -> string!
const Android.Gms.Iid.InstanceID.ErrorMissingInstanceidService = "MISSING_INSTANCEID_SERVICE" -> string!
const Android.Gms.Iid.InstanceID.ErrorServiceNotAvailable = "SERVICE_NOT_AVAILABLE" -> string!
const Android.Gms.Iid.InstanceID.ErrorTimeout = "TIMEOUT" -> string!
const Android.Gms.Iid.InstanceID.IntentFilterAction = "com.google.android.gms.iid.InstanceID" -> string!
override Android.Gms.Iid.InstanceID.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Iid.InstanceID.ThresholdClass.get -> nint
override Android.Gms.Iid.InstanceID.ThresholdType.get -> System.Type!
override Android.Gms.Iid.InstanceIDListenerService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Iid.InstanceIDListenerService.OnBind(Android.Content.Intent? intent) -> Android.OS.IBinder?
override Android.Gms.Iid.InstanceIDListenerService.ThresholdClass.get -> nint
override Android.Gms.Iid.InstanceIDListenerService.ThresholdType.get -> System.Type!
override Android.Gms.Iid.MessengerCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Iid.MessengerCompat.ThresholdClass.get -> nint
override Android.Gms.Iid.MessengerCompat.ThresholdType.get -> System.Type!
override Android.Gms.Iid.Zzb.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Android.Gms.Iid.Zzb.ThresholdClass.get -> nint
override Android.Gms.Iid.Zzb.ThresholdType.get -> System.Type!
override sealed Android.Gms.Iid.Zzb.OnBind(Android.Content.Intent? p0) -> Android.OS.IBinder?
override sealed Android.Gms.Iid.Zzb.OnStartCommand(Android.Content.Intent? p0, Android.App.StartCommandFlags p1, int p2) -> Android.App.StartCommandResult
static Android.Gms.Iid.InstanceID.GetInstance(Android.Content.Context? context) -> Android.Gms.Iid.InstanceID?
static Android.Gms.Iid.InstanceID.GetInstance(Android.Content.Context? p0, Android.OS.Bundle? p1) -> Android.Gms.Iid.InstanceID?
static Android.Gms.Iid.MessengerCompat.Creator.get -> Android.OS.IParcelableCreator?
virtual Android.Gms.Iid.InstanceID.CreationTime.get -> long
virtual Android.Gms.Iid.InstanceID.DeleteInstanceID() -> void
virtual Android.Gms.Iid.InstanceID.DeleteToken(string? authorizedEntity, string? scope) -> void
virtual Android.Gms.Iid.InstanceID.GetToken(string? authorizedEntity, string? scope) -> string?
virtual Android.Gms.Iid.InstanceID.GetToken(string? authorizedEntity, string? scope, Android.OS.Bundle? extras) -> string?
virtual Android.Gms.Iid.InstanceID.Id.get -> string?
virtual Android.Gms.Iid.InstanceID.Subtype.get -> string?
virtual Android.Gms.Iid.InstanceIDListenerService.HandleIntent(Android.Content.Intent? bundle) -> void
virtual Android.Gms.Iid.InstanceIDListenerService.OnTokenRefresh() -> void
virtual Android.Gms.Iid.MessengerCompat.DescribeContents() -> int
virtual Android.Gms.Iid.MessengerCompat.WriteToParcel(Android.OS.Parcel? dest, Android.OS.ParcelableWriteFlags flags) -> void
