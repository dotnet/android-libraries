#nullable enable
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.AppUpdateInfo(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateManagerFactory
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.AppUpdateOptions() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.AppUpdateOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.Builder() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.CompleteUpdate() -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.GetAppUpdateInfo() -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.RegisterListener(Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlow(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, Android.App.Activity! p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! p2) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, Android.App.Activity! p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! p2, int p3) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, AndroidX.Activity.Result.ActivityResultLauncher! p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! p2) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter! p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! p2, int p3) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, int p1, Android.App.Activity! p2, int p3) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0, int p1, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter! p2, int p3) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager.UnregisterListener(Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener
Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener.OnStateUpdate(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState? state) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.InstallException(int p0) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.InstallException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.InstallState() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.InstallState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallStateUpdatedEventArgs
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallStateUpdatedEventArgs.InstallStateUpdatedEventArgs(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState? state) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallStateUpdatedEventArgs.State.get -> Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState?
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.ActivityResult
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateType
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateTypeAttribute
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateTypeAttribute.AppUpdateTypeAttribute() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateTypeConsts
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.IAppUpdateType
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.IInstallErrorCode
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.IInstallStatus
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.IUpdateAvailability
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.IUpdatePrecondition
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCodeAttribute
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCodeAttribute.InstallErrorCodeAttribute() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCodeConsts
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatusAttribute
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatusAttribute.InstallStatusAttribute() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatusConsts
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailability
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailabilityAttribute
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailabilityAttribute.UpdateAvailabilityAttribute() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailabilityConsts
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePreconditionAttribute
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePreconditionAttribute.UpdatePreconditionAttribute() -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePreconditionConsts
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.FakeAppUpdateManager(Android.Content.Context? context) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.FakeAppUpdateManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlow(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? p0, Android.App.Activity? p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions? p2) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? p0, Android.App.Activity? p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions? p2, int p3) -> bool
Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? p0, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter? p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions? p2, int p3) -> bool
abstract Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.AllowAssetPackDeletion() -> bool
abstract Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.AppUpdateType() -> int
abstract Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.Build() -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions!
abstract Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.SetAllowAssetPackDeletion(bool p0) -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder!
abstract Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.SetAppUpdateType(int p0) -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder!
abstract Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.BytesDownloaded() -> long
abstract Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.InstallErrorCode() -> int
abstract Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.InstallStatus() -> int
abstract Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.PackageName() -> string?
abstract Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.TotalBytesToDownload() -> long
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.ActivityResult.ResultInAppUpdateFailed = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateType.Flexible = 0 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.AppUpdateType.Immediate = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorApiNotAvailable = -3 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorAppNotOwned = -10 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorDownloadNotPresent = -7 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorInstallNotAllowed = -6 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorInstallUnavailable = -5 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorInternalError = -100 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorInvalidRequest = -4 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorPlayStoreNotFound = -9 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.ErrorUnknown = -2 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.NoError = 0 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallErrorCode.NoErrorPartiallyAllowed = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Canceled = 6 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Downloaded = 11 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Downloading = 2 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Failed = 5 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Installed = 4 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Installing = 3 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Pending = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.RequiresUiIntent = 10 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.InstallStatus.Unknown = 0 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailability.DeveloperTriggeredUpdateInProgress = 3 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailability.Unknown = 0 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailability.UpdateAvailable = 2 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdateAvailability.UpdateNotAvailable = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.AppVersionFresh = 5 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.CannotDisplay = 1 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.DeviceStatus = 4 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.InsufficientStorage = 3 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.NeedStoreToProceed = 2 -> int
const Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.UpdatePrecondition.Unknown = 0 -> int
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateManagerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AppUpdate.Install.Model.ActivityResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.ThresholdType.get -> System.Type!
static Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.Zzb(string! p0, int p1, int p2, int p3, Java.Lang.Integer? p4, int p5, long p6, long p7, long p8, long p9, Android.App.PendingIntent? p10, Android.App.PendingIntent? p11, Android.App.PendingIntent? p12, Android.App.PendingIntent? p13, System.Collections.IDictionary? p14) -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo?
static Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateManagerFactory.Create(Android.Content.Context! context) -> Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager!
static Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.DefaultOptions(int appUpdateType) -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions!
static Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.NewBuilder(int appUpdateType) -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions.Builder!
static Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState.Zza(int p0, long p1, long p2, int p3, string! p4) -> Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.AvailableVersionCode() -> int
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.BytesDownloaded() -> long
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.ClientVersionStalenessDays() -> Java.Lang.Integer?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.GetFailedUpdatePreconditions(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions? options) -> System.Collections.Generic.ICollection<Java.Lang.Integer!>?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.InstallStatus() -> int
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.IsUpdateTypeAllowed(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! appUpdateOptions) -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.IsUpdateTypeAllowed(int updateType) -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.PackageName() -> string!
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.TotalBytesToDownload() -> long
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.UpdateAvailability() -> int
virtual Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo.UpdatePriority() -> int
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallException.ErrorCode.get -> int
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.CompleteUpdate() -> Android.Gms.Tasks.Task?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.DownloadCompletes() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.DownloadFails() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.DownloadStarts() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.GetAppUpdateInfo() -> Android.Gms.Tasks.Task?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.InstallCompletes() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.InstallFails() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.IsConfirmationDialogVisible.get -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.IsImmediateFlowVisible.get -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.IsInstallSplashScreenVisible.get -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.RegisterListener(Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener? listener) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetBytesDownloaded(long bytesDownloaded) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetClientVersionStalenessDays(Java.Lang.Integer? clientVersionStaleness) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetInstallErrorCode(int installErrorCode) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetTotalBytesToDownload(long totalBytesToDownload) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetUpdateAvailable(int availableVersionCode) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetUpdateAvailable(int availableVersionCode, int appUpdateType) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetUpdateNotAvailable() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.SetUpdatePriority(int updatePriority) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? appUpdateInfo, AndroidX.Activity.Result.ActivityResultLauncher? p1, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions? options) -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? appUpdateInfo, int p1, Android.App.Activity? p2, int appUpdateType) -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo? appUpdateInfo, int p1, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter? p2, int appUpdateType) -> bool
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.TypeForUpdateInProgress.get -> Java.Lang.Integer?
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.UnregisterListener(Xamarin.Google.Android.Play.Core.AppUpdate.Install.IInstallStateUpdatedListener? listener) -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.UserAcceptsUpdate() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.UserCancelsDownload() -> void
virtual Xamarin.Google.Android.Play.Core.AppUpdate.Testing.FakeAppUpdateManager.UserRejectsUpdate() -> void
