#nullable enable
Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat
Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.SplitCompat(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication
Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication.SplitCompatApplication() -> void
Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication.SplitCompatApplication(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.CancelInstall(int p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.DeferredInstall(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.DeferredLanguageInstall(System.Collections.Generic.IList<Java.Util.Locale!>? p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.DeferredLanguageUninstall(System.Collections.Generic.IList<Java.Util.Locale!>? p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.DeferredUninstall(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.GetSessionState(int p0) -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.GetSessionStates() -> Android.Gms.Tasks.Task!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.InstalledLanguages.get -> System.Collections.Generic.ICollection<string!>!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.InstalledModules.get -> System.Collections.Generic.ICollection<string!>!
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.RegisterListener(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState! p0, Android.App.Activity! p1, int p2) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState! p0, AndroidX.Activity.Result.ActivityResultLauncher! p1) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState! p0, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter! p1, int p2) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.StartInstall(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest! p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.UnregisterListener(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.Zza(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager.Zzb(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener! p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener
Xamarin.Google.Android.Play.Core.SplitInstall.InternalFrameworkListenerExtensions
Xamarin.Google.Android.Play.Core.SplitInstall.Model.ISplitInstallErrorCode
Xamarin.Google.Android.Play.Core.SplitInstall.Model.ISplitInstallSessionStatus
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCodeAttribute
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCodeAttribute.SplitInstallErrorCodeAttribute() -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCodeConsts
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatusAttribute
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatusAttribute.SplitInstallSessionStatusAttribute() -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatusConsts
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.SplitInstallException(int p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.SplitInstallException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.SplitInstallHelper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallManagerFactory
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.SplitInstallRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.SplitInstallSessionState() -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.SplitInstallSessionState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.IStateUpdateListener
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.IStateUpdateListener.OnStateUpdate(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.SplitInstallStateUpdatedListenerWrapper() -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.SplitInstallStateUpdatedListenerWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.StateUpdate -> System.EventHandler<Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.StateUpdateEventArgs!>!
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.StateUpdateEventArgs
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.StateUpdateEventArgs.P0.get -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState?
Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.StateUpdateEventArgs.StateUpdateEventArgs(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.CancelInstall(int p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.DeferredInstall(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.DeferredLanguageInstall(System.Collections.Generic.IList<Java.Util.Locale!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.DeferredLanguageUninstall(System.Collections.Generic.IList<Java.Util.Locale!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.DeferredUninstall(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.FakeSplitInstallManager(Android.Content.Context? context, Java.IO.File? splitsDir) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.FakeSplitInstallManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.GetSessionState(int p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.GetSessionStates() -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.InstalledLanguages.get -> System.Collections.Generic.ICollection<string!>?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.InstalledModules.get -> System.Collections.Generic.ICollection<string!>?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.RegisterListener(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState? p0, Android.App.Activity? p1, int p2) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState? p0, AndroidX.Activity.Result.ActivityResultLauncher? p1) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.StartConfirmationDialogForResult(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState? p0, Xamarin.Google.Android.Play.Core.Common.IIntentSenderForResultStarter? p1, int p2) -> bool
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.StartInstall(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.UnregisterListener(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.Zza(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.Zzb(Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? p0) -> void
Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManagerFactory
Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig
Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.BuildConfig() -> void
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.BytesDownloaded() -> long
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.ErrorCode() -> int
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.ResolutionIntent() -> Android.App.PendingIntent?
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.SessionId() -> int
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.Status() -> int
abstract Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.TotalBytesToDownload() -> long
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.AccessDenied = -7 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.ActiveSessionsLimitExceeded = -1 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.ApiNotAvailable = -5 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.AppNotOwned = -15 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.IncompatibleWithExistingSession = -8 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.InsufficientStorage = -10 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.InternalError = -100 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.InvalidRequest = -3 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.ModuleUnavailable = -2 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.NetworkError = -6 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.NoError = 0 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.PlayStoreNotFound = -14 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.ServiceDied = -9 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.SessionNotFound = -4 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.SplitcompatCopyError = -13 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.SplitcompatEmulationError = -12 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallErrorCode.SplitcompatVerificationError = -11 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Canceled = 7 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Canceling = 9 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Downloaded = 3 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Downloading = 2 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Failed = 6 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Installed = 5 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Installing = 4 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Pending = 1 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.RequiresUserConfirmation = 8 -> int
const Xamarin.Google.Android.Play.Core.SplitInstall.Model.SplitInstallSessionStatus.Unknown = 0 -> int
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.ApplicationId = "xamarin.google.android.play.feature.delivery" -> string!
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.BuildType = "release" -> string!
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.Debug = false -> bool
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.Flavor = "" -> string!
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.LibraryPackageName = "xamarin.google.android.play.feature.delivery" -> string!
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.VersionCode = 1 -> int
const Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.VersionName = "1.0" -> string!
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompatApplication.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.InternalFrameworkListenerExtensions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallManagerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManagerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Feature.Delivery.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.Install(Android.Content.Context! context) -> bool
static Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.InstallActivity(Android.Content.Context! context) -> bool
static Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.Zza.get -> int
static Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.Zzd(Android.Content.Context? p0) -> bool
static Xamarin.Google.Android.Play.Core.SplitCompat.SplitCompat.Zze() -> bool
static Xamarin.Google.Android.Play.Core.SplitInstall.InternalFrameworkListenerExtensions.RegisterFrameworkListener(Android.Content.Context? applicationContext, Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? listener) -> void
static Xamarin.Google.Android.Play.Core.SplitInstall.InternalFrameworkListenerExtensions.UnregisterFrameworkListener(Android.Content.Context? applicationContext, Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener? listener) -> void
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.LoadLibrary(Android.Content.Context! context, string! libName) -> void
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallHelper.UpdateAppInfo(Android.Content.Context! context) -> void
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallManagerFactory.Create(Android.Content.Context! context) -> Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallManager!
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.NewBuilder() -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder!
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.Create(int sessionId, int status, int errorCode, long bytesDownloaded, long totalBytesToDownload, System.Collections.Generic.IList<string!>? moduleNames, System.Collections.Generic.IList<string!>? languages) -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState?
static Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.Zzd(Android.OS.Bundle? p0) -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState?
static Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManagerFactory.Create(Android.Content.Context? context) -> Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager?
static Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManagerFactory.Create(Android.Content.Context? context, Java.IO.File? modulesDirectory) -> Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager?
static Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManagerFactory.CreateNewInstance(Android.Content.Context? context, Java.IO.File? modulesDirectory) -> Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager?
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallException.ErrorCode.get -> int
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.AddLanguage(Java.Util.Locale? language) -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder!
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.AddModule(string? moduleName) -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder?
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Builder.Build() -> Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest!
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.Languages.get -> System.Collections.Generic.IList<Java.Util.Locale!>?
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallRequest.ModuleNames.get -> System.Collections.Generic.IList<string!>?
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.HasTerminalStatus.get -> bool
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.Languages() -> System.Collections.Generic.IList<string!>!
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallSessionState.ModuleNames() -> System.Collections.Generic.IList<string!>!
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.Listener.get -> Xamarin.Google.Android.Play.Core.SplitInstall.ISplitInstallStateUpdatedListener?
virtual Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.SetStateUpdateListener(Xamarin.Google.Android.Play.Core.SplitInstall.SplitInstallStateUpdatedListenerWrapper.IStateUpdateListener? listener) -> void
virtual Xamarin.Google.Android.Play.Core.SplitInstall.Testing.FakeSplitInstallManager.SetShouldNetworkError(bool shouldNetworkError) -> void
