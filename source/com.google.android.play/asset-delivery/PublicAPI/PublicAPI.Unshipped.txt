#nullable enable
Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig
Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.BuildConfig() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation
Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.AssetLocation() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.AssetLocation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException.AssetPackException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.AssetPackExtractionService() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.AssetPackExtractionService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.AssetPackLocation() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.AssetPackLocation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackManagerFactory
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.AssetPackState() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.AssetPackState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateEventArgs
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateEventArgs.AssetPackStateEventArgs(Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState? state) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateEventArgs.State.get -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState?
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateUpdateListenerWrapper() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateUpdateListenerWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.IAssetPackStateListener
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.IAssetPackStateListener.OnStateUpdate(Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState? state) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.StateUpdate -> System.EventHandler<Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.AssetPackStateEventArgs!>!
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.AssetPackStates() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.AssetPackStates(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.A() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.ExtractionForegroundService() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.ExtractionForegroundService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionWorker
Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionWorker.ExtractionWorker(Android.Content.Context? context, AndroidX.Work.WorkerParameters? params) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.Cancel(System.Collections.Generic.IList<string!>! p0) -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.ClearListeners() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.Fetch(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.GetAssetLocation(string! p0, string! p1) -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.GetPackLocation(string! p0) -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.GetPackStates(System.Collections.Generic.IList<string!>? p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.PackLocations.get -> System.Collections.Generic.IDictionary<string!, Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation!>?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.RegisterListener(Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackStateUpdateListener! p0) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.RemovePack(string! p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.ShowCellularDataConfirmation(Android.App.Activity! p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.ShowCellularDataConfirmation(AndroidX.Activity.Result.ActivityResultLauncher! p0) -> bool
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.ShowConfirmationDialog(Android.App.Activity! p0) -> Android.Gms.Tasks.Task?
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.ShowConfirmationDialog(AndroidX.Activity.Result.ActivityResultLauncher! p0) -> bool
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager.UnregisterListener(Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackStateUpdateListener! p0) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackStateUpdateListener
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCodeAttribute
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCodeAttribute.AssetPackErrorCodeAttribute() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCodeConsts
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatusAttribute
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatusAttribute.AssetPackStatusAttribute() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatusConsts
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethod
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethodAttribute
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethodAttribute.AssetPackStorageMethodAttribute() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethodConsts
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailability
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailabilityAttribute
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailabilityAttribute.AssetPackUpdateAvailabilityAttribute() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailabilityConsts
Xamarin.Google.Android.Play.Core.AssetPacks.Model.IAssetPackErrorCode
Xamarin.Google.Android.Play.Core.AssetPacks.Model.IAssetPackStatus
Xamarin.Google.Android.Play.Core.AssetPacks.Model.IAssetPackStorageMethod
Xamarin.Google.Android.Play.Core.AssetPacks.Model.IAssetPackUpdateAvailability
Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener
Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.NativeAssetPackStateUpdateListener() -> void
Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.NativeAssetPackStateUpdateListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.AssetPacks.SessionStateBroadcastReceiver
Xamarin.Google.Android.Play.Core.AssetPacks.SessionStateBroadcastReceiver.SessionStateBroadcastReceiver() -> void
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.Offset() -> long
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.Path() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.Size() -> long
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.AssetsPath() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.PackStorageMethod() -> int
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.Path() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.AvailableVersionTag() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.BytesDownloaded() -> long
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.ErrorCode() -> int
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.InstalledVersionTag() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.Name() -> string?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.Status() -> int
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.TotalBytesToDownload() -> long
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.TransferProgressPercentage() -> int
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.UpdateAvailability() -> int
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.PackStates() -> System.Collections.Generic.IDictionary<string!, Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState!>?
abstract Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.TotalBytes() -> long
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.ApplicationId = "xamarin.google.android.play.asset.delivery" -> string!
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.BuildType = "release" -> string!
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.Debug = false -> bool
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.Flavor = "" -> string!
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.LibraryPackageName = "xamarin.google.android.play.asset.delivery" -> string!
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.VersionCode = 1 -> int
const Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.VersionName = "1.0" -> string!
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.AccessDenied = -7 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.ApiNotAvailable = -5 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.AppNotOwned = -13 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.AppUnavailable = -1 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.ConfirmationNotRequired = -14 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.DownloadNotFound = -4 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.InsufficientStorage = -10 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.InternalError = -100 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.InvalidRequest = -3 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.NetworkError = -6 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.NoError = 0 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.PackUnavailable = -2 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackErrorCode.UnrecognizedInstallation = -15 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Canceled = 6 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Completed = 4 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Downloading = 2 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Failed = 5 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.NotInstalled = 8 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Pending = 1 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.RequiresUserConfirmation = 9 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Transferring = 3 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.Unknown = 0 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStatus.WaitingForWifi = 7 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethod.ApkAssets = 1 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackStorageMethod.StorageFiles = 0 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailability.Unknown = 0 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailability.UpdateAvailable = 2 -> int
const Xamarin.Google.Android.Play.Core.AssetPacks.Model.AssetPackUpdateAvailability.UpdateNotAvailable = 1 -> int
override Xamarin.Google.Android.Play.Asset.Delivery.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetLocation.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackManagerFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStates.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionWorker.ForegroundInfo.get -> AndroidX.Work.ForegroundInfo?
override Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionWorker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.ThresholdType.get -> System.Type!
override Xamarin.Google.Android.Play.Core.AssetPacks.SessionStateBroadcastReceiver.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.OnBind(Android.Content.Intent? p0) -> Android.OS.IBinder?
override sealed Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackExtractionService.OnCreate() -> void
override sealed Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionForegroundService.OnBind(Android.Content.Intent? p0) -> Android.OS.IBinder?
override sealed Xamarin.Google.Android.Play.Core.AssetPacks.ExtractionWorker.DoWork() -> AndroidX.Work.ListenableWorker.Result?
override sealed Xamarin.Google.Android.Play.Core.AssetPacks.SessionStateBroadcastReceiver.OnReceive(Android.Content.Context? p0, Android.Content.Intent? p1) -> void
static Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation.A() -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackLocation?
static Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackManagerFactory.GetInstance(Android.Content.Context! applicationContext) -> Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackManager!
static Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState.A(string! p0, int p1, int p2, long p3, long p4, double p5, int p6, string? p7, string? p8) -> Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackState?
virtual Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackException.ErrorCode.get -> int
virtual Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.Listener.get -> Xamarin.Google.Android.Play.Core.AssetPacks.IAssetPackStateUpdateListener?
virtual Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.SetStateUpdateListener(Xamarin.Google.Android.Play.Core.AssetPacks.AssetPackStateUpdateListenerWrapper.IAssetPackStateListener? listener) -> void
virtual Xamarin.Google.Android.Play.Core.AssetPacks.NativeAssetPackStateUpdateListener.OnStateUpdate(Java.Lang.Object? p0) -> void
