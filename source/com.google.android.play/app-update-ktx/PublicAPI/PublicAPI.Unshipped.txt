#nullable enable
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.AppUpdateResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.Available(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p1) -> void
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartFlexibleUpdate(Android.App.Activity! activity, int requestCode) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartFlexibleUpdate(AndroidX.Activity.Result.ActivityResultLauncher! activityResultLauncher) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartFlexibleUpdate(AndroidX.Fragment.App.Fragment! fragment, int requestCode) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartImmediateUpdate(Android.App.Activity! activity, int requestCode) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartImmediateUpdate(AndroidX.Activity.Result.ActivityResultLauncher! activityResultLauncher) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.StartImmediateUpdate(AndroidX.Fragment.App.Fragment! fragment, int requestCode) -> bool
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.UpdateInfo.get -> Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo!
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Downloaded
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Downloaded.CompleteUpdate(Kotlin.Coroutines.IContinuation! p0) -> Java.Lang.Object?
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Downloaded.Downloaded(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0) -> void
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.InProgress
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.InProgress.InProgress(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> void
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.InProgress.InstallState.get -> Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState!
Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.NotAvailable
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Available.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.Downloaded.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.InProgress.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.NotAvailable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.ThresholdClass.get -> nint
override Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.ThresholdType.get -> System.Type!
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetBytesDownloaded(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> long
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetBytesDownloaded(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> long
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetClientVersionStalenessDays(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> Java.Lang.Integer?
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetHasTerminalStatus(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> bool
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetInstallErrorCode(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> int
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetInstallStatus(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> int
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetInstallStatus(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> int
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetPackageName(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> string!
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetTotalBytesToDownload(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> long
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetTotalBytesToDownload(Xamarin.Google.Android.Play.Core.AppUpdate.Install.InstallState! p0) -> long
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.GetUpdatePriority(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> int
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.IsFlexibleUpdateAllowed(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> bool
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.IsImmediateUpdateAllowed(Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! p0) -> bool
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.RequestAppUpdateInfo(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0, Kotlin.Coroutines.IContinuation! p1) -> Java.Lang.Object?
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.RequestCompleteUpdate(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0, Kotlin.Coroutines.IContinuation! p1) -> Java.Lang.Object?
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.RequestUpdateFlow(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0) -> Xamarin.KotlinX.Coroutines.Flow.IFlow!
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateManagerKtxKt.StartUpdateFlowForResult(Xamarin.Google.Android.Play.Core.AppUpdate.IAppUpdateManager! p0, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateInfo! appUpdateInfo, AndroidX.Fragment.App.Fragment! fragment, Xamarin.Google.Android.Play.Core.AppUpdate.AppUpdateOptions! options, int requestCode) -> bool
static Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.NotAvailable.Instance.get -> Xamarin.Google.Android.Play.Core.Ktx.AppUpdateResult.NotAvailable!
