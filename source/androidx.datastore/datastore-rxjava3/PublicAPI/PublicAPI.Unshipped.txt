#nullable enable
AndroidX.DataStore.RxJava3.IRxDataMigration
AndroidX.DataStore.RxJava3.IRxDataMigration.CleanUp() -> ReactiveX.RxJava3.Core.Completable!
AndroidX.DataStore.RxJava3.IRxDataMigration.Migrate(Java.Lang.Object? p0) -> ReactiveX.RxJava3.Core.Single!
AndroidX.DataStore.RxJava3.IRxDataMigration.ShouldMigrate(Java.Lang.Object? p0) -> ReactiveX.RxJava3.Core.Single!
AndroidX.DataStore.RxJava3.IRxSharedPreferencesMigration
AndroidX.DataStore.RxJava3.IRxSharedPreferencesMigration.Migrate(AndroidX.DataStore.Migrations.SharedPreferencesView! sharedPreferencesView, Java.Lang.Object? currentData) -> ReactiveX.RxJava3.Core.Single!
AndroidX.DataStore.RxJava3.IRxSharedPreferencesMigration.ShouldMigrate(Java.Lang.Object? currentData) -> ReactiveX.RxJava3.Core.Single!
AndroidX.DataStore.RxJava3.RxDataStore
AndroidX.DataStore.RxJava3.RxDataStore.Companion
AndroidX.DataStore.RxJava3.RxDataStore.Companion.Create(AndroidX.DataStore.Core.IDataStore! delegateDs, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope) -> AndroidX.DataStore.RxJava3.RxDataStore!
AndroidX.DataStore.RxJava3.RxDataStore.Data() -> ReactiveX.RxJava3.Core.Flowable!
AndroidX.DataStore.RxJava3.RxDataStore.Dispose() -> void
AndroidX.DataStore.RxJava3.RxDataStore.IsDisposed.get -> bool
AndroidX.DataStore.RxJava3.RxDataStore.ShutdownComplete() -> ReactiveX.RxJava3.Core.Completable!
AndroidX.DataStore.RxJava3.RxDataStore.UpdateDataAsync(ReactiveX.RxJava3.Functions.IFunction! transform) -> ReactiveX.RxJava3.Core.Single!
AndroidX.DataStore.RxJava3.RxDataStoreBuilder
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.AddDataMigration(AndroidX.DataStore.Core.IDataMigration! dataMigration) -> AndroidX.DataStore.RxJava3.RxDataStoreBuilder!
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.AddRxDataMigration(AndroidX.DataStore.RxJava3.IRxDataMigration! rxDataMigration) -> AndroidX.DataStore.RxJava3.RxDataStoreBuilder!
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.Build() -> AndroidX.DataStore.RxJava3.RxDataStore!
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.RxDataStoreBuilder(Android.Content.Context! context, string! fileName, AndroidX.DataStore.Core.ISerializer! serializer) -> void
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.RxDataStoreBuilder(Java.Util.Concurrent.ICallable! produceFile, AndroidX.DataStore.Core.ISerializer! serializer) -> void
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.SetCorruptionHandler(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler! corruptionHandler) -> AndroidX.DataStore.RxJava3.RxDataStoreBuilder!
AndroidX.DataStore.RxJava3.RxDataStoreBuilder.SetIoScheduler(ReactiveX.RxJava3.Core.Scheduler! ioScheduler) -> AndroidX.DataStore.RxJava3.RxDataStoreBuilder!
AndroidX.DataStore.RxJava3.RxDataStoreDelegateKt
AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder
AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder.Build() -> AndroidX.DataStore.Core.IDataMigration!
AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder.RxSharedPreferencesMigrationBuilder(Android.Content.Context! context, string! sharedPreferencesName, AndroidX.DataStore.RxJava3.IRxSharedPreferencesMigration! rxSharedPreferencesMigration) -> void
AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder.SetKeysToMigrate(params string![]! keys) -> AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder!
AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationDefaultImpls
override AndroidX.DataStore.RxJava3.RxDataStore.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.RxJava3.RxDataStore.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.RxJava3.RxDataStoreBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.RxJava3.RxDataStoreDelegateKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationDefaultImpls.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.DataStore.RxJava3.RxDataStoreDelegateKt.RxDataStore(string! fileName, AndroidX.DataStore.Core.ISerializer! serializer, AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, Kotlin.Jvm.Functions.IFunction1! produceMigrations, ReactiveX.RxJava3.Core.Scheduler! scheduler) -> Kotlin.Properties.IReadOnlyProperty!
static AndroidX.DataStore.RxJava3.RxSharedPreferencesMigrationDefaultImpls.ShouldMigrate(AndroidX.DataStore.RxJava3.IRxSharedPreferencesMigration! _this, Java.Lang.Object? currentData) -> ReactiveX.RxJava3.Core.Single!
