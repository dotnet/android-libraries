#nullable enable
AndroidX.DataStore.Preferences.Core.Actual_jvmAndroidKt
AndroidX.DataStore.Preferences.Core.MutablePreferences
AndroidX.DataStore.Preferences.Core.MutablePreferences.Clear() -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.MinusAssign(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.MutablePreferences() -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.PlusAssign(AndroidX.DataStore.Preferences.Core.Preferences! prefs) -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.PlusAssign(AndroidX.DataStore.Preferences.Core.Preferences.Pair! pair) -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.PutAll(params AndroidX.DataStore.Preferences.Core.Preferences.Pair![]! pairs) -> void
AndroidX.DataStore.Preferences.Core.MutablePreferences.Remove(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> Java.Lang.Object?
AndroidX.DataStore.Preferences.Core.MutablePreferences.Set(AndroidX.DataStore.Preferences.Core.Preferences.Key! key, Java.Lang.Object? value) -> void
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.IStorage! storage) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.IStorage! storage, AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.IStorage! storage, AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(AndroidX.DataStore.Core.IStorage! storage, AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Create(Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.CreateWithPath(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.CreateWithPath(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.CreateWithPath(AndroidX.DataStore.Core.Handlers.ReplaceFileCorruptionHandler? corruptionHandler, System.Collections.Generic.IList<AndroidX.DataStore.Core.IDataMigration!>! migrations, Xamarin.KotlinX.Coroutines.ICoroutineScope! scope, Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.CreateWithPath(Kotlin.Jvm.Functions.IFunction0! produceFile) -> AndroidX.DataStore.Core.IDataStore!
AndroidX.DataStore.Preferences.Core.Preferences
AndroidX.DataStore.Preferences.Core.Preferences.Key
AndroidX.DataStore.Preferences.Core.Preferences.Key.Name.get -> string!
AndroidX.DataStore.Preferences.Core.Preferences.Key.To(Java.Lang.Object? value) -> AndroidX.DataStore.Preferences.Core.Preferences.Pair!
AndroidX.DataStore.Preferences.Core.Preferences.Pair
AndroidX.DataStore.Preferences.Core.Preferences.Preferences(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.DataStore.Preferences.Core.Preferences.ToMutablePreferences() -> AndroidX.DataStore.Preferences.Core.MutablePreferences!
AndroidX.DataStore.Preferences.Core.Preferences.ToPreferences() -> AndroidX.DataStore.Preferences.Core.Preferences!
AndroidX.DataStore.Preferences.Core.PreferencesFactory
AndroidX.DataStore.Preferences.Core.PreferencesKeys
AndroidX.DataStore.Preferences.Core.PreferencesKt
AndroidX.DataStore.Preferences.Core.PreferencesSerializer
AndroidX.DataStore.Preferences.Core.PreferencesSerializer.DefaultValue.get -> Java.Lang.Object!
AndroidX.DataStore.Preferences.Core.PreferencesSerializer.ReadFrom(Square.OkIO.IBufferedSource! source, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
AndroidX.DataStore.Preferences.Core.PreferencesSerializer.WhenMappings
AndroidX.DataStore.Preferences.Core.PreferencesSerializer.WriteTo(Java.Lang.Object! t, Square.OkIO.IBufferedSink! sink, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
abstract AndroidX.DataStore.Preferences.Core.Preferences.AsMap() -> System.Collections.Generic.IDictionary<AndroidX.DataStore.Preferences.Core.Preferences.Key!, Java.Lang.Object!>!
abstract AndroidX.DataStore.Preferences.Core.Preferences.Contains(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> bool
abstract AndroidX.DataStore.Preferences.Core.Preferences.Get(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> Java.Lang.Object?
override AndroidX.DataStore.Preferences.Core.Actual_jvmAndroidKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.MutablePreferences.AsMap() -> System.Collections.Generic.IDictionary<AndroidX.DataStore.Preferences.Core.Preferences.Key!, Java.Lang.Object!>!
override AndroidX.DataStore.Preferences.Core.MutablePreferences.Contains(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> bool
override AndroidX.DataStore.Preferences.Core.MutablePreferences.Get(AndroidX.DataStore.Preferences.Core.Preferences.Key! key) -> Java.Lang.Object?
override AndroidX.DataStore.Preferences.Core.MutablePreferences.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.Preferences.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.Preferences.Key.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.Preferences.Pair.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.Preferences.ThresholdClass.get -> nint
override AndroidX.DataStore.Preferences.Core.Preferences.ThresholdType.get -> System.Type!
override AndroidX.DataStore.Preferences.Core.PreferencesFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.PreferencesKeys.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.PreferencesKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.PreferencesSerializer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DataStore.Preferences.Core.PreferencesSerializer.WhenMappings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory.Instance.get -> AndroidX.DataStore.Preferences.Core.PreferenceDataStoreFactory!
static AndroidX.DataStore.Preferences.Core.PreferencesFactory.Create(params AndroidX.DataStore.Preferences.Core.Preferences.Pair![]! pairs) -> AndroidX.DataStore.Preferences.Core.Preferences!
static AndroidX.DataStore.Preferences.Core.PreferencesFactory.CreateEmpty() -> AndroidX.DataStore.Preferences.Core.Preferences!
static AndroidX.DataStore.Preferences.Core.PreferencesFactory.CreateMutable(params AndroidX.DataStore.Preferences.Core.Preferences.Pair![]! pairs) -> AndroidX.DataStore.Preferences.Core.MutablePreferences!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.BooleanKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.ByteArrayKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.DoubleKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.FloatKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.IntKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.LongKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.StringKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKeys.StringSetKey(string! name) -> AndroidX.DataStore.Preferences.Core.Preferences.Key!
static AndroidX.DataStore.Preferences.Core.PreferencesKt.Edit(AndroidX.DataStore.Core.IDataStore! obj, Kotlin.Jvm.Functions.IFunction2! transform, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
static AndroidX.DataStore.Preferences.Core.PreferencesSerializer.Instance.get -> AndroidX.DataStore.Preferences.Core.PreferencesSerializer!
