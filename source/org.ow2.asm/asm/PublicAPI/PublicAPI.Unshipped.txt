#nullable enable
Xamarin.ObjectWeb.Asm.AnnotationVisitor
Xamarin.ObjectWeb.Asm.AnnotationVisitor.AnnotationVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.AnnotationVisitor.AnnotationVisitor(int api, Xamarin.ObjectWeb.Asm.AnnotationVisitor? annotationVisitor) -> void
Xamarin.ObjectWeb.Asm.AnnotationVisitor.AnnotationVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.AnnotationVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.AnnotationVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.AnnotationVisitor.Av.get -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
Xamarin.ObjectWeb.Asm.AnnotationVisitor.Av.set -> void
Xamarin.ObjectWeb.Asm.Attribute
Xamarin.ObjectWeb.Asm.Attribute.Attribute(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.Attribute.Attribute(string? type) -> void
Xamarin.ObjectWeb.Asm.Attribute.Type.get -> string?
Xamarin.ObjectWeb.Asm.Attribute.Type.set -> void
Xamarin.ObjectWeb.Asm.ByteVector
Xamarin.ObjectWeb.Asm.ByteVector.ByteVector() -> void
Xamarin.ObjectWeb.Asm.ByteVector.ByteVector(int initialCapacity) -> void
Xamarin.ObjectWeb.Asm.ByteVector.ByteVector(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.ClassReader
Xamarin.ObjectWeb.Asm.ClassReader.B.get -> System.Collections.Generic.IList<byte>?
Xamarin.ObjectWeb.Asm.ClassReader.B.set -> void
Xamarin.ObjectWeb.Asm.ClassReader.ClassReader(System.IO.Stream? inputStream) -> void
Xamarin.ObjectWeb.Asm.ClassReader.ClassReader(byte[]? classFile) -> void
Xamarin.ObjectWeb.Asm.ClassReader.ClassReader(byte[]? classFileBuffer, int classFileOffset, int classFileLength) -> void
Xamarin.ObjectWeb.Asm.ClassReader.ClassReader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.ClassReader.ClassReader(string? className) -> void
Xamarin.ObjectWeb.Asm.ClassReader.Header.get -> int
Xamarin.ObjectWeb.Asm.ClassReader.Header.set -> void
Xamarin.ObjectWeb.Asm.ClassTooLargeException
Xamarin.ObjectWeb.Asm.ClassTooLargeException.ClassName.get -> string?
Xamarin.ObjectWeb.Asm.ClassTooLargeException.ClassTooLargeException(string? className, int constantPoolCount) -> void
Xamarin.ObjectWeb.Asm.ClassTooLargeException.ConstantPoolCount.get -> int
Xamarin.ObjectWeb.Asm.ClassVisitor
Xamarin.ObjectWeb.Asm.ClassVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.ClassVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.ClassVisitor.ClassVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.ClassVisitor.ClassVisitor(int api, Xamarin.ObjectWeb.Asm.ClassVisitor? classVisitor) -> void
Xamarin.ObjectWeb.Asm.ClassVisitor.ClassVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.ClassVisitor.Cv.get -> Xamarin.ObjectWeb.Asm.ClassVisitor?
Xamarin.ObjectWeb.Asm.ClassVisitor.Cv.set -> void
Xamarin.ObjectWeb.Asm.ClassWriter
Xamarin.ObjectWeb.Asm.ClassWriter.ClassWriter(Xamarin.ObjectWeb.Asm.ClassReader? classReader, int flags) -> void
Xamarin.ObjectWeb.Asm.ClassWriter.ClassWriter(int flags) -> void
Xamarin.ObjectWeb.Asm.ClassWriter.ClassWriter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.ClassWriter.SetFlags(int flags) -> void
Xamarin.ObjectWeb.Asm.ConstantDynamic
Xamarin.ObjectWeb.Asm.ConstantDynamic.BootstrapMethod.get -> Xamarin.ObjectWeb.Asm.Handle?
Xamarin.ObjectWeb.Asm.ConstantDynamic.BootstrapMethodArgumentCount.get -> int
Xamarin.ObjectWeb.Asm.ConstantDynamic.ConstantDynamic(string? name, string? descriptor, Xamarin.ObjectWeb.Asm.Handle? bootstrapMethod, params Java.Lang.Object![]? bootstrapMethodArguments) -> void
Xamarin.ObjectWeb.Asm.ConstantDynamic.Descriptor.get -> string?
Xamarin.ObjectWeb.Asm.ConstantDynamic.GetBootstrapMethodArgument(int index) -> Java.Lang.Object?
Xamarin.ObjectWeb.Asm.ConstantDynamic.Name.get -> string?
Xamarin.ObjectWeb.Asm.ConstantDynamic.Size.get -> int
Xamarin.ObjectWeb.Asm.FieldVisitor
Xamarin.ObjectWeb.Asm.FieldVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.FieldVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.FieldVisitor.FieldVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.FieldVisitor.FieldVisitor(int api, Xamarin.ObjectWeb.Asm.FieldVisitor? fieldVisitor) -> void
Xamarin.ObjectWeb.Asm.FieldVisitor.FieldVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.FieldVisitor.Fv.get -> Xamarin.ObjectWeb.Asm.FieldVisitor?
Xamarin.ObjectWeb.Asm.FieldVisitor.Fv.set -> void
Xamarin.ObjectWeb.Asm.Handle
Xamarin.ObjectWeb.Asm.Handle.Desc.get -> string?
Xamarin.ObjectWeb.Asm.Handle.Handle(int tag, string? owner, string? name, string? descriptor) -> void
Xamarin.ObjectWeb.Asm.Handle.Handle(int tag, string? owner, string? name, string? descriptor, bool isInterface) -> void
Xamarin.ObjectWeb.Asm.Handle.IsInterface.get -> bool
Xamarin.ObjectWeb.Asm.Handle.Name.get -> string?
Xamarin.ObjectWeb.Asm.Handle.Owner.get -> string?
Xamarin.ObjectWeb.Asm.Handle.Tag.get -> int
Xamarin.ObjectWeb.Asm.IOpcodes
Xamarin.ObjectWeb.Asm.IOpcodes.Double.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.Float.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.Integer.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.Long.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.Null.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.Top.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.IOpcodes.UninitializedThis.get -> Java.Lang.Integer?
Xamarin.ObjectWeb.Asm.Label
Xamarin.ObjectWeb.Asm.Label.Info.get -> Java.Lang.Object?
Xamarin.ObjectWeb.Asm.Label.Info.set -> void
Xamarin.ObjectWeb.Asm.Label.Label() -> void
Xamarin.ObjectWeb.Asm.Label.Label(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.MethodTooLargeException
Xamarin.ObjectWeb.Asm.MethodTooLargeException.ClassName.get -> string?
Xamarin.ObjectWeb.Asm.MethodTooLargeException.CodeSize.get -> int
Xamarin.ObjectWeb.Asm.MethodTooLargeException.Descriptor.get -> string?
Xamarin.ObjectWeb.Asm.MethodTooLargeException.MethodName.get -> string?
Xamarin.ObjectWeb.Asm.MethodTooLargeException.MethodTooLargeException(string? className, string? methodName, string? descriptor, int codeSize) -> void
Xamarin.ObjectWeb.Asm.MethodVisitor
Xamarin.ObjectWeb.Asm.MethodVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.MethodVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.MethodVisitor.MethodVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.MethodVisitor.MethodVisitor(int api, Xamarin.ObjectWeb.Asm.MethodVisitor? methodVisitor) -> void
Xamarin.ObjectWeb.Asm.MethodVisitor.MethodVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.MethodVisitor.Mv.get -> Xamarin.ObjectWeb.Asm.MethodVisitor?
Xamarin.ObjectWeb.Asm.MethodVisitor.Mv.set -> void
Xamarin.ObjectWeb.Asm.ModuleVisitor
Xamarin.ObjectWeb.Asm.ModuleVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.ModuleVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.ModuleVisitor.ModuleVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.ModuleVisitor.ModuleVisitor(int api, Xamarin.ObjectWeb.Asm.ModuleVisitor? moduleVisitor) -> void
Xamarin.ObjectWeb.Asm.ModuleVisitor.ModuleVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.ModuleVisitor.Mv.get -> Xamarin.ObjectWeb.Asm.ModuleVisitor?
Xamarin.ObjectWeb.Asm.ModuleVisitor.Mv.set -> void
Xamarin.ObjectWeb.Asm.Opcodes
Xamarin.ObjectWeb.Asm.OpcodesConsts
Xamarin.ObjectWeb.Asm.RecordComponentVisitor
Xamarin.ObjectWeb.Asm.RecordComponentVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.RecordComponentVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.RecordComponentVisitor.RecordComponentVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.RecordComponentVisitor.RecordComponentVisitor(int api, Xamarin.ObjectWeb.Asm.RecordComponentVisitor? recordComponentVisitor) -> void
Xamarin.ObjectWeb.Asm.RecordComponentVisitor.RecordComponentVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureReader
Xamarin.ObjectWeb.Asm.Signature.SignatureReader.SignatureReader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureReader.SignatureReader(string? signature) -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor
Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.Api.get -> int
Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.Api.set -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.SignatureVisitor(int api) -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.SignatureVisitor(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureWriter
Xamarin.ObjectWeb.Asm.Signature.SignatureWriter.SignatureWriter() -> void
Xamarin.ObjectWeb.Asm.Signature.SignatureWriter.SignatureWriter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Xamarin.ObjectWeb.Asm.Type
Xamarin.ObjectWeb.Asm.Type.ArgumentCount.get -> int
Xamarin.ObjectWeb.Asm.Type.ArgumentsAndReturnSizes.get -> int
Xamarin.ObjectWeb.Asm.Type.ClassName.get -> string?
Xamarin.ObjectWeb.Asm.Type.Descriptor.get -> string?
Xamarin.ObjectWeb.Asm.Type.Dimensions.get -> int
Xamarin.ObjectWeb.Asm.Type.ElementType.get -> Xamarin.ObjectWeb.Asm.Type?
Xamarin.ObjectWeb.Asm.Type.GetArgumentTypes() -> Xamarin.ObjectWeb.Asm.Type![]?
Xamarin.ObjectWeb.Asm.Type.GetOpcode(int opcode) -> int
Xamarin.ObjectWeb.Asm.Type.InternalName.get -> string?
Xamarin.ObjectWeb.Asm.Type.ReturnType.get -> Xamarin.ObjectWeb.Asm.Type?
Xamarin.ObjectWeb.Asm.Type.Size.get -> int
Xamarin.ObjectWeb.Asm.Type.Sort.get -> int
Xamarin.ObjectWeb.Asm.TypePath
Xamarin.ObjectWeb.Asm.TypePath.GetStep(int index) -> int
Xamarin.ObjectWeb.Asm.TypePath.GetStepArgument(int index) -> int
Xamarin.ObjectWeb.Asm.TypePath.Length.get -> int
Xamarin.ObjectWeb.Asm.TypeReference
Xamarin.ObjectWeb.Asm.TypeReference.TypeReference(int typeRef) -> void
Xamarin.ObjectWeb.Asm.TypeReference.TypeReference(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Xamarin.ObjectWeb.Asm.ClassReader.ExpandFrames = 8 -> int
const Xamarin.ObjectWeb.Asm.ClassReader.SkipCode = 1 -> int
const Xamarin.ObjectWeb.Asm.ClassReader.SkipDebug = 2 -> int
const Xamarin.ObjectWeb.Asm.ClassReader.SkipFrames = 4 -> int
const Xamarin.ObjectWeb.Asm.ClassWriter.ComputeFrames = 2 -> int
const Xamarin.ObjectWeb.Asm.ClassWriter.ComputeMaxs = 1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Aaload = 50 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Aastore = 83 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccAbstract = 1024 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccAnnotation = 8192 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccBridge = 64 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccDeprecated = 131072 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccEnum = 16384 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccFinal = 16 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccInterface = 512 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccMandated = 32768 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccModule = 32768 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccNative = 256 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccOpen = 32 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccPrivate = 2 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccProtected = 4 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccPublic = 1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccRecord = 65536 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccStatic = 8 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccStaticPhase = 64 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccStrict = 2048 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccSuper = 32 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccSynchronized = 32 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccSynthetic = 4096 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccTransient = 128 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccTransitive = 32 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccVarargs = 128 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AccVolatile = 64 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.AconstNull = 1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Aload = 25 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Anewarray = 189 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Areturn = 176 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Arraylength = 190 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm10Experimental = 17432576 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm4 = 262144 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm5 = 327680 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm6 = 393216 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm7 = 458752 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm8 = 524288 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Asm9 = 589824 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Astore = 58 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Athrow = 191 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Baload = 51 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Bastore = 84 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Bipush = 16 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Caload = 52 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Castore = 85 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Checkcast = 192 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.D2f = 144 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.D2i = 142 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.D2l = 143 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dadd = 99 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Daload = 49 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dastore = 82 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dcmpg = 152 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dcmpl = 151 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dconst0 = 14 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dconst1 = 15 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ddiv = 111 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dload = 24 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dmul = 107 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dneg = 119 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Drem = 115 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dreturn = 175 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dstore = 57 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dsub = 103 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dup = 89 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dup2 = 92 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dup2X1 = 93 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Dup2X2 = 94 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.DupX1 = 90 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.DupX2 = 91 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.F2d = 141 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.F2i = 139 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.F2l = 140 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FAppend = 1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FChop = 2 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FFull = 0 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FNew = -1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FSame = 3 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.FSame1 = 4 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fadd = 98 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Faload = 48 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fastore = 81 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fcmpg = 150 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fcmpl = 149 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fconst0 = 11 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fconst1 = 12 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fconst2 = 13 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fdiv = 110 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fload = 23 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fmul = 106 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fneg = 118 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Frem = 114 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Freturn = 174 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fstore = 56 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Fsub = 102 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Getfield = 180 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Getstatic = 178 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Goto = 167 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HGetfield = 1 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HGetstatic = 2 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HInvokeinterface = 9 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HInvokespecial = 7 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HInvokestatic = 6 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HInvokevirtual = 5 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HNewinvokespecial = 8 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HPutfield = 3 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.HPutstatic = 4 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2b = 145 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2c = 146 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2d = 135 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2f = 134 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2l = 133 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.I2s = 147 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iadd = 96 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iaload = 46 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iand = 126 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iastore = 79 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst0 = 3 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst1 = 4 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst2 = 5 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst3 = 6 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst4 = 7 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iconst5 = 8 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IconstM1 = 2 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Idiv = 108 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfAcmpeq = 165 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfAcmpne = 166 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmpeq = 159 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmpge = 162 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmpgt = 163 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmple = 164 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmplt = 161 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.IfIcmpne = 160 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifeq = 153 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifge = 156 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifgt = 157 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifle = 158 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iflt = 155 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifne = 154 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifnonnull = 199 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ifnull = 198 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iinc = 132 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iload = 21 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Imul = 104 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ineg = 116 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Instanceof = 193 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Invokedynamic = 186 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Invokeinterface = 185 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Invokespecial = 183 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Invokestatic = 184 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Invokevirtual = 182 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ior = 128 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Irem = 112 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ireturn = 172 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ishl = 120 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ishr = 122 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Istore = 54 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Isub = 100 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Iushr = 124 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ixor = 130 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Jsr = 168 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.L2d = 138 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.L2f = 137 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.L2i = 136 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ladd = 97 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Laload = 47 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Land = 127 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lastore = 80 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lcmp = 148 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lconst0 = 9 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lconst1 = 10 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ldc = 18 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ldiv = 109 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lload = 22 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lmul = 105 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lneg = 117 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lookupswitch = 171 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lor = 129 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lrem = 113 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lreturn = 173 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lshl = 121 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lshr = 123 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lstore = 55 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lsub = 101 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lushr = 125 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Lxor = 131 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Monitorenter = 194 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Monitorexit = 195 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Multianewarray = 197 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.New = 187 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Newarray = 188 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Nop = 0 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Pop = 87 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Pop2 = 88 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Putfield = 181 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Putstatic = 179 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Ret = 169 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Return = 177 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Saload = 53 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Sastore = 86 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Sipush = 17 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.SourceDeprecated = 256 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.SourceMask = 256 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Swap = 95 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TBoolean = 4 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TByte = 8 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TChar = 5 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TDouble = 7 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TFloat = 6 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TInt = 10 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TLong = 11 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.TShort = 9 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.Tableswitch = 170 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V10 = 54 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V11 = 55 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V12 = 56 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V13 = 57 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V14 = 58 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V15 = 59 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V16 = 60 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V17 = 61 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V18 = 62 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V19 = 63 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V20 = 64 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V21 = 65 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V22 = 66 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V23 = 67 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V24 = 68 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V25 = 69 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.V9 = 53 -> int
const Xamarin.ObjectWeb.Asm.Opcodes.VPreview = -65536 -> int
const Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.Extends = '+' -> char
const Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.Instanceof = '=' -> char
const Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.Super = '-' -> char
const Xamarin.ObjectWeb.Asm.Type.Array = 9 -> int
const Xamarin.ObjectWeb.Asm.Type.Boolean = 1 -> int
const Xamarin.ObjectWeb.Asm.Type.Byte = 3 -> int
const Xamarin.ObjectWeb.Asm.Type.Char = 2 -> int
const Xamarin.ObjectWeb.Asm.Type.Double = 8 -> int
const Xamarin.ObjectWeb.Asm.Type.Float = 6 -> int
const Xamarin.ObjectWeb.Asm.Type.Int = 5 -> int
const Xamarin.ObjectWeb.Asm.Type.Long = 7 -> int
const Xamarin.ObjectWeb.Asm.Type.Method = 11 -> int
const Xamarin.ObjectWeb.Asm.Type.Object = 10 -> int
const Xamarin.ObjectWeb.Asm.Type.Short = 4 -> int
const Xamarin.ObjectWeb.Asm.Type.Void = 0 -> int
const Xamarin.ObjectWeb.Asm.TypePath.ArrayElement = 0 -> int
const Xamarin.ObjectWeb.Asm.TypePath.InnerType = 1 -> int
const Xamarin.ObjectWeb.Asm.TypePath.TypeArgument = 3 -> int
const Xamarin.ObjectWeb.Asm.TypePath.WildcardBound = 2 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.Cast = 71 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ClassExtends = 16 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ClassTypeParameter = 0 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ClassTypeParameterBound = 17 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ConstructorInvocationTypeArgument = 72 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ConstructorReference = 69 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ConstructorReferenceTypeArgument = 74 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ExceptionParameter = 66 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.Field = 19 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.Instanceof = 67 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.LocalVariable = 64 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodFormalParameter = 22 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodInvocationTypeArgument = 73 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodReceiver = 21 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodReference = 70 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodReferenceTypeArgument = 75 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodReturn = 20 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodTypeParameter = 1 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.MethodTypeParameterBound = 18 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.New = 68 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.ResourceVariable = 65 -> int
const Xamarin.ObjectWeb.Asm.TypeReference.Throws = 23 -> int
override Xamarin.ObjectWeb.Asm.AnnotationVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.AnnotationVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.AnnotationVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Attribute.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Attribute.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.Attribute.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ByteVector.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ByteVector.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.ByteVector.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ClassReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ClassReader.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.ClassReader.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ClassTooLargeException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ClassVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ClassVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.ClassVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ClassWriter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ClassWriter.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.ClassWriter.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ConstantDynamic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.FieldVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.FieldVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.FieldVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Handle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Label.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Label.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.Label.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.MethodTooLargeException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.MethodVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.MethodVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.MethodVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.ModuleVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.ModuleVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.ModuleVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.RecordComponentVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.RecordComponentVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.RecordComponentVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Signature.SignatureReader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Signature.SignatureReader.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.Signature.SignatureReader.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Signature.SignatureWriter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.Signature.SignatureWriter.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.Signature.SignatureWriter.ThresholdType.get -> System.Type!
override Xamarin.ObjectWeb.Asm.Type.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.TypePath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.TypeReference.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Xamarin.ObjectWeb.Asm.TypeReference.ThresholdClass.get -> nint
override Xamarin.ObjectWeb.Asm.TypeReference.ThresholdType.get -> System.Type!
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.Visit(int version, int access, string? name, string? signature, string? superName, string![]? interfaces) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitAnnotation(string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitAttribute(Xamarin.ObjectWeb.Asm.Attribute? attribute) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitEnd() -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitField(int access, string? name, string? descriptor, string? signature, Java.Lang.Object? value) -> Xamarin.ObjectWeb.Asm.FieldVisitor?
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitInnerClass(string? name, string? outerName, string? innerName, int access) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitMethod(int access, string? name, string? descriptor, string? signature, string![]? exceptions) -> Xamarin.ObjectWeb.Asm.MethodVisitor?
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitModule(string? name, int access, string? version) -> Xamarin.ObjectWeb.Asm.ModuleVisitor?
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitNestHost(string? nestHost) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitNestMember(string? nestMember) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitOuterClass(string? owner, string? name, string? descriptor) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitPermittedSubclass(string? permittedSubclass) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitRecordComponent(string? name, string? descriptor, string? signature) -> Xamarin.ObjectWeb.Asm.RecordComponentVisitor?
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitSource(string? file, string? debug) -> void
override sealed Xamarin.ObjectWeb.Asm.ClassWriter.VisitTypeAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
static Xamarin.ObjectWeb.Asm.Attribute.Read(Xamarin.ObjectWeb.Asm.Attribute? attribute, Xamarin.ObjectWeb.Asm.ClassReader? classReader, int offset, int length, char[]? charBuffer, int codeAttributeOffset, Xamarin.ObjectWeb.Asm.Label![]? labels) -> Xamarin.ObjectWeb.Asm.Attribute?
static Xamarin.ObjectWeb.Asm.Attribute.ReadLabel(Xamarin.ObjectWeb.Asm.ClassReader? classReader, int bytecodeOffset, Xamarin.ObjectWeb.Asm.Label![]? labels) -> Xamarin.ObjectWeb.Asm.Label?
static Xamarin.ObjectWeb.Asm.Attribute.Write(Xamarin.ObjectWeb.Asm.Attribute? attribute, Xamarin.ObjectWeb.Asm.ClassWriter? classWriter, byte[]? code, int codeLength, int maxStack, int maxLocals) -> byte[]?
static Xamarin.ObjectWeb.Asm.Opcodes.Double.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.Float.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.Integer.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.Long.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.Null.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.Top.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Opcodes.UninitializedThis.get -> Java.Lang.Integer?
static Xamarin.ObjectWeb.Asm.Type.BooleanType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.ByteType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.CharType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.DoubleType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.FloatType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetArgumentCount(string? methodDescriptor) -> int
static Xamarin.ObjectWeb.Asm.Type.GetArgumentTypes(Java.Lang.Reflect.Method? method) -> Xamarin.ObjectWeb.Asm.Type![]?
static Xamarin.ObjectWeb.Asm.Type.GetArgumentTypes(string? methodDescriptor) -> Xamarin.ObjectWeb.Asm.Type![]?
static Xamarin.ObjectWeb.Asm.Type.GetArgumentsAndReturnSizes(string? methodDescriptor) -> int
static Xamarin.ObjectWeb.Asm.Type.GetConstructorDescriptor(Java.Lang.Reflect.Constructor? constructor) -> string?
static Xamarin.ObjectWeb.Asm.Type.GetDescriptor(Java.Lang.Class? clazz) -> string?
static Xamarin.ObjectWeb.Asm.Type.GetInternalName(Java.Lang.Class? clazz) -> string?
static Xamarin.ObjectWeb.Asm.Type.GetMethodDescriptor(Java.Lang.Reflect.Method? method) -> string?
static Xamarin.ObjectWeb.Asm.Type.GetMethodDescriptor(Xamarin.ObjectWeb.Asm.Type? returnType, params Xamarin.ObjectWeb.Asm.Type![]? argumentTypes) -> string?
static Xamarin.ObjectWeb.Asm.Type.GetMethodType(Xamarin.ObjectWeb.Asm.Type? returnType, params Xamarin.ObjectWeb.Asm.Type![]? argumentTypes) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetMethodType(string? methodDescriptor) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetObjectType(string? internalName) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetReturnType(Java.Lang.Reflect.Method? method) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetReturnType(string? methodDescriptor) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetType(Java.Lang.Class? clazz) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetType(Java.Lang.Reflect.Constructor? constructor) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetType(Java.Lang.Reflect.Method? method) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.GetType(string? typeDescriptor) -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.IntType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.LongType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.ShortType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.Type.VoidType.get -> Xamarin.ObjectWeb.Asm.Type?
static Xamarin.ObjectWeb.Asm.TypePath.FromString(string? typePath) -> Xamarin.ObjectWeb.Asm.TypePath?
static Xamarin.ObjectWeb.Asm.TypeReference.NewExceptionReference(int exceptionIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewFormalParameterReference(int paramIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewSuperTypeReference(int itfIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewTryCatchReference(int tryCatchBlockIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewTypeArgumentReference(int sort, int argIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewTypeParameterBoundReference(int sort, int paramIndex, int boundIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewTypeParameterReference(int sort, int paramIndex) -> Xamarin.ObjectWeb.Asm.TypeReference?
static Xamarin.ObjectWeb.Asm.TypeReference.NewTypeReference(int sort) -> Xamarin.ObjectWeb.Asm.TypeReference?
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.Visit(string? name, Java.Lang.Object? value) -> void
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.VisitAnnotation(string? name, string? descriptor) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.VisitArray(string? name) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.AnnotationVisitor.VisitEnum(string? name, string? descriptor, string? value) -> void
virtual Xamarin.ObjectWeb.Asm.Attribute.GetLabels() -> Xamarin.ObjectWeb.Asm.Label![]?
virtual Xamarin.ObjectWeb.Asm.Attribute.IsCodeAttribute.get -> bool
virtual Xamarin.ObjectWeb.Asm.Attribute.IsUnknown.get -> bool
virtual Xamarin.ObjectWeb.Asm.Attribute.Read(Xamarin.ObjectWeb.Asm.ClassReader? classReader, int offset, int length, char[]? charBuffer, int codeAttributeOffset, Xamarin.ObjectWeb.Asm.Label![]? labels) -> Xamarin.ObjectWeb.Asm.Attribute?
virtual Xamarin.ObjectWeb.Asm.Attribute.Write(Xamarin.ObjectWeb.Asm.ClassWriter? classWriter, byte[]? code, int codeLength, int maxStack, int maxLocals) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutByte(int byteValue) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutByteArray(byte[]? byteArrayValue, int byteOffset, int byteLength) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutInt(int intValue) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutLong(long longValue) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutShort(int shortValue) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.PutUTF8(string? stringValue) -> Xamarin.ObjectWeb.Asm.ByteVector?
virtual Xamarin.ObjectWeb.Asm.ByteVector.Size() -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.Accept(Xamarin.ObjectWeb.Asm.ClassVisitor? classVisitor, Xamarin.ObjectWeb.Asm.Attribute![]? attributePrototypes, int parsingOptions) -> void
virtual Xamarin.ObjectWeb.Asm.ClassReader.Accept(Xamarin.ObjectWeb.Asm.ClassVisitor? classVisitor, int parsingOptions) -> void
virtual Xamarin.ObjectWeb.Asm.ClassReader.Access.get -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.ClassName.get -> string?
virtual Xamarin.ObjectWeb.Asm.ClassReader.GetInterfaces() -> string![]?
virtual Xamarin.ObjectWeb.Asm.ClassReader.GetItem(int constantPoolEntryIndex) -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.ItemCount.get -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.MaxStringLength.get -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadByte(int offset) -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadBytecodeInstructionOffset(int bytecodeOffset) -> void
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadBytes(int offset, int length) -> byte[]?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadClass(int offset, char[]? charBuffer) -> string?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadConst(int constantPoolEntryIndex, char[]? charBuffer) -> Java.Lang.Object?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadInt(int offset) -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadLabel(int bytecodeOffset, Xamarin.ObjectWeb.Asm.Label![]? labels) -> Xamarin.ObjectWeb.Asm.Label?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadLong(int offset) -> long
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadModule(int offset, char[]? charBuffer) -> string?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadPackage(int offset, char[]? charBuffer) -> string?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadShort(int offset) -> short
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadUTF8(int offset, char[]? charBuffer) -> string?
virtual Xamarin.ObjectWeb.Asm.ClassReader.ReadUnsignedShort(int offset) -> int
virtual Xamarin.ObjectWeb.Asm.ClassReader.SuperName.get -> string?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.ClassVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.Visit(int version, int access, string? name, string? signature, string? superName, string![]? interfaces) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitAnnotation(string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitAttribute(Xamarin.ObjectWeb.Asm.Attribute? attribute) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitField(int access, string? name, string? descriptor, string? signature, Java.Lang.Object? value) -> Xamarin.ObjectWeb.Asm.FieldVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitInnerClass(string? name, string? outerName, string? innerName, int access) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitMethod(int access, string? name, string? descriptor, string? signature, string![]? exceptions) -> Xamarin.ObjectWeb.Asm.MethodVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitModule(string? name, int access, string? version) -> Xamarin.ObjectWeb.Asm.ModuleVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitNestHost(string? nestHost) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitNestMember(string? nestMember) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitOuterClass(string? owner, string? name, string? descriptor) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitPermittedSubclass(string? permittedSubclass) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitRecordComponent(string? name, string? descriptor, string? signature) -> Xamarin.ObjectWeb.Asm.RecordComponentVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitSource(string? source, string? debug) -> void
virtual Xamarin.ObjectWeb.Asm.ClassVisitor.VisitTypeAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.ClassWriter.ClassLoader.get -> Java.Lang.ClassLoader?
virtual Xamarin.ObjectWeb.Asm.ClassWriter.GetCommonSuperClass(string? type1, string? type2) -> string?
virtual Xamarin.ObjectWeb.Asm.ClassWriter.HasFlags(int flags) -> bool
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewClass(string? value) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewConst(Java.Lang.Object? value) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewConstantDynamic(string? name, string? descriptor, Xamarin.ObjectWeb.Asm.Handle? bootstrapMethodHandle, params Java.Lang.Object![]? bootstrapMethodArguments) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewField(string? owner, string? name, string? descriptor) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewHandle(int tag, string? owner, string? name, string? descriptor) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewHandle(int tag, string? owner, string? name, string? descriptor, bool isInterface) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewInvokeDynamic(string? name, string? descriptor, Xamarin.ObjectWeb.Asm.Handle? bootstrapMethodHandle, params Java.Lang.Object![]? bootstrapMethodArguments) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewMethod(string? owner, string? name, string? descriptor, bool isInterface) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewMethodType(string? methodDescriptor) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewModule(string? moduleName) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewNameType(string? name, string? descriptor) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewPackage(string? packageName) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.NewUTF8(string? value) -> int
virtual Xamarin.ObjectWeb.Asm.ClassWriter.ToByteArray() -> byte[]?
virtual Xamarin.ObjectWeb.Asm.FieldVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.FieldVisitor?
virtual Xamarin.ObjectWeb.Asm.FieldVisitor.VisitAnnotation(string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.FieldVisitor.VisitAttribute(Xamarin.ObjectWeb.Asm.Attribute? attribute) -> void
virtual Xamarin.ObjectWeb.Asm.FieldVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.FieldVisitor.VisitTypeAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.Label.Offset.get -> int
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.MethodVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitAnnotableParameterCount(int parameterCount, bool visible) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitAnnotation(string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitAnnotationDefault() -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitAttribute(Xamarin.ObjectWeb.Asm.Attribute? attribute) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitCode() -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitFieldInsn(int opcode, string? owner, string? name, string? descriptor) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitFrame(int type, int numLocal, Java.Lang.Object![]? local, int numStack, Java.Lang.Object![]? stack) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitIincInsn(int varIndex, int increment) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitInsn(int opcode) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitInsnAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitIntInsn(int opcode, int operand) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitInvokeDynamicInsn(string? name, string? descriptor, Xamarin.ObjectWeb.Asm.Handle? bootstrapMethodHandle, params Java.Lang.Object![]? bootstrapMethodArguments) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitJumpInsn(int opcode, Xamarin.ObjectWeb.Asm.Label? label) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLabel(Xamarin.ObjectWeb.Asm.Label? label) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLdcInsn(Java.Lang.Object? value) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLineNumber(int line, Xamarin.ObjectWeb.Asm.Label? start) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLocalVariable(string? name, string? descriptor, string? signature, Xamarin.ObjectWeb.Asm.Label? start, Xamarin.ObjectWeb.Asm.Label? end, int index) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLocalVariableAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, Xamarin.ObjectWeb.Asm.Label![]? start, Xamarin.ObjectWeb.Asm.Label![]? end, int[]? index, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitLookupSwitchInsn(Xamarin.ObjectWeb.Asm.Label? dflt, int[]? keys, Xamarin.ObjectWeb.Asm.Label![]? labels) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitMaxs(int maxStack, int maxLocals) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitMethodInsn(int opcode, string? owner, string? name, string? descriptor) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitMethodInsn(int opcode, string? owner, string? name, string? descriptor, bool isInterface) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitMultiANewArrayInsn(string? descriptor, int numDimensions) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitParameter(string? name, int access) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitParameterAnnotation(int parameter, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitTableSwitchInsn(int min, int max, Xamarin.ObjectWeb.Asm.Label? dflt, params Xamarin.ObjectWeb.Asm.Label![]? labels) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitTryCatchAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitTryCatchBlock(Xamarin.ObjectWeb.Asm.Label? start, Xamarin.ObjectWeb.Asm.Label? end, Xamarin.ObjectWeb.Asm.Label? handler, string? type) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitTypeAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitTypeInsn(int opcode, string? type) -> void
virtual Xamarin.ObjectWeb.Asm.MethodVisitor.VisitVarInsn(int opcode, int varIndex) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.ModuleVisitor?
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitExport(string? packaze, int access, params string![]? modules) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitMainClass(string? mainClass) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitOpen(string? packaze, int access, params string![]? modules) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitPackage(string? packaze) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitProvide(string? service, params string![]? providers) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitRequire(string? module, int access, string? version) -> void
virtual Xamarin.ObjectWeb.Asm.ModuleVisitor.VisitUse(string? service) -> void
virtual Xamarin.ObjectWeb.Asm.RecordComponentVisitor.Delegate.get -> Xamarin.ObjectWeb.Asm.RecordComponentVisitor?
virtual Xamarin.ObjectWeb.Asm.RecordComponentVisitor.VisitAnnotation(string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.RecordComponentVisitor.VisitAttribute(Xamarin.ObjectWeb.Asm.Attribute? attribute) -> void
virtual Xamarin.ObjectWeb.Asm.RecordComponentVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.RecordComponentVisitor.VisitTypeAnnotation(int typeRef, Xamarin.ObjectWeb.Asm.TypePath? typePath, string? descriptor, bool visible) -> Xamarin.ObjectWeb.Asm.AnnotationVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureReader.Accept(Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor? signatureVistor) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureReader.AcceptType(Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor? signatureVisitor) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitArrayType() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitBaseType(char descriptor) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitClassBound() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitClassType(string? name) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitEnd() -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitExceptionType() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitFormalTypeParameter(string? name) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitInnerClassType(string? name) -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitInterface() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitInterfaceBound() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitParameterType() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitReturnType() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitSuperclass() -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitTypeArgument() -> void
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitTypeArgument(char wildcard) -> Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor?
virtual Xamarin.ObjectWeb.Asm.Signature.SignatureVisitor.VisitTypeVariable(string? name) -> void
virtual Xamarin.ObjectWeb.Asm.TypeReference.ExceptionIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.FormalParameterIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.Sort.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.SuperTypeIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.TryCatchBlockIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.TypeArgumentIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.TypeParameterBoundIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.TypeParameterIndex.get -> int
virtual Xamarin.ObjectWeb.Asm.TypeReference.Value.get -> int
