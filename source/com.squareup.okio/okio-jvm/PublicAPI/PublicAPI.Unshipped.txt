#nullable enable
Square.OkIO.AsyncTimeout
Square.OkIO.AsyncTimeout.AsyncTimeout() -> void
Square.OkIO.AsyncTimeout.AsyncTimeout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.AsyncTimeout.Enter() -> void
Square.OkIO.AsyncTimeout.Exit() -> bool
Square.OkIO.AsyncTimeout.Sink(Square.OkIO.ISink! sink) -> Square.OkIO.ISink!
Square.OkIO.AsyncTimeout.Source(Square.OkIO.ISource! source) -> Square.OkIO.ISource!
Square.OkIO.AsyncTimeout.WithTimeout(Kotlin.Jvm.Functions.IFunction0! block) -> Java.Lang.Object?
Square.OkIO.ByteString
Square.OkIO.ByteString.ByteString(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.ByteString.CompanionStatic
Square.OkIO.ByteString.CompanionStatic.DecodeBase64(string! base64) -> Square.OkIO.ByteString?
Square.OkIO.ByteString.CompanionStatic.DecodeHex(string! hex) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.EncodeString(string! s, Java.Nio.Charset.Charset! charset) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.EncodeUtf8(string! s) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.Of(Java.Nio.ByteBuffer! data) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.Of(byte[]! data, int offset, int byteCount) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.Of(params byte[]! data) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.CompanionStatic.Read(System.IO.Stream! in, int byteCount) -> Square.OkIO.ByteString!
Square.OkIO.ByteString.EndsWith(Square.OkIO.ByteString! suffix) -> bool
Square.OkIO.ByteString.EndsWith(byte[]! suffix) -> bool
Square.OkIO.ByteString.GetByte(int index) -> sbyte
Square.OkIO.ByteString.IndexOf(Square.OkIO.ByteString! other) -> int
Square.OkIO.ByteString.IndexOf(Square.OkIO.ByteString! other, int fromIndex) -> int
Square.OkIO.ByteString.IndexOf(byte[]! other) -> int
Square.OkIO.ByteString.LastIndexOf(Square.OkIO.ByteString! other) -> int
Square.OkIO.ByteString.LastIndexOf(Square.OkIO.ByteString! other, int fromIndex) -> int
Square.OkIO.ByteString.LastIndexOf(byte[]! other) -> int
Square.OkIO.ByteString.Md5() -> Square.OkIO.ByteString!
Square.OkIO.ByteString.Sha1() -> Square.OkIO.ByteString!
Square.OkIO.ByteString.Sha256() -> Square.OkIO.ByteString!
Square.OkIO.ByteString.Sha512() -> Square.OkIO.ByteString!
Square.OkIO.ByteString.Size() -> int
Square.OkIO.ByteString.StartsWith(Square.OkIO.ByteString! prefix) -> bool
Square.OkIO.ByteString.StartsWith(byte[]! prefix) -> bool
Square.OkIO.ByteString.Substring() -> Square.OkIO.ByteString!
Square.OkIO.ByteString.Substring(int beginIndex) -> Square.OkIO.ByteString!
Square.OkIO.CipherSink
Square.OkIO.CipherSink.Cipher.get -> Javax.Crypto.Cipher!
Square.OkIO.CipherSink.CipherSink(Square.OkIO.IBufferedSink! sink, Javax.Crypto.Cipher! cipher) -> void
Square.OkIO.CipherSink.Close() -> void
Square.OkIO.CipherSink.Flush() -> void
Square.OkIO.CipherSink.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.CipherSink.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.CipherSource
Square.OkIO.CipherSource.Cipher.get -> Javax.Crypto.Cipher!
Square.OkIO.CipherSource.CipherSource(Square.OkIO.IBufferedSource! source, Javax.Crypto.Cipher! cipher) -> void
Square.OkIO.CipherSource.Close() -> void
Square.OkIO.CipherSource.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.CipherSource.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.DeflaterSink
Square.OkIO.DeflaterSink.Close() -> void
Square.OkIO.DeflaterSink.DeflaterSink(Square.OkIO.ISink! sink, Java.Util.Zip.Deflater! deflater) -> void
Square.OkIO.DeflaterSink.Flush() -> void
Square.OkIO.DeflaterSink.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.DeflaterSink.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.ExperimentalFileSystemAttribute
Square.OkIO.ExperimentalFileSystemAttribute.ExperimentalFileSystemAttribute() -> void
Square.OkIO.FileHandle
Square.OkIO.FileHandle.AppendingSink() -> Square.OkIO.ISink!
Square.OkIO.FileHandle.Close() -> void
Square.OkIO.FileHandle.FileHandle(bool readWrite) -> void
Square.OkIO.FileHandle.FileHandle(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.FileHandle.Flush() -> void
Square.OkIO.FileHandle.Lock.get -> Java.Util.Concurrent.Locks.ReentrantLock!
Square.OkIO.FileHandle.Position(Square.OkIO.ISink! sink) -> long
Square.OkIO.FileHandle.Position(Square.OkIO.ISource! source) -> long
Square.OkIO.FileHandle.Read(long fileOffset, Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.FileHandle.Read(long fileOffset, byte[]! array, int arrayOffset, int byteCount) -> int
Square.OkIO.FileHandle.ReadWrite.get -> bool
Square.OkIO.FileHandle.Reposition(Square.OkIO.ISink! sink, long position) -> void
Square.OkIO.FileHandle.Reposition(Square.OkIO.ISource! source, long position) -> void
Square.OkIO.FileHandle.Resize(long size) -> void
Square.OkIO.FileHandle.Sink(long fileOffset) -> Square.OkIO.ISink!
Square.OkIO.FileHandle.Size() -> long
Square.OkIO.FileHandle.Source(long fileOffset) -> Square.OkIO.ISource!
Square.OkIO.FileHandle.Write(long fileOffset, Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.FileHandle.Write(long fileOffset, byte[]! array, int arrayOffset, int byteCount) -> void
Square.OkIO.FileMetadata
Square.OkIO.FileMetadata.Copy(bool isRegularFile, bool isDirectory, Square.OkIO.Path? symlinkTarget, Java.Lang.Long? size, Java.Lang.Long? createdAtMillis, Java.Lang.Long? lastModifiedAtMillis, Java.Lang.Long? lastAccessedAtMillis, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKClass!, Java.Lang.Object!>! extras) -> Square.OkIO.FileMetadata!
Square.OkIO.FileMetadata.CreatedAtMillis.get -> Java.Lang.Long?
Square.OkIO.FileMetadata.Extra(Kotlin.Reflect.IKClass! type) -> Java.Lang.Object?
Square.OkIO.FileMetadata.Extras.get -> System.Collections.Generic.IDictionary<Kotlin.Reflect.IKClass!, Java.Lang.Object!>!
Square.OkIO.FileMetadata.FileMetadata() -> void
Square.OkIO.FileMetadata.FileMetadata(bool isRegularFile, bool isDirectory, Square.OkIO.Path? symlinkTarget, Java.Lang.Long? size, Java.Lang.Long? createdAtMillis, Java.Lang.Long? lastModifiedAtMillis, Java.Lang.Long? lastAccessedAtMillis, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKClass!, Java.Lang.Object!>! extras) -> void
Square.OkIO.FileMetadata.IsDirectory.get -> bool
Square.OkIO.FileMetadata.IsRegularFile.get -> bool
Square.OkIO.FileMetadata.LastAccessedAtMillis.get -> Java.Lang.Long?
Square.OkIO.FileMetadata.LastModifiedAtMillis.get -> Java.Lang.Long?
Square.OkIO.FileMetadata.Size.get -> Java.Lang.Long?
Square.OkIO.FileMetadata.SymlinkTarget.get -> Square.OkIO.Path?
Square.OkIO.FileSystem
Square.OkIO.FileSystem.AppendingSink(Square.OkIO.Path! file) -> Square.OkIO.ISink!
Square.OkIO.FileSystem.CompanionStatic
Square.OkIO.FileSystem.CompanionStatic.Get(Java.Nio.FileNio.FileSystem! _this_asOkioFileSystem) -> Square.OkIO.FileSystem!
Square.OkIO.FileSystem.CreateDirectories(Square.OkIO.Path! dir) -> void
Square.OkIO.FileSystem.CreateDirectories(Square.OkIO.Path! dir, bool mustCreate) -> void
Square.OkIO.FileSystem.CreateDirectory(Square.OkIO.Path! dir) -> void
Square.OkIO.FileSystem.Delete(Square.OkIO.Path! path) -> void
Square.OkIO.FileSystem.DeleteRecursively(Square.OkIO.Path! fileOrDirectory) -> void
Square.OkIO.FileSystem.Exists(Square.OkIO.Path! path) -> bool
Square.OkIO.FileSystem.FileSystem() -> void
Square.OkIO.FileSystem.FileSystem(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.FileSystem.ListRecursively(Square.OkIO.Path! dir) -> Kotlin.Sequences.ISequence!
Square.OkIO.FileSystem.Metadata(Square.OkIO.Path! path) -> Square.OkIO.FileMetadata!
Square.OkIO.FileSystem.OpenReadWrite(Square.OkIO.Path! file) -> Square.OkIO.FileHandle!
Square.OkIO.FileSystem.Sink(Square.OkIO.Path! file) -> Square.OkIO.ISink!
Square.OkIO.ForwardingFileSystem
Square.OkIO.ForwardingFileSystem.Delegate() -> Square.OkIO.FileSystem!
Square.OkIO.ForwardingFileSystem.ForwardingFileSystem(Square.OkIO.FileSystem! delegate) -> void
Square.OkIO.ForwardingFileSystem.ForwardingFileSystem(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.ForwardingSink
Square.OkIO.ForwardingSink.Delegate() -> Square.OkIO.ISink!
Square.OkIO.ForwardingSink.ForwardingSink(Square.OkIO.ISink! delegate) -> void
Square.OkIO.ForwardingSink.ForwardingSink(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.ForwardingSource
Square.OkIO.ForwardingSource.Delegate() -> Square.OkIO.ISource!
Square.OkIO.ForwardingSource.ForwardingSource(Square.OkIO.ISource! delegate) -> void
Square.OkIO.ForwardingSource.ForwardingSource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.ForwardingTimeout
Square.OkIO.ForwardingTimeout.Delegate() -> Square.OkIO.Timeout!
Square.OkIO.ForwardingTimeout.ForwardingTimeout(Square.OkIO.Timeout! delegate) -> void
Square.OkIO.ForwardingTimeout.ForwardingTimeout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.ForwardingTimeout.SetDelegate(Square.OkIO.Timeout! delegate) -> Square.OkIO.ForwardingTimeout!
Square.OkIO.GzipSink
Square.OkIO.GzipSink.Close() -> void
Square.OkIO.GzipSink.Deflater() -> Java.Util.Zip.Deflater!
Square.OkIO.GzipSink.Flush() -> void
Square.OkIO.GzipSink.GzipSink(Square.OkIO.ISink! sink) -> void
Square.OkIO.GzipSink.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.GzipSink.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.GzipSource
Square.OkIO.GzipSource.Close() -> void
Square.OkIO.GzipSource.GzipSource(Square.OkIO.ISource! source) -> void
Square.OkIO.GzipSource.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.GzipSource.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.HashingSink
Square.OkIO.HashingSink.CompanionStatic
Square.OkIO.HashingSink.CompanionStatic.HmacSha1(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.HmacSha256(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.HmacSha512(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.Md5(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.Sha1(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.Sha256(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.CompanionStatic.Sha512(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
Square.OkIO.HashingSink.Hash() -> Square.OkIO.ByteString!
Square.OkIO.HashingSource
Square.OkIO.HashingSource.CompanionStatic
Square.OkIO.HashingSource.CompanionStatic.HmacSha1(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.HmacSha256(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.HmacSha512(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.Md5(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.Sha1(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.Sha256(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.CompanionStatic.Sha512(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
Square.OkIO.HashingSource.Hash() -> Square.OkIO.ByteString!
Square.OkIO.IBufferedSink
Square.OkIO.IBufferedSink.Close() -> void
Square.OkIO.IBufferedSink.Emit() -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.EmitCompleteSegments() -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.Flush() -> void
Square.OkIO.IBufferedSink.GetBuffer() -> Square.OkIO.OkBuffer!
Square.OkIO.IBufferedSink.OutputStream.get -> System.IO.Stream!
Square.OkIO.IBufferedSink.Write(Square.OkIO.ByteString! byteString) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.Write(Square.OkIO.ByteString! byteString, int offset, int byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.Write(Square.OkIO.ISource! source, long byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.Write(byte[]! source) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.Write(byte[]! source, int offset, int byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteAll(Square.OkIO.ISource! source) -> long
Square.OkIO.IBufferedSink.WriteByte(int b) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteDecimalLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteHexadecimalUnsignedLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteInt(int i) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteIntLe(int i) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteLongLe(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteShort(int s) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteShortLe(int s) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteString(string! str, Java.Nio.Charset.Charset! charset) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteString(string! str, int beginIndex, int endIndex, Java.Nio.Charset.Charset! charset) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteUtf8(string! str) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteUtf8(string! str, int beginIndex, int endIndex) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSink.WriteUtf8CodePoint(int codePoint) -> Square.OkIO.IBufferedSink!
Square.OkIO.IBufferedSource
Square.OkIO.IBufferedSource.Close() -> void
Square.OkIO.IBufferedSource.Exhausted() -> bool
Square.OkIO.IBufferedSource.GetBuffer() -> Square.OkIO.OkBuffer!
Square.OkIO.IBufferedSource.IndexOf(Square.OkIO.ByteString! bytes) -> long
Square.OkIO.IBufferedSource.IndexOf(Square.OkIO.ByteString! bytes, long fromIndex) -> long
Square.OkIO.IBufferedSource.IndexOf(Square.OkIO.ByteString! bytes, long fromIndex, long toIndex) -> long
Square.OkIO.IBufferedSource.IndexOf(sbyte b) -> long
Square.OkIO.IBufferedSource.IndexOf(sbyte b, long fromIndex) -> long
Square.OkIO.IBufferedSource.IndexOf(sbyte b, long fromIndex, long toIndex) -> long
Square.OkIO.IBufferedSource.IndexOfElement(Square.OkIO.ByteString! targetBytes) -> long
Square.OkIO.IBufferedSource.IndexOfElement(Square.OkIO.ByteString! targetBytes, long fromIndex) -> long
Square.OkIO.IBufferedSource.InputStream() -> System.IO.Stream!
Square.OkIO.IBufferedSource.Peek() -> Square.OkIO.IBufferedSource!
Square.OkIO.IBufferedSource.RangeEquals(long offset, Square.OkIO.ByteString! bytes) -> bool
Square.OkIO.IBufferedSource.RangeEquals(long offset, Square.OkIO.ByteString! bytes, int bytesOffset, int byteCount) -> bool
Square.OkIO.IBufferedSource.Read(byte[]! sink) -> int
Square.OkIO.IBufferedSource.Read(byte[]! sink, int offset, int byteCount) -> int
Square.OkIO.IBufferedSource.ReadAll(Square.OkIO.ISink! sink) -> long
Square.OkIO.IBufferedSource.ReadByte() -> sbyte
Square.OkIO.IBufferedSource.ReadByteArray() -> byte[]!
Square.OkIO.IBufferedSource.ReadByteArray(long byteCount) -> byte[]!
Square.OkIO.IBufferedSource.ReadByteString() -> Square.OkIO.ByteString!
Square.OkIO.IBufferedSource.ReadByteString(long byteCount) -> Square.OkIO.ByteString!
Square.OkIO.IBufferedSource.ReadDecimalLong() -> long
Square.OkIO.IBufferedSource.ReadFully(Square.OkIO.OkBuffer! sink, long byteCount) -> void
Square.OkIO.IBufferedSource.ReadFully(byte[]! sink) -> void
Square.OkIO.IBufferedSource.ReadHexadecimalUnsignedLong() -> long
Square.OkIO.IBufferedSource.ReadInt() -> int
Square.OkIO.IBufferedSource.ReadIntLe() -> int
Square.OkIO.IBufferedSource.ReadLong() -> long
Square.OkIO.IBufferedSource.ReadLongLe() -> long
Square.OkIO.IBufferedSource.ReadShort() -> short
Square.OkIO.IBufferedSource.ReadShortLe() -> short
Square.OkIO.IBufferedSource.ReadString(Java.Nio.Charset.Charset! charset) -> string!
Square.OkIO.IBufferedSource.ReadString(long byteCount, Java.Nio.Charset.Charset! charset) -> string!
Square.OkIO.IBufferedSource.ReadUtf8() -> string!
Square.OkIO.IBufferedSource.ReadUtf8(long byteCount) -> string!
Square.OkIO.IBufferedSource.ReadUtf8CodePoint() -> int
Square.OkIO.IBufferedSource.ReadUtf8Line() -> string?
Square.OkIO.IBufferedSource.ReadUtf8LineStrict() -> string!
Square.OkIO.IBufferedSource.ReadUtf8LineStrict(long limit) -> string!
Square.OkIO.IBufferedSource.Request(long byteCount) -> bool
Square.OkIO.IBufferedSource.Require(long byteCount) -> void
Square.OkIO.IBufferedSource.Select(Square.OkIO.Options! options) -> int
Square.OkIO.IBufferedSource.Select(Square.OkIO.TypedOptions! options) -> Java.Lang.Object?
Square.OkIO.IBufferedSource.Skip(long byteCount) -> void
Square.OkIO.IExperimentalFileSystem
Square.OkIO.ISink
Square.OkIO.ISink.Flush() -> void
Square.OkIO.ISink.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.ISink.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.ISocket
Square.OkIO.ISocket.Cancel() -> void
Square.OkIO.ISocket.Sink.get -> Square.OkIO.ISink!
Square.OkIO.ISocket.Source.get -> Square.OkIO.ISource!
Square.OkIO.ISource
Square.OkIO.ISource.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.ISource.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.InflaterSource
Square.OkIO.InflaterSource.Close() -> void
Square.OkIO.InflaterSource.InflaterSource(Square.OkIO.ISource! source, Java.Util.Zip.Inflater! inflater) -> void
Square.OkIO.InflaterSource.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.InflaterSource.ReadOrInflate(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.InflaterSource.Refill() -> bool
Square.OkIO.InflaterSource.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.OkBuffer
Square.OkIO.OkBuffer.Buffer.get -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.Clear() -> void
Square.OkIO.OkBuffer.Clone() -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.Close() -> void
Square.OkIO.OkBuffer.CompleteSegmentByteCount() -> long
Square.OkIO.OkBuffer.Copy() -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.CopyTo(Square.OkIO.OkBuffer! out, long offset) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.CopyTo(Square.OkIO.OkBuffer! out, long offset, long byteCount) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.CopyTo(System.IO.Stream! out) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.CopyTo(System.IO.Stream! out, long offset) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.CopyTo(System.IO.Stream! out, long offset, long byteCount) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.Emit() -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.EmitCompleteSegments() -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.Exhausted() -> bool
Square.OkIO.OkBuffer.Flush() -> void
Square.OkIO.OkBuffer.GetBuffer() -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.GetByte(long pos) -> sbyte
Square.OkIO.OkBuffer.HmacSha1(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.HmacSha256(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.HmacSha512(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.IndexOf(Square.OkIO.ByteString! bytes) -> long
Square.OkIO.OkBuffer.IndexOf(Square.OkIO.ByteString! bytes, long fromIndex) -> long
Square.OkIO.OkBuffer.IndexOf(Square.OkIO.ByteString! bytes, long fromIndex, long toIndex) -> long
Square.OkIO.OkBuffer.IndexOf(sbyte b) -> long
Square.OkIO.OkBuffer.IndexOf(sbyte b, long fromIndex) -> long
Square.OkIO.OkBuffer.IndexOf(sbyte b, long fromIndex, long toIndex) -> long
Square.OkIO.OkBuffer.IndexOfElement(Square.OkIO.ByteString! targetBytes) -> long
Square.OkIO.OkBuffer.IndexOfElement(Square.OkIO.ByteString! targetBytes, long fromIndex) -> long
Square.OkIO.OkBuffer.InputStream() -> System.IO.Stream!
Square.OkIO.OkBuffer.IsOpen.get -> bool
Square.OkIO.OkBuffer.Md5() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.OkBuffer() -> void
Square.OkIO.OkBuffer.OutputStream.get -> System.IO.Stream!
Square.OkIO.OkBuffer.Peek() -> Square.OkIO.IBufferedSource!
Square.OkIO.OkBuffer.RangeEquals(long offset, Square.OkIO.ByteString! bytes) -> bool
Square.OkIO.OkBuffer.RangeEquals(long offset, Square.OkIO.ByteString! bytes, int bytesOffset, int byteCount) -> bool
Square.OkIO.OkBuffer.Read(Java.Nio.ByteBuffer! sink) -> int
Square.OkIO.OkBuffer.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
Square.OkIO.OkBuffer.Read(byte[]! sink) -> int
Square.OkIO.OkBuffer.Read(byte[]! sink, int offset, int byteCount) -> int
Square.OkIO.OkBuffer.ReadAll(Square.OkIO.ISink! sink) -> long
Square.OkIO.OkBuffer.ReadAndWriteUnsafe() -> Square.OkIO.OkBuffer.UnsafeCursor!
Square.OkIO.OkBuffer.ReadAndWriteUnsafe(Square.OkIO.OkBuffer.UnsafeCursor! unsafeCursor) -> Square.OkIO.OkBuffer.UnsafeCursor!
Square.OkIO.OkBuffer.ReadByte() -> sbyte
Square.OkIO.OkBuffer.ReadByteArray() -> byte[]!
Square.OkIO.OkBuffer.ReadByteArray(long byteCount) -> byte[]!
Square.OkIO.OkBuffer.ReadByteString() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.ReadByteString(long byteCount) -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.ReadDecimalLong() -> long
Square.OkIO.OkBuffer.ReadFrom(System.IO.Stream! in) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.ReadFrom(System.IO.Stream! in, long byteCount) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.ReadFully(Square.OkIO.OkBuffer! sink, long byteCount) -> void
Square.OkIO.OkBuffer.ReadFully(byte[]! sink) -> void
Square.OkIO.OkBuffer.ReadHexadecimalUnsignedLong() -> long
Square.OkIO.OkBuffer.ReadInt() -> int
Square.OkIO.OkBuffer.ReadIntLe() -> int
Square.OkIO.OkBuffer.ReadLong() -> long
Square.OkIO.OkBuffer.ReadLongLe() -> long
Square.OkIO.OkBuffer.ReadShort() -> short
Square.OkIO.OkBuffer.ReadShortLe() -> short
Square.OkIO.OkBuffer.ReadString(Java.Nio.Charset.Charset! charset) -> string!
Square.OkIO.OkBuffer.ReadString(long byteCount, Java.Nio.Charset.Charset! charset) -> string!
Square.OkIO.OkBuffer.ReadUnsafe() -> Square.OkIO.OkBuffer.UnsafeCursor!
Square.OkIO.OkBuffer.ReadUnsafe(Square.OkIO.OkBuffer.UnsafeCursor! unsafeCursor) -> Square.OkIO.OkBuffer.UnsafeCursor!
Square.OkIO.OkBuffer.ReadUtf8() -> string!
Square.OkIO.OkBuffer.ReadUtf8(long byteCount) -> string!
Square.OkIO.OkBuffer.ReadUtf8CodePoint() -> int
Square.OkIO.OkBuffer.ReadUtf8Line() -> string?
Square.OkIO.OkBuffer.ReadUtf8LineStrict() -> string!
Square.OkIO.OkBuffer.ReadUtf8LineStrict(long limit) -> string!
Square.OkIO.OkBuffer.Request(long byteCount) -> bool
Square.OkIO.OkBuffer.Require(long byteCount) -> void
Square.OkIO.OkBuffer.Select(Square.OkIO.Options! options) -> int
Square.OkIO.OkBuffer.Select(Square.OkIO.TypedOptions! options) -> Java.Lang.Object?
Square.OkIO.OkBuffer.Sha1() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.Sha256() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.Sha512() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.Size() -> long
Square.OkIO.OkBuffer.Skip(long byteCount) -> void
Square.OkIO.OkBuffer.Snapshot() -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.Snapshot(int byteCount) -> Square.OkIO.ByteString!
Square.OkIO.OkBuffer.Timeout() -> Square.OkIO.Timeout!
Square.OkIO.OkBuffer.UnsafeCursor
Square.OkIO.OkBuffer.UnsafeCursor.Buffer.get -> Square.OkIO.OkBuffer?
Square.OkIO.OkBuffer.UnsafeCursor.Buffer.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.Close() -> void
Square.OkIO.OkBuffer.UnsafeCursor.Data.get -> System.Collections.Generic.IList<byte>?
Square.OkIO.OkBuffer.UnsafeCursor.Data.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.End.get -> int
Square.OkIO.OkBuffer.UnsafeCursor.End.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.ExpandBuffer(int minByteCount) -> long
Square.OkIO.OkBuffer.UnsafeCursor.Next() -> int
Square.OkIO.OkBuffer.UnsafeCursor.Offset.get -> long
Square.OkIO.OkBuffer.UnsafeCursor.Offset.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.ReadWrite.get -> bool
Square.OkIO.OkBuffer.UnsafeCursor.ReadWrite.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.ResizeBuffer(long newSize) -> long
Square.OkIO.OkBuffer.UnsafeCursor.Seek(long offset) -> int
Square.OkIO.OkBuffer.UnsafeCursor.Start.get -> int
Square.OkIO.OkBuffer.UnsafeCursor.Start.set -> void
Square.OkIO.OkBuffer.UnsafeCursor.UnsafeCursor() -> void
Square.OkIO.OkBuffer.Write(Java.Nio.ByteBuffer! source) -> int
Square.OkIO.OkBuffer.Write(Square.OkIO.ByteString! byteString) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.Write(Square.OkIO.ByteString! byteString, int offset, int byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.Write(Square.OkIO.ISource! source, long byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
Square.OkIO.OkBuffer.Write(byte[]! source) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.Write(byte[]! source, int offset, int byteCount) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteAll(Square.OkIO.ISource! source) -> long
Square.OkIO.OkBuffer.WriteByte(int b) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteDecimalLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteHexadecimalUnsignedLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteInt(int i) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteIntLe(int i) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteLong(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteLongLe(long v) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteShort(int s) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteShortLe(int s) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteString(string! string, Java.Nio.Charset.Charset! charset) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteString(string! string, int beginIndex, int endIndex, Java.Nio.Charset.Charset! charset) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteTo(System.IO.Stream! out) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.WriteTo(System.IO.Stream! out, long byteCount) -> Square.OkIO.OkBuffer!
Square.OkIO.OkBuffer.WriteUtf8(string! string) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteUtf8(string! string, int beginIndex, int endIndex) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkBuffer.WriteUtf8CodePoint(int codePoint) -> Square.OkIO.IBufferedSink!
Square.OkIO.OkIO
Square.OkIO.Options
Square.OkIO.Options.CompanionStatic
Square.OkIO.Options.CompanionStatic.Of(params Square.OkIO.ByteString![]! byteStrings) -> Square.OkIO.Options!
Square.OkIO.Options.Contains(Square.OkIO.ByteString? o) -> bool
Square.OkIO.Options.GetOption(int i) -> Square.OkIO.ByteString!
Square.OkIO.Options.IndexOf(Square.OkIO.ByteString? o) -> int
Square.OkIO.Options.LastIndexOf(Square.OkIO.ByteString? o) -> int
Square.OkIO.Options.Remove(Java.Lang.Object! o) -> bool
Square.OkIO.Options.RemoveAt(int index) -> Square.OkIO.ByteString!
Square.OkIO.Options.Size() -> int
Square.OkIO.Path
Square.OkIO.Path.CompanionStatic
Square.OkIO.Path.CompanionStatic.Get(Java.IO.File! _this_toOkioPath) -> Square.OkIO.Path!
Square.OkIO.Path.CompanionStatic.Get(Java.IO.File! _this_toOkioPath, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.CompanionStatic.Get(Java.Nio.FileNio.IPath! _this_toOkioPath) -> Square.OkIO.Path!
Square.OkIO.Path.CompanionStatic.Get(Java.Nio.FileNio.IPath! _this_toOkioPath, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.CompanionStatic.Get(string! _this_toPath) -> Square.OkIO.Path!
Square.OkIO.Path.CompanionStatic.Get(string! _this_toPath, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.CompareTo(Java.Lang.Object! other) -> int
Square.OkIO.Path.IsAbsolute.get -> bool
Square.OkIO.Path.IsRelative.get -> bool
Square.OkIO.Path.IsRoot.get -> bool
Square.OkIO.Path.Name() -> string!
Square.OkIO.Path.NameBytes() -> Square.OkIO.ByteString!
Square.OkIO.Path.Normalized() -> Square.OkIO.Path!
Square.OkIO.Path.Parent() -> Square.OkIO.Path?
Square.OkIO.Path.RelativeTo(Square.OkIO.Path! other) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(Square.OkIO.ByteString! child) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(Square.OkIO.ByteString! child, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(Square.OkIO.Path! child) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(Square.OkIO.Path! child, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(string! child) -> Square.OkIO.Path!
Square.OkIO.Path.Resolve(string! child, bool normalize) -> Square.OkIO.Path!
Square.OkIO.Path.Root.get -> Square.OkIO.Path?
Square.OkIO.Path.Segments.get -> System.Collections.Generic.IList<string!>!
Square.OkIO.Path.SegmentsBytes.get -> System.Collections.Generic.IList<Square.OkIO.ByteString!>!
Square.OkIO.Path.ToFile() -> Java.IO.File!
Square.OkIO.Path.ToNioPath() -> Java.Nio.FileNio.IPath!
Square.OkIO.Path.VolumeLetter() -> Java.Lang.Character?
Square.OkIO.Pipe
Square.OkIO.Pipe.Cancel() -> void
Square.OkIO.Pipe.Condition.get -> Java.Util.Concurrent.Locks.ICondition!
Square.OkIO.Pipe.Fold(Square.OkIO.ISink! sink) -> void
Square.OkIO.Pipe.Lock.get -> Java.Util.Concurrent.Locks.ReentrantLock!
Square.OkIO.Pipe.Pipe(long maxBufferSize) -> void
Square.OkIO.Pipe.Sink() -> Square.OkIO.ISink!
Square.OkIO.Pipe.Source() -> Square.OkIO.ISource!
Square.OkIO.SystemFileSystem
Square.OkIO.Throttler
Square.OkIO.Throttler.BytesPerSecond(long bytesPerSecond) -> void
Square.OkIO.Throttler.BytesPerSecond(long bytesPerSecond, long waitByteCount) -> void
Square.OkIO.Throttler.BytesPerSecond(long bytesPerSecond, long waitByteCount, long maxByteCount) -> void
Square.OkIO.Throttler.Condition.get -> Java.Util.Concurrent.Locks.ICondition!
Square.OkIO.Throttler.Lock.get -> Java.Util.Concurrent.Locks.ReentrantLock!
Square.OkIO.Throttler.Sink(Square.OkIO.ISink! sink) -> Square.OkIO.ISink!
Square.OkIO.Throttler.Source(Square.OkIO.ISource! source) -> Square.OkIO.ISource!
Square.OkIO.Throttler.Throttler() -> void
Square.OkIO.Timeout
Square.OkIO.Timeout.CompanionStatic
Square.OkIO.Timeout.CompanionStatic.MinTimeout(long aNanos, long bNanos) -> long
Square.OkIO.Timeout.CompanionStatic.Timeout(Square.OkIO.Timeout! _this_timeout, long timeout, Kotlin.Time.DurationUnit! unit) -> Square.OkIO.Timeout!
Square.OkIO.Timeout.CompanionStatic.Timeout_HG0u8IE(Square.OkIO.Timeout! _this_timeout_u2dHG0u8IE, long duration) -> Square.OkIO.Timeout!
Square.OkIO.Timeout.Deadline(long duration, Java.Util.Concurrent.TimeUnit! unit) -> Square.OkIO.Timeout!
Square.OkIO.Timeout.IntersectWith(Square.OkIO.Timeout! other, Kotlin.Jvm.Functions.IFunction0! block) -> Java.Lang.Object?
Square.OkIO.Timeout.Timeout() -> void
Square.OkIO.Timeout.Timeout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Square.OkIO.TypedOptions
Square.OkIO.TypedOptions.CompanionStatic
Square.OkIO.TypedOptions.CompanionStatic.Of(Java.Lang.IIterable! values, Kotlin.Jvm.Functions.IFunction1! encode) -> Square.OkIO.TypedOptions!
Square.OkIO.TypedOptions.TypedOptions(System.Collections.IList! list, Square.OkIO.Options! options) -> void
Square.OkIO.Utf8
Square.OkIO._JvmPlatformKt
abstract Square.OkIO.FileHandle.ProtectedClose() -> void
abstract Square.OkIO.FileHandle.ProtectedFlush() -> void
abstract Square.OkIO.FileHandle.ProtectedRead(long fileOffset, byte[]! array, int arrayOffset, int byteCount) -> int
abstract Square.OkIO.FileHandle.ProtectedResize(long size) -> void
abstract Square.OkIO.FileHandle.ProtectedSize() -> long
abstract Square.OkIO.FileHandle.ProtectedWrite(long fileOffset, byte[]! array, int arrayOffset, int byteCount) -> void
abstract Square.OkIO.FileSystem.AppendingSink(Square.OkIO.Path! file, bool mustExist) -> Square.OkIO.ISink!
abstract Square.OkIO.FileSystem.AtomicMove(Square.OkIO.Path! source, Square.OkIO.Path! target) -> void
abstract Square.OkIO.FileSystem.Canonicalize(Square.OkIO.Path! path) -> Square.OkIO.Path!
abstract Square.OkIO.FileSystem.CreateDirectory(Square.OkIO.Path! dir, bool mustCreate) -> void
abstract Square.OkIO.FileSystem.CreateSymlink(Square.OkIO.Path! source, Square.OkIO.Path! target) -> void
abstract Square.OkIO.FileSystem.Delete(Square.OkIO.Path! path, bool mustExist) -> void
abstract Square.OkIO.FileSystem.List(Square.OkIO.Path! dir) -> System.Collections.Generic.IList<Square.OkIO.Path!>!
abstract Square.OkIO.FileSystem.ListOrNull(Square.OkIO.Path! dir) -> System.Collections.Generic.IList<Square.OkIO.Path!>?
abstract Square.OkIO.FileSystem.MetadataOrNull(Square.OkIO.Path! path) -> Square.OkIO.FileMetadata?
abstract Square.OkIO.FileSystem.OpenReadOnly(Square.OkIO.Path! file) -> Square.OkIO.FileHandle!
abstract Square.OkIO.FileSystem.OpenReadWrite(Square.OkIO.Path! file, bool mustCreate, bool mustExist) -> Square.OkIO.FileHandle!
abstract Square.OkIO.FileSystem.Sink(Square.OkIO.Path! file, bool mustCreate) -> Square.OkIO.ISink!
abstract Square.OkIO.FileSystem.Source(Square.OkIO.Path! file) -> Square.OkIO.ISource!
override Square.OkIO.AsyncTimeout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.AsyncTimeout.ThresholdClass.get -> nint
override Square.OkIO.AsyncTimeout.ThresholdType.get -> System.Type!
override Square.OkIO.ByteString.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ByteString.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ByteString.ThresholdClass.get -> nint
override Square.OkIO.ByteString.ThresholdType.get -> System.Type!
override Square.OkIO.CipherSink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.CipherSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.DeflaterSink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.FileHandle.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.FileHandle.ThresholdClass.get -> nint
override Square.OkIO.FileHandle.ThresholdType.get -> System.Type!
override Square.OkIO.FileMetadata.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.FileSystem.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.FileSystem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.FileSystem.ThresholdClass.get -> nint
override Square.OkIO.FileSystem.ThresholdType.get -> System.Type!
override Square.OkIO.ForwardingFileSystem.AppendingSink(Square.OkIO.Path! file, bool mustExist) -> Square.OkIO.ISink!
override Square.OkIO.ForwardingFileSystem.AtomicMove(Square.OkIO.Path! source, Square.OkIO.Path! target) -> void
override Square.OkIO.ForwardingFileSystem.Canonicalize(Square.OkIO.Path! path) -> Square.OkIO.Path!
override Square.OkIO.ForwardingFileSystem.CreateDirectory(Square.OkIO.Path! dir, bool mustCreate) -> void
override Square.OkIO.ForwardingFileSystem.CreateSymlink(Square.OkIO.Path! source, Square.OkIO.Path! target) -> void
override Square.OkIO.ForwardingFileSystem.Delete(Square.OkIO.Path! path, bool mustExist) -> void
override Square.OkIO.ForwardingFileSystem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ForwardingFileSystem.List(Square.OkIO.Path! dir) -> System.Collections.Generic.IList<Square.OkIO.Path!>!
override Square.OkIO.ForwardingFileSystem.ListOrNull(Square.OkIO.Path! dir) -> System.Collections.Generic.IList<Square.OkIO.Path!>?
override Square.OkIO.ForwardingFileSystem.MetadataOrNull(Square.OkIO.Path! path) -> Square.OkIO.FileMetadata?
override Square.OkIO.ForwardingFileSystem.OpenReadOnly(Square.OkIO.Path! file) -> Square.OkIO.FileHandle!
override Square.OkIO.ForwardingFileSystem.OpenReadWrite(Square.OkIO.Path! file, bool mustCreate, bool mustExist) -> Square.OkIO.FileHandle!
override Square.OkIO.ForwardingFileSystem.Sink(Square.OkIO.Path! file, bool mustCreate) -> Square.OkIO.ISink!
override Square.OkIO.ForwardingFileSystem.Source(Square.OkIO.Path! file) -> Square.OkIO.ISource!
override Square.OkIO.ForwardingFileSystem.ThresholdClass.get -> nint
override Square.OkIO.ForwardingFileSystem.ThresholdType.get -> System.Type!
override Square.OkIO.ForwardingSink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ForwardingSink.ThresholdClass.get -> nint
override Square.OkIO.ForwardingSink.ThresholdType.get -> System.Type!
override Square.OkIO.ForwardingSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ForwardingSource.ThresholdClass.get -> nint
override Square.OkIO.ForwardingSource.ThresholdType.get -> System.Type!
override Square.OkIO.ForwardingTimeout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.ForwardingTimeout.ThresholdClass.get -> nint
override Square.OkIO.ForwardingTimeout.ThresholdType.get -> System.Type!
override Square.OkIO.GzipSink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.GzipSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.HashingSink.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.HashingSink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.HashingSource.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.HashingSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.InflaterSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.OkBuffer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.OkBuffer.UnsafeCursor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.OkIO.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Options.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Options.Get(int i) -> Java.Lang.Object!
override Square.OkIO.Options.GetSize() -> int
override Square.OkIO.Options.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Path.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Path.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Pipe.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.SystemFileSystem.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Throttler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Timeout.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Timeout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Timeout.ThresholdClass.get -> nint
override Square.OkIO.Timeout.ThresholdType.get -> System.Type!
override Square.OkIO.TypedOptions.CompanionStatic.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.TypedOptions.Get(int index) -> Java.Lang.Object!
override Square.OkIO.TypedOptions.GetSize() -> int
override Square.OkIO.TypedOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO.Utf8.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Square.OkIO._JvmPlatformKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed Square.OkIO.Options.Contains(Java.Lang.Object? o) -> bool
override sealed Square.OkIO.Options.IndexOf(Java.Lang.Object? o) -> int
override sealed Square.OkIO.Options.LastIndexOf(Java.Lang.Object? o) -> int
static Square.OkIO.ByteString.Companion.get -> Square.OkIO.ByteString.CompanionStatic!
static Square.OkIO.ByteString.DecodeBase64(string! base64) -> Square.OkIO.ByteString?
static Square.OkIO.ByteString.DecodeHex(string! hex) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.Empty.get -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.EncodeString(string! s, Java.Nio.Charset.Charset! charset) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.EncodeUtf8(string! s) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.Of(Java.Nio.ByteBuffer! data) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.Of(byte[]! data, int offset, int byteCount) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.Of(params byte[]! data) -> Square.OkIO.ByteString!
static Square.OkIO.ByteString.Read(System.IO.Stream! in, int byteCount) -> Square.OkIO.ByteString!
static Square.OkIO.FileSystem.Companion.get -> Square.OkIO.FileSystem.CompanionStatic!
static Square.OkIO.FileSystem.Get(Java.Nio.FileNio.FileSystem! obj) -> Square.OkIO.FileSystem!
static Square.OkIO.FileSystem.Resources.get -> Square.OkIO.FileSystem!
static Square.OkIO.FileSystem.System.get -> Square.OkIO.FileSystem!
static Square.OkIO.FileSystem.SystemTemporaryDirectory.get -> Square.OkIO.Path!
static Square.OkIO.HashingSink.Companion.get -> Square.OkIO.HashingSink.CompanionStatic!
static Square.OkIO.HashingSink.HmacSha1(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.HmacSha256(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.HmacSha512(Square.OkIO.ISink! sink, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.Md5(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.Sha1(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.Sha256(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSink.Sha512(Square.OkIO.ISink! sink) -> Square.OkIO.HashingSink!
static Square.OkIO.HashingSource.Companion.get -> Square.OkIO.HashingSource.CompanionStatic!
static Square.OkIO.HashingSource.HmacSha1(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.HmacSha256(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.HmacSha512(Square.OkIO.ISource! source, Square.OkIO.ByteString! key) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.Md5(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.Sha1(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.Sha256(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
static Square.OkIO.HashingSource.Sha512(Square.OkIO.ISource! source) -> Square.OkIO.HashingSource!
static Square.OkIO.OkIO.AppendingSink(Java.IO.File! file) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.AsResourceFileSystem(Java.Lang.ClassLoader! _this_asResourceFileSystem) -> Square.OkIO.FileSystem!
static Square.OkIO.OkIO.Blackhole() -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Buffer(Square.OkIO.ISink! sink) -> Square.OkIO.IBufferedSink!
static Square.OkIO.OkIO.Buffer(Square.OkIO.ISource! source) -> Square.OkIO.IBufferedSource!
static Square.OkIO.OkIO.CipherSink(Square.OkIO.ISink! _this_cipherSink, Javax.Crypto.Cipher! cipher) -> Square.OkIO.CipherSink!
static Square.OkIO.OkIO.CipherSource(Square.OkIO.ISource! _this_cipherSource, Javax.Crypto.Cipher! cipher) -> Square.OkIO.CipherSource!
static Square.OkIO.OkIO.HashingSink(Square.OkIO.ISink! _this_hashingSink, Java.Security.MessageDigest! digest) -> Square.OkIO.HashingSink!
static Square.OkIO.OkIO.HashingSink(Square.OkIO.ISink! _this_hashingSink, Javax.Crypto.Mac! mac) -> Square.OkIO.HashingSink!
static Square.OkIO.OkIO.HashingSource(Square.OkIO.ISource! _this_hashingSource, Java.Security.MessageDigest! digest) -> Square.OkIO.HashingSource!
static Square.OkIO.OkIO.HashingSource(Square.OkIO.ISource! _this_hashingSource, Javax.Crypto.Mac! mac) -> Square.OkIO.HashingSource!
static Square.OkIO.OkIO.InMemorySocketPair(long maxBufferSize) -> Square.OkIO.ISocket![]!
static Square.OkIO.OkIO.OpenZip(Square.OkIO.FileSystem! _this_openZip, Square.OkIO.Path! zipPath) -> Square.OkIO.FileSystem!
static Square.OkIO.OkIO.Sink(Java.IO.File! file) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Sink(Java.IO.File! file, bool append) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Sink(Java.Net.Socket! socket) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Sink(Java.Nio.FileNio.IPath! path, params Java.Nio.FileNio.IOpenOption![]! options) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Sink(System.IO.Stream! out) -> Square.OkIO.ISink!
static Square.OkIO.OkIO.Socket(Java.Net.Socket! _this_asOkioSocket) -> Square.OkIO.ISocket!
static Square.OkIO.OkIO.Source(Java.IO.File! file) -> Square.OkIO.ISource!
static Square.OkIO.OkIO.Source(Java.Net.Socket! socket) -> Square.OkIO.ISource!
static Square.OkIO.OkIO.Source(Java.Nio.FileNio.IPath! path, params Java.Nio.FileNio.IOpenOption![]! options) -> Square.OkIO.ISource!
static Square.OkIO.OkIO.Source(System.IO.Stream! in) -> Square.OkIO.ISource!
static Square.OkIO.OkIO.Use(Java.Lang.Object? _this_use, Kotlin.Jvm.Functions.IFunction1! block) -> Java.Lang.Object?
static Square.OkIO.Options.Companion.get -> Square.OkIO.Options.CompanionStatic!
static Square.OkIO.Options.Of(params Square.OkIO.ByteString![]! byteStrings) -> Square.OkIO.Options!
static Square.OkIO.Path.Companion.get -> Square.OkIO.Path.CompanionStatic!
static Square.OkIO.Path.DirectorySeparator.get -> string!
static Square.OkIO.Path.Get(Java.IO.File! obj) -> Square.OkIO.Path!
static Square.OkIO.Path.Get(Java.IO.File! obj, bool normalize) -> Square.OkIO.Path!
static Square.OkIO.Path.Get(Java.Nio.FileNio.IPath! obj) -> Square.OkIO.Path!
static Square.OkIO.Path.Get(Java.Nio.FileNio.IPath! obj, bool normalize) -> Square.OkIO.Path!
static Square.OkIO.Path.Get(string! obj) -> Square.OkIO.Path!
static Square.OkIO.Path.Get(string! obj, bool normalize) -> Square.OkIO.Path!
static Square.OkIO.Timeout.Companion.get -> Square.OkIO.Timeout.CompanionStatic!
static Square.OkIO.Timeout.None.get -> Square.OkIO.Timeout!
static Square.OkIO.TypedOptions.Companion.get -> Square.OkIO.TypedOptions.CompanionStatic!
static Square.OkIO.TypedOptions.Of(Java.Lang.IIterable! values, Kotlin.Jvm.Functions.IFunction1! encode) -> Square.OkIO.TypedOptions!
static Square.OkIO.Utf8.Size(string! string) -> long
static Square.OkIO.Utf8.Size(string! string, int beginIndex) -> long
static Square.OkIO.Utf8.Size(string! string, int beginIndex, int endIndex) -> long
static Square.OkIO._JvmPlatformKt.WithLock(Java.Util.Concurrent.Locks.ReentrantLock! obj, Kotlin.Jvm.Functions.IFunction0! action) -> Java.Lang.Object?
virtual Square.OkIO.AsyncTimeout.NewTimeoutException(Java.IO.IOException? cause) -> Java.IO.IOException!
virtual Square.OkIO.AsyncTimeout.TimedOut() -> void
virtual Square.OkIO.ByteString.AsByteBuffer() -> Java.Nio.ByteBuffer!
virtual Square.OkIO.ByteString.Base64() -> string!
virtual Square.OkIO.ByteString.Base64Url() -> string!
virtual Square.OkIO.ByteString.CompareTo(Java.Lang.Object! other) -> int
virtual Square.OkIO.ByteString.CopyInto(int offset, byte[]! target, int targetOffset, int byteCount) -> void
virtual Square.OkIO.ByteString.Hex() -> string!
virtual Square.OkIO.ByteString.HmacSha1(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.HmacSha256(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.HmacSha512(Square.OkIO.ByteString! key) -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.IndexOf(byte[]! other, int fromIndex) -> int
virtual Square.OkIO.ByteString.LastIndexOf(byte[]! other, int fromIndex) -> int
virtual Square.OkIO.ByteString.RangeEquals(int offset, Square.OkIO.ByteString! other, int otherOffset, int byteCount) -> bool
virtual Square.OkIO.ByteString.RangeEquals(int offset, byte[]! other, int otherOffset, int byteCount) -> bool
virtual Square.OkIO.ByteString.String(Java.Nio.Charset.Charset! charset) -> string!
virtual Square.OkIO.ByteString.Substring(int beginIndex, int endIndex) -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.ToAsciiLowercase() -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.ToAsciiUppercase() -> Square.OkIO.ByteString!
virtual Square.OkIO.ByteString.ToByteArray() -> byte[]!
virtual Square.OkIO.ByteString.Utf8() -> string!
virtual Square.OkIO.ByteString.Write(System.IO.Stream! out) -> void
virtual Square.OkIO.FileSystem.Close() -> void
virtual Square.OkIO.FileSystem.Copy(Square.OkIO.Path! source, Square.OkIO.Path! target) -> void
virtual Square.OkIO.FileSystem.DeleteRecursively(Square.OkIO.Path! fileOrDirectory, bool mustExist) -> void
virtual Square.OkIO.FileSystem.ListRecursively(Square.OkIO.Path! dir, bool followSymlinks) -> Kotlin.Sequences.ISequence!
virtual Square.OkIO.ForwardingFileSystem.OnPathParameter(Square.OkIO.Path! path, string! functionName, string! parameterName) -> Square.OkIO.Path!
virtual Square.OkIO.ForwardingFileSystem.OnPathResult(Square.OkIO.Path! path, string! functionName) -> Square.OkIO.Path!
virtual Square.OkIO.ForwardingSink.Close() -> void
virtual Square.OkIO.ForwardingSink.Flush() -> void
virtual Square.OkIO.ForwardingSink.Timeout() -> Square.OkIO.Timeout!
virtual Square.OkIO.ForwardingSink.Write(Square.OkIO.OkBuffer! source, long byteCount) -> void
virtual Square.OkIO.ForwardingSource.Close() -> void
virtual Square.OkIO.ForwardingSource.Read(Square.OkIO.OkBuffer! sink, long byteCount) -> long
virtual Square.OkIO.ForwardingSource.Timeout() -> Square.OkIO.Timeout!
virtual Square.OkIO.Timeout.AwaitSignal(Java.Util.Concurrent.Locks.ICondition! condition) -> void
virtual Square.OkIO.Timeout.Cancel() -> void
virtual Square.OkIO.Timeout.ClearDeadline() -> Square.OkIO.Timeout!
virtual Square.OkIO.Timeout.ClearTimeout() -> Square.OkIO.Timeout!
virtual Square.OkIO.Timeout.DeadlineNanoTime() -> long
virtual Square.OkIO.Timeout.DeadlineNanoTime(long deadlineNanoTime) -> Square.OkIO.Timeout!
virtual Square.OkIO.Timeout.HasDeadline.get -> bool
virtual Square.OkIO.Timeout.InvokeTimeout(long timeout, Java.Util.Concurrent.TimeUnit! unit) -> Square.OkIO.Timeout!
virtual Square.OkIO.Timeout.ThrowIfReached() -> void
virtual Square.OkIO.Timeout.TimeoutNanos() -> long
virtual Square.OkIO.Timeout.WaitUntilNotified(Java.Lang.Object! monitor) -> void
