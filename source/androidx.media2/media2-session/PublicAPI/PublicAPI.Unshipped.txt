#nullable enable
AndroidX.Media2.Session.CommandButtonParcelizer
AndroidX.Media2.Session.CommandButtonParcelizer.CommandButtonParcelizer() -> void
AndroidX.Media2.Session.ConnectionRequestParcelizer
AndroidX.Media2.Session.ConnectionRequestParcelizer.ConnectionRequestParcelizer() -> void
AndroidX.Media2.Session.ConnectionResultParcelizer
AndroidX.Media2.Session.ConnectionResultParcelizer.ConnectionResultParcelizer() -> void
AndroidX.Media2.Session.HeartRating
AndroidX.Media2.Session.HeartRating.HasHeart.get -> bool
AndroidX.Media2.Session.HeartRating.HeartRating() -> void
AndroidX.Media2.Session.HeartRating.HeartRating(bool hasHeart) -> void
AndroidX.Media2.Session.HeartRating.IsRated.get -> bool
AndroidX.Media2.Session.HeartRatingParcelizer
AndroidX.Media2.Session.HeartRatingParcelizer.HeartRatingParcelizer() -> void
AndroidX.Media2.Session.IMediaController
AndroidX.Media2.Session.IMediaController.Descriptor.get -> string?
AndroidX.Media2.Session.IMediaController.OnAllowedCommandsChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnBufferingStateChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, int p2, long p3, long p4, long p5) -> void
AndroidX.Media2.Session.IMediaController.OnChildrenChanged(int p0, string? p1, int p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaController.OnConnected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnCurrentMediaItemChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, int p2, int p3, int p4) -> void
AndroidX.Media2.Session.IMediaController.OnCustomCommand(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, Android.OS.Bundle? p2) -> void
AndroidX.Media2.Session.IMediaController.OnDisconnected(int p0) -> void
AndroidX.Media2.Session.IMediaController.OnLibraryResult(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnPlaybackCompleted(int p0) -> void
AndroidX.Media2.Session.IMediaController.OnPlaybackInfoChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnPlaybackSpeedChanged(int p0, long p1, long p2, float p3) -> void
AndroidX.Media2.Session.IMediaController.OnPlayerStateChanged(int p0, long p1, long p2, int p3) -> void
AndroidX.Media2.Session.IMediaController.OnPlaylistChanged(int p0, AndroidX.Media2.Common.ParcelImplListSlice? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, int p3, int p4, int p5) -> void
AndroidX.Media2.Session.IMediaController.OnPlaylistMetadataChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnRepeatModeChanged(int p0, int p1, int p2, int p3, int p4) -> void
AndroidX.Media2.Session.IMediaController.OnSearchResultChanged(int p0, string? p1, int p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaController.OnSeekCompleted(int p0, long p1, long p2, long p3) -> void
AndroidX.Media2.Session.IMediaController.OnSessionResult(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnSetCustomLayout(int p0, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? p1) -> void
AndroidX.Media2.Session.IMediaController.OnShuffleModeChanged(int p0, int p1, int p2, int p3, int p4) -> void
AndroidX.Media2.Session.IMediaController.OnSubtitleData(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaController.OnTrackDeselected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnTrackInfoChanged(int p0, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, AndroidX.VersionedParcelable.ParcelImpl? p3, AndroidX.VersionedParcelable.ParcelImpl? p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
AndroidX.Media2.Session.IMediaController.OnTrackSelected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaController.OnVideoSizeChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession
AndroidX.Media2.Session.IMediaSession.AddPlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, string? p3) -> void
AndroidX.Media2.Session.IMediaSession.AdjustVolume(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media2.Session.IMediaSession.Connect(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession.Descriptor.get -> string?
AndroidX.Media2.Session.IMediaSession.DeselectTrack(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession.FastForward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.GetChildren(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
AndroidX.Media2.Session.IMediaSession.GetItem(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
AndroidX.Media2.Session.IMediaSession.GetLibraryRoot(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession.GetSearchResult(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
AndroidX.Media2.Session.IMediaSession.MovePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media2.Session.IMediaSession.OnControllerResult(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession.OnCustomCommand(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media2.Session.IMediaSession.Pause(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.Play(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.Prepare(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.Release(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.RemovePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media2.Session.IMediaSession.ReplacePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, string? p3) -> void
AndroidX.Media2.Session.IMediaSession.Rewind(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.Search(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaSession.SeekTo(AndroidX.Media2.Session.IMediaController? p0, int p1, long p2) -> void
AndroidX.Media2.Session.IMediaSession.SelectTrack(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSession.SetMediaItem(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
AndroidX.Media2.Session.IMediaSession.SetMediaUri(AndroidX.Media2.Session.IMediaController? p0, int p1, Android.Net.Uri? p2, Android.OS.Bundle? p3) -> void
AndroidX.Media2.Session.IMediaSession.SetPlaybackSpeed(AndroidX.Media2.Session.IMediaController? p0, int p1, float p2) -> void
AndroidX.Media2.Session.IMediaSession.SetPlaylist(AndroidX.Media2.Session.IMediaController? p0, int p1, System.Collections.Generic.IList<string!>? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaSession.SetRating(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaSession.SetRepeatMode(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media2.Session.IMediaSession.SetShuffleMode(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media2.Session.IMediaSession.SetSurface(AndroidX.Media2.Session.IMediaController? p0, int p1, Android.Views.Surface? p2) -> void
AndroidX.Media2.Session.IMediaSession.SetVolumeTo(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
AndroidX.Media2.Session.IMediaSession.SkipBackward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.SkipForward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.SkipToNextItem(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.SkipToPlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
AndroidX.Media2.Session.IMediaSession.SkipToPreviousItem(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
AndroidX.Media2.Session.IMediaSession.Subscribe(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
AndroidX.Media2.Session.IMediaSession.Unsubscribe(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
AndroidX.Media2.Session.IMediaSession.UpdatePlaylistMetadata(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
AndroidX.Media2.Session.IMediaSessionService
AndroidX.Media2.Session.IMediaSessionService.Connect(AndroidX.Media2.Session.IMediaController? p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
AndroidX.Media2.Session.IMediaSessionService.Descriptor.get -> string?
AndroidX.Media2.Session.LibraryParamsParcelizer
AndroidX.Media2.Session.LibraryParamsParcelizer.LibraryParamsParcelizer() -> void
AndroidX.Media2.Session.LibraryResult
AndroidX.Media2.Session.LibraryResult.IResultCode
AndroidX.Media2.Session.LibraryResult.LibraryResult(int resultCode) -> void
AndroidX.Media2.Session.LibraryResult.LibraryResult(int resultCode, AndroidX.Media2.Common.MediaItem? item, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media2.Session.LibraryResult.LibraryResult(int resultCode, System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>? items, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media2.Session.LibraryResult.LibraryResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.LibraryResultParcelizer
AndroidX.Media2.Session.LibraryResultParcelizer.LibraryResultParcelizer() -> void
AndroidX.Media2.Session.MediaConstants
AndroidX.Media2.Session.MediaConstants.MediaConstants(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaController
AndroidX.Media2.Session.MediaController.Builder
AndroidX.Media2.Session.MediaController.Builder.Build() -> AndroidX.Media2.Session.MediaController!
AndroidX.Media2.Session.MediaController.Builder.Builder(Android.Content.Context! context) -> void
AndroidX.Media2.Session.MediaController.ControllerCallback
AndroidX.Media2.Session.MediaController.ControllerCallback.ControllerCallback() -> void
AndroidX.Media2.Session.MediaController.ControllerCallback.ControllerCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaController.IControllerCallbackRunnable
AndroidX.Media2.Session.MediaController.IControllerCallbackRunnable.Run(AndroidX.Media2.Session.MediaController.ControllerCallback! p0) -> void
AndroidX.Media2.Session.MediaController.IVolumeDirection
AndroidX.Media2.Session.MediaController.IVolumeFlags
AndroidX.Media2.Session.MediaController.MediaController(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaController.PlaybackInfo
AndroidX.Media2.Session.MediaController.PlaybackInfo.AudioAttributes.get -> AndroidX.Media.AudioAttributesCompat?
AndroidX.Media2.Session.MediaController.PlaybackInfo.ControlType.get -> int
AndroidX.Media2.Session.MediaController.PlaybackInfo.CurrentVolume.get -> int
AndroidX.Media2.Session.MediaController.PlaybackInfo.MaxVolume.get -> int
AndroidX.Media2.Session.MediaController.PlaybackInfo.PlaybackType.get -> int
AndroidX.Media2.Session.MediaControllerDefault
AndroidX.Media2.Session.MediaControllerDefault.InterfaceConsts
AndroidX.Media2.Session.MediaControllerDefault.MediaControllerDefault() -> void
AndroidX.Media2.Session.MediaControllerDefault.MediaControllerDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaControllerStub
AndroidX.Media2.Session.MediaControllerStub.InterfaceConsts
AndroidX.Media2.Session.MediaControllerStub.MediaControllerStub() -> void
AndroidX.Media2.Session.MediaControllerStub.MediaControllerStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaController_Parcel
AndroidX.Media2.Session.MediaController_Parcel.MediaController_Parcel() -> void
AndroidX.Media2.Session.MediaController_Parcel.MediaController_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaLibraryService
AndroidX.Media2.Session.MediaLibraryService.LibraryParams
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.Build() -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams!
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.Builder() -> void
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder!
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.SetOffline(bool offline) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder!
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.SetRecent(bool recent) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder!
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.SetSuggested(bool suggested) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder!
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Extras.get -> Android.OS.Bundle?
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.IsOffline.get -> bool
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.IsRecent.get -> bool
AndroidX.Media2.Session.MediaLibraryService.LibraryParams.IsSuggested.get -> bool
AndroidX.Media2.Session.MediaLibraryService.MediaLibraryService() -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibraryService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.Build() -> AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession!
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.Builder(AndroidX.Media2.Session.MediaLibraryService! service, AndroidX.Media2.Common.SessionPlayer! player, Java.Util.Concurrent.IExecutor! callbackExecutor, AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback! callback) -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.SetId(string! id) -> AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder!
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.SetSessionActivity(Android.App.PendingIntent? pi) -> AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder!
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.SetThrowsWhenInvalidReturn(bool throwsWhenInvalidReturn) -> AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder!
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.MediaLibrarySessionCallback() -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.MediaLibrarySessionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.NotifyChildrenChanged(AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! parentId, int itemCount, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.NotifyChildrenChanged(string! parentId, int itemCount, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.NotifySearchResultChanged(AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! query, int itemCount, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> void
AndroidX.Media2.Session.MediaSession
AndroidX.Media2.Session.MediaSession.Builder
AndroidX.Media2.Session.MediaSession.Builder.Build() -> AndroidX.Media2.Session.MediaSession!
AndroidX.Media2.Session.MediaSession.Builder.Builder(Android.Content.Context! context, AndroidX.Media2.Common.SessionPlayer! player) -> void
AndroidX.Media2.Session.MediaSession.Builder.SetId(string! id) -> AndroidX.Media2.Session.MediaSession.Builder!
AndroidX.Media2.Session.MediaSession.Builder.SetSessionActivity(Android.App.PendingIntent? pi) -> AndroidX.Media2.Session.MediaSession.Builder!
AndroidX.Media2.Session.MediaSession.Builder.SetSessionCallback(Java.Util.Concurrent.IExecutor! executor, AndroidX.Media2.Session.MediaSession.SessionCallback! callback) -> AndroidX.Media2.Session.MediaSession.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton
AndroidX.Media2.Session.MediaSession.CommandButton.Builder
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.Build() -> AndroidX.Media2.Session.MediaSession.CommandButton!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.Builder() -> void
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetCommand(AndroidX.Media2.Session.SessionCommand? command) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetDisplayName(Java.Lang.ICharSequence? displayName) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetDisplayName(string? displayName) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetEnabled(bool enabled) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetExtras(Android.OS.Bundle? extras) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Builder.SetIconResId(int resId) -> AndroidX.Media2.Session.MediaSession.CommandButton.Builder!
AndroidX.Media2.Session.MediaSession.CommandButton.Command.get -> AndroidX.Media2.Session.SessionCommand?
AndroidX.Media2.Session.MediaSession.CommandButton.DisplayName.get -> string?
AndroidX.Media2.Session.MediaSession.CommandButton.DisplayNameFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Media2.Session.MediaSession.CommandButton.Extras.get -> Android.OS.Bundle?
AndroidX.Media2.Session.MediaSession.CommandButton.IconResId.get -> int
AndroidX.Media2.Session.MediaSession.CommandButton.IsEnabled.get -> bool
AndroidX.Media2.Session.MediaSession.ControllerInfo
AndroidX.Media2.Session.MediaSession.ControllerInfo.ConnectionHints.get -> Android.OS.Bundle!
AndroidX.Media2.Session.MediaSession.ControllerInfo.IsTrusted.get -> bool
AndroidX.Media2.Session.MediaSession.ControllerInfo.PackageName.get -> string!
AndroidX.Media2.Session.MediaSession.ControllerInfo.Uid.get -> int
AndroidX.Media2.Session.MediaSession.MediaSession(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSession.SessionCallback
AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback
AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.ForegroundServiceEventCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSession.SessionCallback.SessionCallback() -> void
AndroidX.Media2.Session.MediaSession.SessionCallback.SessionCallback(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionDefault
AndroidX.Media2.Session.MediaSessionDefault.InterfaceConsts
AndroidX.Media2.Session.MediaSessionDefault.MediaSessionDefault() -> void
AndroidX.Media2.Session.MediaSessionDefault.MediaSessionDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionManager
AndroidX.Media2.Session.MediaSessionManager.SessionServiceTokens.get -> System.Collections.Generic.ICollection<AndroidX.Media2.Session.SessionToken!>!
AndroidX.Media2.Session.MediaSessionService
AndroidX.Media2.Session.MediaSessionService.AddSession(AndroidX.Media2.Session.MediaSession! session) -> void
AndroidX.Media2.Session.MediaSessionService.MediaNotification
AndroidX.Media2.Session.MediaSessionService.MediaNotification.MediaNotification(int notificationId, Android.App.Notification! notification) -> void
AndroidX.Media2.Session.MediaSessionService.MediaNotification.MediaNotification(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionService.MediaSessionService() -> void
AndroidX.Media2.Session.MediaSessionService.MediaSessionService(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionService.RemoveSession(AndroidX.Media2.Session.MediaSession! session) -> void
AndroidX.Media2.Session.MediaSessionService.Sessions.get -> System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession!>!
AndroidX.Media2.Session.MediaSessionServiceDefault
AndroidX.Media2.Session.MediaSessionServiceDefault.InterfaceConsts
AndroidX.Media2.Session.MediaSessionServiceDefault.MediaSessionServiceDefault() -> void
AndroidX.Media2.Session.MediaSessionServiceDefault.MediaSessionServiceDefault(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionServiceStub
AndroidX.Media2.Session.MediaSessionServiceStub.InterfaceConsts
AndroidX.Media2.Session.MediaSessionServiceStub.MediaSessionServiceStub() -> void
AndroidX.Media2.Session.MediaSessionServiceStub.MediaSessionServiceStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionService_Parcel
AndroidX.Media2.Session.MediaSessionService_Parcel.MediaSessionService_Parcel() -> void
AndroidX.Media2.Session.MediaSessionService_Parcel.MediaSessionService_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSessionStub
AndroidX.Media2.Session.MediaSessionStub.InterfaceConsts
AndroidX.Media2.Session.MediaSessionStub.MediaSessionStub() -> void
AndroidX.Media2.Session.MediaSessionStub.MediaSessionStub(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaSession_Parcel
AndroidX.Media2.Session.MediaSession_Parcel.MediaSession_Parcel() -> void
AndroidX.Media2.Session.MediaSession_Parcel.MediaSession_Parcel(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.MediaUtils
AndroidX.Media2.Session.MediaUtils.MediaUtils(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.PercentageRating
AndroidX.Media2.Session.PercentageRating.IsRated.get -> bool
AndroidX.Media2.Session.PercentageRating.PercentRating.get -> float
AndroidX.Media2.Session.PercentageRating.PercentageRating() -> void
AndroidX.Media2.Session.PercentageRating.PercentageRating(float percent) -> void
AndroidX.Media2.Session.PercentageRatingParcelizer
AndroidX.Media2.Session.PercentageRatingParcelizer.PercentageRatingParcelizer() -> void
AndroidX.Media2.Session.PlaybackInfoParcelizer
AndroidX.Media2.Session.PlaybackInfoParcelizer.PlaybackInfoParcelizer() -> void
AndroidX.Media2.Session.SessionCommand
AndroidX.Media2.Session.SessionCommand.CommandCode.get -> int
AndroidX.Media2.Session.SessionCommand.CustomAction.get -> string?
AndroidX.Media2.Session.SessionCommand.CustomExtras.get -> Android.OS.Bundle?
AndroidX.Media2.Session.SessionCommand.ICommandCode
AndroidX.Media2.Session.SessionCommand.ICommandVersion
AndroidX.Media2.Session.SessionCommand.SessionCommand(int commandCode) -> void
AndroidX.Media2.Session.SessionCommand.SessionCommand(string! action, Android.OS.Bundle? extras) -> void
AndroidX.Media2.Session.SessionCommandGroup
AndroidX.Media2.Session.SessionCommandGroup.Builder
AndroidX.Media2.Session.SessionCommandGroup.Builder.AddAllPredefinedCommands(int version) -> AndroidX.Media2.Session.SessionCommandGroup.Builder!
AndroidX.Media2.Session.SessionCommandGroup.Builder.AddCommand(AndroidX.Media2.Session.SessionCommand! command) -> AndroidX.Media2.Session.SessionCommandGroup.Builder!
AndroidX.Media2.Session.SessionCommandGroup.Builder.Build() -> AndroidX.Media2.Session.SessionCommandGroup!
AndroidX.Media2.Session.SessionCommandGroup.Builder.Builder() -> void
AndroidX.Media2.Session.SessionCommandGroup.Builder.Builder(AndroidX.Media2.Session.SessionCommandGroup! commandGroup) -> void
AndroidX.Media2.Session.SessionCommandGroup.Builder.RemoveCommand(AndroidX.Media2.Session.SessionCommand! command) -> AndroidX.Media2.Session.SessionCommandGroup.Builder!
AndroidX.Media2.Session.SessionCommandGroup.Commands.get -> System.Collections.Generic.ICollection<AndroidX.Media2.Session.SessionCommand!>!
AndroidX.Media2.Session.SessionCommandGroup.HasCommand(AndroidX.Media2.Session.SessionCommand! command) -> bool
AndroidX.Media2.Session.SessionCommandGroup.HasCommand(int commandCode) -> bool
AndroidX.Media2.Session.SessionCommandGroup.SessionCommandGroup() -> void
AndroidX.Media2.Session.SessionCommandGroup.SessionCommandGroup(System.Collections.Generic.ICollection<AndroidX.Media2.Session.SessionCommand!>? commands) -> void
AndroidX.Media2.Session.SessionCommandGroupParcelizer
AndroidX.Media2.Session.SessionCommandGroupParcelizer.SessionCommandGroupParcelizer() -> void
AndroidX.Media2.Session.SessionCommandParcelizer
AndroidX.Media2.Session.SessionCommandParcelizer.SessionCommandParcelizer() -> void
AndroidX.Media2.Session.SessionResult
AndroidX.Media2.Session.SessionResult.IResultCode
AndroidX.Media2.Session.SessionResult.SessionResult(int resultCode, Android.OS.Bundle? customCommandResult) -> void
AndroidX.Media2.Session.SessionResult.SessionResult(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Media2.Session.SessionResultParcelizer
AndroidX.Media2.Session.SessionResultParcelizer.SessionResultParcelizer() -> void
AndroidX.Media2.Session.SessionToken
AndroidX.Media2.Session.SessionToken.Binder.get -> Java.Lang.Object?
AndroidX.Media2.Session.SessionToken.ComponentName.get -> Android.Content.ComponentName?
AndroidX.Media2.Session.SessionToken.Extras.get -> Android.OS.Bundle!
AndroidX.Media2.Session.SessionToken.IOnSessionTokenCreatedListener
AndroidX.Media2.Session.SessionToken.IOnSessionTokenCreatedListener.OnSessionTokenCreated(Android.Support.V4.Media.Session.MediaSessionCompat.Token? p0, AndroidX.Media2.Session.SessionToken? p1) -> void
AndroidX.Media2.Session.SessionToken.ITokenType
AndroidX.Media2.Session.SessionToken.IsLegacySession.get -> bool
AndroidX.Media2.Session.SessionToken.PackageName.get -> string!
AndroidX.Media2.Session.SessionToken.ServiceName.get -> string?
AndroidX.Media2.Session.SessionToken.SessionToken(Android.Content.Context! context, Android.Content.ComponentName! serviceComponent) -> void
AndroidX.Media2.Session.SessionToken.SessionTokenCreatedEventArgs
AndroidX.Media2.Session.SessionToken.SessionTokenCreatedEventArgs.P0.get -> Android.Support.V4.Media.Session.MediaSessionCompat.Token?
AndroidX.Media2.Session.SessionToken.SessionTokenCreatedEventArgs.P1.get -> AndroidX.Media2.Session.SessionToken?
AndroidX.Media2.Session.SessionToken.SessionTokenCreatedEventArgs.SessionTokenCreatedEventArgs(Android.Support.V4.Media.Session.MediaSessionCompat.Token? p0, AndroidX.Media2.Session.SessionToken? p1) -> void
AndroidX.Media2.Session.SessionToken.Type.get -> int
AndroidX.Media2.Session.SessionToken.Uid.get -> int
AndroidX.Media2.Session.SessionTokenImplBaseParcelizer
AndroidX.Media2.Session.SessionTokenImplBaseParcelizer.SessionTokenImplBaseParcelizer() -> void
AndroidX.Media2.Session.SessionTokenImplLegacyParcelizer
AndroidX.Media2.Session.SessionTokenImplLegacyParcelizer.SessionTokenImplLegacyParcelizer() -> void
AndroidX.Media2.Session.SessionTokenParcelizer
AndroidX.Media2.Session.SessionTokenParcelizer.SessionTokenParcelizer() -> void
AndroidX.Media2.Session.StarRating
AndroidX.Media2.Session.StarRating.GetStarRating() -> float
AndroidX.Media2.Session.StarRating.IsRated.get -> bool
AndroidX.Media2.Session.StarRating.MaxStars.get -> int
AndroidX.Media2.Session.StarRating.StarRating(int maxStars) -> void
AndroidX.Media2.Session.StarRating.StarRating(int maxStars, float starRating) -> void
AndroidX.Media2.Session.StarRatingParcelizer
AndroidX.Media2.Session.StarRatingParcelizer.StarRatingParcelizer() -> void
AndroidX.Media2.Session.ThumbRating
AndroidX.Media2.Session.ThumbRating.IsRated.get -> bool
AndroidX.Media2.Session.ThumbRating.IsThumbUp.get -> bool
AndroidX.Media2.Session.ThumbRating.ThumbRating() -> void
AndroidX.Media2.Session.ThumbRating.ThumbRating(bool thumbIsUp) -> void
AndroidX.Media2.Session.ThumbRatingParcelizer
AndroidX.Media2.Session.ThumbRatingParcelizer.ThumbRatingParcelizer() -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnAllowedCommandsChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnBufferingStateChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, int p2, long p3, long p4, long p5) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnChildrenChanged(int p0, string? p1, int p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnConnected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnCurrentMediaItemChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, int p2, int p3, int p4) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnCustomCommand(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, Android.OS.Bundle? p2) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnDisconnected(int p0) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnLibraryResult(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlaybackCompleted(int p0) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlaybackInfoChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlaybackSpeedChanged(int p0, long p1, long p2, float p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlayerStateChanged(int p0, long p1, long p2, int p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlaylistChanged(int p0, AndroidX.Media2.Common.ParcelImplListSlice? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, int p3, int p4, int p5) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnPlaylistMetadataChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnRepeatModeChanged(int p0, int p1, int p2, int p3, int p4) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnSearchResultChanged(int p0, string? p1, int p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnSeekCompleted(int p0, long p1, long p2, long p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnSessionResult(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnSetCustomLayout(int p0, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnShuffleModeChanged(int p0, int p1, int p2, int p3, int p4) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnSubtitleData(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnTrackDeselected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnTrackInfoChanged(int p0, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? p1, AndroidX.VersionedParcelable.ParcelImpl? p2, AndroidX.VersionedParcelable.ParcelImpl? p3, AndroidX.VersionedParcelable.ParcelImpl? p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnTrackSelected(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaControllerStub.OnVideoSizeChanged(int p0, AndroidX.VersionedParcelable.ParcelImpl? p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionService.OnGetSession(AndroidX.Media2.Session.MediaSession.ControllerInfo! p0) -> AndroidX.Media2.Session.MediaSession?
abstract AndroidX.Media2.Session.MediaSessionServiceStub.Connect(AndroidX.Media2.Session.IMediaController? p0, AndroidX.VersionedParcelable.ParcelImpl? p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.AddPlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, string? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.AdjustVolume(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Connect(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.DeselectTrack(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.FastForward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.GetChildren(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.GetItem(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.GetLibraryRoot(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.GetSearchResult(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, int p3, int p4, AndroidX.VersionedParcelable.ParcelImpl? p5) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.MovePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.OnControllerResult(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.OnCustomCommand(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Pause(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Play(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Prepare(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Release(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.RemovePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.ReplacePlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, string? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Rewind(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Search(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SeekTo(AndroidX.Media2.Session.IMediaController? p0, int p1, long p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SelectTrack(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetMediaItem(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetMediaUri(AndroidX.Media2.Session.IMediaController? p0, int p1, Android.Net.Uri? p2, Android.OS.Bundle? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetPlaybackSpeed(AndroidX.Media2.Session.IMediaController? p0, int p1, float p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetPlaylist(AndroidX.Media2.Session.IMediaController? p0, int p1, System.Collections.Generic.IList<string!>? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetRating(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetRepeatMode(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetShuffleMode(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetSurface(AndroidX.Media2.Session.IMediaController? p0, int p1, Android.Views.Surface? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SetVolumeTo(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2, int p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SkipBackward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SkipForward(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SkipToNextItem(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SkipToPlaylistItem(AndroidX.Media2.Session.IMediaController? p0, int p1, int p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.SkipToPreviousItem(AndroidX.Media2.Session.IMediaController? p0, int p1) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Subscribe(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2, AndroidX.VersionedParcelable.ParcelImpl? p3) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.Unsubscribe(AndroidX.Media2.Session.IMediaController? p0, int p1, string? p2) -> void
abstract AndroidX.Media2.Session.MediaSessionStub.UpdatePlaylistMetadata(AndroidX.Media2.Session.IMediaController? p0, int p1, AndroidX.VersionedParcelable.ParcelImpl? p2) -> void
const AndroidX.Media2.Session.MediaConstants.MediaUriAuthority = "media2-session" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriPathPlayFromMediaId = "playFromMediaId" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriPathPlayFromSearch = "playFromSearch" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriPathPrepareFromMediaId = "prepareFromMediaId" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriPathPrepareFromSearch = "prepareFromSearch" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriPathSetMediaUri = "setMediaUri" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriQueryId = "id" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriQueryQuery = "query" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriQueryUri = "uri" -> string!
const AndroidX.Media2.Session.MediaConstants.MediaUriScheme = "androidx" -> string!
const AndroidX.Media2.Session.MediaController.PlaybackInfo.PlaybackTypeLocal = 1 -> int
const AndroidX.Media2.Session.MediaController.PlaybackInfo.PlaybackTypeRemote = 2 -> int
const AndroidX.Media2.Session.MediaLibraryService.ServiceInterface = "androidx.media2.session.MediaLibraryService" -> string!
const AndroidX.Media2.Session.MediaSessionService.ServiceInterface = "androidx.media2.session.MediaSessionService" -> string!
const AndroidX.Media2.Session.MediaUtils.CurrentVersion = 0 -> int
const AndroidX.Media2.Session.MediaUtils.Tag = "MediaUtils" -> string!
const AndroidX.Media2.Session.MediaUtils.TransactionSizeLimitInBytes = 262144 -> int
const AndroidX.Media2.Session.MediaUtils.Version0 = 0 -> int
const AndroidX.Media2.Session.MediaUtils.VersionUnknown = -1 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeCustom = 0 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibraryGetChildren = 50003 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibraryGetItem = 50004 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibraryGetLibraryRoot = 50000 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibraryGetSearchResult = 50006 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibrarySearch = 50005 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibrarySubscribe = 50001 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeLibraryUnsubscribe = 50002 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerAddPlaylistItem = 10013 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerDeselectTrack = 11002 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerGetCurrentMediaItem = 10016 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerGetPlaylist = 10005 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerGetPlaylistMetadata = 10012 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerMovePlaylistItem = 10019 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerPause = 10001 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerPlay = 10000 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerPrepare = 10002 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerRemovePlaylistItem = 10014 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerReplacePlaylistItem = 10015 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSeekTo = 10003 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSelectTrack = 11001 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetMediaItem = 10018 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetPlaylist = 10006 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetRepeatMode = 10011 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetShuffleMode = 10010 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetSpeed = 10004 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSetSurface = 11000 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSkipToNextPlaylistItem = 10009 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSkipToPlaylistItem = 10007 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerSkipToPreviousPlaylistItem = 10008 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodePlayerUpdateListMetadata = 10017 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionFastForward = 40000 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionRewind = 40001 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionSetMediaUri = 40011 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionSetRating = 40010 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionSkipBackward = 40003 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeSessionSkipForward = 40002 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeVolumeAdjustVolume = 30001 -> int
const AndroidX.Media2.Session.SessionCommand.CommandCodeVolumeSetVolume = 30000 -> int
const AndroidX.Media2.Session.SessionCommand.CommandVersion1 = 1 -> int
const AndroidX.Media2.Session.SessionCommand.CommandVersion2 = 2 -> int
const AndroidX.Media2.Session.SessionCommand.CommandVersionCurrent = 2 -> int
const AndroidX.Media2.Session.SessionResult.ResultSuccess = 0 -> int
const AndroidX.Media2.Session.SessionToken.TypeLibraryService = 2 -> int
const AndroidX.Media2.Session.SessionToken.TypeSession = 0 -> int
const AndroidX.Media2.Session.SessionToken.TypeSessionService = 1 -> int
override AndroidX.Media2.Session.CommandButtonParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.ConnectionRequestParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.ConnectionResultParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.HeartRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.HeartRatingParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.LibraryParamsParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.LibraryResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.LibraryResult.ThresholdClass.get -> nint
override AndroidX.Media2.Session.LibraryResult.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.LibraryResultParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaConstants.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaConstants.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaConstants.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaController.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaController.ControllerCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaController.ControllerCallback.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaController.ControllerCallback.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaController.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaController.PlaybackInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaController.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaController.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaControllerDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaControllerDefault.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaControllerDefault.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaControllerStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaControllerStub.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaControllerStub.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaController_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaController_Parcel.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaController_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaLibraryService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.LibraryParams.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.LibraryParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaLibraryService.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaLibraryService.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSession.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.CommandButton.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.CommandButton.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.ControllerInfo.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSession.SessionCallback.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession.SessionCallback.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSession.SessionCallback.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSession.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSession.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionDefault.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionDefault.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionService.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionService.MediaNotification.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionService.MediaNotification.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionService.MediaNotification.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionService.OnBind(Android.Content.Intent! intent) -> Android.OS.IBinder?
override AndroidX.Media2.Session.MediaSessionService.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionService.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionServiceDefault.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionServiceDefault.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionServiceDefault.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionServiceStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionServiceStub.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionServiceStub.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionService_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionService_Parcel.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionService_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSessionStub.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSessionStub.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSessionStub.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaSession_Parcel.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaSession_Parcel.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaSession_Parcel.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.MediaUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.MediaUtils.ThresholdClass.get -> nint
override AndroidX.Media2.Session.MediaUtils.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.PercentageRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.PercentageRatingParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.PlaybackInfoParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionCommand.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionCommandGroup.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionCommandGroup.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionCommandGroupParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionCommandParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionResult.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionResult.ThresholdClass.get -> nint
override AndroidX.Media2.Session.SessionResult.ThresholdType.get -> System.Type!
override AndroidX.Media2.Session.SessionResultParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionToken.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionTokenImplBaseParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionTokenImplLegacyParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.SessionTokenParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.StarRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.StarRatingParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.ThumbRating.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Media2.Session.ThumbRatingParcelizer.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Media2.Session.CommandButtonParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.MediaSession.CommandButton?
static AndroidX.Media2.Session.CommandButtonParcelizer.Write(AndroidX.Media2.Session.MediaSession.CommandButton? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.ConnectionRequestParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> Java.Lang.Object?
static AndroidX.Media2.Session.ConnectionResultParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.VersionedParcelable.CustomVersionedParcelable?
static AndroidX.Media2.Session.HeartRatingParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.HeartRating?
static AndroidX.Media2.Session.HeartRatingParcelizer.Write(AndroidX.Media2.Session.HeartRating? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.LibraryParamsParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams?
static AndroidX.Media2.Session.LibraryParamsParcelizer.Write(AndroidX.Media2.Session.MediaLibraryService.LibraryParams? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.LibraryResultParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.LibraryResult?
static AndroidX.Media2.Session.LibraryResultParcelizer.Write(AndroidX.Media2.Session.LibraryResult? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.MediaControllerDefault.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaControllerStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media2.Session.IMediaController?
static AndroidX.Media2.Session.MediaControllerStub.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaSessionDefault.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaSessionManager.GetInstance(Android.Content.Context! context) -> AndroidX.Media2.Session.MediaSessionManager!
static AndroidX.Media2.Session.MediaSessionServiceDefault.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaSessionServiceStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media2.Session.IMediaSessionService?
static AndroidX.Media2.Session.MediaSessionServiceStub.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaSessionStub.AsInterface(Android.OS.IBinder? obj) -> AndroidX.Media2.Session.IMediaSession?
static AndroidX.Media2.Session.MediaSessionStub.InterfaceConsts.Descriptor.get -> string?
static AndroidX.Media2.Session.MediaUtils.ConvertCommandButtonListToParcelImplList(System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession.CommandButton!>? commandButtonList) -> System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>?
static AndroidX.Media2.Session.MediaUtils.ConvertMediaItemListToMediaItemList(System.Collections.Generic.IList<Android.Support.V4.Media.MediaBrowserCompat.MediaItem!>? items) -> System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>?
static AndroidX.Media2.Session.MediaUtils.ConvertMediaItemListToParcelImplListSlice(System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>? mediaItemList) -> AndroidX.Media2.Common.ParcelImplListSlice?
static AndroidX.Media2.Session.MediaUtils.ConvertParcelImplListSliceToMediaItemList(AndroidX.Media2.Common.ParcelImplListSlice? listSlice) -> System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>?
static AndroidX.Media2.Session.MediaUtils.ConvertQueueItemListToMediaItemList(System.Collections.Generic.IList<Android.Support.V4.Media.Session.MediaSessionCompat.QueueItem!>? items) -> System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>?
static AndroidX.Media2.Session.MediaUtils.ConvertToCustomLayout(Android.Support.V4.Media.Session.PlaybackStateCompat? state) -> System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession.CommandButton!>!
static AndroidX.Media2.Session.MediaUtils.ConvertToLibraryParams(Android.Content.Context! context, Android.OS.Bundle? legacyBundle) -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItem(Android.Support.V4.Media.MediaBrowserCompat.MediaItem? item) -> AndroidX.Media2.Common.MediaItem?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItem(Android.Support.V4.Media.MediaDescriptionCompat? descriptionCompat) -> AndroidX.Media2.Common.MediaItem?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItem(Android.Support.V4.Media.MediaMetadataCompat? metadataCompat, int ratingType) -> AndroidX.Media2.Common.MediaItem?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItem(Android.Support.V4.Media.Session.MediaSessionCompat.QueueItem? item) -> AndroidX.Media2.Common.MediaItem?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItem(AndroidX.Media2.Common.MediaItem? item2) -> Android.Support.V4.Media.MediaBrowserCompat.MediaItem?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaItemList(System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>? items) -> System.Collections.Generic.IList<Android.Support.V4.Media.MediaBrowserCompat.MediaItem!>?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaMetadata(Java.Lang.ICharSequence? queueTitle) -> AndroidX.Media2.Common.MediaMetadata?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaMetadata(string? queueTitle) -> AndroidX.Media2.Common.MediaMetadata?
static AndroidX.Media2.Session.MediaUtils.ConvertToMediaMetadataCompat(AndroidX.Media2.Common.MediaMetadata? metadata) -> Android.Support.V4.Media.MediaMetadataCompat?
static AndroidX.Media2.Session.MediaUtils.ConvertToPlaybackStateCompatState(int playerState, int bufferingState) -> int
static AndroidX.Media2.Session.MediaUtils.ConvertToPlayerState(Android.Support.V4.Media.Session.PlaybackStateCompat? state) -> int
static AndroidX.Media2.Session.MediaUtils.ConvertToQueueItemId(int mediaItemIndex) -> long
static AndroidX.Media2.Session.MediaUtils.ConvertToQueueItemList(System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>? items) -> System.Collections.Generic.IList<Android.Support.V4.Media.Session.MediaSessionCompat.QueueItem!>?
static AndroidX.Media2.Session.MediaUtils.ConvertToRating(Android.Support.V4.Media.RatingCompat? ratingCompat) -> AndroidX.Media2.Common.IRating?
static AndroidX.Media2.Session.MediaUtils.ConvertToRatingCompat(AndroidX.Media2.Common.IRating? rating) -> Android.Support.V4.Media.RatingCompat?
static AndroidX.Media2.Session.MediaUtils.ConvertToRootHints(AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> Android.OS.Bundle?
static AndroidX.Media2.Session.MediaUtils.ConvertToSessionCommandGroup(long sessionFlags, Android.Support.V4.Media.Session.PlaybackStateCompat? state) -> AndroidX.Media2.Session.SessionCommandGroup!
static AndroidX.Media2.Session.MediaUtils.CreateMediaDescriptionCompat(string? mediaId) -> Android.Support.V4.Media.MediaDescriptionCompat?
static AndroidX.Media2.Session.MediaUtils.DirectExecutor.get -> Java.Util.Concurrent.IExecutor?
static AndroidX.Media2.Session.MediaUtils.GetLegacyStreamType(AndroidX.Media.AudioAttributesCompat? attrs) -> int
static AndroidX.Media2.Session.MediaUtils.IsUnparcelableBundle(Android.OS.Bundle? bundle) -> bool
static AndroidX.Media2.Session.MediaUtils.KeepUnparcelableBundlesOnly(System.Collections.Generic.IList<Android.OS.Bundle!>? bundles) -> void
static AndroidX.Media2.Session.MediaUtils.RemoveNullElements(System.Collections.IList? list) -> System.Collections.IList?
static AndroidX.Media2.Session.MediaUtils.SDefaultBrowserRoot.get -> AndroidX.Media.MediaBrowserServiceCompat.BrowserRoot?
static AndroidX.Media2.Session.MediaUtils.ToBufferingState(int playbackStateCompatState) -> int
static AndroidX.Media2.Session.MediaUtils.ToPlaybackInfo2(Android.Support.V4.Media.Session.MediaControllerCompat.PlaybackInfo? info) -> AndroidX.Media2.Session.MediaController.PlaybackInfo?
static AndroidX.Media2.Session.MediaUtils.TruncateListBySize(System.Collections.IList? list, int sizeLimitInBytes) -> System.Collections.IList?
static AndroidX.Media2.Session.MediaUtils.UpcastForPreparceling(AndroidX.Media2.Common.MediaItem? item) -> AndroidX.Media2.Common.MediaItem?
static AndroidX.Media2.Session.MediaUtils.UpcastForPreparceling(AndroidX.Media2.Common.SessionPlayer.TrackInfo? track) -> AndroidX.Media2.Common.SessionPlayer.TrackInfo?
static AndroidX.Media2.Session.MediaUtils.UpcastForPreparceling(AndroidX.Media2.Common.VideoSize? size) -> AndroidX.Media2.Common.VideoSize?
static AndroidX.Media2.Session.MediaUtils.UpcastForPreparceling(System.Collections.Generic.IList<AndroidX.Media2.Common.SessionPlayer.TrackInfo!>? tracks) -> System.Collections.Generic.IList<AndroidX.Media2.Common.SessionPlayer.TrackInfo!>?
static AndroidX.Media2.Session.PercentageRatingParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.PercentageRating?
static AndroidX.Media2.Session.PercentageRatingParcelizer.Write(AndroidX.Media2.Session.PercentageRating? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.PlaybackInfoParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.MediaController.PlaybackInfo?
static AndroidX.Media2.Session.PlaybackInfoParcelizer.Write(AndroidX.Media2.Session.MediaController.PlaybackInfo? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.SessionCommandGroupParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.SessionCommandGroup?
static AndroidX.Media2.Session.SessionCommandGroupParcelizer.Write(AndroidX.Media2.Session.SessionCommandGroup? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.SessionCommandParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.SessionCommand?
static AndroidX.Media2.Session.SessionCommandParcelizer.Write(AndroidX.Media2.Session.SessionCommand? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.SessionResultParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.SessionResult?
static AndroidX.Media2.Session.SessionResultParcelizer.Write(AndroidX.Media2.Session.SessionResult? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.SessionToken.CreateSessionToken(Android.Content.Context! context, Android.Support.V4.Media.Session.MediaSessionCompat.Token! compatToken, AndroidX.Media2.Session.SessionToken.IOnSessionTokenCreatedListener! listener) -> void
static AndroidX.Media2.Session.SessionTokenImplBaseParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> Java.Lang.Object?
static AndroidX.Media2.Session.SessionTokenImplLegacyParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.VersionedParcelable.CustomVersionedParcelable?
static AndroidX.Media2.Session.SessionTokenParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.SessionToken?
static AndroidX.Media2.Session.SessionTokenParcelizer.Write(AndroidX.Media2.Session.SessionToken? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.StarRatingParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.StarRating?
static AndroidX.Media2.Session.StarRatingParcelizer.Write(AndroidX.Media2.Session.StarRating? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
static AndroidX.Media2.Session.ThumbRatingParcelizer.Read(AndroidX.VersionedParcelable.VersionedParcel? parcel) -> AndroidX.Media2.Session.ThumbRating?
static AndroidX.Media2.Session.ThumbRatingParcelizer.Write(AndroidX.Media2.Session.ThumbRating? obj, AndroidX.VersionedParcelable.VersionedParcel? parcel) -> void
virtual AndroidX.Media2.Session.LibraryResult.CompletionTime.get -> long
virtual AndroidX.Media2.Session.LibraryResult.LibraryParams.get -> AndroidX.Media2.Session.MediaLibraryService.LibraryParams?
virtual AndroidX.Media2.Session.LibraryResult.MediaItem.get -> AndroidX.Media2.Common.MediaItem?
virtual AndroidX.Media2.Session.LibraryResult.MediaItems.get -> System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>?
virtual AndroidX.Media2.Session.LibraryResult.ResultCode.get -> int
virtual AndroidX.Media2.Session.MediaController.AddPlaylistItem(int index, string! mediaId) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.AdjustVolume(int direction, int flags) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.AllowedCommands.get -> AndroidX.Media2.Session.SessionCommandGroup?
virtual AndroidX.Media2.Session.MediaController.BufferedPosition.get -> long
virtual AndroidX.Media2.Session.MediaController.BufferingState.get -> int
virtual AndroidX.Media2.Session.MediaController.Close() -> void
virtual AndroidX.Media2.Session.MediaController.ConnectedToken.get -> AndroidX.Media2.Session.SessionToken?
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnAllowedCommandsChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Session.SessionCommandGroup! commands) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnBufferingStateChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.MediaItem! item, int state) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnConnected(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Session.SessionCommandGroup! allowedCommands) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnCurrentMediaItemChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.MediaItem? item) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnCustomCommand(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Session.SessionCommand! command, Android.OS.Bundle? args) -> AndroidX.Media2.Session.SessionResult!
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnDisconnected(AndroidX.Media2.Session.MediaController! controller) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlaybackCompleted(AndroidX.Media2.Session.MediaController! controller) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlaybackInfoChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Session.MediaController.PlaybackInfo! info) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlaybackSpeedChanged(AndroidX.Media2.Session.MediaController! controller, float speed) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlayerStateChanged(AndroidX.Media2.Session.MediaController! controller, int state) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlaylistChanged(AndroidX.Media2.Session.MediaController! controller, System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>? list, AndroidX.Media2.Common.MediaMetadata? metadata) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnPlaylistMetadataChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.MediaMetadata? metadata) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnRepeatModeChanged(AndroidX.Media2.Session.MediaController! controller, int repeatMode) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnSeekCompleted(AndroidX.Media2.Session.MediaController! controller, long position) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnSetCustomLayout(AndroidX.Media2.Session.MediaController! controller, System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession.CommandButton!>! layout) -> int
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnShuffleModeChanged(AndroidX.Media2.Session.MediaController! controller, int shuffleMode) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnSubtitleData(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.MediaItem! item, AndroidX.Media2.Common.SessionPlayer.TrackInfo! track, AndroidX.Media2.Common.SubtitleData! data) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnTrackDeselected(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.SessionPlayer.TrackInfo! trackInfo) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnTrackSelected(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.SessionPlayer.TrackInfo! trackInfo) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnTracksChanged(AndroidX.Media2.Session.MediaController! controller, System.Collections.Generic.IList<AndroidX.Media2.Common.SessionPlayer.TrackInfo!>! tracks) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnVideoSizeChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.MediaItem! item, AndroidX.Media2.Common.VideoSize! videoSize) -> void
virtual AndroidX.Media2.Session.MediaController.ControllerCallback.OnVideoSizeChanged(AndroidX.Media2.Session.MediaController! controller, AndroidX.Media2.Common.VideoSize! videoSize) -> void
virtual AndroidX.Media2.Session.MediaController.CurrentMediaItem.get -> AndroidX.Media2.Common.MediaItem?
virtual AndroidX.Media2.Session.MediaController.CurrentMediaItemIndex.get -> int
virtual AndroidX.Media2.Session.MediaController.CurrentPosition.get -> long
virtual AndroidX.Media2.Session.MediaController.DeselectTrack(AndroidX.Media2.Common.SessionPlayer.TrackInfo! trackInfo) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.Duration.get -> long
virtual AndroidX.Media2.Session.MediaController.ExtraControllerCallbacks.get -> System.Collections.Generic.IList<AndroidX.Core.Util.Pair!>!
virtual AndroidX.Media2.Session.MediaController.FastForward() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.GetPlaybackInfo() -> AndroidX.Media2.Session.MediaController.PlaybackInfo?
virtual AndroidX.Media2.Session.MediaController.GetSelectedTrack(int trackType) -> AndroidX.Media2.Common.SessionPlayer.TrackInfo?
virtual AndroidX.Media2.Session.MediaController.IsConnected.get -> bool
virtual AndroidX.Media2.Session.MediaController.MovePlaylistItem(int fromIndex, int toIndex) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.NextMediaItemIndex.get -> int
virtual AndroidX.Media2.Session.MediaController.NotifyAllControllerCallbacks(AndroidX.Media2.Session.MediaController.IControllerCallbackRunnable! callbackRunnable) -> void
virtual AndroidX.Media2.Session.MediaController.Pause() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.Play() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.PlaybackSpeed.get -> float
virtual AndroidX.Media2.Session.MediaController.PlayerState.get -> int
virtual AndroidX.Media2.Session.MediaController.Playlist.get -> System.Collections.Generic.IList<AndroidX.Media2.Common.MediaItem!>?
virtual AndroidX.Media2.Session.MediaController.PlaylistMetadata.get -> AndroidX.Media2.Common.MediaMetadata?
virtual AndroidX.Media2.Session.MediaController.Prepare() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.PreviousMediaItemIndex.get -> int
virtual AndroidX.Media2.Session.MediaController.RegisterExtraCallback(Java.Util.Concurrent.IExecutor! executor, AndroidX.Media2.Session.MediaController.ControllerCallback! callback) -> void
virtual AndroidX.Media2.Session.MediaController.RemovePlaylistItem(int index) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.RepeatMode.get -> int
virtual AndroidX.Media2.Session.MediaController.ReplacePlaylistItem(int index, string! mediaId) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.Rewind() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SeekTo(long position) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SelectTrack(AndroidX.Media2.Common.SessionPlayer.TrackInfo! trackInfo) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SendCustomCommand(AndroidX.Media2.Session.SessionCommand! command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SessionActivity.get -> Android.App.PendingIntent?
virtual AndroidX.Media2.Session.MediaController.SetMediaItem(string! mediaId) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetMediaUri(Android.Net.Uri! uri, Android.OS.Bundle? extras) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetPlaybackSpeed(float playbackSpeed) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetPlaylist(System.Collections.Generic.IList<string!>! list, AndroidX.Media2.Common.MediaMetadata? metadata) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetRating(string! mediaId, AndroidX.Media2.Common.IRating! rating) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetRepeatMode(int repeatMode) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetShuffleMode(int shuffleMode) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetSurface(Android.Views.Surface? surface) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SetTimeDiff(Java.Lang.Long? timeDiff) -> void
virtual AndroidX.Media2.Session.MediaController.SetVolumeTo(int value, int flags) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.ShuffleMode.get -> int
virtual AndroidX.Media2.Session.MediaController.SkipBackward() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SkipForward() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SkipToNextPlaylistItem() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SkipToPlaylistItem(int index) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.SkipToPreviousPlaylistItem() -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.Tracks.get -> System.Collections.Generic.IList<AndroidX.Media2.Common.SessionPlayer.TrackInfo!>!
virtual AndroidX.Media2.Session.MediaController.UnregisterExtraCallback(AndroidX.Media2.Session.MediaController.ControllerCallback! callback) -> void
virtual AndroidX.Media2.Session.MediaController.UpdatePlaylistMetadata(AndroidX.Media2.Common.MediaMetadata? metadata) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaController.VideoSize.get -> AndroidX.Media2.Common.VideoSize!
virtual AndroidX.Media2.Session.MediaControllerDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaControllerDefault.OnAllowedCommandsChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? commandGroup) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnBufferingStateChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? item, int state, long bufferedPositionMs, long eventTimeMs, long positionMs) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnChildrenChanged(int seq, string? parentId, int itemCount, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnConnected(int seq, AndroidX.VersionedParcelable.ParcelImpl? connectionResult) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnCurrentMediaItemChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? item, int currentIdx, int previousIdx, int nextIdx) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnCustomCommand(int seq, AndroidX.VersionedParcelable.ParcelImpl? command, Android.OS.Bundle? args) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnDisconnected(int seq) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnLibraryResult(int seq, AndroidX.VersionedParcelable.ParcelImpl? libraryResult) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlaybackCompleted(int seq) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlaybackInfoChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? playbackInfo) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlaybackSpeedChanged(int seq, long eventTimeMs, long positionMs, float speed) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlayerStateChanged(int seq, long eventTimeMs, long positionMs, int state) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlaylistChanged(int seq, AndroidX.Media2.Common.ParcelImplListSlice? listSlice, AndroidX.VersionedParcelable.ParcelImpl? metadata, int currentIdx, int previousIdx, int nextIdx) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnPlaylistMetadataChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? metadata) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnRepeatModeChanged(int seq, int repeatMode, int currentIdx, int previousIdx, int nextIdx) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnSearchResultChanged(int seq, string? query, int itemCount, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnSeekCompleted(int seq, long eventTimeMs, long positionMs, long seekPositionMs) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnSessionResult(int seq, AndroidX.VersionedParcelable.ParcelImpl? sessionResult) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnSetCustomLayout(int seq, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? commandButtonlist) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnShuffleModeChanged(int seq, int shuffleMode, int currentIdx, int previousIdx, int nextIdx) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnSubtitleData(int seq, AndroidX.VersionedParcelable.ParcelImpl? item, AndroidX.VersionedParcelable.ParcelImpl? track, AndroidX.VersionedParcelable.ParcelImpl? data) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnTrackDeselected(int seq, AndroidX.VersionedParcelable.ParcelImpl? trackInfo) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnTrackInfoChanged(int seq, System.Collections.Generic.IList<AndroidX.VersionedParcelable.ParcelImpl!>? trackInfos, AndroidX.VersionedParcelable.ParcelImpl? selectedVideoTrack, AndroidX.VersionedParcelable.ParcelImpl? selectedAudioTrack, AndroidX.VersionedParcelable.ParcelImpl? selectedSubtitleTrack, AndroidX.VersionedParcelable.ParcelImpl? selectedMetadataTrack) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnTrackSelected(int seq, AndroidX.VersionedParcelable.ParcelImpl? trackInfo) -> void
virtual AndroidX.Media2.Session.MediaControllerDefault.OnVideoSizeChanged(int seq, AndroidX.VersionedParcelable.ParcelImpl? item, AndroidX.VersionedParcelable.ParcelImpl? videoSize) -> void
virtual AndroidX.Media2.Session.MediaControllerStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaControllerStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnGetChildren(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! parentId, int page, int pageSize, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media2.Session.LibraryResult!
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnGetItem(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! mediaId) -> AndroidX.Media2.Session.LibraryResult!
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnGetLibraryRoot(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media2.Session.LibraryResult!
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnGetSearchResult(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! query, int page, int pageSize, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> AndroidX.Media2.Session.LibraryResult!
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnSearch(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! query, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> int
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnSubscribe(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! parentId, AndroidX.Media2.Session.MediaLibraryService.LibraryParams? params) -> int
virtual AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession.MediaLibrarySessionCallback.OnUnsubscribe(AndroidX.Media2.Session.MediaLibraryService.MediaLibrarySession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! parentId) -> int
virtual AndroidX.Media2.Session.MediaSession.BroadcastCustomCommand(AndroidX.Media2.Session.SessionCommand! command, Android.OS.Bundle? args) -> void
virtual AndroidX.Media2.Session.MediaSession.Close() -> void
virtual AndroidX.Media2.Session.MediaSession.ConnectedControllers.get -> System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession.ControllerInfo!>!
virtual AndroidX.Media2.Session.MediaSession.Id.get -> string!
virtual AndroidX.Media2.Session.MediaSession.IsClosed.get -> bool
virtual AndroidX.Media2.Session.MediaSession.Player.get -> AndroidX.Media2.Common.SessionPlayer!
virtual AndroidX.Media2.Session.MediaSession.SendCustomCommand(AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, AndroidX.Media2.Session.SessionCommand! command, Android.OS.Bundle? args) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.OnNotificationUpdateNeeded(AndroidX.Media2.Session.MediaSession? session) -> void
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.OnPlayerStateChanged(AndroidX.Media2.Session.MediaSession? session, int state) -> void
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.ForegroundServiceEventCallback.OnSessionClosed(AndroidX.Media2.Session.MediaSession? session) -> void
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnCommandRequest(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, AndroidX.Media2.Session.SessionCommand! command) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnConnect(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> AndroidX.Media2.Session.SessionCommandGroup?
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnCreateMediaItem(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! mediaId) -> AndroidX.Media2.Common.MediaItem?
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnCustomCommand(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, AndroidX.Media2.Session.SessionCommand! customCommand, Android.OS.Bundle? args) -> AndroidX.Media2.Session.SessionResult!
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnDisconnected(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> void
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnFastForward(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnPostConnect(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> void
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnRewind(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnSetMediaUri(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, Android.Net.Uri! uri, Android.OS.Bundle? extras) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnSetRating(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, string! mediaId, AndroidX.Media2.Common.IRating! rating) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnSkipBackward(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCallback.OnSkipForward(AndroidX.Media2.Session.MediaSession! session, AndroidX.Media2.Session.MediaSession.ControllerInfo! controller) -> int
virtual AndroidX.Media2.Session.MediaSession.SessionCompat.get -> Android.Support.V4.Media.Session.MediaSessionCompat?
virtual AndroidX.Media2.Session.MediaSession.SessionCompatToken.get -> Android.Support.V4.Media.Session.MediaSessionCompat.Token!
virtual AndroidX.Media2.Session.MediaSession.SetAllowedCommands(AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, AndroidX.Media2.Session.SessionCommandGroup! commands) -> void
virtual AndroidX.Media2.Session.MediaSession.SetCustomLayout(AndroidX.Media2.Session.MediaSession.ControllerInfo! controller, System.Collections.Generic.IList<AndroidX.Media2.Session.MediaSession.CommandButton!>! layout) -> Google.Common.Util.Concurrent.IListenableFuture!
virtual AndroidX.Media2.Session.MediaSession.SetLegacyControllerConnectionTimeoutMs(long timeoutMs) -> void
virtual AndroidX.Media2.Session.MediaSession.Token.get -> AndroidX.Media2.Session.SessionToken!
virtual AndroidX.Media2.Session.MediaSession.UpdatePlayer(AndroidX.Media2.Common.SessionPlayer! player) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.AddPlaylistItem(AndroidX.Media2.Session.IMediaController? caller, int seq, int index, string? mediaId) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.AdjustVolume(AndroidX.Media2.Session.IMediaController? caller, int seq, int direction, int flags) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaSessionDefault.Connect(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? connectionRequest) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.DeselectTrack(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? trackInfo) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.FastForward(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.GetChildren(AndroidX.Media2.Session.IMediaController? caller, int seq, string? parentId, int page, int pageSize, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.GetItem(AndroidX.Media2.Session.IMediaController? caller, int seq, string? mediaId) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.GetLibraryRoot(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.GetSearchResult(AndroidX.Media2.Session.IMediaController? caller, int seq, string? query, int page, int pageSize, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.MovePlaylistItem(AndroidX.Media2.Session.IMediaController? caller, int seq, int fromIndex, int toIndex) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.OnControllerResult(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? controllerResult) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.OnCustomCommand(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? sessionCommand, Android.OS.Bundle? args) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Pause(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Play(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Prepare(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Release(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.RemovePlaylistItem(AndroidX.Media2.Session.IMediaController? caller, int seq, int index) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.ReplacePlaylistItem(AndroidX.Media2.Session.IMediaController? caller, int seq, int index, string? mediaId) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Rewind(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Search(AndroidX.Media2.Session.IMediaController? caller, int seq, string? query, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SeekTo(AndroidX.Media2.Session.IMediaController? caller, int seq, long pos) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SelectTrack(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? trackInfo) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetMediaItem(AndroidX.Media2.Session.IMediaController? caller, int seq, string? mediaId) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetMediaUri(AndroidX.Media2.Session.IMediaController? caller, int seq, Android.Net.Uri? uri, Android.OS.Bundle? extras) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetPlaybackSpeed(AndroidX.Media2.Session.IMediaController? caller, int seq, float speed) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetPlaylist(AndroidX.Media2.Session.IMediaController? caller, int seq, System.Collections.Generic.IList<string!>? list, AndroidX.VersionedParcelable.ParcelImpl? metadata) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetRating(AndroidX.Media2.Session.IMediaController? caller, int seq, string? mediaId, AndroidX.VersionedParcelable.ParcelImpl? rating) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetRepeatMode(AndroidX.Media2.Session.IMediaController? caller, int seq, int repeatMode) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetShuffleMode(AndroidX.Media2.Session.IMediaController? caller, int seq, int shuffleMode) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetSurface(AndroidX.Media2.Session.IMediaController? caller, int seq, Android.Views.Surface? surface) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SetVolumeTo(AndroidX.Media2.Session.IMediaController? caller, int seq, int value, int flags) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SkipBackward(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SkipForward(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SkipToNextItem(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SkipToPlaylistItem(AndroidX.Media2.Session.IMediaController? caller, int seq, int index) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.SkipToPreviousItem(AndroidX.Media2.Session.IMediaController? caller, int seq) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Subscribe(AndroidX.Media2.Session.IMediaController? caller, int seq, string? parentId, AndroidX.VersionedParcelable.ParcelImpl? libraryParams) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.Unsubscribe(AndroidX.Media2.Session.IMediaController? caller, int seq, string? parentId) -> void
virtual AndroidX.Media2.Session.MediaSessionDefault.UpdatePlaylistMetadata(AndroidX.Media2.Session.IMediaController? caller, int seq, AndroidX.VersionedParcelable.ParcelImpl? metadata) -> void
virtual AndroidX.Media2.Session.MediaSessionService.MediaNotification.Notification.get -> Android.App.Notification!
virtual AndroidX.Media2.Session.MediaSessionService.MediaNotification.NotificationId.get -> int
virtual AndroidX.Media2.Session.MediaSessionService.OnUpdateNotification(AndroidX.Media2.Session.MediaSession! session) -> AndroidX.Media2.Session.MediaSessionService.MediaNotification?
virtual AndroidX.Media2.Session.MediaSessionServiceDefault.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaSessionServiceDefault.Connect(AndroidX.Media2.Session.IMediaController? caller, AndroidX.VersionedParcelable.ParcelImpl? connectionRequest) -> void
virtual AndroidX.Media2.Session.MediaSessionServiceStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaSessionServiceStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media2.Session.MediaSessionStub.AsBinder() -> Android.OS.IBinder?
virtual AndroidX.Media2.Session.MediaSessionStub.OnTransact(int code, Android.OS.Parcel? data, Android.OS.Parcel? reply, int flags) -> bool
virtual AndroidX.Media2.Session.SessionResult.CompletionTime.get -> long
virtual AndroidX.Media2.Session.SessionResult.CustomCommandResult.get -> Android.OS.Bundle?
virtual AndroidX.Media2.Session.SessionResult.MediaItem.get -> AndroidX.Media2.Common.MediaItem?
virtual AndroidX.Media2.Session.SessionResult.ResultCode.get -> int
