#nullable enable
Kotlin.Reflect.Full.IllegalCallableAccessException
Kotlin.Reflect.Full.IllegalCallableAccessException.IllegalCallableAccessException(Java.Lang.IllegalAccessException! cause) -> void
Kotlin.Reflect.Full.IllegalPropertyDelegateAccessException
Kotlin.Reflect.Full.IllegalPropertyDelegateAccessException.IllegalPropertyDelegateAccessException(Java.Lang.IllegalAccessException! cause) -> void
Kotlin.Reflect.Full.KAnnotatedElements
Kotlin.Reflect.Full.KCallables
Kotlin.Reflect.Full.KClasses
Kotlin.Reflect.Full.KClassifiers
Kotlin.Reflect.Full.KClassifiers.WhenMappings
Kotlin.Reflect.Full.KProperties
Kotlin.Reflect.Full.KTypes
Kotlin.Reflect.Full.NoSuchPropertyException
Kotlin.Reflect.Full.NoSuchPropertyException.NoSuchPropertyException() -> void
Kotlin.Reflect.Full.NoSuchPropertyException.NoSuchPropertyException(Java.Lang.Exception? cause) -> void
Kotlin.Reflect.Jvm.ExperimentalReflectionOnLambdasAttribute
Kotlin.Reflect.Jvm.ExperimentalReflectionOnLambdasAttribute.ExperimentalReflectionOnLambdasAttribute() -> void
Kotlin.Reflect.Jvm.IExperimentalReflectionOnLambdas
Kotlin.Reflect.Jvm.KCallablesJvm
Kotlin.Reflect.Jvm.KClassesJvm
Kotlin.Reflect.Jvm.KTypesJvm
Kotlin.Reflect.Jvm.ReflectJvmMapping
Kotlin.Reflect.Jvm.ReflectJvmMapping.WhenMappings
Kotlin.Reflect.Jvm.ReflectLambdaKt
override Kotlin.Reflect.Full.IllegalCallableAccessException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.IllegalPropertyDelegateAccessException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KAnnotatedElements.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KCallables.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KClasses.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KClassifiers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KClassifiers.WhenMappings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KProperties.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.KTypes.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Full.NoSuchPropertyException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.KCallablesJvm.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.KClassesJvm.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.KTypesJvm.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.ReflectJvmMapping.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.ReflectJvmMapping.WhenMappings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Kotlin.Reflect.Jvm.ReflectLambdaKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static Kotlin.Reflect.Full.KAnnotatedElements.FindAnnotations(Kotlin.Reflect.IKAnnotatedElement! obj, Kotlin.Reflect.IKClass! klass) -> System.Collections.IList!
static Kotlin.Reflect.Full.KCallables.CallSuspend(Kotlin.Reflect.IKCallable! obj, Java.Lang.Object![]! args, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KCallables.CallSuspendBy(Kotlin.Reflect.IKCallable! obj, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKParameter!, Java.Lang.Object!>! args, Kotlin.Coroutines.IContinuation! _completion) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KCallables.FindParameterByName(Kotlin.Reflect.IKCallable! obj, string! name) -> Kotlin.Reflect.IKParameter?
static Kotlin.Reflect.Full.KCallables.GetExtensionReceiverParameter(Kotlin.Reflect.IKCallable! obj) -> Kotlin.Reflect.IKParameter?
static Kotlin.Reflect.Full.KCallables.GetInstanceParameter(Kotlin.Reflect.IKCallable! obj) -> Kotlin.Reflect.IKParameter?
static Kotlin.Reflect.Full.KCallables.GetValueParameters(Kotlin.Reflect.IKCallable! obj) -> System.Collections.Generic.IList<Kotlin.Reflect.IKParameter!>!
static Kotlin.Reflect.Full.KClasses.Cast(Kotlin.Reflect.IKClass! obj, Java.Lang.Object? value) -> Java.Lang.Object!
static Kotlin.Reflect.Full.KClasses.CreateInstance(Kotlin.Reflect.IKClass! obj) -> Java.Lang.Object!
static Kotlin.Reflect.Full.KClasses.GetAllSuperclasses(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKClass!>!
static Kotlin.Reflect.Full.KClasses.GetAllSupertypes(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKType!>!
static Kotlin.Reflect.Full.KClasses.GetCompanionObject(Kotlin.Reflect.IKClass! obj) -> Kotlin.Reflect.IKClass?
static Kotlin.Reflect.Full.KClasses.GetCompanionObjectInstance(Kotlin.Reflect.IKClass! obj) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KClasses.GetDeclaredFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetDeclaredMemberExtensionFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetDeclaredMemberExtensionProperties(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKProperty2!>!
static Kotlin.Reflect.Full.KClasses.GetDeclaredMemberFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetDeclaredMemberProperties(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKProperty1!>!
static Kotlin.Reflect.Full.KClasses.GetDeclaredMembers(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKCallable!>!
static Kotlin.Reflect.Full.KClasses.GetDefaultType(Kotlin.Reflect.IKClass! obj) -> Kotlin.Reflect.IKType!
static Kotlin.Reflect.Full.KClasses.GetFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetMemberExtensionFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetMemberExtensionProperties(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKProperty2!>!
static Kotlin.Reflect.Full.KClasses.GetMemberFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetMemberProperties(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKProperty1!>!
static Kotlin.Reflect.Full.KClasses.GetPrimaryConstructor(Kotlin.Reflect.IKClass! obj) -> Kotlin.Reflect.IKFunction?
static Kotlin.Reflect.Full.KClasses.GetStaticFunctions(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKFunction!>!
static Kotlin.Reflect.Full.KClasses.GetStaticProperties(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.ICollection<Kotlin.Reflect.IKProperty0!>!
static Kotlin.Reflect.Full.KClasses.GetSuperclasses(Kotlin.Reflect.IKClass! obj) -> System.Collections.Generic.IList<Kotlin.Reflect.IKClass!>!
static Kotlin.Reflect.Full.KClasses.IsSubclassOf(Kotlin.Reflect.IKClass! obj, Kotlin.Reflect.IKClass! base) -> bool
static Kotlin.Reflect.Full.KClasses.IsSuperclassOf(Kotlin.Reflect.IKClass! obj, Kotlin.Reflect.IKClass! derived) -> bool
static Kotlin.Reflect.Full.KClasses.SafeCast(Kotlin.Reflect.IKClass! obj, Java.Lang.Object? value) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KClassifiers.CreateType(Kotlin.Reflect.IKClassifier! obj, System.Collections.Generic.IList<Kotlin.Reflect.KTypeProjection!>! arguments, bool nullable, System.Collections.Generic.IList<Java.Lang.Annotation.IAnnotation!>! annotations) -> Kotlin.Reflect.IKType!
static Kotlin.Reflect.Full.KClassifiers.GetStarProjectedType(Kotlin.Reflect.IKClassifier! obj) -> Kotlin.Reflect.IKType!
static Kotlin.Reflect.Full.KProperties.GetExtensionDelegate(Kotlin.Reflect.IKProperty1! obj) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KProperties.GetExtensionDelegate(Kotlin.Reflect.IKProperty2! obj, Java.Lang.Object? receiver) -> Java.Lang.Object?
static Kotlin.Reflect.Full.KTypes.IsSubtypeOf(Kotlin.Reflect.IKType! obj, Kotlin.Reflect.IKType! other) -> bool
static Kotlin.Reflect.Full.KTypes.IsSupertypeOf(Kotlin.Reflect.IKType! obj, Kotlin.Reflect.IKType! other) -> bool
static Kotlin.Reflect.Full.KTypes.WithNullability(Kotlin.Reflect.IKType! obj, bool nullable) -> Kotlin.Reflect.IKType!
static Kotlin.Reflect.Jvm.KCallablesJvm.IsAccessible(Kotlin.Reflect.IKCallable! obj) -> bool
static Kotlin.Reflect.Jvm.KCallablesJvm.SetAccessible(Kotlin.Reflect.IKCallable! obj, bool value) -> void
static Kotlin.Reflect.Jvm.KClassesJvm.GetJvmName(Kotlin.Reflect.IKClass! obj) -> string!
static Kotlin.Reflect.Jvm.KTypesJvm.GetJvmErasure(Kotlin.Reflect.IKClassifier! obj) -> Kotlin.Reflect.IKClass!
static Kotlin.Reflect.Jvm.KTypesJvm.GetJvmErasure(Kotlin.Reflect.IKType! obj) -> Kotlin.Reflect.IKClass!
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaConstructor(Kotlin.Reflect.IKFunction! obj) -> Java.Lang.Reflect.Constructor?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaField(Kotlin.Reflect.IKProperty! obj) -> Java.Lang.Reflect.Field?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaGetter(Kotlin.Reflect.IKProperty! obj) -> Java.Lang.Reflect.Method?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaMethod(Kotlin.Reflect.IKFunction! obj) -> Java.Lang.Reflect.Method?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaSetter(Kotlin.Reflect.IKMutableProperty! obj) -> Java.Lang.Reflect.Method?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetJavaType(Kotlin.Reflect.IKType! obj) -> Java.Lang.Reflect.IType!
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetKotlinFunction(Java.Lang.Reflect.Constructor! obj) -> Kotlin.Reflect.IKFunction?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetKotlinFunction(Java.Lang.Reflect.Method! obj) -> Kotlin.Reflect.IKFunction?
static Kotlin.Reflect.Jvm.ReflectJvmMapping.GetKotlinProperty(Java.Lang.Reflect.Field! obj) -> Kotlin.Reflect.IKProperty?
static Kotlin.Reflect.Jvm.ReflectLambdaKt.Reflect(Kotlin.IFunction! obj) -> Kotlin.Reflect.IKFunction?
