#nullable enable
AndroidX.DrawerLayout.Widget.DrawerLayout
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerClosed -> System.EventHandler<AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerClosedEventArgs!>!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerClosedEventArgs
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerClosedEventArgs.DrawerClosedEventArgs(Android.Views.View! drawerView) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerClosedEventArgs.DrawerView.get -> Android.Views.View!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerLayout(Android.Content.Context! context) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerLayout(Android.Content.Context! context, Android.Util.IAttributeSet? attrs, int defStyleAttr) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerLayout(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerOpened -> System.EventHandler<AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerOpenedEventArgs!>!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerOpenedEventArgs
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerOpenedEventArgs.DrawerOpenedEventArgs(Android.Views.View! drawerView) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerOpenedEventArgs.DrawerView.get -> Android.Views.View!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlide -> System.EventHandler<AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlideEventArgs!>!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlideEventArgs
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlideEventArgs.DrawerSlideEventArgs(Android.Views.View! drawerView, float slideOffset) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlideEventArgs.DrawerView.get -> Android.Views.View!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerSlideEventArgs.SlideOffset.get -> float
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerStateChanged -> System.EventHandler<AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerStateChangedEventArgs!>!
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerStateChangedEventArgs
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerStateChangedEventArgs.DrawerStateChangedEventArgs(int newState) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerStateChangedEventArgs.NewState.get -> int
AndroidX.DrawerLayout.Widget.DrawerLayout.GetDrawerTitle(int edgeGravity) -> string?
AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener
AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener.OnDrawerClosed(Android.Views.View! drawerView) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener.OnDrawerOpened(Android.Views.View! drawerView) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener.OnDrawerSlide(Android.Views.View! drawerView, float slideOffset) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener.OnDrawerStateChanged(int newState) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.Gravity.get -> int
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.Gravity.set -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(Android.Content.Context! c, Android.Util.IAttributeSet? attrs) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.LayoutParams! source) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(Android.Views.ViewGroup.MarginLayoutParams! source) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams! source) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(int width, int height) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(int width, int height, int gravity) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.LayoutParams(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState
AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.SavedState(Android.OS.IParcelable! superState) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.SavedState(Android.OS.Parcel! in, Java.Lang.ClassLoader? loader) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.SavedState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerTitle(int edgeGravity, string? title) -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener
AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.SimpleDrawerListener() -> void
AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.SimpleDrawerListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const AndroidX.DrawerLayout.Widget.DrawerLayout.LockModeLockedClosed = 1 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.LockModeLockedOpen = 2 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.LockModeUndefined = 3 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.LockModeUnlocked = 0 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.StateDragging = 1 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.StateIdle = 0 -> int
const AndroidX.DrawerLayout.Widget.DrawerLayout.StateSettling = 2 -> int
override AndroidX.DrawerLayout.Widget.DrawerLayout.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.ThresholdClass.get -> nint
override AndroidX.DrawerLayout.Widget.DrawerLayout.LayoutParams.ThresholdType.get -> System.Type!
override AndroidX.DrawerLayout.Widget.DrawerLayout.OnLayout(bool changed, int l, int t, int r, int b) -> void
override AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.ThresholdClass.get -> nint
override AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.ThresholdType.get -> System.Type!
override AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.ThresholdClass.get -> nint
override AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.ThresholdType.get -> System.Type!
override AndroidX.DrawerLayout.Widget.DrawerLayout.ThresholdClass.get -> nint
override AndroidX.DrawerLayout.Widget.DrawerLayout.ThresholdType.get -> System.Type!
static AndroidX.DrawerLayout.Widget.DrawerLayout.SavedState.Creator.get -> Android.OS.IParcelableCreator?
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.AddDrawerListener(AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener! listener) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.AddFocusables(System.Collections.Generic.IList<Android.Views.View!>? views, int direction, int focusableMode) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.Close() -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.CloseDrawer(Android.Views.View! drawerView) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.CloseDrawer(Android.Views.View! drawerView, bool animate) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.CloseDrawer(int gravity) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.CloseDrawer(int gravity, bool animate) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.CloseDrawers() -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerElevation.get -> float
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.DrawerElevation.set -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.GetDrawerLockMode(Android.Views.View! drawerView) -> int
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.GetDrawerLockMode(int edgeGravity) -> int
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.GetDrawerTitleFormatted(int edgeGravity) -> Java.Lang.ICharSequence?
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.IsDrawerOpen(Android.Views.View! drawer) -> bool
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.IsDrawerOpen(int drawerGravity) -> bool
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.IsDrawerVisible(Android.Views.View! drawer) -> bool
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.IsDrawerVisible(int drawerGravity) -> bool
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.IsOpen.get -> bool
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.OnDraw(Android.Graphics.Canvas! c) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.Open() -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.OpenDrawer(Android.Views.View! drawerView) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.OpenDrawer(Android.Views.View! drawerView, bool animate) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.OpenDrawer(int gravity) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.OpenDrawer(int gravity, bool animate) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.RemoveDrawerListener(AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener! listener) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetChildInsets(AndroidX.Core.View.WindowInsetsCompat? insets, bool draw) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerListener(AndroidX.DrawerLayout.Widget.DrawerLayout.IDrawerListener? listener) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerLockMode(int lockMode) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerLockMode(int lockMode, Android.Views.View! drawerView) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerLockMode(int lockMode, int edgeGravity) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerShadow(Android.Graphics.Drawables.Drawable? shadowDrawable, int gravity) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerShadow(int resId, int gravity) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetDrawerTitle(int edgeGravity, Java.Lang.ICharSequence? title) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetScrimColor(int color) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetStatusBarBackground(Android.Graphics.Drawables.Drawable? bg) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetStatusBarBackground(int resId) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SetStatusBarBackgroundColor(int color) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.OnDrawerClosed(Android.Views.View! drawerView) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.OnDrawerOpened(Android.Views.View! drawerView) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.OnDrawerSlide(Android.Views.View! drawerView, float slideOffset) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.SimpleDrawerListener.OnDrawerStateChanged(int newState) -> void
virtual AndroidX.DrawerLayout.Widget.DrawerLayout.StatusBarBackgroundDrawable.get -> Android.Graphics.Drawables.Drawable?
