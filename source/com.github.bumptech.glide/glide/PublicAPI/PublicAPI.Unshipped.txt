#nullable enable
Bumptech.Glide.GeneratedAppGlideModule
Bumptech.Glide.GeneratedAppGlideModule.GeneratedAppGlideModule() -> void
Bumptech.Glide.GeneratedAppGlideModule.GeneratedAppGlideModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.GenericTransitionOptions
Bumptech.Glide.GenericTransitionOptions.GenericTransitionOptions() -> void
Bumptech.Glide.Glide
Bumptech.Glide.Glide.Glide(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Glide.IRequestOptionsFactory
Bumptech.Glide.Glide.IRequestOptionsFactory.Build() -> Bumptech.Glide.Request.RequestOptions!
Bumptech.Glide.GlideBuilder
Bumptech.Glide.GlideBuilder.AddGlobalRequestListener(Bumptech.Glide.Request.IRequestListener! listener) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.Build(Android.Content.Context! context) -> Bumptech.Glide.Glide!
Bumptech.Glide.GlideBuilder.GlideBuilder() -> void
Bumptech.Glide.GlideBuilder.LogRequestOrigins
Bumptech.Glide.GlideBuilder.LogRequestOrigins.LogRequestOrigins() -> void
Bumptech.Glide.GlideBuilder.OverrideGlideThreadPriority
Bumptech.Glide.GlideBuilder.OverrideGlideThreadPriority.OverrideGlideThreadPriority() -> void
Bumptech.Glide.GlideBuilder.SetAnimationExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor? service) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetArrayPool(Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetBitmapPool(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetConnectivityMonitorFactory(Bumptech.Glide.Manager.IConnectivityMonitorFactory? factory) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetDefaultRequestOptions(Bumptech.Glide.Glide.IRequestOptionsFactory! factory) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetDefaultRequestOptions(Bumptech.Glide.Request.RequestOptions? requestOptions) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetDefaultTransitionOptions(Java.Lang.Class! clazz, Bumptech.Glide.TransitionOptions? options) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetDisableHardwareBitmapsOnO(bool disableHardwareBitmapsOnO) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetDiskCache(Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactory? diskCacheFactory) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetDiskCacheExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor? service) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetEnableHardwareGainmapFixOnU(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetImageDecoderEnabledForBitmaps(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetIsActiveResourceRetentionAllowed(bool isActiveResourceRetentionAllowed) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetLogLevel(int logLevel) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetLogRequestOrigins(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetMemoryCache(Bumptech.Glide.Load.Engine.Cache.IMemoryCache? memoryCache) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetMemorySizeCalculator(Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder! builder) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetMemorySizeCalculator(Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator? calculator) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetOverrideGlideThreadPriority(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetPreserveGainmapAndColorSpaceForTransformations(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetResizeExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor? service) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.SetSourceExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor? service) -> Bumptech.Glide.GlideBuilder!
Bumptech.Glide.GlideBuilder.SetUseMediaStoreOpenFileApisIfPossible(bool isEnabled) -> Bumptech.Glide.GlideBuilder?
Bumptech.Glide.GlideBuilder.UseMediaStoreOpenFileApisIfPossible
Bumptech.Glide.GlideBuilder.UseMediaStoreOpenFileApisIfPossible.UseMediaStoreOpenFileApisIfPossible() -> void
Bumptech.Glide.GlideContext
Bumptech.Glide.GlideContext.GlideContext(Android.Content.Context! context, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! arrayPool, Bumptech.Glide.Util.GlideSuppliers.IGlideSupplier! registry, Bumptech.Glide.Request.Target.ImageViewTargetFactory! imageViewTargetFactory, Bumptech.Glide.Glide.IRequestOptionsFactory! defaultRequestOptionsFactory, System.Collections.Generic.IDictionary<Java.Lang.Class!, Bumptech.Glide.TransitionOptions!>! defaultTransitionOptions, System.Collections.Generic.IList<Bumptech.Glide.Request.IRequestListener!>! defaultRequestListeners, Bumptech.Glide.Load.Engine.Engine! engine, Bumptech.Glide.GlideExperiments! experiments, int logLevel) -> void
Bumptech.Glide.GlideContext.GlideContext(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.GlideExperiments
Bumptech.Glide.GlideExperiments.GlideExperiments(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.ListPreloader
Bumptech.Glide.ListPreloader.IPreloadModelProvider
Bumptech.Glide.ListPreloader.IPreloadModelProvider.GetPreloadItems(int p0) -> System.Collections.IList!
Bumptech.Glide.ListPreloader.IPreloadModelProvider.GetPreloadRequestBuilder(Java.Lang.Object! p0) -> Bumptech.Glide.RequestBuilder?
Bumptech.Glide.ListPreloader.IPreloadSizeProvider
Bumptech.Glide.ListPreloader.IPreloadSizeProvider.GetPreloadSize(Java.Lang.Object! p0, int p1, int p2) -> int[]?
Bumptech.Glide.ListPreloader.ListPreloader(Bumptech.Glide.RequestManager! requestManager, Bumptech.Glide.ListPreloader.IPreloadModelProvider! preloadModelProvider, Bumptech.Glide.ListPreloader.IPreloadSizeProvider! preloadDimensionProvider, int maxPreload) -> void
Bumptech.Glide.ListPreloader.ListPreloader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher
Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher.AssetFileDescriptorLocalUriFetcher(Android.Content.ContentResolver? contentResolver, Android.Net.Uri? uri) -> void
Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher.AssetFileDescriptorLocalUriFetcher(Android.Content.ContentResolver? contentResolver, Android.Net.Uri? uri, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Data.AssetPathFetcher
Bumptech.Glide.Load.Data.AssetPathFetcher.AssetPathFetcher(Android.Content.Res.AssetManager? assetManager, string? assetPath) -> void
Bumptech.Glide.Load.Data.AssetPathFetcher.AssetPathFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.BufferedOutputStream
Bumptech.Glide.Load.Data.BufferedOutputStream.BufferedOutputStream(System.IO.Stream! out, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! arrayPool) -> void
Bumptech.Glide.Load.Data.DataRewinderRegistry
Bumptech.Glide.Load.Data.DataRewinderRegistry.DataRewinderRegistry() -> void
Bumptech.Glide.Load.Data.DataRewinderRegistry.DataRewinderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.ExifOrientationStream
Bumptech.Glide.Load.Data.ExifOrientationStream.ExifOrientationStream(System.IO.Stream? in, int orientation) -> void
Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher
Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.FileDescriptorAssetPathFetcher(Android.Content.Res.AssetManager? assetManager, string? assetPath) -> void
Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.FileDescriptorAssetPathFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher
Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.FileDescriptorLocalUriFetcher(Android.Content.ContentResolver? contentResolver, Android.Net.Uri? uri) -> void
Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.FileDescriptorLocalUriFetcher(Android.Content.ContentResolver? contentResolver, Android.Net.Uri? uri, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.FileDescriptorLocalUriFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.HttpUrlFetcher
Bumptech.Glide.Load.Data.HttpUrlFetcher.HttpUrlFetcher(Bumptech.Glide.Load.Model.GlideUrl? glideUrl, int timeout) -> void
Bumptech.Glide.Load.Data.HttpUrlFetcher.HttpUrlFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.IDataFetcher
Bumptech.Glide.Load.Data.IDataFetcher.Cancel() -> void
Bumptech.Glide.Load.Data.IDataFetcher.Cleanup() -> void
Bumptech.Glide.Load.Data.IDataFetcher.DataClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Data.IDataFetcher.DataSource.get -> Bumptech.Glide.Load.DataSource!
Bumptech.Glide.Load.Data.IDataFetcher.LoadData(Bumptech.Glide.Priority! p0, Bumptech.Glide.Load.Data.IDataFetcherDataCallback! p1) -> void
Bumptech.Glide.Load.Data.IDataFetcherDataCallback
Bumptech.Glide.Load.Data.IDataFetcherDataCallback.OnDataReady(Java.Lang.Object? p0) -> void
Bumptech.Glide.Load.Data.IDataFetcherDataCallback.OnLoadFailed(Java.Lang.Exception! p0) -> void
Bumptech.Glide.Load.Data.IDataRewinder
Bumptech.Glide.Load.Data.IDataRewinder.Cleanup() -> void
Bumptech.Glide.Load.Data.IDataRewinder.RewindAndGet() -> Java.Lang.Object!
Bumptech.Glide.Load.Data.IDataRewinderFactory
Bumptech.Glide.Load.Data.IDataRewinderFactory.Build(Java.Lang.Object! p0) -> Bumptech.Glide.Load.Data.IDataRewinder!
Bumptech.Glide.Load.Data.IDataRewinderFactory.DataClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Data.InputStreamRewinder
Bumptech.Glide.Load.Data.InputStreamRewinder.Cleanup() -> void
Bumptech.Glide.Load.Data.InputStreamRewinder.Factory
Bumptech.Glide.Load.Data.InputStreamRewinder.Factory.Build(System.IO.Stream? data) -> Bumptech.Glide.Load.Data.IDataRewinder!
Bumptech.Glide.Load.Data.InputStreamRewinder.Factory.DataClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Data.InputStreamRewinder.Factory.Factory(Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Data.InputStreamRewinder.FixMarkLimits() -> void
Bumptech.Glide.Load.Data.InputStreamRewinder.InputStreamRewinder(System.IO.Stream? is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Data.InputStreamRewinder.RewindAndGet() -> System.IO.Stream!
Bumptech.Glide.Load.Data.LocalUriFetcher
Bumptech.Glide.Load.Data.LocalUriFetcher.LoadData(Bumptech.Glide.Priority! priority, Bumptech.Glide.Load.Data.IDataFetcherDataCallback! callback) -> void
Bumptech.Glide.Load.Data.LocalUriFetcher.LocalUriFetcher(Android.Content.ContentResolver? contentResolver, Android.Net.Uri? uri) -> void
Bumptech.Glide.Load.Data.LocalUriFetcher.LocalUriFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.LocalUriFetcher.UseMediaStoreApisIfAvailable.get -> bool
Bumptech.Glide.Load.Data.LocalUriFetcher.UseMediaStoreApisIfAvailable.set -> void
Bumptech.Glide.Load.Data.Mediastore.IThumbnailQuery
Bumptech.Glide.Load.Data.Mediastore.IThumbnailQuery.Query(Android.Net.Uri? p0) -> Android.Database.ICursor?
Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil
Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher
Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.ThumbFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Cleanup() -> void
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Factory
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Factory.Build(Android.OS.ParcelFileDescriptor! parcelFileDescriptor) -> Bumptech.Glide.Load.Data.IDataRewinder!
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Factory.DataClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Factory.Factory() -> void
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.ParcelFileDescriptorRewinder(Android.OS.ParcelFileDescriptor? parcelFileDescriptor) -> void
Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.RewindAndGet() -> Android.OS.ParcelFileDescriptor!
Bumptech.Glide.Load.Data.StreamAssetPathFetcher
Bumptech.Glide.Load.Data.StreamAssetPathFetcher.StreamAssetPathFetcher(Android.Content.Res.AssetManager? assetManager, string? assetPath) -> void
Bumptech.Glide.Load.Data.StreamAssetPathFetcher.StreamAssetPathFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Data.StreamLocalUriFetcher
Bumptech.Glide.Load.Data.StreamLocalUriFetcher.StreamLocalUriFetcher(Android.Content.ContentResolver? resolver, Android.Net.Uri? uri) -> void
Bumptech.Glide.Load.Data.StreamLocalUriFetcher.StreamLocalUriFetcher(Android.Content.ContentResolver? resolver, Android.Net.Uri? uri, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Data.StreamLocalUriFetcher.StreamLocalUriFetcher(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.DataSource
Bumptech.Glide.Load.DecodeFormat
Bumptech.Glide.Load.EncodeStrategy
Bumptech.Glide.Load.Engine.BitmapRecycle.ArrayPool
Bumptech.Glide.Load.Engine.BitmapRecycle.ArrayPoolConsts
Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool
Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool.BaseKeyPool(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter
Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.BitmapPoolAdapter() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.BitmapPoolAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.ByteArrayAdapter() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.ElementSizeInBytes.get -> int
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.GetArrayLength(byte[]? array) -> int
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.NewArray(int length) -> byte[]?
Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.Tag.get -> string?
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.ClearMemory() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.Get(int p0, Java.Lang.Class? p1) -> Java.Lang.Object?
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.GetExact(int p0, Java.Lang.Class? p1) -> Java.Lang.Object?
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.Put(Java.Lang.Object? p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.Put(Java.Lang.Object? p0, Java.Lang.Class? p1) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool.TrimMemory(int p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.ClearMemory() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.Get(int p0, int p1, Android.Graphics.Bitmap.Config? p2) -> Android.Graphics.Bitmap!
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.GetDirty(int p0, int p1, Android.Graphics.Bitmap.Config? p2) -> Android.Graphics.Bitmap!
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.MaxSize.get -> long
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.Put(Android.Graphics.Bitmap? p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.SetSizeMultiplier(float p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool.TrimMemory(int p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.Get(int p0, int p1, Android.Graphics.Bitmap.Config? p2) -> Android.Graphics.Bitmap?
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.GetSize(Android.Graphics.Bitmap? p0) -> int
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.LogBitmap(Android.Graphics.Bitmap? p0) -> string?
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.LogBitmap(int p0, int p1, Android.Graphics.Bitmap.Config? p2) -> string?
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.Put(Android.Graphics.Bitmap? p0) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy.RemoveLast() -> Android.Graphics.Bitmap?
Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolable
Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolable.Offer() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.ElementSizeInBytes.get -> int
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.GetArrayLength(int[]? array) -> int
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.IntegerArrayAdapter() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.NewArray(int length) -> int[]?
Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.Tag.get -> string?
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.ClearMemory() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.Get(int size, Java.Lang.Class? arrayClass) -> Java.Lang.Object?
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.GetExact(int size, Java.Lang.Class? arrayClass) -> Java.Lang.Object?
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.InterfaceConsts
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.LruArrayPool() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.LruArrayPool(int maxSize) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.Put(Java.Lang.Object? array) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.Put(Java.Lang.Object? array, Java.Lang.Class? arrayClass) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.TrimMemory(int level) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool
Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.LruBitmapPool(long maxSize) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.LruBitmapPool(long maxSize, System.Collections.Generic.ICollection<Android.Graphics.Bitmap.Config!>? allowedConfigs) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.LruBitmapPool(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy
Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.SizeConfigStrategy() -> void
Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.SizeConfigStrategy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.DiskCacheAdapter() -> void
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.DiskCacheAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.Build() -> Bumptech.Glide.Load.Engine.Cache.IDiskCache?
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.Factory() -> void
Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.InterfaceConsts
Bumptech.Glide.Load.Engine.Cache.DiskCacheFactory
Bumptech.Glide.Load.Engine.Cache.DiskCacheFactoryConsts
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.DiskLruCacheFactory(Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.ICacheDirectoryGetter? cacheDirectoryGetter, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.DiskLruCacheFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.DiskLruCacheFactory(string? diskCacheFolder, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.DiskLruCacheFactory(string? diskCacheFolder, string? diskCacheName, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.ICacheDirectoryGetter
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.ICacheDirectoryGetter.CacheDirectory.get -> Java.IO.File?
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.InterfaceConsts
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.DiskLruCacheWrapper(Java.IO.File? directory, long maxSize) -> void
Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.DiskLruCacheWrapper(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory
Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory.ExternalCacheDiskCacheFactory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory.ExternalCacheDiskCacheFactory(Android.Content.Context? context, int diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory.ExternalCacheDiskCacheFactory(Android.Content.Context? context, string? diskCacheName, int diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory
Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory.ExternalPreferredCacheDiskCacheFactory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory.ExternalPreferredCacheDiskCacheFactory(Android.Content.Context? context, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory.ExternalPreferredCacheDiskCacheFactory(Android.Content.Context? context, string? diskCacheName, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.IDiskCache
Bumptech.Glide.Load.Engine.Cache.IDiskCache.Clear() -> void
Bumptech.Glide.Load.Engine.Cache.IDiskCache.Delete(Bumptech.Glide.Load.IKey? p0) -> void
Bumptech.Glide.Load.Engine.Cache.IDiskCache.Get(Bumptech.Glide.Load.IKey? p0) -> Java.IO.File?
Bumptech.Glide.Load.Engine.Cache.IDiskCache.Put(Bumptech.Glide.Load.IKey? p0, Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter? p1) -> void
Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactory
Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactory.Build() -> Bumptech.Glide.Load.Engine.Cache.IDiskCache?
Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter
Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter.Write(Java.IO.File! p0) -> bool
Bumptech.Glide.Load.Engine.Cache.IMemoryCache
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.ClearMemory() -> void
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.CurrentSize.get -> long
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.MaxSize.get -> long
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.Put(Bumptech.Glide.Load.IKey! p0, Bumptech.Glide.Load.Engine.IResource? p1) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.Remove(Bumptech.Glide.Load.IKey! p0) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.SetResourceRemovedListener(Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener! p0) -> void
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.SetSizeMultiplier(float p0) -> void
Bumptech.Glide.Load.Engine.Cache.IMemoryCache.TrimMemory(int p0) -> void
Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener
Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener.OnResourceRemoved(Bumptech.Glide.Load.Engine.IResource! p0) -> void
Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory
Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory.InternalCacheDiskCacheFactory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory.InternalCacheDiskCacheFactory(Android.Content.Context? context, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory.InternalCacheDiskCacheFactory(Android.Content.Context? context, string? diskCacheName, long diskCacheSize) -> void
Bumptech.Glide.Load.Engine.Cache.LruResourceCache
Bumptech.Glide.Load.Engine.Cache.LruResourceCache.LruResourceCache(long size) -> void
Bumptech.Glide.Load.Engine.Cache.LruResourceCache.LruResourceCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.LruResourceCache.ResourceRemoved -> System.EventHandler<Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs!>!
Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter
Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.MemoryCacheAdapter() -> void
Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.MemoryCacheAdapter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.ResourceRemoved -> System.EventHandler<Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs!>!
Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs
Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs.MemoryCacheResourceRemovedEventArgs(Bumptech.Glide.Load.Engine.IResource! p0) -> void
Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs.P0.get -> Bumptech.Glide.Load.Engine.IResource!
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.ArrayPoolSizeInBytes.get -> int
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.BitmapPoolSize.get -> int
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.Build() -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.Builder(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.SetArrayPoolSize(int arrayPoolSizeBytes) -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.SetBitmapPoolScreens(float bitmapPoolScreens) -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.SetLowMemoryMaxSizeMultiplier(float lowMemoryMaxSizeMultiplier) -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.SetMaxSizeMultiplier(float maxSizeMultiplier) -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.SetMemoryCacheScreens(float memoryCacheScreens) -> Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder?
Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.MemoryCacheSize.get -> int
Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator
Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.SafeKeyGenerator() -> void
Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.SafeKeyGenerator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.DecodePath
Bumptech.Glide.Load.Engine.DecodePath.DecodePath(Java.Lang.Class? dataClass, Java.Lang.Class? resourceClass, Java.Lang.Class? transcodeClass, System.Collections.IList? decoders, Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder? transcoder, AndroidX.Core.Util.Pools.IPool? listPool) -> void
Bumptech.Glide.Load.Engine.DecodePath.DecodePath(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.DiskCacheStrategy
Bumptech.Glide.Load.Engine.DiskCacheStrategy.DiskCacheStrategy() -> void
Bumptech.Glide.Load.Engine.DiskCacheStrategy.DiskCacheStrategy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Engine
Bumptech.Glide.Load.Engine.Engine.Engine(Bumptech.Glide.Load.Engine.Cache.IMemoryCache? memoryCache, Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactory? diskCacheFactory, Bumptech.Glide.Load.Engine.Executor.GlideExecutor? diskCacheExecutor, Bumptech.Glide.Load.Engine.Executor.GlideExecutor? sourceExecutor, Bumptech.Glide.Load.Engine.Executor.GlideExecutor? sourceUnlimitedExecutor, Bumptech.Glide.Load.Engine.Executor.GlideExecutor? animationExecutor, bool isActiveResourceRetentionAllowed) -> void
Bumptech.Glide.Load.Engine.Engine.Engine(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Engine.LoadStatus
Bumptech.Glide.Load.Engine.Engine.LoadStatus.LoadStatus(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Executor.GlideExecutor
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.AwaitTermination(long timeout, Java.Util.Concurrent.TimeUnit! unit) -> bool
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.Build() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.SetName(string? name) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.SetThreadCount(int threadCount) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.SetThreadFactory(Java.Util.Concurrent.IThreadFactory! threadFactory) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.SetThreadTimeoutMillis(long threadTimeoutMillis) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.SetUncaughtThrowableStrategy(Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy! strategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Execute(Java.Lang.IRunnable! command) -> void
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy.Default.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy.Handle(Java.Lang.Throwable? p0) -> void
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy.Ignore.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy.Log.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy.Throw.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable!>! tasks) -> System.Collections.Generic.IList<Java.Util.Concurrent.IFuture!>!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.InvokeAll(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable!>! tasks, long timeout, Java.Util.Concurrent.TimeUnit! unit) -> System.Collections.Generic.IList<Java.Util.Concurrent.IFuture!>!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable!>! tasks) -> Java.Lang.Object!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.InvokeAny(System.Collections.Generic.ICollection<Java.Util.Concurrent.ICallable!>! tasks, long timeout, Java.Util.Concurrent.TimeUnit! unit) -> Java.Lang.Object?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IsShutdown.get -> bool
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IsTerminated.get -> bool
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Shutdown() -> void
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.ShutdownNow() -> System.Collections.Generic.IList<Java.Lang.IRunnable!>!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Submit(Java.Lang.IRunnable! task) -> Java.Util.Concurrent.IFuture!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Submit(Java.Lang.IRunnable! task, Java.Lang.Object? result) -> Java.Util.Concurrent.IFuture!
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Submit(Java.Util.Concurrent.ICallable! task) -> Java.Util.Concurrent.IFuture?
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategy
Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategyConsts
Bumptech.Glide.Load.Engine.GlideException
Bumptech.Glide.Load.Engine.GlideException.Causes.get -> System.Collections.Generic.IList<Java.Lang.Throwable!>?
Bumptech.Glide.Load.Engine.GlideException.GlideException(string? detailMessage, Java.Lang.Throwable? cause) -> void
Bumptech.Glide.Load.Engine.GlideException.GlideException(string? detailMessage, System.Collections.Generic.IList<Java.Lang.Throwable!>? causes) -> void
Bumptech.Glide.Load.Engine.GlideException.GlideException(string? message) -> void
Bumptech.Glide.Load.Engine.GlideException.LogRootCauses(string? tag) -> void
Bumptech.Glide.Load.Engine.GlideException.Origin.get -> Java.Lang.Exception?
Bumptech.Glide.Load.Engine.GlideException.Origin.set -> void
Bumptech.Glide.Load.Engine.GlideException.RootCauses.get -> System.Collections.Generic.IList<Java.Lang.Throwable!>?
Bumptech.Glide.Load.Engine.IInitializable
Bumptech.Glide.Load.Engine.IInitializable.Initialize() -> void
Bumptech.Glide.Load.Engine.IResource
Bumptech.Glide.Load.Engine.IResource.Get() -> Java.Lang.Object!
Bumptech.Glide.Load.Engine.IResource.Recycle() -> void
Bumptech.Glide.Load.Engine.IResource.ResourceClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Engine.IResource.Size.get -> int
Bumptech.Glide.Load.Engine.LoadPath
Bumptech.Glide.Load.Engine.LoadPath.LoadPath(Java.Lang.Class? dataClass, Java.Lang.Class? resourceClass, Java.Lang.Class? transcodeClass, System.Collections.IList? decodePaths, AndroidX.Core.Util.Pools.IPool? listPool) -> void
Bumptech.Glide.Load.Engine.LoadPath.LoadPath(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Engine.Prefill.BitmapPreFiller
Bumptech.Glide.Load.Engine.Prefill.BitmapPreFiller.BitmapPreFiller(Bumptech.Glide.Load.Engine.Cache.IMemoryCache? memoryCache, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.DecodeFormat? defaultFormat) -> void
Bumptech.Glide.Load.Engine.Prefill.BitmapPreFiller.PreFill(params Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder![]? bitmapAttributeBuilders) -> void
Bumptech.Glide.Load.Engine.Prefill.PreFillType
Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder
Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.Builder(int size) -> void
Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.Builder(int width, int height) -> void
Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.HttpException
Bumptech.Glide.Load.HttpException.HttpException(int statusCode) -> void
Bumptech.Glide.Load.HttpException.HttpException(string? message) -> void
Bumptech.Glide.Load.HttpException.HttpException(string? message, int statusCode) -> void
Bumptech.Glide.Load.HttpException.HttpException(string? message, int statusCode, Java.Lang.Throwable? cause) -> void
Bumptech.Glide.Load.HttpException.StatusCode.get -> int
Bumptech.Glide.Load.IEncoder
Bumptech.Glide.Load.IEncoder.Encode(Java.Lang.Object! p0, Java.IO.File! p1, Bumptech.Glide.Load.Options! p2) -> bool
Bumptech.Glide.Load.IImageHeaderParser
Bumptech.Glide.Load.IImageHeaderParser.GetOrientation(Java.Nio.ByteBuffer! p0, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! p1) -> int
Bumptech.Glide.Load.IImageHeaderParser.GetOrientation(System.IO.Stream! p0, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! p1) -> int
Bumptech.Glide.Load.IImageHeaderParser.GetType(Java.Nio.ByteBuffer! p0) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.IImageHeaderParser.GetType(System.IO.Stream! p0) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.IImageHeaderParser.HasJpegMpf(Java.Nio.ByteBuffer! p0, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! p1) -> bool
Bumptech.Glide.Load.IImageHeaderParser.HasJpegMpf(System.IO.Stream! p0, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! p1) -> bool
Bumptech.Glide.Load.IKey
Bumptech.Glide.Load.IKey.Charset.get -> Java.Nio.Charset.Charset?
Bumptech.Glide.Load.IKey.Equals(Java.Lang.Object? p0) -> bool
Bumptech.Glide.Load.IKey.GetHashCode() -> int
Bumptech.Glide.Load.IKey.UpdateDiskCacheKey(Java.Security.MessageDigest! p0) -> void
Bumptech.Glide.Load.IResourceDecoder
Bumptech.Glide.Load.IResourceDecoder.Decode(Java.Lang.Object! p0, int p1, int p2, Bumptech.Glide.Load.Options! p3) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.IResourceDecoder.Handles(Java.Lang.Object! p0, Bumptech.Glide.Load.Options! p1) -> bool
Bumptech.Glide.Load.IResourceEncoder
Bumptech.Glide.Load.IResourceEncoder.GetEncodeStrategy(Bumptech.Glide.Load.Options! p0) -> Bumptech.Glide.Load.EncodeStrategy!
Bumptech.Glide.Load.ITransformation
Bumptech.Glide.Load.ITransformation.Transform(Android.Content.Context! p0, Bumptech.Glide.Load.Engine.IResource! p1, int p2, int p3) -> Bumptech.Glide.Load.Engine.IResource!
Bumptech.Glide.Load.ImageHeaderParser
Bumptech.Glide.Load.ImageHeaderParserConsts
Bumptech.Glide.Load.ImageHeaderParserImageType
Bumptech.Glide.Load.ImageHeaderParserImageType.HasAlpha.get -> bool
Bumptech.Glide.Load.ImageHeaderParserImageType.IsWebp.get -> bool
Bumptech.Glide.Load.ImageHeaderParserUtils
Bumptech.Glide.Load.Key
Bumptech.Glide.Load.KeyConsts
Bumptech.Glide.Load.Model.AssetUriLoader
Bumptech.Glide.Load.Model.AssetUriLoader.AssetUriLoader(Android.Content.Res.AssetManager? assetManager, Bumptech.Glide.Load.Model.AssetUriLoader.IAssetFetcherFactory? factory) -> void
Bumptech.Glide.Load.Model.AssetUriLoader.AssetUriLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory
Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.FileDescriptorFactory(Android.Content.Res.AssetManager? assetManager) -> void
Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.FileDescriptorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.AssetUriLoader.IAssetFetcherFactory
Bumptech.Glide.Load.Model.AssetUriLoader.IAssetFetcherFactory.BuildFetcher(Android.Content.Res.AssetManager? p0, string? p1) -> Bumptech.Glide.Load.Data.IDataFetcher?
Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory
Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.StreamFactory(Android.Content.Res.AssetManager? assetManager) -> void
Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteArrayLoader
Bumptech.Glide.Load.Model.ByteArrayLoader.ByteArrayLoader(Bumptech.Glide.Load.Model.ByteArrayLoader.IConverter? converter) -> void
Bumptech.Glide.Load.Model.ByteArrayLoader.ByteArrayLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory
Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.ByteBufferFactory() -> void
Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.ByteBufferFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteArrayLoader.IConverter
Bumptech.Glide.Load.Model.ByteArrayLoader.IConverter.Convert(byte[]? p0) -> Java.Lang.Object?
Bumptech.Glide.Load.Model.ByteArrayLoader.IConverter.DataClass.get -> Java.Lang.Class?
Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory
Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteBufferEncoder
Bumptech.Glide.Load.Model.ByteBufferEncoder.ByteBufferEncoder() -> void
Bumptech.Glide.Load.Model.ByteBufferEncoder.ByteBufferEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteBufferFileLoader
Bumptech.Glide.Load.Model.ByteBufferFileLoader.ByteBufferFileLoader() -> void
Bumptech.Glide.Load.Model.ByteBufferFileLoader.ByteBufferFileLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory
Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.Factory() -> void
Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.DataUrlLoader
Bumptech.Glide.Load.Model.DataUrlLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.DataUrlLoader.DataUrlLoader(Bumptech.Glide.Load.Model.DataUrlLoader.IDataDecoder? dataDecoder) -> void
Bumptech.Glide.Load.Model.DataUrlLoader.Handles(Java.Lang.Object! model) -> bool
Bumptech.Glide.Load.Model.DataUrlLoader.IDataDecoder
Bumptech.Glide.Load.Model.DataUrlLoader.IDataDecoder.Close(Java.Lang.Object? p0) -> void
Bumptech.Glide.Load.Model.DataUrlLoader.IDataDecoder.DataClass.get -> Java.Lang.Class?
Bumptech.Glide.Load.Model.DataUrlLoader.IDataDecoder.Decode(string? p0) -> Java.Lang.Object?
Bumptech.Glide.Load.Model.DataUrlLoader.StreamFactory
Bumptech.Glide.Load.Model.DataUrlLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
Bumptech.Glide.Load.Model.DataUrlLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.DataUrlLoader.StreamFactory.Teardown() -> void
Bumptech.Glide.Load.Model.DirectResourceLoader
Bumptech.Glide.Load.Model.DirectResourceLoader.BuildLoadData(Java.Lang.Object! resourceId, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.DirectResourceLoader.Handles(Java.Lang.Object! integer) -> bool
Bumptech.Glide.Load.Model.FileLoader
Bumptech.Glide.Load.Model.FileLoader.Factory
Bumptech.Glide.Load.Model.FileLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
Bumptech.Glide.Load.Model.FileLoader.Factory.Factory(Bumptech.Glide.Load.Model.FileLoader.IFileOpener? opener) -> void
Bumptech.Glide.Load.Model.FileLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.FileLoader.Factory.Teardown() -> void
Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory
Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory.FileDescriptorFactory() -> void
Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory.FileDescriptorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.FileLoader.FileLoader(Bumptech.Glide.Load.Model.FileLoader.IFileOpener? fileOpener) -> void
Bumptech.Glide.Load.Model.FileLoader.FileLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.FileLoader.IFileOpener
Bumptech.Glide.Load.Model.FileLoader.IFileOpener.Close(Java.Lang.Object? p0) -> void
Bumptech.Glide.Load.Model.FileLoader.IFileOpener.DataClass.get -> Java.Lang.Class?
Bumptech.Glide.Load.Model.FileLoader.IFileOpener.Open(Java.IO.File? p0) -> Java.Lang.Object?
Bumptech.Glide.Load.Model.FileLoader.StreamFactory
Bumptech.Glide.Load.Model.FileLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.FileLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.GlideUrl
Bumptech.Glide.Load.Model.GlideUrl.GlideUrl(Java.Net.URL? url) -> void
Bumptech.Glide.Load.Model.GlideUrl.GlideUrl(Java.Net.URL? url, Bumptech.Glide.Load.Model.IHeaders? headers) -> void
Bumptech.Glide.Load.Model.GlideUrl.GlideUrl(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.GlideUrl.GlideUrl(string? url) -> void
Bumptech.Glide.Load.Model.GlideUrl.GlideUrl(string? url, Bumptech.Glide.Load.Model.IHeaders? headers) -> void
Bumptech.Glide.Load.Model.GlideUrl.InterfaceConsts
Bumptech.Glide.Load.Model.Headers
Bumptech.Glide.Load.Model.HeadersConsts
Bumptech.Glide.Load.Model.IHeaders
Bumptech.Glide.Load.Model.IHeaders.Default.get -> Bumptech.Glide.Load.Model.IHeaders?
Bumptech.Glide.Load.Model.IHeaders.Headers.get -> System.Collections.Generic.IDictionary<string!, string!>?
Bumptech.Glide.Load.Model.IHeaders.None.get -> Bumptech.Glide.Load.Model.IHeaders?
Bumptech.Glide.Load.Model.ILazyHeaderFactory
Bumptech.Glide.Load.Model.ILazyHeaderFactory.BuildHeader() -> string?
Bumptech.Glide.Load.Model.IModel
Bumptech.Glide.Load.Model.IModel.IsEquivalentTo(Java.Lang.Object? p0) -> bool
Bumptech.Glide.Load.Model.IModelLoader
Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Java.Lang.Object! p0, int p1, int p2, Bumptech.Glide.Load.Options! p3) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.IModelLoader.Handles(Java.Lang.Object! p0) -> bool
Bumptech.Glide.Load.Model.IModelLoaderFactory
Bumptech.Glide.Load.Model.IModelLoaderFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! p0) -> Bumptech.Glide.Load.Model.IModelLoader!
Bumptech.Glide.Load.Model.IModelLoaderFactory.Teardown() -> void
Bumptech.Glide.Load.Model.LazyHeaders
Bumptech.Glide.Load.Model.LazyHeaders.Builder
Bumptech.Glide.Load.Model.LazyHeaders.Builder.AddHeader(string! key, Bumptech.Glide.Load.Model.ILazyHeaderFactory! factory) -> Bumptech.Glide.Load.Model.LazyHeaders.Builder?
Bumptech.Glide.Load.Model.LazyHeaders.Builder.AddHeader(string! key, string! value) -> Bumptech.Glide.Load.Model.LazyHeaders.Builder?
Bumptech.Glide.Load.Model.LazyHeaders.Builder.Build() -> Bumptech.Glide.Load.Model.LazyHeaders?
Bumptech.Glide.Load.Model.LazyHeaders.Builder.Builder() -> void
Bumptech.Glide.Load.Model.LazyHeaders.Builder.SetHeader(string! key, Bumptech.Glide.Load.Model.ILazyHeaderFactory? factory) -> Bumptech.Glide.Load.Model.LazyHeaders.Builder?
Bumptech.Glide.Load.Model.LazyHeaders.Builder.SetHeader(string! key, string? value) -> Bumptech.Glide.Load.Model.LazyHeaders.Builder?
Bumptech.Glide.Load.Model.LazyHeaders.Headers.get -> System.Collections.Generic.IDictionary<string!, string!>?
Bumptech.Glide.Load.Model.LazyHeaders.InterfaceConsts
Bumptech.Glide.Load.Model.MediaStoreFileLoader
Bumptech.Glide.Load.Model.MediaStoreFileLoader.BuildLoadData(Android.Net.Uri! uri, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.MediaStoreFileLoader.Factory
Bumptech.Glide.Load.Model.MediaStoreFileLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
Bumptech.Glide.Load.Model.MediaStoreFileLoader.Factory.Factory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.MediaStoreFileLoader.Factory.Teardown() -> void
Bumptech.Glide.Load.Model.MediaStoreFileLoader.Handles(Android.Net.Uri! uri) -> bool
Bumptech.Glide.Load.Model.MediaStoreFileLoader.MediaStoreFileLoader(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.ModelCache
Bumptech.Glide.Load.Model.ModelCache.ModelCache() -> void
Bumptech.Glide.Load.Model.ModelCache.ModelCache(long size) -> void
Bumptech.Glide.Load.Model.ModelCache.ModelCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData
Bumptech.Glide.Load.Model.ModelLoaderLoadData.AlternateKeys.get -> System.Collections.IList?
Bumptech.Glide.Load.Model.ModelLoaderLoadData.AlternateKeys.set -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData.Fetcher.get -> Bumptech.Glide.Load.Data.IDataFetcher?
Bumptech.Glide.Load.Model.ModelLoaderLoadData.Fetcher.set -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData.ModelLoaderLoadData(Bumptech.Glide.Load.IKey! sourceKey, Bumptech.Glide.Load.Data.IDataFetcher! fetcher) -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData.ModelLoaderLoadData(Bumptech.Glide.Load.IKey! sourceKey, System.Collections.Generic.IList<Bumptech.Glide.Load.IKey!>! alternateKeys, Bumptech.Glide.Load.Data.IDataFetcher! fetcher) -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData.ModelLoaderLoadData(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ModelLoaderLoadData.SourceKey.get -> Bumptech.Glide.Load.IKey?
Bumptech.Glide.Load.Model.ModelLoaderLoadData.SourceKey.set -> void
Bumptech.Glide.Load.Model.ModelLoaderRegistry
Bumptech.Glide.Load.Model.ModelLoaderRegistry.ModelLoaderRegistry(AndroidX.Core.Util.Pools.IPool! throwableListPool) -> void
Bumptech.Glide.Load.Model.ModelLoaderRegistry.ModelLoaderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.MultiModelLoaderFactory
Bumptech.Glide.Load.Model.MultiModelLoaderFactory.MultiModelLoaderFactory(AndroidX.Core.Util.Pools.IPool! throwableListPool) -> void
Bumptech.Glide.Load.Model.MultiModelLoaderFactory.MultiModelLoaderFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ResourceLoader
Bumptech.Glide.Load.Model.ResourceLoader.AssetFileDescriptorFactory
Bumptech.Glide.Load.Model.ResourceLoader.AssetFileDescriptorFactory.AssetFileDescriptorFactory(Android.Content.Res.Resources? resources) -> void
Bumptech.Glide.Load.Model.ResourceLoader.AssetFileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader?
Bumptech.Glide.Load.Model.ResourceLoader.AssetFileDescriptorFactory.Teardown() -> void
Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory
Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.FileDescriptorFactory(Android.Content.Res.Resources? resources) -> void
Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.FileDescriptorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ResourceLoader.ResourceLoader(Android.Content.Res.Resources? resources, Bumptech.Glide.Load.Model.IModelLoader? uriLoader) -> void
Bumptech.Glide.Load.Model.ResourceLoader.ResourceLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory
Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.StreamFactory(Android.Content.Res.Resources? resources) -> void
Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ResourceLoader.UriFactory
Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.UriFactory(Android.Content.Res.Resources? resources) -> void
Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.UriFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.ResourceUriLoader
Bumptech.Glide.Load.Model.ResourceUriLoader.BuildLoadData(Java.Lang.Object! uri, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.ResourceUriLoader.Handles(Java.Lang.Object! uri) -> bool
Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader
Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.BaseGlideUrlLoader(Bumptech.Glide.Load.Model.IModelLoader? concreteLoader) -> void
Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.BaseGlideUrlLoader(Bumptech.Glide.Load.Model.IModelLoader? concreteLoader, Bumptech.Glide.Load.Model.ModelCache? modelCache) -> void
Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.BaseGlideUrlLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.Factory() -> void
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.HttpGlideUrlLoader() -> void
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.HttpGlideUrlLoader(Bumptech.Glide.Load.Model.ModelCache? modelCache) -> void
Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.HttpGlideUrlLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.HttpUriLoader
Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory
Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory.Factory() -> void
Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.HttpUriLoader.HttpUriLoader(Bumptech.Glide.Load.Model.IModelLoader? urlLoader) -> void
Bumptech.Glide.Load.Model.Stream.HttpUriLoader.HttpUriLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.Factory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.MediaStoreImageThumbLoader(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.MediaStoreImageThumbLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.Factory(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.MediaStoreVideoThumbLoader(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.MediaStoreVideoThumbLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader
Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader.BuildLoadData(Android.Net.Uri! uri, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader.BuildLoadData(Java.Lang.Object! uri, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader.Handles(Android.Net.Uri! uri) -> bool
Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader.Handles(Java.Lang.Object! uri) -> bool
Bumptech.Glide.Load.Model.Stream.UrlLoader
Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory
Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.Stream.UrlLoader.UrlLoader(Bumptech.Glide.Load.Model.IModelLoader? glideUrlLoader) -> void
Bumptech.Glide.Load.Model.Stream.UrlLoader.UrlLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.StreamEncoder
Bumptech.Glide.Load.Model.StreamEncoder.StreamEncoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Model.StreamEncoder.StreamEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.StringLoader
Bumptech.Glide.Load.Model.StringLoader.AssetFileDescriptorFactory
Bumptech.Glide.Load.Model.StringLoader.AssetFileDescriptorFactory.AssetFileDescriptorFactory() -> void
Bumptech.Glide.Load.Model.StringLoader.AssetFileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader?
Bumptech.Glide.Load.Model.StringLoader.AssetFileDescriptorFactory.Teardown() -> void
Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory
Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.FileDescriptorFactory() -> void
Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.FileDescriptorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.StringLoader.StreamFactory
Bumptech.Glide.Load.Model.StringLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.StringLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.StringLoader.StringLoader(Bumptech.Glide.Load.Model.IModelLoader? uriLoader) -> void
Bumptech.Glide.Load.Model.StringLoader.StringLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UnitModelLoader
Bumptech.Glide.Load.Model.UnitModelLoader.Factory
Bumptech.Glide.Load.Model.UnitModelLoader.Factory.Factory() -> void
Bumptech.Glide.Load.Model.UnitModelLoader.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UnitModelLoader.UnitModelLoader() -> void
Bumptech.Glide.Load.Model.UnitModelLoader.UnitModelLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UriLoader
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.AssetFileDescriptorFactory(Android.Content.ContentResolver? contentResolver) -> void
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.AssetFileDescriptorFactory(Android.Content.ContentResolver? contentResolver, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.Build(Android.Net.Uri? uri) -> Bumptech.Glide.Load.Data.IDataFetcher?
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader?
Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.Teardown() -> void
Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory
Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.FileDescriptorFactory(Android.Content.ContentResolver? contentResolver) -> void
Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.FileDescriptorFactory(Android.Content.ContentResolver? contentResolver, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.FileDescriptorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UriLoader.ILocalUriFetcherFactory
Bumptech.Glide.Load.Model.UriLoader.ILocalUriFetcherFactory.Build(Android.Net.Uri? p0) -> Bumptech.Glide.Load.Data.IDataFetcher?
Bumptech.Glide.Load.Model.UriLoader.StreamFactory
Bumptech.Glide.Load.Model.UriLoader.StreamFactory.StreamFactory(Android.Content.ContentResolver? contentResolver) -> void
Bumptech.Glide.Load.Model.UriLoader.StreamFactory.StreamFactory(Android.Content.ContentResolver? contentResolver, bool useMediaStoreApisIfAvailable) -> void
Bumptech.Glide.Load.Model.UriLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UriLoader.UriLoader(Bumptech.Glide.Load.Model.UriLoader.ILocalUriFetcherFactory? factory) -> void
Bumptech.Glide.Load.Model.UriLoader.UriLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UrlUriLoader
Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory
Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.StreamFactory() -> void
Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.StreamFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Model.UrlUriLoader.UrlUriLoader(Bumptech.Glide.Load.Model.IModelLoader? urlLoader) -> void
Bumptech.Glide.Load.Model.UrlUriLoader.UrlUriLoader(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.MultiTransformation
Bumptech.Glide.Load.MultiTransformation.MultiTransformation(System.Collections.ICollection! transformationList) -> void
Bumptech.Glide.Load.MultiTransformation.MultiTransformation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.MultiTransformation.MultiTransformation(params Bumptech.Glide.Load.ITransformation![]! transformations) -> void
Bumptech.Glide.Load.Option
Bumptech.Glide.Load.Option.DefaultValue.get -> Java.Lang.Object?
Bumptech.Glide.Load.Option.ICacheKeyUpdater
Bumptech.Glide.Load.Option.ICacheKeyUpdater.Update(byte[]! p0, Java.Lang.Object! p1, Java.Security.MessageDigest! p2) -> void
Bumptech.Glide.Load.Option.Update(Java.Lang.Object! value, Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.Load.Options
Bumptech.Glide.Load.Options.Get(Bumptech.Glide.Load.Option! option) -> Java.Lang.Object?
Bumptech.Glide.Load.Options.InterfaceConsts
Bumptech.Glide.Load.Options.Options() -> void
Bumptech.Glide.Load.Options.PutAll(Bumptech.Glide.Load.Options! other) -> void
Bumptech.Glide.Load.Options.Remove(Bumptech.Glide.Load.Option! option) -> Bumptech.Glide.Load.Options?
Bumptech.Glide.Load.Options.Set(Bumptech.Glide.Load.Option! option, Java.Lang.Object! value) -> Bumptech.Glide.Load.Options!
Bumptech.Glide.Load.Options.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.Load.PreferredColorSpace
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.BitmapDrawableDecoder(Android.Content.Context? context, Bumptech.Glide.Load.IResourceDecoder? decoder) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.BitmapDrawableDecoder(Android.Content.Res.Resources! resources, Bumptech.Glide.Load.IResourceDecoder! decoder) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.BitmapDrawableDecoder(Android.Content.Res.Resources? resources, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.IResourceDecoder? decoder) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.BitmapDrawableDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.BitmapDrawableEncoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.IResourceEncoder? encoder) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.BitmapDrawableEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.BitmapDrawableResource(Android.Graphics.Drawables.BitmapDrawable? drawable, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.BitmapDrawableResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.BitmapDrawableTransformation(Bumptech.Glide.Load.ITransformation? wrapped) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.BitmapDrawableTransformation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder
Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.BitmapEncoder() -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.BitmapEncoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! arrayPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.BitmapEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder
Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder.BitmapImageDecoderResourceDecoder() -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder.Decode(Android.Graphics.ImageDecoder.Source! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder.Handles(Android.Graphics.ImageDecoder.Source! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Bitmap.BitmapResource
Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.BitmapResource(Android.Graphics.Bitmap! bitmap, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! bitmapPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.BitmapResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.BitmapTransformation() -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.BitmapTransformation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! resource, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.BitmapTransitionOptions() -> void
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.CrossFade() -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.CrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.CrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder! builder) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.CrossFade(int duration) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.TransitionUsing(Bumptech.Glide.Request.Transition.ITransitionFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.ByteBufferBitmapDecoder(Bumptech.Glide.Load.Resource.Bitmap.Downsampler? downsampler) -> void
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.ByteBufferBitmapDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder.ByteBufferBitmapImageDecoderResourceDecoder() -> void
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder.Decode(Java.Nio.ByteBuffer! buffer, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder.Handles(Java.Nio.ByteBuffer! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Bitmap.CenterCrop
Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.CenterCrop() -> void
Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.CenterCrop(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.CenterInside
Bumptech.Glide.Load.Resource.Bitmap.CenterInside.CenterInside() -> void
Bumptech.Glide.Load.Resource.Bitmap.CenterInside.CenterInside(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.CircleCrop
Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.CircleCrop() -> void
Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.CircleCrop(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.DefaultImageHeaderParser() -> void
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.GetOrientation(Java.Nio.ByteBuffer! byteBuffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.GetOrientation(System.IO.Stream! is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.GetType(Java.Nio.ByteBuffer! byteBuffer) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.GetType(System.IO.Stream! is) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.HasJpegMpf(Java.Nio.ByteBuffer! byteBuffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.HasJpegMpf(System.IO.Stream! is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.InterfaceConsts
Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy
Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.DownsampleStrategy() -> void
Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.DownsampleStrategy(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding
Bumptech.Glide.Load.Resource.Bitmap.Downsampler
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Decode(Android.OS.ParcelFileDescriptor? parcelFileDescriptor, int outWidth, int outHeight, Bumptech.Glide.Load.Options? options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Decode(Java.Nio.ByteBuffer? buffer, int requestedWidth, int requestedHeight, Bumptech.Glide.Load.Options? options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Decode(System.IO.Stream? is, int outWidth, int outHeight, Bumptech.Glide.Load.Options? options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Decode(System.IO.Stream? is, int requestedWidth, int requestedHeight, Bumptech.Glide.Load.Options? options, Bumptech.Glide.Load.Resource.Bitmap.Downsampler.IDecodeCallbacks? callbacks) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Downsampler(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? parsers, Android.Util.DisplayMetrics? displayMetrics, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Handles(Android.OS.ParcelFileDescriptor? source) -> bool
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Handles(Java.Nio.ByteBuffer? byteBuffer) -> bool
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.Handles(System.IO.Stream? is) -> bool
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.IDecodeCallbacks
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.IDecodeCallbacks.OnDecodeComplete(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? p0, Android.Graphics.Bitmap? p1) -> void
Bumptech.Glide.Load.Resource.Bitmap.Downsampler.IDecodeCallbacks.OnObtainBounds() -> void
Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation
Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.DrawableTransformation(Bumptech.Glide.Load.ITransformation? wrapped, bool isRequired) -> void
Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.DrawableTransformation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.ExifInterfaceImageHeaderParser() -> void
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.GetOrientation(Java.Nio.ByteBuffer! byteBuffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.GetOrientation(System.IO.Stream! is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.GetType(Java.Nio.ByteBuffer! byteBuffer) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.GetType(System.IO.Stream! is) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.HasJpegMpf(Java.Nio.ByteBuffer! byteBuffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.HasJpegMpf(System.IO.Stream! is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.InterfaceConsts
Bumptech.Glide.Load.Resource.Bitmap.FitCenter
Bumptech.Glide.Load.Resource.Bitmap.FitCenter.FitCenter() -> void
Bumptech.Glide.Load.Resource.Bitmap.FitCenter.FitCenter(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.GranularRoundedCorners
Bumptech.Glide.Load.Resource.Bitmap.GranularRoundedCorners.GranularRoundedCorners(float topLeft, float topRight, float bottomRight, float bottomLeft) -> void
Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState
Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.BlockHardwareBitmaps() -> void
Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.IsHardwareConfigAllowed(int targetWidth, int targetHeight, bool isHardwareConfigAllowed, bool isExifOrientationRequired) -> bool
Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.UnblockHardwareBitmaps() -> void
Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder
Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder.Decode(System.IO.Stream! stream, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder.Handles(System.IO.Stream! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder.InputStreamBitmapImageDecoderResourceDecoder() -> void
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Get() -> Android.Graphics.Drawables.BitmapDrawable!
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Initialize() -> void
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Recycle() -> void
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.ResourceClass.get -> Java.Lang.Class!
Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Size.get -> int
Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder.Decode(Android.OS.ParcelFileDescriptor! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder.Handles(Android.OS.ParcelFileDescriptor! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder.ParcelFileDescriptorBitmapDecoder(Bumptech.Glide.Load.Resource.Bitmap.Downsampler? downsampler) -> void
Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream
Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.RecyclableBufferedInputStream(System.IO.Stream! in, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.RecyclableBufferedInputStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.ResourceBitmapDecoder(Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder? drawableDecoder, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.ResourceBitmapDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.Rotate
Bumptech.Glide.Load.Resource.Bitmap.Rotate.Rotate(int degreesToRotate) -> void
Bumptech.Glide.Load.Resource.Bitmap.Rotate.Rotate(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.RoundedCorners
Bumptech.Glide.Load.Resource.Bitmap.RoundedCorners.RoundedCorners(int roundingRadius) -> void
Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.StreamBitmapDecoder(Bumptech.Glide.Load.Resource.Bitmap.Downsampler? downsampler, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.StreamBitmapDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils
Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder.Decode(Android.Graphics.Bitmap! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder.Handles(Android.Graphics.Bitmap! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder.UnitBitmapDecoder() -> void
Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder
Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.VideoBitmapDecoder(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.VideoBitmapDecoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.VideoBitmapDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder
Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.VideoDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.ByteBufferRewinder(Java.Nio.ByteBuffer? buffer) -> void
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.ByteBufferRewinder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.Factory() -> void
Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.Factory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Bytes.BytesResource
Bumptech.Glide.Load.Resource.Bytes.BytesResource.BytesResource(byte[]? bytes) -> void
Bumptech.Glide.Load.Resource.Bytes.BytesResource.BytesResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.DefaultOnHeaderDecodedListener
Bumptech.Glide.Load.Resource.DefaultOnHeaderDecodedListener.DefaultOnHeaderDecodedListener(int requestedWidth, int requestedHeight, Bumptech.Glide.Load.Options! options) -> void
Bumptech.Glide.Load.Resource.DefaultOnHeaderDecodedListener.OnHeaderDecoded(Android.Graphics.ImageDecoder! decoder, Android.Graphics.ImageDecoder.ImageInfo! info, Android.Graphics.ImageDecoder.Source! source) -> void
Bumptech.Glide.Load.Resource.Drawable.AnimatedImageDecoder
Bumptech.Glide.Load.Resource.Drawable.AnimatedWebpDecoder
Bumptech.Glide.Load.Resource.Drawable.DrawableDecoderCompat
Bumptech.Glide.Load.Resource.Drawable.DrawableResource
Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Drawable.get -> Android.Graphics.Drawables.Drawable?
Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Drawable.set -> void
Bumptech.Glide.Load.Resource.Drawable.DrawableResource.DrawableResource(Java.Lang.Object? drawable) -> void
Bumptech.Glide.Load.Resource.Drawable.DrawableResource.DrawableResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Get() -> Java.Lang.Object!
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.CrossFade() -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.CrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.CrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder! builder) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.CrossFade(int duration) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.DrawableTransitionOptions() -> void
Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder
Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.ResourceDrawableDecoder(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.ResourceDrawableDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder
Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.UnitDrawableDecoder() -> void
Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.UnitDrawableDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.File.FileDecoder
Bumptech.Glide.Load.Resource.File.FileDecoder.FileDecoder() -> void
Bumptech.Glide.Load.Resource.File.FileDecoder.FileDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.File.FileResource
Bumptech.Glide.Load.Resource.File.FileResource.FileResource(Java.IO.File? file) -> void
Bumptech.Glide.Load.Resource.File.FileResource.FileResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder
Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.ByteBufferGifDecoder(Android.Content.Context? context) -> void
Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.ByteBufferGifDecoder(Android.Content.Context? context, System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? parsers, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> void
Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.ByteBufferGifDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.GifBitmapProvider(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.GifBitmapProvider(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> void
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.Obtain(int width, int height, Android.Graphics.Bitmap.Config! config) -> Android.Graphics.Bitmap!
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.ObtainByteArray(int size) -> byte[]!
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.ObtainIntArray(int size) -> int[]!
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.Release(Android.Graphics.Bitmap! bitmap) -> void
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.Release(byte[]! bytes) -> void
Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.Release(int[]! array) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawable
Bumptech.Glide.Load.Resource.Gif.GifDrawable.GifDrawable(Android.Content.Context? context, Bumptech.Glide.GifDecoder.IGifDecoder? gifDecoder, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Bumptech.Glide.Load.ITransformation? frameTransformation, int targetFrameWidth, int targetFrameHeight, Android.Graphics.Bitmap? firstFrame) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawable.GifDrawable(Android.Content.Context? context, Bumptech.Glide.GifDecoder.IGifDecoder? gifDecoder, Bumptech.Glide.Load.ITransformation? frameTransformation, int targetFrameWidth, int targetFrameHeight, Android.Graphics.Bitmap? firstFrame) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawable.GifDrawable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder
Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.GifDrawableEncoder() -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.GifDrawableEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableResource
Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.GifDrawableResource(Bumptech.Glide.Load.Resource.Gif.GifDrawable? drawable) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.GifDrawableResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation
Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.GifDrawableTransformation(Bumptech.Glide.Load.ITransformation? wrapped) -> void
Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.GifDrawableTransformation(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder
Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder.Decode(Bumptech.Glide.GifDecoder.IGifDecoder! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder.GifFrameResourceDecoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder.Handles(Bumptech.Glide.GifDecoder.IGifDecoder! source, Bumptech.Glide.Load.Options! options) -> bool
Bumptech.Glide.Load.Resource.Gif.GifOptions
Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder
Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.StreamGifDecoder(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? parsers, Bumptech.Glide.Load.IResourceDecoder? byteBufferDecoder, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? byteArrayPool) -> void
Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.StreamGifDecoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.SimpleResource
Bumptech.Glide.Load.Resource.SimpleResource.Data.get -> Java.Lang.Object?
Bumptech.Glide.Load.Resource.SimpleResource.Data.set -> void
Bumptech.Glide.Load.Resource.SimpleResource.Get() -> Java.Lang.Object!
Bumptech.Glide.Load.Resource.SimpleResource.SimpleResource(Java.Lang.Object! data) -> void
Bumptech.Glide.Load.Resource.SimpleResource.SimpleResource(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.SimpleResource.Size.get -> int
Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder
Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.BitmapBytesTranscoder() -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.BitmapBytesTranscoder(Android.Graphics.Bitmap.CompressFormat! compressFormat, int quality) -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.BitmapBytesTranscoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder
Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.BitmapDrawableTranscoder(Android.Content.Context! context) -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.BitmapDrawableTranscoder(Android.Content.Res.Resources! resources) -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.BitmapDrawableTranscoder(Android.Content.Res.Resources! resources, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> void
Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.BitmapDrawableTranscoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Transcode.DrawableBytesTranscoder
Bumptech.Glide.Load.Resource.Transcode.DrawableBytesTranscoder.DrawableBytesTranscoder(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! bitmapPool, Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder! bitmapBytesTranscoder, Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder! gifDrawableBytesTranscoder) -> void
Bumptech.Glide.Load.Resource.Transcode.DrawableBytesTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! toTranscode, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder
Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.GifDrawableBytesTranscoder() -> void
Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.GifDrawableBytesTranscoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder
Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! p0, Bumptech.Glide.Load.Options! p1) -> Bumptech.Glide.Load.Engine.IResource?
Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry
Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.TranscoderRegistry() -> void
Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.TranscoderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder
Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.UnitTranscoder() -> void
Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.UnitTranscoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Load.Resource.UnitTransformation
Bumptech.Glide.Load.Resource.UnitTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! resource, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
Bumptech.Glide.Load.Resource.UnitTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.Manager.ConnectivityMonitorConnectivityEventArgs
Bumptech.Glide.Manager.ConnectivityMonitorConnectivityEventArgs.ConnectivityMonitorConnectivityEventArgs(bool p0) -> void
Bumptech.Glide.Manager.ConnectivityMonitorConnectivityEventArgs.P0.get -> bool
Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory
Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.DefaultConnectivityMonitorFactory() -> void
Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.DefaultConnectivityMonitorFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Manager.IConnectivityMonitor
Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListener
Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListener.OnConnectivityChanged(bool p0) -> void
Bumptech.Glide.Manager.IConnectivityMonitorFactory
Bumptech.Glide.Manager.IConnectivityMonitorFactory.Build(Android.Content.Context! p0, Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListener! p1) -> Bumptech.Glide.Manager.IConnectivityMonitor!
Bumptech.Glide.Manager.ILifecycle
Bumptech.Glide.Manager.ILifecycle.AddListener(Bumptech.Glide.Manager.ILifecycleListener! p0) -> void
Bumptech.Glide.Manager.ILifecycle.RemoveListener(Bumptech.Glide.Manager.ILifecycleListener! p0) -> void
Bumptech.Glide.Manager.ILifecycleListener
Bumptech.Glide.Manager.ILifecycleListener.OnDestroy() -> void
Bumptech.Glide.Manager.ILifecycleListener.OnStart() -> void
Bumptech.Glide.Manager.ILifecycleListener.OnStop() -> void
Bumptech.Glide.Manager.IRequestManagerTreeNode
Bumptech.Glide.Manager.IRequestManagerTreeNode.Descendants.get -> System.Collections.Generic.ICollection<Bumptech.Glide.RequestManager!>!
Bumptech.Glide.Manager.RequestManagerFragment
Bumptech.Glide.Manager.RequestManagerFragment.RequestManagerFragment() -> void
Bumptech.Glide.Manager.RequestManagerFragment.RequestManagerFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Manager.RequestManagerRetriever
Bumptech.Glide.Manager.RequestManagerRetriever.IRequestManagerFactory
Bumptech.Glide.Manager.RequestManagerRetriever.IRequestManagerFactory.Build(Bumptech.Glide.Glide! p0, Bumptech.Glide.Manager.ILifecycle! p1, Bumptech.Glide.Manager.IRequestManagerTreeNode! p2, Android.Content.Context! p3) -> Bumptech.Glide.RequestManager!
Bumptech.Glide.Manager.RequestManagerRetriever.RequestManagerRetriever(Bumptech.Glide.Manager.RequestManagerRetriever.IRequestManagerFactory? factory) -> void
Bumptech.Glide.Manager.RequestManagerRetriever.RequestManagerRetriever(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Manager.RequestTracker
Bumptech.Glide.Manager.RequestTracker.RequestTracker() -> void
Bumptech.Glide.Manager.RequestTracker.RequestTracker(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Manager.SupportRequestManagerFragment
Bumptech.Glide.Manager.SupportRequestManagerFragment.SupportRequestManagerFragment() -> void
Bumptech.Glide.Manager.SupportRequestManagerFragment.SupportRequestManagerFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Manager.TargetTracker
Bumptech.Glide.Manager.TargetTracker.All.get -> System.Collections.Generic.IList<Bumptech.Glide.Request.Target.ITarget!>!
Bumptech.Glide.Manager.TargetTracker.Clear() -> void
Bumptech.Glide.Manager.TargetTracker.OnDestroy() -> void
Bumptech.Glide.Manager.TargetTracker.OnStart() -> void
Bumptech.Glide.Manager.TargetTracker.OnStop() -> void
Bumptech.Glide.Manager.TargetTracker.TargetTracker() -> void
Bumptech.Glide.Manager.TargetTracker.Track(Bumptech.Glide.Request.Target.ITarget! target) -> void
Bumptech.Glide.Manager.TargetTracker.Untrack(Bumptech.Glide.Request.Target.ITarget! target) -> void
Bumptech.Glide.MemoryCategory
Bumptech.Glide.MemoryCategory.Multiplier.get -> float
Bumptech.Glide.Module.AppGlideModule
Bumptech.Glide.Module.AppGlideModule.AppGlideModule() -> void
Bumptech.Glide.Module.AppGlideModule.AppGlideModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Module.IAppliesOptions
Bumptech.Glide.Module.IAppliesOptions.ApplyOptions(Android.Content.Context! p0, Bumptech.Glide.GlideBuilder! p1) -> void
Bumptech.Glide.Module.IGlideModule
Bumptech.Glide.Module.IRegistersComponents
Bumptech.Glide.Module.IRegistersComponents.RegisterComponents(Android.Content.Context! p0, Bumptech.Glide.Glide! p1, Bumptech.Glide.Registry! p2) -> void
Bumptech.Glide.Module.LibraryGlideModule
Bumptech.Glide.Module.LibraryGlideModule.LibraryGlideModule() -> void
Bumptech.Glide.Module.LibraryGlideModule.LibraryGlideModule(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Module.ManifestParser
Bumptech.Glide.Module.ManifestParser.ManifestParser(Android.Content.Context? context) -> void
Bumptech.Glide.Module.ManifestParser.Parse() -> System.Collections.Generic.IList<Bumptech.Glide.Module.IGlideModule!>?
Bumptech.Glide.Priority
Bumptech.Glide.Provider.EncoderRegistry
Bumptech.Glide.Provider.EncoderRegistry.EncoderRegistry() -> void
Bumptech.Glide.Provider.EncoderRegistry.EncoderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Provider.ImageHeaderParserRegistry
Bumptech.Glide.Provider.ImageHeaderParserRegistry.Add(Bumptech.Glide.Load.IImageHeaderParser! parser) -> void
Bumptech.Glide.Provider.ImageHeaderParserRegistry.ImageHeaderParserRegistry() -> void
Bumptech.Glide.Provider.ImageHeaderParserRegistry.Parsers.get -> System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>!
Bumptech.Glide.Provider.LoadPathCache
Bumptech.Glide.Provider.LoadPathCache.LoadPathCache() -> void
Bumptech.Glide.Provider.LoadPathCache.LoadPathCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Provider.ModelToResourceClassCache
Bumptech.Glide.Provider.ModelToResourceClassCache.ModelToResourceClassCache() -> void
Bumptech.Glide.Provider.ModelToResourceClassCache.ModelToResourceClassCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Provider.ResourceDecoderRegistry
Bumptech.Glide.Provider.ResourceDecoderRegistry.ResourceDecoderRegistry() -> void
Bumptech.Glide.Provider.ResourceDecoderRegistry.ResourceDecoderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Provider.ResourceEncoderRegistry
Bumptech.Glide.Provider.ResourceEncoderRegistry.ResourceEncoderRegistry() -> void
Bumptech.Glide.Provider.ResourceEncoderRegistry.ResourceEncoderRegistry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry
Bumptech.Glide.Registry.MissingComponentException
Bumptech.Glide.Registry.MissingComponentException.MissingComponentException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry.MissingComponentException.MissingComponentException(string! message) -> void
Bumptech.Glide.Registry.NoImageHeaderParserException
Bumptech.Glide.Registry.NoImageHeaderParserException.NoImageHeaderParserException() -> void
Bumptech.Glide.Registry.NoModelLoaderAvailableException
Bumptech.Glide.Registry.NoModelLoaderAvailableException.NoModelLoaderAvailableException(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass) -> void
Bumptech.Glide.Registry.NoModelLoaderAvailableException.NoModelLoaderAvailableException(Java.Lang.Object! model) -> void
Bumptech.Glide.Registry.NoModelLoaderAvailableException.NoModelLoaderAvailableException(Java.Lang.Object! model, System.Collections.IList! matchingButNotHandlingModelLoaders) -> void
Bumptech.Glide.Registry.NoModelLoaderAvailableException.NoModelLoaderAvailableException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry.NoResultEncoderAvailableException
Bumptech.Glide.Registry.NoResultEncoderAvailableException.NoResultEncoderAvailableException(Java.Lang.Class! resourceClass) -> void
Bumptech.Glide.Registry.NoResultEncoderAvailableException.NoResultEncoderAvailableException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry.NoSourceEncoderAvailableException
Bumptech.Glide.Registry.NoSourceEncoderAvailableException.NoSourceEncoderAvailableException(Java.Lang.Class! dataClass) -> void
Bumptech.Glide.Registry.NoSourceEncoderAvailableException.NoSourceEncoderAvailableException(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry.Registry() -> void
Bumptech.Glide.Registry.Registry(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Registry.SetResourceDecoderBucketPriorityList(System.Collections.Generic.IList<string!>! buckets) -> Bumptech.Glide.Registry!
Bumptech.Glide.Request.BaseRequestOptions
Bumptech.Glide.Request.BaseRequestOptions.BaseRequestOptions() -> void
Bumptech.Glide.Request.BaseRequestOptions.BaseRequestOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.BaseRequestOptions.DiskCacheStrategy.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy!
Bumptech.Glide.Request.BaseRequestOptions.ErrorId.get -> int
Bumptech.Glide.Request.BaseRequestOptions.ErrorPlaceholder.get -> Android.Graphics.Drawables.Drawable?
Bumptech.Glide.Request.BaseRequestOptions.FallbackDrawable.get -> Android.Graphics.Drawables.Drawable?
Bumptech.Glide.Request.BaseRequestOptions.FallbackId.get -> int
Bumptech.Glide.Request.BaseRequestOptions.IsAutoCloneEnabled.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsDiskCacheStrategySet.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsEquivalentTo(Bumptech.Glide.Request.BaseRequestOptions? other) -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsLocked.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsMemoryCacheable.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsPrioritySet.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsSkipMemoryCacheSet.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsTransformationAllowed.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsTransformationRequired.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsTransformationSet.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.IsValidOverride.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.OnlyRetrieveFromCache.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.Options.get -> Bumptech.Glide.Load.Options!
Bumptech.Glide.Request.BaseRequestOptions.OverrideHeight.get -> int
Bumptech.Glide.Request.BaseRequestOptions.OverrideWidth.get -> int
Bumptech.Glide.Request.BaseRequestOptions.PlaceholderDrawable.get -> Android.Graphics.Drawables.Drawable?
Bumptech.Glide.Request.BaseRequestOptions.PlaceholderId.get -> int
Bumptech.Glide.Request.BaseRequestOptions.Priority.get -> Bumptech.Glide.Priority!
Bumptech.Glide.Request.BaseRequestOptions.ResourceClass.get -> Java.Lang.Class!
Bumptech.Glide.Request.BaseRequestOptions.SelfOrThrowIfLocked() -> Java.Lang.Object!
Bumptech.Glide.Request.BaseRequestOptions.Signature.get -> Bumptech.Glide.Load.IKey!
Bumptech.Glide.Request.BaseRequestOptions.SizeMultiplier.get -> float
Bumptech.Glide.Request.BaseRequestOptions.Theme.get -> Android.Content.Res.Resources.Theme?
Bumptech.Glide.Request.BaseRequestOptions.Transformations.get -> System.Collections.IDictionary!
Bumptech.Glide.Request.BaseRequestOptions.UseAnimationPool.get -> bool
Bumptech.Glide.Request.BaseRequestOptions.UseUnlimitedSourceGeneratorsPool.get -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator
Bumptech.Glide.Request.ErrorRequestCoordinator.Begin() -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.CanNotifyCleared(Bumptech.Glide.Request.IRequest? request) -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.CanNotifyStatusChanged(Bumptech.Glide.Request.IRequest? request) -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.CanSetImage(Bumptech.Glide.Request.IRequest? request) -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.Clear() -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.ErrorRequestCoordinator(Java.Lang.Object? requestLock, Bumptech.Glide.Request.IRequestCoordinator? parent) -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.IsAnyResourceSet.get -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.IsCleared.get -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.IsComplete.get -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.IsEquivalentTo(Bumptech.Glide.Request.IRequest? o) -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.IsRunning.get -> bool
Bumptech.Glide.Request.ErrorRequestCoordinator.OnRequestFailed(Bumptech.Glide.Request.IRequest? request) -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.OnRequestSuccess(Bumptech.Glide.Request.IRequest? request) -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.Pause() -> void
Bumptech.Glide.Request.ErrorRequestCoordinator.Root.get -> Bumptech.Glide.Request.IRequestCoordinator?
Bumptech.Glide.Request.ErrorRequestCoordinator.SetRequests(Bumptech.Glide.Request.IRequest? primary, Bumptech.Glide.Request.IRequest? error) -> void
Bumptech.Glide.Request.IFutureTarget
Bumptech.Glide.Request.IRequest
Bumptech.Glide.Request.IRequest.Begin() -> void
Bumptech.Glide.Request.IRequest.Clear() -> void
Bumptech.Glide.Request.IRequest.IsAnyResourceSet.get -> bool
Bumptech.Glide.Request.IRequest.IsCleared.get -> bool
Bumptech.Glide.Request.IRequest.IsComplete.get -> bool
Bumptech.Glide.Request.IRequest.IsEquivalentTo(Bumptech.Glide.Request.IRequest? p0) -> bool
Bumptech.Glide.Request.IRequest.IsRunning.get -> bool
Bumptech.Glide.Request.IRequest.Pause() -> void
Bumptech.Glide.Request.IRequestCoordinator
Bumptech.Glide.Request.IRequestCoordinator.CanNotifyCleared(Bumptech.Glide.Request.IRequest? p0) -> bool
Bumptech.Glide.Request.IRequestCoordinator.CanNotifyStatusChanged(Bumptech.Glide.Request.IRequest? p0) -> bool
Bumptech.Glide.Request.IRequestCoordinator.CanSetImage(Bumptech.Glide.Request.IRequest? p0) -> bool
Bumptech.Glide.Request.IRequestCoordinator.IsAnyResourceSet.get -> bool
Bumptech.Glide.Request.IRequestCoordinator.OnRequestFailed(Bumptech.Glide.Request.IRequest? p0) -> void
Bumptech.Glide.Request.IRequestCoordinator.OnRequestSuccess(Bumptech.Glide.Request.IRequest? p0) -> void
Bumptech.Glide.Request.IRequestCoordinator.Root.get -> Bumptech.Glide.Request.IRequestCoordinator?
Bumptech.Glide.Request.IRequestListener
Bumptech.Glide.Request.IRequestListener.OnLoadFailed(Bumptech.Glide.Load.Engine.GlideException? p0, Java.Lang.Object? p1, Bumptech.Glide.Request.Target.ITarget? p2, bool p3) -> bool
Bumptech.Glide.Request.IRequestListener.OnResourceReady(Java.Lang.Object? p0, Java.Lang.Object? p1, Bumptech.Glide.Request.Target.ITarget? p2, Bumptech.Glide.Load.DataSource? p3, bool p4) -> bool
Bumptech.Glide.Request.IResourceCallback
Bumptech.Glide.Request.IResourceCallback.Lock.get -> Java.Lang.Object?
Bumptech.Glide.Request.IResourceCallback.OnLoadFailed(Bumptech.Glide.Load.Engine.GlideException? p0) -> void
Bumptech.Glide.Request.IResourceCallback.OnResourceReady(Bumptech.Glide.Load.Engine.IResource? p0, Bumptech.Glide.Load.DataSource? p1, bool p2) -> void
Bumptech.Glide.Request.LoadFailedEventArgs
Bumptech.Glide.Request.LoadFailedEventArgs.Handled.get -> bool
Bumptech.Glide.Request.LoadFailedEventArgs.Handled.set -> void
Bumptech.Glide.Request.LoadFailedEventArgs.LoadFailedEventArgs(bool handled, Bumptech.Glide.Load.Engine.GlideException? p0, Java.Lang.Object? p1, Bumptech.Glide.Request.Target.ITarget? p2, bool p3) -> void
Bumptech.Glide.Request.LoadFailedEventArgs.P0.get -> Bumptech.Glide.Load.Engine.GlideException?
Bumptech.Glide.Request.LoadFailedEventArgs.P1.get -> Java.Lang.Object?
Bumptech.Glide.Request.LoadFailedEventArgs.P2.get -> Bumptech.Glide.Request.Target.ITarget?
Bumptech.Glide.Request.LoadFailedEventArgs.P3.get -> bool
Bumptech.Glide.Request.RequestCoordinatorRequestState
Bumptech.Glide.Request.RequestFutureTarget
Bumptech.Glide.Request.RequestFutureTarget.RequestFutureTarget(int width, int height) -> void
Bumptech.Glide.Request.RequestFutureTarget.RequestFutureTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.RequestOptions
Bumptech.Glide.Request.RequestOptions.RequestOptions() -> void
Bumptech.Glide.Request.RequestOptions.RequestOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.ResourceReadyEventArgs
Bumptech.Glide.Request.ResourceReadyEventArgs.Handled.get -> bool
Bumptech.Glide.Request.ResourceReadyEventArgs.Handled.set -> void
Bumptech.Glide.Request.ResourceReadyEventArgs.P0.get -> Java.Lang.Object?
Bumptech.Glide.Request.ResourceReadyEventArgs.P1.get -> Java.Lang.Object?
Bumptech.Glide.Request.ResourceReadyEventArgs.P2.get -> Bumptech.Glide.Request.Target.ITarget?
Bumptech.Glide.Request.ResourceReadyEventArgs.P3.get -> Bumptech.Glide.Load.DataSource?
Bumptech.Glide.Request.ResourceReadyEventArgs.P4.get -> bool
Bumptech.Glide.Request.ResourceReadyEventArgs.ResourceReadyEventArgs(bool handled, Java.Lang.Object? p0, Java.Lang.Object? p1, Bumptech.Glide.Request.Target.ITarget? p2, Bumptech.Glide.Load.DataSource? p3, bool p4) -> void
Bumptech.Glide.Request.SingleRequest
Bumptech.Glide.Request.SingleRequest.Begin() -> void
Bumptech.Glide.Request.SingleRequest.Clear() -> void
Bumptech.Glide.Request.SingleRequest.IsAnyResourceSet.get -> bool
Bumptech.Glide.Request.SingleRequest.IsCleared.get -> bool
Bumptech.Glide.Request.SingleRequest.IsComplete.get -> bool
Bumptech.Glide.Request.SingleRequest.IsEquivalentTo(Bumptech.Glide.Request.IRequest? o) -> bool
Bumptech.Glide.Request.SingleRequest.IsRunning.get -> bool
Bumptech.Glide.Request.SingleRequest.Lock.get -> Java.Lang.Object?
Bumptech.Glide.Request.SingleRequest.OnLoadFailed(Bumptech.Glide.Load.Engine.GlideException? e) -> void
Bumptech.Glide.Request.SingleRequest.OnResourceReady(Bumptech.Glide.Load.Engine.IResource? resource, Bumptech.Glide.Load.DataSource? dataSource, bool isLoadedFromAlternateCacheKey) -> void
Bumptech.Glide.Request.SingleRequest.OnSizeReady(int width, int height) -> void
Bumptech.Glide.Request.SingleRequest.Pause() -> void
Bumptech.Glide.Request.Target.AppWidgetTarget
Bumptech.Glide.Request.Target.AppWidgetTarget.AppWidgetTarget(Android.Content.Context? context, int viewId, Android.Widget.RemoteViews? remoteViews, Android.Content.ComponentName? componentName) -> void
Bumptech.Glide.Request.Target.AppWidgetTarget.AppWidgetTarget(Android.Content.Context? context, int viewId, Android.Widget.RemoteViews? remoteViews, params int[]? widgetIds) -> void
Bumptech.Glide.Request.Target.AppWidgetTarget.AppWidgetTarget(Android.Content.Context? context, int width, int height, int viewId, Android.Widget.RemoteViews? remoteViews, Android.Content.ComponentName? componentName) -> void
Bumptech.Glide.Request.Target.AppWidgetTarget.AppWidgetTarget(Android.Content.Context? context, int width, int height, int viewId, Android.Widget.RemoteViews? remoteViews, params int[]? widgetIds) -> void
Bumptech.Glide.Request.Target.AppWidgetTarget.AppWidgetTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.BaseTarget
Bumptech.Glide.Request.Target.BaseTarget.BaseTarget() -> void
Bumptech.Glide.Request.Target.BaseTarget.BaseTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.BaseTarget.InterfaceConsts
Bumptech.Glide.Request.Target.BitmapImageViewTarget
Bumptech.Glide.Request.Target.BitmapImageViewTarget.BitmapImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.BitmapImageViewTarget.BitmapImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.BitmapImageViewTarget.BitmapImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget
Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.BitmapThumbnailImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.BitmapThumbnailImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.BitmapThumbnailImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.CustomTarget
Bumptech.Glide.Request.Target.CustomTarget.CustomTarget() -> void
Bumptech.Glide.Request.Target.CustomTarget.CustomTarget(int width, int height) -> void
Bumptech.Glide.Request.Target.CustomTarget.CustomTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.CustomTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
Bumptech.Glide.Request.Target.CustomTarget.InterfaceConsts
Bumptech.Glide.Request.Target.CustomTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
Bumptech.Glide.Request.Target.CustomTarget.Request.get -> Bumptech.Glide.Request.IRequest?
Bumptech.Glide.Request.Target.CustomTarget.Request.set -> void
Bumptech.Glide.Request.Target.CustomViewTarget
Bumptech.Glide.Request.Target.CustomViewTarget.ClearOnDetach() -> Bumptech.Glide.Request.Target.CustomViewTarget!
Bumptech.Glide.Request.Target.CustomViewTarget.CustomViewTarget(Java.Lang.Object! view) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.CustomViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.InterfaceConsts
Bumptech.Glide.Request.Target.CustomViewTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.OnLoadStarted(Android.Graphics.Drawables.Drawable? placeholder) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
Bumptech.Glide.Request.Target.CustomViewTarget.Request.get -> Bumptech.Glide.Request.IRequest?
Bumptech.Glide.Request.Target.CustomViewTarget.Request.set -> void
Bumptech.Glide.Request.Target.CustomViewTarget.UseTagId(int tagId) -> Bumptech.Glide.Request.Target.CustomViewTarget?
Bumptech.Glide.Request.Target.CustomViewTarget.View.get -> Java.Lang.Object!
Bumptech.Glide.Request.Target.CustomViewTarget.WaitForLayout() -> Bumptech.Glide.Request.Target.CustomViewTarget!
Bumptech.Glide.Request.Target.DrawableImageViewTarget
Bumptech.Glide.Request.Target.DrawableImageViewTarget.DrawableImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.DrawableImageViewTarget.DrawableImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.DrawableImageViewTarget.DrawableImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget
Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.DrawableThumbnailImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.DrawableThumbnailImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.DrawableThumbnailImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.FixedSizeDrawable
Bumptech.Glide.Request.Target.FixedSizeDrawable.FixedSizeDrawable(Android.Graphics.Drawables.Drawable? wrapped, int width, int height) -> void
Bumptech.Glide.Request.Target.FixedSizeDrawable.FixedSizeDrawable(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.ISizeReadyCallback
Bumptech.Glide.Request.Target.ISizeReadyCallback.OnSizeReady(int p0, int p1) -> void
Bumptech.Glide.Request.Target.ITarget
Bumptech.Glide.Request.Target.ITarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! p0) -> void
Bumptech.Glide.Request.Target.ITarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? p0) -> void
Bumptech.Glide.Request.Target.ITarget.OnLoadFailed(Android.Graphics.Drawables.Drawable? p0) -> void
Bumptech.Glide.Request.Target.ITarget.OnLoadStarted(Android.Graphics.Drawables.Drawable? p0) -> void
Bumptech.Glide.Request.Target.ITarget.OnResourceReady(Java.Lang.Object! p0, Bumptech.Glide.Request.Transition.ITransition? p1) -> void
Bumptech.Glide.Request.Target.ITarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! p0) -> void
Bumptech.Glide.Request.Target.ITarget.Request.get -> Bumptech.Glide.Request.IRequest?
Bumptech.Glide.Request.Target.ITarget.Request.set -> void
Bumptech.Glide.Request.Target.ImageViewTarget
Bumptech.Glide.Request.Target.ImageViewTarget.ImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.ImageViewTarget.ImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.ImageViewTarget.ImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.ImageViewTargetFactory
Bumptech.Glide.Request.Target.ImageViewTargetFactory.ImageViewTargetFactory() -> void
Bumptech.Glide.Request.Target.ImageViewTargetFactory.ImageViewTargetFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.NotificationTarget
Bumptech.Glide.Request.Target.NotificationTarget.NotificationTarget(Android.Content.Context? context, int viewId, Android.Widget.RemoteViews? remoteViews, Android.App.Notification? notification, int notificationId) -> void
Bumptech.Glide.Request.Target.NotificationTarget.NotificationTarget(Android.Content.Context? context, int viewId, Android.Widget.RemoteViews? remoteViews, Android.App.Notification? notification, int notificationId, string? notificationTag) -> void
Bumptech.Glide.Request.Target.NotificationTarget.NotificationTarget(Android.Content.Context? context, int width, int height, int viewId, Android.Widget.RemoteViews? remoteViews, Android.App.Notification? notification, int notificationId, string? notificationTag) -> void
Bumptech.Glide.Request.Target.NotificationTarget.NotificationTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.PreloadTarget
Bumptech.Glide.Request.Target.SimpleTarget
Bumptech.Glide.Request.Target.SimpleTarget.SimpleTarget() -> void
Bumptech.Glide.Request.Target.SimpleTarget.SimpleTarget(int width, int height) -> void
Bumptech.Glide.Request.Target.SimpleTarget.SimpleTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.Target
Bumptech.Glide.Request.Target.TargetConsts
Bumptech.Glide.Request.Target.ThumbnailImageViewTarget
Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.ThumbnailImageViewTarget(Android.Widget.ImageView? view) -> void
Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.ThumbnailImageViewTarget(Android.Widget.ImageView? view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.ThumbnailImageViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.ViewTarget
Bumptech.Glide.Request.Target.ViewTarget.ClearOnDetach() -> Bumptech.Glide.Request.Target.ViewTarget!
Bumptech.Glide.Request.Target.ViewTarget.ViewTarget(Java.Lang.Object! view) -> void
Bumptech.Glide.Request.Target.ViewTarget.ViewTarget(Java.Lang.Object! view, bool waitForLayout) -> void
Bumptech.Glide.Request.Target.ViewTarget.ViewTarget(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Target.ViewTarget.WaitForLayout() -> Bumptech.Glide.Request.Target.ViewTarget!
Bumptech.Glide.Request.Target.ViewTarget._view.get -> Android.Views.View?
Bumptech.Glide.Request.Target.ViewTarget._view.set -> void
Bumptech.Glide.Request.ThumbnailRequestCoordinator
Bumptech.Glide.Request.ThumbnailRequestCoordinator.ThumbnailRequestCoordinator(Java.Lang.Object? requestLock, Bumptech.Glide.Request.IRequestCoordinator? parent) -> void
Bumptech.Glide.Request.ThumbnailRequestCoordinator.ThumbnailRequestCoordinator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory
Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.BitmapContainerTransitionFactory(Bumptech.Glide.Request.Transition.ITransitionFactory? realFactory) -> void
Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.BitmapContainerTransitionFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.BitmapTransitionFactory
Bumptech.Glide.Request.Transition.BitmapTransitionFactory.BitmapTransitionFactory(Bumptech.Glide.Request.Transition.ITransitionFactory! realFactory) -> void
Bumptech.Glide.Request.Transition.BitmapTransitionFactory.BitmapTransitionFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.Builder() -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.Builder(int durationMillis) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.DrawableCrossFadeFactory(int duration, bool isCrossFadeEnabled) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.DrawableCrossFadeFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition
Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.DrawableCrossFadeTransition(int duration, bool isCrossFadeEnabled) -> void
Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.DrawableCrossFadeTransition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.ITransition
Bumptech.Glide.Request.Transition.ITransition.Transition(Java.Lang.Object? p0, Bumptech.Glide.Request.Transition.ITransitionViewAdapter? p1) -> bool
Bumptech.Glide.Request.Transition.ITransitionFactory
Bumptech.Glide.Request.Transition.ITransitionFactory.Build(Bumptech.Glide.Load.DataSource? p0, bool p1) -> Bumptech.Glide.Request.Transition.ITransition?
Bumptech.Glide.Request.Transition.ITransitionViewAdapter
Bumptech.Glide.Request.Transition.ITransitionViewAdapter.CurrentDrawable.get -> Android.Graphics.Drawables.Drawable?
Bumptech.Glide.Request.Transition.ITransitionViewAdapter.SetDrawable(Android.Graphics.Drawables.Drawable? p0) -> void
Bumptech.Glide.Request.Transition.ITransitionViewAdapter.View.get -> Android.Views.View?
Bumptech.Glide.Request.Transition.NoTransition
Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory
Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.NoAnimationFactory() -> void
Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.NoAnimationFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.NoTransition.NoTransition() -> void
Bumptech.Glide.Request.Transition.NoTransition.NoTransition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.ViewAnimationFactory
Bumptech.Glide.Request.Transition.ViewAnimationFactory.ViewAnimationFactory(Android.Views.Animations.Animation? animation) -> void
Bumptech.Glide.Request.Transition.ViewAnimationFactory.ViewAnimationFactory(int animationId) -> void
Bumptech.Glide.Request.Transition.ViewAnimationFactory.ViewAnimationFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory
Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.ViewPropertyAnimationFactory(Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator? animator) -> void
Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.ViewPropertyAnimationFactory(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.ViewPropertyTransition
Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator
Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator.Animate(Android.Views.View? p0) -> void
Bumptech.Glide.Request.Transition.ViewPropertyTransition.ViewPropertyTransition(Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator? animator) -> void
Bumptech.Glide.Request.Transition.ViewPropertyTransition.ViewPropertyTransition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Request.Transition.ViewTransition
Bumptech.Glide.Request.Transition.ViewTransition.ViewTransition(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.RequestBuilder
Bumptech.Glide.RequestBuilder.RequestBuilder(Bumptech.Glide.Glide! glide, Bumptech.Glide.RequestManager? requestManager, Java.Lang.Class? transcodeClass, Android.Content.Context? context) -> void
Bumptech.Glide.RequestBuilder.RequestBuilder(Java.Lang.Class? transcodeClass, Bumptech.Glide.RequestBuilder? other) -> void
Bumptech.Glide.RequestBuilder.RequestBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.RequestManager
Bumptech.Glide.RequestManager.Context.get -> Android.Content.Context?
Bumptech.Glide.RequestManager.Context.set -> void
Bumptech.Glide.RequestManager.Glide.get -> Bumptech.Glide.Glide?
Bumptech.Glide.RequestManager.Glide.set -> void
Bumptech.Glide.RequestManager.RequestManager(Bumptech.Glide.Glide! glide, Bumptech.Glide.Manager.ILifecycle! lifecycle, Bumptech.Glide.Manager.IRequestManagerTreeNode! treeNode, Android.Content.Context! context) -> void
Bumptech.Glide.RequestManager.RequestManager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Signature.AndroidResourceSignature
Bumptech.Glide.Signature.AndroidResourceSignature.InterfaceConsts
Bumptech.Glide.Signature.AndroidResourceSignature.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.Signature.ApplicationVersionSignature
Bumptech.Glide.Signature.EmptySignature
Bumptech.Glide.Signature.EmptySignature.InterfaceConsts
Bumptech.Glide.Signature.EmptySignature.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.Signature.MediaStoreSignature
Bumptech.Glide.Signature.MediaStoreSignature.InterfaceConsts
Bumptech.Glide.Signature.MediaStoreSignature.MediaStoreSignature(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Signature.MediaStoreSignature.MediaStoreSignature(string? mimeType, long dateModified, int orientation) -> void
Bumptech.Glide.Signature.ObjectKey
Bumptech.Glide.Signature.ObjectKey.InterfaceConsts
Bumptech.Glide.Signature.ObjectKey.ObjectKey(Java.Lang.Object! object) -> void
Bumptech.Glide.Signature.ObjectKey.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
Bumptech.Glide.TransitionOptions
Bumptech.Glide.TransitionOptions.Clone() -> Java.Lang.Object?
Bumptech.Glide.TransitionOptions.DontTransition() -> Java.Lang.Object!
Bumptech.Glide.TransitionOptions.Transition(Bumptech.Glide.Request.Transition.ITransitionFactory! transitionFactory) -> Java.Lang.Object!
Bumptech.Glide.TransitionOptions.Transition(Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator! animator) -> Java.Lang.Object!
Bumptech.Glide.TransitionOptions.Transition(int viewAnimationId) -> Java.Lang.Object!
Bumptech.Glide.TransitionOptions.TransitionOptions() -> void
Bumptech.Glide.TransitionOptions.TransitionOptions(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.ByteBufferUtil
Bumptech.Glide.Util.CachedHashCodeArrayMap
Bumptech.Glide.Util.CachedHashCodeArrayMap.CachedHashCodeArrayMap() -> void
Bumptech.Glide.Util.ContentLengthInputStream
Bumptech.Glide.Util.ExceptionCatchingInputStream
Bumptech.Glide.Util.ExceptionCatchingInputStream.ExceptionCatchingInputStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.ExceptionPassthroughInputStream
Bumptech.Glide.Util.ExceptionPassthroughInputStream.Exception.get -> Java.IO.IOException?
Bumptech.Glide.Util.ExceptionPassthroughInputStream.Release() -> void
Bumptech.Glide.Util.Executors
Bumptech.Glide.Util.FixedPreloadSizeProvider
Bumptech.Glide.Util.FixedPreloadSizeProvider.FixedPreloadSizeProvider(int width, int height) -> void
Bumptech.Glide.Util.FixedPreloadSizeProvider.FixedPreloadSizeProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.GlideSuppliers
Bumptech.Glide.Util.GlideSuppliers.IGlideSupplier
Bumptech.Glide.Util.GlideSuppliers.IGlideSupplier.Get() -> Java.Lang.Object?
Bumptech.Glide.Util.ISynthetic
Bumptech.Glide.Util.LogTime
Bumptech.Glide.Util.LruCache
Bumptech.Glide.Util.LruCache.LruCache(long size) -> void
Bumptech.Glide.Util.LruCache.LruCache(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.MarkEnforcingInputStream
Bumptech.Glide.Util.MarkEnforcingInputStream.MarkEnforcingInputStream(System.IO.Stream! in) -> void
Bumptech.Glide.Util.MarkEnforcingInputStream.MarkEnforcingInputStream(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.MultiClassKey
Bumptech.Glide.Util.MultiClassKey.MultiClassKey() -> void
Bumptech.Glide.Util.MultiClassKey.MultiClassKey(Java.Lang.Class! first, Java.Lang.Class! second) -> void
Bumptech.Glide.Util.MultiClassKey.MultiClassKey(Java.Lang.Class! first, Java.Lang.Class! second, Java.Lang.Class? third) -> void
Bumptech.Glide.Util.MultiClassKey.MultiClassKey(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.Pool.FactoryPools
Bumptech.Glide.Util.Pool.FactoryPools.IFactory
Bumptech.Glide.Util.Pool.FactoryPools.IFactory.Create() -> Java.Lang.Object?
Bumptech.Glide.Util.Pool.FactoryPools.IPoolable
Bumptech.Glide.Util.Pool.FactoryPools.IPoolable.Verifier.get -> Bumptech.Glide.Util.Pool.StateVerifier!
Bumptech.Glide.Util.Pool.FactoryPools.IResetter
Bumptech.Glide.Util.Pool.FactoryPools.IResetter.Reset(Java.Lang.Object! p0) -> void
Bumptech.Glide.Util.Pool.GlideTrace
Bumptech.Glide.Util.Pool.StateVerifier
Bumptech.Glide.Util.Pool.StateVerifier.StateVerifier(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Bumptech.Glide.Util.Preconditions
Bumptech.Glide.Util.SyntheticAttribute
Bumptech.Glide.Util.SyntheticAttribute.SyntheticAttribute() -> void
Bumptech.Glide.Util.Util
Bumptech.Glide.Util.ViewPreloadSizeProvider
Bumptech.Glide.Util.ViewPreloadSizeProvider.ViewPreloadSizeProvider() -> void
Bumptech.Glide.Util.ViewPreloadSizeProvider.ViewPreloadSizeProvider(Android.Views.View! view) -> void
Bumptech.Glide.Util.ViewPreloadSizeProvider.ViewPreloadSizeProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
abstract Bumptech.Glide.GeneratedAppGlideModule.ExcludedModuleClasses.get -> System.Collections.Generic.ICollection<Java.Lang.Class!>!
abstract Bumptech.Glide.Load.Data.AssetPathFetcher.Close(Java.Lang.Object? p0) -> void
abstract Bumptech.Glide.Load.Data.AssetPathFetcher.DataClass.get -> Java.Lang.Class!
abstract Bumptech.Glide.Load.Data.AssetPathFetcher.LoadResource(Android.Content.Res.AssetManager? p0, string? p1) -> Java.Lang.Object?
abstract Bumptech.Glide.Load.Data.LocalUriFetcher.Close(Java.Lang.Object? p0) -> void
abstract Bumptech.Glide.Load.Data.LocalUriFetcher.DataClass.get -> Java.Lang.Class!
abstract Bumptech.Glide.Load.Data.LocalUriFetcher.LoadResource(Android.Net.Uri? p0, Android.Content.ContentResolver? p1) -> Java.Lang.Object?
abstract Bumptech.Glide.Load.Engine.DiskCacheStrategy.DecodeCachedData() -> bool
abstract Bumptech.Glide.Load.Engine.DiskCacheStrategy.DecodeCachedResource() -> bool
abstract Bumptech.Glide.Load.Engine.DiskCacheStrategy.IsDataCacheable(Bumptech.Glide.Load.DataSource? p0) -> bool
abstract Bumptech.Glide.Load.Engine.DiskCacheStrategy.IsResourceCacheable(bool p0, Bumptech.Glide.Load.DataSource? p1, Bumptech.Glide.Load.EncodeStrategy? p2) -> bool
abstract Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.GetUrl(Java.Lang.Object? p0, int p1, int p2, Bumptech.Glide.Load.Options? p3) -> string?
abstract Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.Handles(Java.Lang.Object? model) -> bool
abstract Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! p0, Android.Graphics.Bitmap! p1, int p2, int p3) -> Android.Graphics.Bitmap?
abstract Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! p0) -> void
abstract Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.GetSampleSizeRounding(int p0, int p1, int p2, int p3) -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding?
abstract Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.GetScaleFactor(int p0, int p1, int p2, int p3) -> float
abstract Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Recycle() -> void
abstract Bumptech.Glide.Load.Resource.Drawable.DrawableResource.ResourceClass.get -> Java.Lang.Class!
abstract Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Size.get -> int
abstract Bumptech.Glide.Request.Target.BaseTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! p0) -> void
abstract Bumptech.Glide.Request.Target.BaseTarget.OnResourceReady(Java.Lang.Object? resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
abstract Bumptech.Glide.Request.Target.BaseTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! p0) -> void
abstract Bumptech.Glide.Request.Target.CustomTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? p0) -> void
abstract Bumptech.Glide.Request.Target.CustomTarget.OnResourceReady(Java.Lang.Object? resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
abstract Bumptech.Glide.Request.Target.CustomViewTarget.OnLoadFailed(Android.Graphics.Drawables.Drawable? p0) -> void
abstract Bumptech.Glide.Request.Target.CustomViewTarget.OnResourceCleared(Android.Graphics.Drawables.Drawable? p0) -> void
abstract Bumptech.Glide.Request.Target.CustomViewTarget.OnResourceReady(Java.Lang.Object? resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
abstract Bumptech.Glide.Request.Target.ImageViewTarget.SetResource(Java.Lang.Object? p0) -> void
abstract Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.GetDrawable(Java.Lang.Object? p0) -> Android.Graphics.Drawables.Drawable?
abstract Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.GetBitmap(Java.Lang.Object? p0) -> Android.Graphics.Bitmap?
abstract Bumptech.Glide.Util.Pool.StateVerifier.ThrowIfRecycled() -> void
const Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.MinExtensionVersionForOpenFileApis = 17 -> int
const Bumptech.Glide.Load.Engine.BitmapRecycle.ArrayPool.StandardBufferSizeBytes = 65536 -> int
const Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.InterfaceConsts.StandardBufferSizeBytes = 65536 -> int
const Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.InterfaceConsts.DefaultDiskCacheDir = "image_manager_disk_cache" -> string!
const Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.InterfaceConsts.DefaultDiskCacheSize = 262144000 -> int
const Bumptech.Glide.Load.Engine.Cache.DiskCacheFactory.DefaultDiskCacheDir = "image_manager_disk_cache" -> string!
const Bumptech.Glide.Load.Engine.Cache.DiskCacheFactory.DefaultDiskCacheSize = 262144000 -> int
const Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.InterfaceConsts.DefaultDiskCacheDir = "image_manager_disk_cache" -> string!
const Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.InterfaceConsts.DefaultDiskCacheSize = 262144000 -> int
const Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.NoThreadTimeout = 0 -> long
const Bumptech.Glide.Load.Engine.Executor.GlideExecutor.DefaultPriority = 9 -> int
const Bumptech.Glide.Load.HttpException.Unknown = -1 -> int
const Bumptech.Glide.Load.ImageHeaderParser.UnknownOrientation = -1 -> int
const Bumptech.Glide.Load.Key.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Load.Model.GlideUrl.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Load.Options.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.InterfaceConsts.UnknownOrientation = -1 -> int
const Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.InterfaceConsts.UnknownOrientation = -1 -> int
const Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.NoMaxFdCount = -1 -> int
const Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.PaintFlags = 6 -> int
const Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.DefaultFrame = -1 -> long
const Bumptech.Glide.Load.Resource.Gif.GifDrawable.LoopForever = -1 -> int
const Bumptech.Glide.Load.Resource.Gif.GifDrawable.LoopIntrinsic = 0 -> int
const Bumptech.Glide.Registry.BucketAnimation = "Animation" -> string!
const Bumptech.Glide.Registry.BucketBitmap = "Bitmap" -> string!
const Bumptech.Glide.Registry.BucketBitmapDrawable = "BitmapDrawable" -> string!
const Bumptech.Glide.Registry.BucketGif = "Animation" -> string!
const Bumptech.Glide.Request.Target.BaseTarget.InterfaceConsts.SizeOriginal = -2147483648 -> int
const Bumptech.Glide.Request.Target.CustomTarget.InterfaceConsts.SizeOriginal = -2147483648 -> int
const Bumptech.Glide.Request.Target.CustomViewTarget.InterfaceConsts.SizeOriginal = -2147483648 -> int
const Bumptech.Glide.Request.Target.Target.SizeOriginal = -2147483648 -> int
const Bumptech.Glide.Signature.AndroidResourceSignature.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Signature.EmptySignature.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Signature.MediaStoreSignature.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
const Bumptech.Glide.Signature.ObjectKey.InterfaceConsts.StringCharsetName = "UTF-8" -> string!
override Bumptech.Glide.GeneratedAppGlideModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GeneratedAppGlideModule.ThresholdClass.get -> nint
override Bumptech.Glide.GeneratedAppGlideModule.ThresholdType.get -> System.Type!
override Bumptech.Glide.GenericTransitionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Glide.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Glide.ThresholdClass.get -> nint
override Bumptech.Glide.Glide.ThresholdType.get -> System.Type!
override Bumptech.Glide.GlideBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideBuilder.LogRequestOrigins.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideBuilder.OverrideGlideThreadPriority.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideBuilder.UseMediaStoreOpenFileApisIfPossible.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideContext.ThresholdClass.get -> nint
override Bumptech.Glide.GlideContext.ThresholdType.get -> System.Type!
override Bumptech.Glide.GlideExperiments.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.GlideExperiments.ThresholdClass.get -> nint
override Bumptech.Glide.GlideExperiments.ThresholdType.get -> System.Type!
override Bumptech.Glide.ListPreloader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.ListPreloader.ThresholdClass.get -> nint
override Bumptech.Glide.ListPreloader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher.DataClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.AssetPathFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.AssetPathFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.AssetPathFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.BufferedOutputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.BufferedOutputStream.Write(int b) -> void
override Bumptech.Glide.Load.Data.DataRewinderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.DataRewinderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.DataRewinderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.ExifOrientationStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.Close(Java.Lang.Object! data) -> void
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.DataClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.LoadResource(Android.Content.Res.AssetManager! assetManager, string! path) -> Java.Lang.Object!
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.Close(Java.Lang.Object! data) -> void
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.DataClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.LoadResource(Android.Net.Uri! uri, Android.Content.ContentResolver! contentResolver) -> Java.Lang.Object!
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.HttpUrlFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.HttpUrlFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.HttpUrlFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.InputStreamRewinder.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.InputStreamRewinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.LocalUriFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.LocalUriFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.LocalUriFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.Close(Java.Lang.Object! data) -> void
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.DataClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.LoadResource(Android.Content.Res.AssetManager! assetManager, string! path) -> Java.Lang.Object!
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.StreamAssetPathFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.Close(Java.Lang.Object! data) -> void
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.DataClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.LoadResource(Android.Net.Uri! uri, Android.Content.ContentResolver! contentResolver) -> Java.Lang.Object!
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Data.StreamLocalUriFetcher.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.DataSource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.DecodeFormat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.EncodeStrategy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.LruResourceCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.LruResourceCache.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.LruResourceCache.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.DecodePath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.DecodePath.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.DecodePath.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.DiskCacheStrategy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.DiskCacheStrategy.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.DiskCacheStrategy.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Engine.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Engine.LoadStatus.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Engine.LoadStatus.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Engine.LoadStatus.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Engine.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Engine.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Executor.GlideExecutor.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.GlideException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.LoadPath.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.LoadPath.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.LoadPath.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Prefill.BitmapPreFiller.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Engine.Prefill.PreFillType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.HttpException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.ImageHeaderParserImageType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.ImageHeaderParserUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.AssetUriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.AssetUriLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.AssetUriLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteArrayLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteArrayLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteArrayLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteBufferEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteBufferEncoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteBufferEncoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ByteBufferFileLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.DataUrlLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.DataUrlLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.DirectResourceLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.FileLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.FileLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.FileLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.FileLoader.FileDescriptorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.FileLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.FileLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.FileLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.FileLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.FileLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.FileLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.GlideUrl.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.GlideUrl.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.GlideUrl.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.LazyHeaders.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.LazyHeaders.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.MediaStoreFileLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.MediaStoreFileLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ModelCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ModelCache.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ModelCache.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ModelLoaderLoadData.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ModelLoaderLoadData.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ModelLoaderLoadData.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ModelLoaderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ModelLoaderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ModelLoaderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.MultiModelLoaderFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.MultiModelLoaderFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.MultiModelLoaderFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ResourceLoader.AssetFileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ResourceLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ResourceLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ResourceLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.ResourceUriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.HttpUriLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.UrlLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.Stream.UrlLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.Stream.UrlLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.StreamEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.StreamEncoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.StreamEncoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.StringLoader.AssetFileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.StringLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.StringLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.StringLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.StringLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.StringLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.StringLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UnitModelLoader.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UnitModelLoader.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UnitModelLoader.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UnitModelLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UnitModelLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UnitModelLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UriLoader.AssetFileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UriLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UriLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UriLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UriLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UriLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UrlUriLoader.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Model.UrlUriLoader.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Model.UrlUriLoader.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.MultiTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.MultiTransformation.ThresholdClass.get -> nint
override Bumptech.Glide.Load.MultiTransformation.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Option.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Options.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.PreferredColorSpace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.Recycle() -> void
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.ResourceClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.Size.get -> int
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! toTransform, int outWidth, int outHeight) -> Android.Graphics.Bitmap?
override Bumptech.Glide.Load.Resource.Bitmap.CenterCrop.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.CenterInside.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.CenterInside.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.CenterInside.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.CenterInside.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! toTransform, int outWidth, int outHeight) -> Android.Graphics.Bitmap?
override Bumptech.Glide.Load.Resource.Bitmap.CenterInside.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! toTransform, int outWidth, int outHeight) -> Android.Graphics.Bitmap?
override Bumptech.Glide.Load.Resource.Bitmap.CircleCrop.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.Downsampler.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.FitCenter.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.FitCenter.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.FitCenter.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.FitCenter.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! toTransform, int outWidth, int outHeight) -> Android.Graphics.Bitmap?
override Bumptech.Glide.Load.Resource.Bitmap.FitCenter.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.GranularRoundedCorners.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.GranularRoundedCorners.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.Rotate.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.Rotate.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.Rotate.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.Rotate.Transform(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! toTransform, int outWidth, int outHeight) -> Android.Graphics.Bitmap?
override Bumptech.Glide.Load.Resource.Bitmap.Rotate.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.RoundedCorners.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.RoundedCorners.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
override Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Bytes.BytesResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Bytes.BytesResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Bytes.BytesResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.DefaultOnHeaderDecodedListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.AnimatedImageDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.AnimatedWebpDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.DrawableDecoderCompat.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.DrawableResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.DrawableResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Drawable.DrawableResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.File.FileDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.File.FileDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.File.FileDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.File.FileResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.File.FileResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.File.FileResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.Draw(Android.Graphics.Canvas! canvas) -> void
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.Opacity.get -> int
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.SetAlpha(int i) -> void
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.SetColorFilter(Android.Graphics.ColorFilter? colorFilter) -> void
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.GifDrawable.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.Recycle() -> void
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.ResourceClass.get -> Java.Lang.Class!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.Size.get -> int
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.GifDrawableResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.GifOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.SimpleResource.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.SimpleResource.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.SimpleResource.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Transcode.DrawableBytesTranscoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.ThresholdClass.get -> nint
override Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Load.Resource.UnitTransformation.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Manager.RequestManagerFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.RequestManagerFragment.ThresholdClass.get -> nint
override Bumptech.Glide.Manager.RequestManagerFragment.ThresholdType.get -> System.Type!
override Bumptech.Glide.Manager.RequestManagerRetriever.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.RequestManagerRetriever.ThresholdClass.get -> nint
override Bumptech.Glide.Manager.RequestManagerRetriever.ThresholdType.get -> System.Type!
override Bumptech.Glide.Manager.RequestTracker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.RequestTracker.ThresholdClass.get -> nint
override Bumptech.Glide.Manager.RequestTracker.ThresholdType.get -> System.Type!
override Bumptech.Glide.Manager.SupportRequestManagerFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Manager.SupportRequestManagerFragment.ThresholdClass.get -> nint
override Bumptech.Glide.Manager.SupportRequestManagerFragment.ThresholdType.get -> System.Type!
override Bumptech.Glide.Manager.TargetTracker.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.MemoryCategory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Module.AppGlideModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Module.AppGlideModule.ThresholdClass.get -> nint
override Bumptech.Glide.Module.AppGlideModule.ThresholdType.get -> System.Type!
override Bumptech.Glide.Module.LibraryGlideModule.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Module.LibraryGlideModule.ThresholdClass.get -> nint
override Bumptech.Glide.Module.LibraryGlideModule.ThresholdType.get -> System.Type!
override Bumptech.Glide.Module.ManifestParser.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Priority.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.EncoderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.EncoderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Provider.EncoderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Provider.ImageHeaderParserRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.LoadPathCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.LoadPathCache.ThresholdClass.get -> nint
override Bumptech.Glide.Provider.LoadPathCache.ThresholdType.get -> System.Type!
override Bumptech.Glide.Provider.ModelToResourceClassCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.ModelToResourceClassCache.ThresholdClass.get -> nint
override Bumptech.Glide.Provider.ModelToResourceClassCache.ThresholdType.get -> System.Type!
override Bumptech.Glide.Provider.ResourceDecoderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.ResourceDecoderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Provider.ResourceDecoderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Provider.ResourceEncoderRegistry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Provider.ResourceEncoderRegistry.ThresholdClass.get -> nint
override Bumptech.Glide.Provider.ResourceEncoderRegistry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Registry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.MissingComponentException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.MissingComponentException.ThresholdClass.get -> nint
override Bumptech.Glide.Registry.MissingComponentException.ThresholdType.get -> System.Type!
override Bumptech.Glide.Registry.NoImageHeaderParserException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.NoModelLoaderAvailableException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.NoModelLoaderAvailableException.ThresholdClass.get -> nint
override Bumptech.Glide.Registry.NoModelLoaderAvailableException.ThresholdType.get -> System.Type!
override Bumptech.Glide.Registry.NoResultEncoderAvailableException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.NoResultEncoderAvailableException.ThresholdClass.get -> nint
override Bumptech.Glide.Registry.NoResultEncoderAvailableException.ThresholdType.get -> System.Type!
override Bumptech.Glide.Registry.NoSourceEncoderAvailableException.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Registry.NoSourceEncoderAvailableException.ThresholdClass.get -> nint
override Bumptech.Glide.Registry.NoSourceEncoderAvailableException.ThresholdType.get -> System.Type!
override Bumptech.Glide.Registry.ThresholdClass.get -> nint
override Bumptech.Glide.Registry.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.BaseRequestOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.BaseRequestOptions.ThresholdClass.get -> nint
override Bumptech.Glide.Request.BaseRequestOptions.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.ErrorRequestCoordinator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.RequestCoordinatorRequestState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.RequestFutureTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.RequestFutureTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.RequestFutureTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.RequestOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.RequestOptions.ThresholdClass.get -> nint
override Bumptech.Glide.Request.RequestOptions.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.SingleRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.AppWidgetTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.AppWidgetTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
override Bumptech.Glide.Request.Target.AppWidgetTarget.OnResourceReady(Java.Lang.Object! resource, Bumptech.Glide.Request.Transition.ITransition! transition) -> void
override Bumptech.Glide.Request.Target.AppWidgetTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.AppWidgetTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.BaseTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.BaseTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.BaseTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.BitmapImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.BitmapImageViewTarget.SetResource(Java.Lang.Object! resource) -> void
override Bumptech.Glide.Request.Target.BitmapImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.BitmapImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.GetDrawable(Java.Lang.Object! resource) -> Android.Graphics.Drawables.Drawable!
override Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.CustomTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.CustomTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.CustomTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.CustomViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.CustomViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.CustomViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.DrawableImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.DrawableImageViewTarget.SetResource(Java.Lang.Object! resource) -> void
override Bumptech.Glide.Request.Target.DrawableImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.DrawableImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.GetDrawable(Java.Lang.Object! resource) -> Android.Graphics.Drawables.Drawable!
override Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.FixedSizeDrawable.Draw(Android.Graphics.Canvas! canvas) -> void
override Bumptech.Glide.Request.Target.FixedSizeDrawable.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.FixedSizeDrawable.Opacity.get -> int
override Bumptech.Glide.Request.Target.FixedSizeDrawable.SetAlpha(int i) -> void
override Bumptech.Glide.Request.Target.FixedSizeDrawable.SetColorFilter(Android.Graphics.ColorFilter? colorFilter) -> void
override Bumptech.Glide.Request.Target.FixedSizeDrawable.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.FixedSizeDrawable.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.ImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.ImageViewTarget.OnResourceReady(Java.Lang.Object! resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
override Bumptech.Glide.Request.Target.ImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.ImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.ImageViewTargetFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.ImageViewTargetFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.ImageViewTargetFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.NotificationTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.NotificationTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
override Bumptech.Glide.Request.Target.NotificationTarget.OnResourceReady(Java.Lang.Object! resource, Bumptech.Glide.Request.Transition.ITransition! transition) -> void
override Bumptech.Glide.Request.Target.NotificationTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.NotificationTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.PreloadTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.PreloadTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
override Bumptech.Glide.Request.Target.PreloadTarget.OnResourceReady(Java.Lang.Object! resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
override Bumptech.Glide.Request.Target.SimpleTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.SimpleTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
override Bumptech.Glide.Request.Target.SimpleTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.SimpleTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.SetResource(Java.Lang.Object? resource) -> void
override Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.ThumbnailImageViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Target.ViewTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
override Bumptech.Glide.Request.Target.ViewTarget.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Target.ViewTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
override Bumptech.Glide.Request.Target.ViewTarget.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Target.ViewTarget.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.ThumbnailRequestCoordinator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.ThumbnailRequestCoordinator.ThresholdClass.get -> nint
override Bumptech.Glide.Request.ThumbnailRequestCoordinator.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.BitmapTransitionFactory.GetBitmap(Java.Lang.Object! current) -> Android.Graphics.Bitmap!
override Bumptech.Glide.Request.Transition.BitmapTransitionFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.BitmapTransitionFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.BitmapTransitionFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.NoTransition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.NoTransition.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.NoTransition.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.ViewAnimationFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.ViewAnimationFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.ViewAnimationFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.ViewPropertyTransition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.ViewPropertyTransition.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.ViewPropertyTransition.ThresholdType.get -> System.Type!
override Bumptech.Glide.Request.Transition.ViewTransition.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Request.Transition.ViewTransition.ThresholdClass.get -> nint
override Bumptech.Glide.Request.Transition.ViewTransition.ThresholdType.get -> System.Type!
override Bumptech.Glide.RequestBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.RequestBuilder.ThresholdClass.get -> nint
override Bumptech.Glide.RequestBuilder.ThresholdType.get -> System.Type!
override Bumptech.Glide.RequestManager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.RequestManager.ThresholdClass.get -> nint
override Bumptech.Glide.RequestManager.ThresholdType.get -> System.Type!
override Bumptech.Glide.Signature.AndroidResourceSignature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Signature.ApplicationVersionSignature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Signature.EmptySignature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Signature.MediaStoreSignature.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Signature.MediaStoreSignature.ThresholdClass.get -> nint
override Bumptech.Glide.Signature.MediaStoreSignature.ThresholdType.get -> System.Type!
override Bumptech.Glide.Signature.ObjectKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.TransitionOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.TransitionOptions.ThresholdClass.get -> nint
override Bumptech.Glide.TransitionOptions.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.ByteBufferUtil.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.CachedHashCodeArrayMap.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.CachedHashCodeArrayMap.Put(Java.Lang.Object? key, Java.Lang.Object? value) -> Java.Lang.Object?
override Bumptech.Glide.Util.CachedHashCodeArrayMap.PutAll(AndroidX.Collection.SimpleArrayMap? simpleArrayMap) -> void
override Bumptech.Glide.Util.CachedHashCodeArrayMap.SetValueAt(int index, Java.Lang.Object? value) -> Java.Lang.Object?
override Bumptech.Glide.Util.ContentLengthInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.ExceptionCatchingInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.ExceptionCatchingInputStream.Read() -> int
override Bumptech.Glide.Util.ExceptionCatchingInputStream.ThresholdClass.get -> nint
override Bumptech.Glide.Util.ExceptionCatchingInputStream.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.ExceptionPassthroughInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.ExceptionPassthroughInputStream.Read() -> int
override Bumptech.Glide.Util.Executors.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.FixedPreloadSizeProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.FixedPreloadSizeProvider.ThresholdClass.get -> nint
override Bumptech.Glide.Util.FixedPreloadSizeProvider.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.GlideSuppliers.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.LogTime.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.LruCache.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.LruCache.ThresholdClass.get -> nint
override Bumptech.Glide.Util.LruCache.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.MarkEnforcingInputStream.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.MarkEnforcingInputStream.ThresholdClass.get -> nint
override Bumptech.Glide.Util.MarkEnforcingInputStream.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.MultiClassKey.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.MultiClassKey.ThresholdClass.get -> nint
override Bumptech.Glide.Util.MultiClassKey.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.Pool.FactoryPools.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.Pool.GlideTrace.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.Pool.StateVerifier.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.Pool.StateVerifier.ThresholdClass.get -> nint
override Bumptech.Glide.Util.Pool.StateVerifier.ThresholdType.get -> System.Type!
override Bumptech.Glide.Util.Preconditions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.Util.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.ViewPreloadSizeProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Bumptech.Glide.Util.ViewPreloadSizeProvider.ThresholdClass.get -> nint
override Bumptech.Glide.Util.ViewPreloadSizeProvider.ThresholdType.get -> System.Type!
override sealed Bumptech.Glide.Request.Target.SimpleTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
static Bumptech.Glide.GenericTransitionOptions.With(Bumptech.Glide.Request.Transition.ITransitionFactory! transitionFactory) -> Bumptech.Glide.GenericTransitionOptions!
static Bumptech.Glide.GenericTransitionOptions.With(Bumptech.Glide.Request.Transition.ViewPropertyTransition.IAnimator! animator) -> Bumptech.Glide.GenericTransitionOptions!
static Bumptech.Glide.GenericTransitionOptions.With(int viewAnimationId) -> Bumptech.Glide.GenericTransitionOptions!
static Bumptech.Glide.GenericTransitionOptions.WithNoTransition() -> Bumptech.Glide.GenericTransitionOptions!
static Bumptech.Glide.Glide.EnableHardwareBitmaps() -> void
static Bumptech.Glide.Glide.Get(Android.Content.Context! context) -> Bumptech.Glide.Glide!
static Bumptech.Glide.Glide.GetPhotoCacheDir(Android.Content.Context! context) -> Java.IO.File?
static Bumptech.Glide.Glide.GetPhotoCacheDir(Android.Content.Context! context, string! cacheName) -> Java.IO.File?
static Bumptech.Glide.Glide.Init(Android.Content.Context! context, Bumptech.Glide.GlideBuilder! builder) -> void
static Bumptech.Glide.Glide.Init(Bumptech.Glide.Glide? glide) -> void
static Bumptech.Glide.Glide.IsInitialized.get -> bool
static Bumptech.Glide.Glide.TearDown() -> void
static Bumptech.Glide.Glide.With(Android.App.Activity! activity) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Glide.With(Android.App.Fragment! fragment) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Glide.With(Android.Content.Context! context) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Glide.With(Android.Views.View! view) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Glide.With(AndroidX.Fragment.App.Fragment! fragment) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Glide.With(AndroidX.Fragment.App.FragmentActivity! activity) -> Bumptech.Glide.RequestManager!
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsAndroidPickerUri(Android.Net.Uri? uri) -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsMediaStoreImageUri(Android.Net.Uri? uri) -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsMediaStoreOpenFileApisAvailable.get -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsMediaStoreUri(Android.Net.Uri? uri) -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsMediaStoreVideoUri(Android.Net.Uri? uri) -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.IsThumbnailSize(int width, int height) -> bool
static Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil.OpenAssetFileDescriptor(Android.Net.Uri? uri, Android.Content.ContentResolver? contentResolver) -> Android.Content.Res.AssetFileDescriptor?
static Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.BuildImageFetcher(Android.Content.Context? context, Android.Net.Uri? uri) -> Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher?
static Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.BuildVideoFetcher(Android.Content.Context? context, Android.Net.Uri? uri) -> Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher?
static Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder.IsSupported.get -> bool
static Bumptech.Glide.Load.DataSource.DataDiskCache.get -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.Local.get -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.MemoryCache.get -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.Remote.get -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.ResourceDiskCache.get -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.ValueOf(string? name) -> Bumptech.Glide.Load.DataSource?
static Bumptech.Glide.Load.DataSource.Values() -> Bumptech.Glide.Load.DataSource![]?
static Bumptech.Glide.Load.DecodeFormat.Default.get -> Bumptech.Glide.Load.DecodeFormat?
static Bumptech.Glide.Load.DecodeFormat.PreferArgb8888.get -> Bumptech.Glide.Load.DecodeFormat?
static Bumptech.Glide.Load.DecodeFormat.PreferRgb565.get -> Bumptech.Glide.Load.DecodeFormat?
static Bumptech.Glide.Load.DecodeFormat.ValueOf(string? name) -> Bumptech.Glide.Load.DecodeFormat?
static Bumptech.Glide.Load.DecodeFormat.Values() -> Bumptech.Glide.Load.DecodeFormat![]?
static Bumptech.Glide.Load.EncodeStrategy.None.get -> Bumptech.Glide.Load.EncodeStrategy?
static Bumptech.Glide.Load.EncodeStrategy.Source.get -> Bumptech.Glide.Load.EncodeStrategy?
static Bumptech.Glide.Load.EncodeStrategy.Transformed.get -> Bumptech.Glide.Load.EncodeStrategy?
static Bumptech.Glide.Load.EncodeStrategy.ValueOf(string? name) -> Bumptech.Glide.Load.EncodeStrategy?
static Bumptech.Glide.Load.EncodeStrategy.Values() -> Bumptech.Glide.Load.EncodeStrategy![]?
static Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Create(Java.IO.File? directory, long maxSize) -> Bumptech.Glide.Load.Engine.Cache.IDiskCache?
static Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Get(Java.IO.File? directory, long maxSize) -> Bumptech.Glide.Load.Engine.Cache.IDiskCache?
static Bumptech.Glide.Load.Engine.DiskCacheStrategy.All.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy?
static Bumptech.Glide.Load.Engine.DiskCacheStrategy.Automatic.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy?
static Bumptech.Glide.Load.Engine.DiskCacheStrategy.Data.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy?
static Bumptech.Glide.Load.Engine.DiskCacheStrategy.None.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy?
static Bumptech.Glide.Load.Engine.DiskCacheStrategy.Resource.get -> Bumptech.Glide.Load.Engine.DiskCacheStrategy?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.CalculateBestThreadCount() -> int
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewAnimationBuilder() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewAnimationExecutor() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewAnimationExecutor(int threadCount, Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy? uncaughtThrowableStrategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewDiskCacheBuilder() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewDiskCacheExecutor() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewDiskCacheExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy? uncaughtThrowableStrategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewDiskCacheExecutor(int threadCount, string? name, Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy? uncaughtThrowableStrategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewSourceBuilder() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.Builder?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewSourceExecutor() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewSourceExecutor(Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy? uncaughtThrowableStrategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewSourceExecutor(int threadCount, string? name, Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy? uncaughtThrowableStrategy) -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.NewUnlimitedSourceExecutor() -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategy.Default.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategy.Ignore.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategy.Log.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
static Bumptech.Glide.Load.Engine.Executor.GlideExecutor.UncaughtThrowableStrategy.Throw.get -> Bumptech.Glide.Load.Engine.Executor.GlideExecutor.IUncaughtThrowableStrategy?
static Bumptech.Glide.Load.ImageHeaderParserImageType.AnimatedAvif.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.AnimatedWebp.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Avif.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Gif.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Jpeg.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Png.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.PngA.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Raw.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Unknown.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.ValueOf(string? name) -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Values() -> Bumptech.Glide.Load.ImageHeaderParserImageType![]?
static Bumptech.Glide.Load.ImageHeaderParserImageType.Webp.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserImageType.WebpA.get -> Bumptech.Glide.Load.ImageHeaderParserImageType?
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetOrientation(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder! parcelFileDescriptorRewinder, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetOrientation(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Java.Nio.ByteBuffer? buffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! arrayPool) -> int
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetOrientation(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, System.IO.Stream? is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> int
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetType(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder! parcelFileDescriptorRewinder, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetType(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Java.Nio.ByteBuffer? buffer) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
static Bumptech.Glide.Load.ImageHeaderParserUtils.GetType(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, System.IO.Stream? is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> Bumptech.Glide.Load.ImageHeaderParserImageType!
static Bumptech.Glide.Load.ImageHeaderParserUtils.HasJpegMpf(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder! parcelFileDescriptorRewinder, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
static Bumptech.Glide.Load.ImageHeaderParserUtils.HasJpegMpf(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, Java.Nio.ByteBuffer? buffer, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
static Bumptech.Glide.Load.ImageHeaderParserUtils.HasJpegMpf(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>! parsers, System.IO.Stream? is, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool! byteArrayPool) -> bool
static Bumptech.Glide.Load.Key.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Load.Model.DirectResourceLoader.AssetFileDescriptorFactory(Android.Content.Context? context) -> Bumptech.Glide.Load.Model.IModelLoaderFactory?
static Bumptech.Glide.Load.Model.DirectResourceLoader.DrawableFactory(Android.Content.Context? context) -> Bumptech.Glide.Load.Model.IModelLoaderFactory?
static Bumptech.Glide.Load.Model.DirectResourceLoader.InputStreamFactory(Android.Content.Context? context) -> Bumptech.Glide.Load.Model.IModelLoaderFactory?
static Bumptech.Glide.Load.Model.GlideUrl.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Load.Model.Headers.Default.get -> Bumptech.Glide.Load.Model.IHeaders?
static Bumptech.Glide.Load.Model.Headers.None.get -> Bumptech.Glide.Load.Model.IHeaders?
static Bumptech.Glide.Load.Model.LazyHeaders.InterfaceConsts.Default.get -> Bumptech.Glide.Load.Model.IHeaders?
static Bumptech.Glide.Load.Model.LazyHeaders.InterfaceConsts.None.get -> Bumptech.Glide.Load.Model.IHeaders?
static Bumptech.Glide.Load.Model.ResourceUriLoader.NewAssetFileDescriptorFactory(Android.Content.Context? context) -> Bumptech.Glide.Load.Model.IModelLoaderFactory?
static Bumptech.Glide.Load.Model.ResourceUriLoader.NewStreamFactory(Android.Content.Context? context) -> Bumptech.Glide.Load.Model.IModelLoaderFactory?
static Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Timeout.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Model.UnitModelLoader.Factory.Instance.get -> Bumptech.Glide.Load.Model.UnitModelLoader.Factory?
static Bumptech.Glide.Load.Model.UnitModelLoader.Instance.get -> Bumptech.Glide.Load.Model.UnitModelLoader?
static Bumptech.Glide.Load.Option.Disk(string! key, Bumptech.Glide.Load.Option.ICacheKeyUpdater! cacheKeyUpdater) -> Bumptech.Glide.Load.Option!
static Bumptech.Glide.Load.Option.Disk(string! key, Java.Lang.Object? defaultValue, Bumptech.Glide.Load.Option.ICacheKeyUpdater! cacheKeyUpdater) -> Bumptech.Glide.Load.Option!
static Bumptech.Glide.Load.Option.Memory(string! key) -> Bumptech.Glide.Load.Option!
static Bumptech.Glide.Load.Option.Memory(string! key, Java.Lang.Object! defaultValue) -> Bumptech.Glide.Load.Option!
static Bumptech.Glide.Load.Options.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Load.PreferredColorSpace.DisplayP3.get -> Bumptech.Glide.Load.PreferredColorSpace?
static Bumptech.Glide.Load.PreferredColorSpace.Srgb.get -> Bumptech.Glide.Load.PreferredColorSpace?
static Bumptech.Glide.Load.PreferredColorSpace.ValueOf(string? name) -> Bumptech.Glide.Load.PreferredColorSpace?
static Bumptech.Glide.Load.PreferredColorSpace.Values() -> Bumptech.Glide.Load.PreferredColorSpace![]?
static Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.CompressionFormat.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.CompressionQuality.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.Obtain(Android.Graphics.Bitmap? bitmap, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! bitmapPool) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapResource?
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.With(Bumptech.Glide.Request.Transition.ITransitionFactory! transitionFactory) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.WithCrossFade() -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.WithCrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.WithCrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder! builder) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.WithCrossFade(int duration) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions.WithWrapped(Bumptech.Glide.Request.Transition.ITransitionFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions!
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.AtLeast.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.AtMost.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.CenterInside.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.CenterOutside.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.Default.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.FitCenter.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.None.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.Option.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding.Memory.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding.Quality.get -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding.ValueOf(string? name) -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding?
static Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding.Values() -> Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy.SampleSizeRounding![]?
static Bumptech.Glide.Load.Resource.Bitmap.Downsampler.AllowHardwareConfig.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.Downsampler.DecodeFormat.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.Downsampler.DownsampleStrategy.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.Downsampler.FixBitmapSizeToRequestedDimensions.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.Downsampler.PreferredColorSpace.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.BlockHardwareBitmapsWhenGlContextMightNotBeInitialized.get -> bool
static Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.HardwareBitmapsSupported.get -> bool
static Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState.Instance.get -> Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState?
static Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Obtain(Android.Content.Context? context, Android.Graphics.Bitmap? bitmap) -> Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource?
static Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Obtain(Android.Content.Res.Resources! resources, Bumptech.Glide.Load.Engine.IResource? bitmapResource) -> Bumptech.Glide.Load.Engine.IResource?
static Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource.Obtain(Android.Content.Res.Resources? resources, Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool, Android.Graphics.Bitmap? bitmap) -> Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.BitmapDrawableLock.get -> Java.Util.Concurrent.Locks.ILock?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.CenterCrop(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int width, int height) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.CenterInside(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int width, int height) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.CircleCrop(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int destWidth, int destHeight) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.FitCenter(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int width, int height) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.GetExifOrientationDegrees(int exifOrientation) -> int
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.IsExifOrientationRequired(int exifOrientation) -> bool
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.RotateImage(Android.Graphics.Bitmap! imageToOrient, int degreesToRotate) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.RotateImageExif(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int exifOrientation) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.RoundedCorners(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, float topLeft, float topRight, float bottomRight, float bottomLeft) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.RoundedCorners(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int roundingRadius) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.RoundedCorners(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool! pool, Android.Graphics.Bitmap! inBitmap, int width, int height, int roundingRadius) -> Android.Graphics.Bitmap?
static Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils.SetAlpha(Android.Graphics.Bitmap? inBitmap, Android.Graphics.Bitmap? outBitmap) -> void
static Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.Asset(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.ByteBuffer(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.FrameOption.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.Parcel(Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool? bitmapPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.TargetFrame.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Drawable.AnimatedImageDecoder.ByteBufferDecoder(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? imageHeaderParsers, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Drawable.AnimatedImageDecoder.StreamDecoder(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? imageHeaderParsers, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Drawable.AnimatedWebpDecoder.ByteBufferDecoder(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? imageHeaderParsers, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Drawable.AnimatedWebpDecoder.StreamDecoder(System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>? imageHeaderParsers, Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool? arrayPool) -> Bumptech.Glide.Load.IResourceDecoder?
static Bumptech.Glide.Load.Resource.Drawable.DrawableDecoderCompat.GetDrawable(Android.Content.Context? ourContext, Android.Content.Context? targetContext, int id) -> Android.Graphics.Drawables.Drawable?
static Bumptech.Glide.Load.Resource.Drawable.DrawableDecoderCompat.GetDrawable(Android.Content.Context? ourContext, int id, Android.Content.Res.Resources.Theme? theme) -> Android.Graphics.Drawables.Drawable?
static Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.With(Bumptech.Glide.Request.Transition.ITransitionFactory! transitionFactory) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
static Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.WithCrossFade() -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
static Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.WithCrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory! drawableCrossFadeFactory) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
static Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.WithCrossFade(Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder! builder) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
static Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions.WithCrossFade(int duration) -> Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions!
static Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.Theme.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Gif.GifOptions.DecodeFormat.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Gif.GifOptions.DisableAnimation.get -> Bumptech.Glide.Load.Option?
static Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.Get() -> Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder?
static Bumptech.Glide.Load.Resource.UnitTransformation.Get() -> Bumptech.Glide.Load.Resource.UnitTransformation!
static Bumptech.Glide.MemoryCategory.High.get -> Bumptech.Glide.MemoryCategory?
static Bumptech.Glide.MemoryCategory.Low.get -> Bumptech.Glide.MemoryCategory?
static Bumptech.Glide.MemoryCategory.Normal.get -> Bumptech.Glide.MemoryCategory?
static Bumptech.Glide.MemoryCategory.ValueOf(string? name) -> Bumptech.Glide.MemoryCategory?
static Bumptech.Glide.MemoryCategory.Values() -> Bumptech.Glide.MemoryCategory![]?
static Bumptech.Glide.Priority.High.get -> Bumptech.Glide.Priority?
static Bumptech.Glide.Priority.Immediate.get -> Bumptech.Glide.Priority?
static Bumptech.Glide.Priority.Low.get -> Bumptech.Glide.Priority?
static Bumptech.Glide.Priority.Normal.get -> Bumptech.Glide.Priority?
static Bumptech.Glide.Priority.ValueOf(string? name) -> Bumptech.Glide.Priority?
static Bumptech.Glide.Priority.Values() -> Bumptech.Glide.Priority![]?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Cleared.get -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Failed.get -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Paused.get -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Running.get -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Success.get -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.ValueOf(string? name) -> Bumptech.Glide.Request.RequestCoordinatorRequestState?
static Bumptech.Glide.Request.RequestCoordinatorRequestState.Values() -> Bumptech.Glide.Request.RequestCoordinatorRequestState![]?
static Bumptech.Glide.Request.RequestOptions.BitmapTransform(Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.CenterCropTransform() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.CenterInsideTransform() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.CircleCropTransform() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.DecodeTypeOf(Java.Lang.Class! resourceClass) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.DiskCacheStrategyOf(Bumptech.Glide.Load.Engine.DiskCacheStrategy! diskCacheStrategy) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.DownsampleOf(Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy! strategy) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.EncodeFormatOf(Android.Graphics.Bitmap.CompressFormat! format) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.EncodeQualityOf(int quality) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.ErrorOf(Android.Graphics.Drawables.Drawable? errorDrawable) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.ErrorOf(int errorId) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.FitCenterTransform() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.FormatOf(Bumptech.Glide.Load.DecodeFormat! format) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.FrameOf(long frameTimeMicros) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.NoAnimation() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.NoTransformation() -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.Option(Bumptech.Glide.Load.Option! option, Java.Lang.Object! value) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.OverrideOf(int size) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.OverrideOf(int width, int height) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.PlaceholderOf(Android.Graphics.Drawables.Drawable? placeholder) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.PlaceholderOf(int placeholderId) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.PriorityOf(Bumptech.Glide.Priority! priority) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.SignatureOf(Bumptech.Glide.Load.IKey! signature) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.SizeMultiplierOf(float sizeMultiplier) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.SkipMemoryCacheOf(bool skipMemoryCache) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.RequestOptions.TimeoutOf(int timeout) -> Bumptech.Glide.Request.RequestOptions!
static Bumptech.Glide.Request.SingleRequest.Obtain(Android.Content.Context? context, Bumptech.Glide.GlideContext? glideContext, Java.Lang.Object? requestLock, Java.Lang.Object? model, Java.Lang.Class? transcodeClass, Bumptech.Glide.Request.BaseRequestOptions? requestOptions, int overrideWidth, int overrideHeight, Bumptech.Glide.Priority? priority, Bumptech.Glide.Request.Target.ITarget? target, Bumptech.Glide.Request.IRequestListener? targetListener, System.Collections.IList? requestListeners, Bumptech.Glide.Request.IRequestCoordinator? requestCoordinator, Bumptech.Glide.Load.Engine.Engine? engine, Bumptech.Glide.Request.Transition.ITransitionFactory? animationFactory, Java.Util.Concurrent.IExecutor? callbackExecutor) -> Bumptech.Glide.Request.SingleRequest?
static Bumptech.Glide.Request.Target.PreloadTarget.Obtain(Bumptech.Glide.RequestManager? requestManager, int width, int height) -> Bumptech.Glide.Request.Target.PreloadTarget?
static Bumptech.Glide.Request.Target.ViewTarget.SetTagId(int tagId) -> void
static Bumptech.Glide.Request.Transition.NoTransition.Factory.get -> Bumptech.Glide.Request.Transition.ITransitionFactory?
static Bumptech.Glide.Request.Transition.NoTransition.Get() -> Bumptech.Glide.Request.Transition.ITransition?
static Bumptech.Glide.RequestBuilder.DownloadOnlyOptions.get -> Bumptech.Glide.Request.RequestOptions?
static Bumptech.Glide.Signature.AndroidResourceSignature.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Signature.AndroidResourceSignature.Obtain(Android.Content.Context! context) -> Bumptech.Glide.Load.IKey!
static Bumptech.Glide.Signature.ApplicationVersionSignature.Obtain(Android.Content.Context! context) -> Bumptech.Glide.Load.IKey!
static Bumptech.Glide.Signature.EmptySignature.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Signature.EmptySignature.Obtain() -> Bumptech.Glide.Signature.EmptySignature!
static Bumptech.Glide.Signature.MediaStoreSignature.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Signature.ObjectKey.InterfaceConsts.Charset.get -> Java.Nio.Charset.Charset?
static Bumptech.Glide.Util.ByteBufferUtil.FromFile(Java.IO.File! file) -> Java.Nio.ByteBuffer!
static Bumptech.Glide.Util.ByteBufferUtil.FromStream(System.IO.Stream! stream) -> Java.Nio.ByteBuffer!
static Bumptech.Glide.Util.ByteBufferUtil.Rewind(Java.Nio.ByteBuffer? buffer) -> Java.Nio.ByteBuffer?
static Bumptech.Glide.Util.ByteBufferUtil.ToBytes(Java.Nio.ByteBuffer! byteBuffer) -> byte[]!
static Bumptech.Glide.Util.ByteBufferUtil.ToFile(Java.Nio.ByteBuffer! buffer, Java.IO.File! file) -> void
static Bumptech.Glide.Util.ByteBufferUtil.ToStream(Java.Nio.ByteBuffer! buffer) -> System.IO.Stream!
static Bumptech.Glide.Util.ByteBufferUtil.ToStream(Java.Nio.ByteBuffer! byteBuffer, System.IO.Stream! os) -> void
static Bumptech.Glide.Util.ContentLengthInputStream.Obtain(System.IO.Stream! other, long contentLength) -> System.IO.Stream!
static Bumptech.Glide.Util.ContentLengthInputStream.Obtain(System.IO.Stream! other, string? contentLengthHeader) -> System.IO.Stream!
static Bumptech.Glide.Util.ExceptionCatchingInputStream.Obtain(System.IO.Stream! toWrap) -> Bumptech.Glide.Util.ExceptionCatchingInputStream!
static Bumptech.Glide.Util.ExceptionPassthroughInputStream.Obtain(System.IO.Stream! toWrap) -> Bumptech.Glide.Util.ExceptionPassthroughInputStream!
static Bumptech.Glide.Util.Executors.DirectExecutor() -> Java.Util.Concurrent.IExecutor?
static Bumptech.Glide.Util.Executors.MainThreadExecutor() -> Java.Util.Concurrent.IExecutor?
static Bumptech.Glide.Util.Executors.MainThreadExecutorFront() -> Java.Util.Concurrent.IExecutor?
static Bumptech.Glide.Util.Executors.ShutdownAndAwaitTermination(Java.Util.Concurrent.IExecutorService? pool) -> void
static Bumptech.Glide.Util.GlideSuppliers.Memorize(Bumptech.Glide.Util.GlideSuppliers.IGlideSupplier? supplier) -> Bumptech.Glide.Util.GlideSuppliers.IGlideSupplier?
static Bumptech.Glide.Util.LogTime.GetElapsedMillis(long logTime) -> double
static Bumptech.Glide.Util.LogTime.GetLogTime() -> long
static Bumptech.Glide.Util.Pool.FactoryPools.Simple(int size, Bumptech.Glide.Util.Pool.FactoryPools.IFactory! factory) -> AndroidX.Core.Util.Pools.IPool!
static Bumptech.Glide.Util.Pool.FactoryPools.ThreadSafe(int size, Bumptech.Glide.Util.Pool.FactoryPools.IFactory! factory) -> AndroidX.Core.Util.Pools.IPool!
static Bumptech.Glide.Util.Pool.FactoryPools.ThreadSafe(int size, Bumptech.Glide.Util.Pool.FactoryPools.IFactory! factory, Bumptech.Glide.Util.Pool.FactoryPools.IResetter! resetter) -> AndroidX.Core.Util.Pools.IPool!
static Bumptech.Glide.Util.Pool.FactoryPools.ThreadSafeList() -> AndroidX.Core.Util.Pools.IPool!
static Bumptech.Glide.Util.Pool.FactoryPools.ThreadSafeList(int size) -> AndroidX.Core.Util.Pools.IPool!
static Bumptech.Glide.Util.Pool.GlideTrace.BeginSection(string? tag) -> void
static Bumptech.Glide.Util.Pool.GlideTrace.BeginSectionAsync(string? tag) -> int
static Bumptech.Glide.Util.Pool.GlideTrace.BeginSectionFormat(string? format, Java.Lang.Object? arg1) -> void
static Bumptech.Glide.Util.Pool.GlideTrace.BeginSectionFormat(string? format, Java.Lang.Object? arg1, Java.Lang.Object? arg2) -> void
static Bumptech.Glide.Util.Pool.GlideTrace.BeginSectionFormat(string? format, Java.Lang.Object? arg1, Java.Lang.Object? arg2, Java.Lang.Object? arg3) -> void
static Bumptech.Glide.Util.Pool.GlideTrace.EndSection() -> void
static Bumptech.Glide.Util.Pool.GlideTrace.EndSectionAsync(string? tag, int cookie) -> void
static Bumptech.Glide.Util.Pool.StateVerifier.NewInstance() -> Bumptech.Glide.Util.Pool.StateVerifier!
static Bumptech.Glide.Util.Preconditions.CheckArgument(bool expression) -> void
static Bumptech.Glide.Util.Preconditions.CheckArgument(bool expression, string! message) -> void
static Bumptech.Glide.Util.Preconditions.CheckNotEmpty(Java.Lang.Object! collection) -> Java.Lang.Object!
static Bumptech.Glide.Util.Preconditions.CheckNotEmpty(string? string) -> string!
static Bumptech.Glide.Util.Preconditions.CheckNotNull(Java.Lang.Object? arg) -> Java.Lang.Object!
static Bumptech.Glide.Util.Preconditions.CheckNotNull(Java.Lang.Object? arg, string! message) -> Java.Lang.Object!
static Bumptech.Glide.Util.Util.AssertBackgroundThread() -> void
static Bumptech.Glide.Util.Util.AssertMainThread() -> void
static Bumptech.Glide.Util.Util.BothBaseRequestOptionsNullEquivalentOrEquals(Bumptech.Glide.Request.BaseRequestOptions? a, Bumptech.Glide.Request.BaseRequestOptions? b) -> bool
static Bumptech.Glide.Util.Util.BothModelsNullEquivalentOrEquals(Java.Lang.Object? a, Java.Lang.Object? b) -> bool
static Bumptech.Glide.Util.Util.BothNullOrEqual(Java.Lang.Object? a, Java.Lang.Object? b) -> bool
static Bumptech.Glide.Util.Util.CreateQueue(int size) -> Java.Util.IQueue!
static Bumptech.Glide.Util.Util.GetBitmapByteSize(Android.Graphics.Bitmap! bitmap) -> int
static Bumptech.Glide.Util.Util.GetBitmapByteSize(int width, int height, Android.Graphics.Bitmap.Config? config) -> int
static Bumptech.Glide.Util.Util.GetBytesPerPixel(Android.Graphics.Bitmap.Config? config) -> int
static Bumptech.Glide.Util.Util.GetSize(Android.Graphics.Bitmap! bitmap) -> int
static Bumptech.Glide.Util.Util.GetSnapshot(System.Collections.ICollection! other) -> System.Collections.IList!
static Bumptech.Glide.Util.Util.HashCode(Java.Lang.Object? object, int accumulator) -> int
static Bumptech.Glide.Util.Util.HashCode(bool value) -> int
static Bumptech.Glide.Util.Util.HashCode(bool value, int accumulator) -> int
static Bumptech.Glide.Util.Util.HashCode(float value) -> int
static Bumptech.Glide.Util.Util.HashCode(float value, int accumulator) -> int
static Bumptech.Glide.Util.Util.HashCode(int value) -> int
static Bumptech.Glide.Util.Util.HashCode(int value, int accumulator) -> int
static Bumptech.Glide.Util.Util.IsOnBackgroundThread.get -> bool
static Bumptech.Glide.Util.Util.IsOnMainThread.get -> bool
static Bumptech.Glide.Util.Util.IsValidDimension(int dimen) -> bool
static Bumptech.Glide.Util.Util.IsValidDimensions(int width, int height) -> bool
static Bumptech.Glide.Util.Util.PostAtFrontOfQueueOnUiThread(Java.Lang.IRunnable? runnable) -> void
static Bumptech.Glide.Util.Util.PostOnUiThread(Java.Lang.IRunnable? runnable) -> void
static Bumptech.Glide.Util.Util.RemoveCallbacksOnUiThread(Java.Lang.IRunnable? runnable) -> void
static Bumptech.Glide.Util.Util.Sha256BytesToHex(byte[]! bytes) -> string!
virtual Bumptech.Glide.GeneratedAppGlideModule.RequestManagerFactory.get -> Bumptech.Glide.Manager.RequestManagerRetriever.IRequestManagerFactory?
virtual Bumptech.Glide.Glide.ArrayPool.get -> Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool!
virtual Bumptech.Glide.Glide.BitmapPool.get -> Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool!
virtual Bumptech.Glide.Glide.ClearDiskCache() -> void
virtual Bumptech.Glide.Glide.ClearMemory() -> void
virtual Bumptech.Glide.Glide.Context.get -> Android.Content.Context!
virtual Bumptech.Glide.Glide.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual Bumptech.Glide.Glide.OnLowMemory() -> void
virtual Bumptech.Glide.Glide.OnTrimMemory(Android.Content.TrimMemory level) -> void
virtual Bumptech.Glide.Glide.PreFillBitmapPool(params Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder![]! bitmapAttributeBuilders) -> void
virtual Bumptech.Glide.Glide.Registry.get -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Glide.RequestManagerRetriever.get -> Bumptech.Glide.Manager.RequestManagerRetriever!
virtual Bumptech.Glide.Glide.SetMemoryCategory(Bumptech.Glide.MemoryCategory! memoryCategory) -> Bumptech.Glide.MemoryCategory!
virtual Bumptech.Glide.Glide.TrimMemory(int level) -> void
virtual Bumptech.Glide.GlideContext.ArrayPool.get -> Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool!
virtual Bumptech.Glide.GlideContext.BuildImageViewTarget(Android.Widget.ImageView! imageView, Java.Lang.Class! transcodeClass) -> Bumptech.Glide.Request.Target.ViewTarget!
virtual Bumptech.Glide.GlideContext.DefaultRequestListeners.get -> System.Collections.Generic.IList<Bumptech.Glide.Request.IRequestListener!>?
virtual Bumptech.Glide.GlideContext.DefaultRequestOptions.get -> Bumptech.Glide.Request.RequestOptions?
virtual Bumptech.Glide.GlideContext.Engine.get -> Bumptech.Glide.Load.Engine.Engine!
virtual Bumptech.Glide.GlideContext.Experiments.get -> Bumptech.Glide.GlideExperiments?
virtual Bumptech.Glide.GlideContext.GetDefaultTransitionOptions(Java.Lang.Class! transcodeClass) -> Bumptech.Glide.TransitionOptions!
virtual Bumptech.Glide.GlideContext.LogLevel.get -> int
virtual Bumptech.Glide.GlideContext.Registry.get -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.GlideExperiments.IsEnabled(Java.Lang.Class? clazz) -> bool
virtual Bumptech.Glide.ListPreloader.OnScroll(Android.Widget.AbsListView? absListView, int firstVisible, int visibleCount, int totalCount) -> void
virtual Bumptech.Glide.ListPreloader.OnScrollStateChanged(Android.Widget.AbsListView? absListView, Android.Widget.ScrollState scrollState) -> void
virtual Bumptech.Glide.Load.Data.AssetPathFetcher.Cancel() -> void
virtual Bumptech.Glide.Load.Data.AssetPathFetcher.Cleanup() -> void
virtual Bumptech.Glide.Load.Data.AssetPathFetcher.DataSource.get -> Bumptech.Glide.Load.DataSource!
virtual Bumptech.Glide.Load.Data.AssetPathFetcher.LoadData(Bumptech.Glide.Priority! priority, Bumptech.Glide.Load.Data.IDataFetcherDataCallback! callback) -> void
virtual Bumptech.Glide.Load.Data.DataRewinderRegistry.Build(Java.Lang.Object! data) -> Bumptech.Glide.Load.Data.IDataRewinder!
virtual Bumptech.Glide.Load.Data.DataRewinderRegistry.Register(Bumptech.Glide.Load.Data.IDataRewinderFactory! factory) -> void
virtual Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.Close(Android.Content.Res.AssetFileDescriptor? data) -> void
virtual Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher.LoadResource_T(Android.Content.Res.AssetManager? assetManager, string? path) -> Android.Content.Res.AssetFileDescriptor?
virtual Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.Close(Android.OS.ParcelFileDescriptor? data) -> void
virtual Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher.LoadResource_T(Android.Net.Uri? uri, Android.Content.ContentResolver? contentResolver) -> Android.OS.ParcelFileDescriptor?
virtual Bumptech.Glide.Load.Data.HttpUrlFetcher.Cancel() -> void
virtual Bumptech.Glide.Load.Data.HttpUrlFetcher.Cleanup() -> void
virtual Bumptech.Glide.Load.Data.HttpUrlFetcher.DataClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Data.HttpUrlFetcher.DataSource.get -> Bumptech.Glide.Load.DataSource!
virtual Bumptech.Glide.Load.Data.HttpUrlFetcher.LoadData(Bumptech.Glide.Priority! priority, Bumptech.Glide.Load.Data.IDataFetcherDataCallback! callback) -> void
virtual Bumptech.Glide.Load.Data.LocalUriFetcher.Cancel() -> void
virtual Bumptech.Glide.Load.Data.LocalUriFetcher.Cleanup() -> void
virtual Bumptech.Glide.Load.Data.LocalUriFetcher.DataSource.get -> Bumptech.Glide.Load.DataSource!
virtual Bumptech.Glide.Load.Data.LocalUriFetcher.OpenAssetFileDescriptor(Android.Net.Uri? uri) -> Android.Content.Res.AssetFileDescriptor?
virtual Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.Cancel() -> void
virtual Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.Cleanup() -> void
virtual Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.DataClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.DataSource.get -> Bumptech.Glide.Load.DataSource!
virtual Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher.LoadData(Bumptech.Glide.Priority! priority, Bumptech.Glide.Load.Data.IDataFetcherDataCallback! callback) -> void
virtual Bumptech.Glide.Load.Data.StreamAssetPathFetcher.Close(System.IO.Stream? data) -> void
virtual Bumptech.Glide.Load.Data.StreamAssetPathFetcher.LoadResource_T(Android.Content.Res.AssetManager? assetManager, string? path) -> System.IO.Stream?
virtual Bumptech.Glide.Load.Data.StreamLocalUriFetcher.Close(System.IO.Stream? data) -> void
virtual Bumptech.Glide.Load.Data.StreamLocalUriFetcher.LoadResource_T(Android.Net.Uri? uri, Android.Content.ContentResolver? contentResolver) -> System.IO.Stream?
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool.Offer(Java.Lang.Object? key) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.ClearMemory() -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.Get(int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.GetDirty(int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.MaxSize.get -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.Put(Android.Graphics.Bitmap? bitmap) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.SetSizeMultiplier(float sizeMultiplier) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter.TrimMemory(int level) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.ClearMemory() -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.CurrentSize.get -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.EvictionCount() -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.Get(int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.GetDirty(int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.HitCount() -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.MaxSize.get -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.MissCount() -> long
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.Put(Android.Graphics.Bitmap? bitmap) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.SetSizeMultiplier(float sizeMultiplier) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool.TrimMemory(int level) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.Get(int width, int height, Android.Graphics.Bitmap.Config? config) -> Android.Graphics.Bitmap?
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.GetSize(Android.Graphics.Bitmap? bitmap) -> int
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.LogBitmap(Android.Graphics.Bitmap? bitmap) -> string?
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.LogBitmap(int width, int height, Android.Graphics.Bitmap.Config? config) -> string?
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.Put(Android.Graphics.Bitmap? bitmap) -> void
virtual Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy.RemoveLast() -> Android.Graphics.Bitmap?
virtual Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Clear() -> void
virtual Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Delete(Bumptech.Glide.Load.IKey? key) -> void
virtual Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Get(Bumptech.Glide.Load.IKey? key) -> Java.IO.File?
virtual Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter.Put(Bumptech.Glide.Load.IKey? key, Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter? writer) -> void
virtual Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory.Build() -> Bumptech.Glide.Load.Engine.Cache.IDiskCache?
virtual Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Clear() -> void
virtual Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Delete(Bumptech.Glide.Load.IKey? key) -> void
virtual Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Get(Bumptech.Glide.Load.IKey? key) -> Java.IO.File?
virtual Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper.Put(Bumptech.Glide.Load.IKey? key, Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter? writer) -> void
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.GetSize(Bumptech.Glide.Load.Engine.IResource? item) -> int
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.OnItemEvicted(Bumptech.Glide.Load.IKey! key, Bumptech.Glide.Load.Engine.IResource? item) -> void
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.Put(Bumptech.Glide.Load.IKey! p0, Bumptech.Glide.Load.Engine.IResource? p1) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.Remove(Bumptech.Glide.Load.IKey! p0) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.SetResourceRemovedListener(Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener! listener) -> void
virtual Bumptech.Glide.Load.Engine.Cache.LruResourceCache.TrimMemory(int level) -> void
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.ClearMemory() -> void
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.CurrentSize.get -> long
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.MaxSize.get -> long
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.Put(Bumptech.Glide.Load.IKey! key, Bumptech.Glide.Load.Engine.IResource? resource) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.Remove(Bumptech.Glide.Load.IKey! key) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.SetResourceRemovedListener(Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener! listener) -> void
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.SetSizeMultiplier(float multiplier) -> void
virtual Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter.TrimMemory(int level) -> void
virtual Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator.GetSafeKey(Bumptech.Glide.Load.IKey? key) -> string?
virtual Bumptech.Glide.Load.Engine.Engine.ClearDiskCache() -> void
virtual Bumptech.Glide.Load.Engine.Engine.Load(Bumptech.Glide.GlideContext? glideContext, Java.Lang.Object? model, Bumptech.Glide.Load.IKey? signature, int width, int height, Java.Lang.Class? resourceClass, Java.Lang.Class? transcodeClass, Bumptech.Glide.Priority? priority, Bumptech.Glide.Load.Engine.DiskCacheStrategy? diskCacheStrategy, System.Collections.Generic.IDictionary<Java.Lang.Class!, Bumptech.Glide.Load.ITransformation!>? transformations, bool isTransformationRequired, bool isScaleOnlyOrNoTransform, Bumptech.Glide.Load.Options? options, bool isMemoryCacheable, bool useUnlimitedSourceExecutorPool, bool useAnimationPool, bool onlyRetrieveFromCache, Bumptech.Glide.Request.IResourceCallback? cb, Java.Util.Concurrent.IExecutor? callbackExecutor) -> Bumptech.Glide.Load.Engine.Engine.LoadStatus?
virtual Bumptech.Glide.Load.Engine.Engine.LoadStatus.Cancel() -> void
virtual Bumptech.Glide.Load.Engine.Engine.OnResourceRemoved(Bumptech.Glide.Load.Engine.IResource! resource) -> void
virtual Bumptech.Glide.Load.Engine.Engine.Release(Bumptech.Glide.Load.Engine.IResource? resource) -> void
virtual Bumptech.Glide.Load.Engine.Engine.Shutdown() -> void
virtual Bumptech.Glide.Load.Engine.LoadPath.DataClass.get -> Java.Lang.Class?
virtual Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.SetConfig(Android.Graphics.Bitmap.Config? config) -> Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder?
virtual Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder.SetWeight(int weight) -> Bumptech.Glide.Load.Engine.Prefill.PreFillType.Builder?
virtual Bumptech.Glide.Load.Model.AssetUriLoader.BuildLoadData(Android.Net.Uri! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.AssetUriLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.BuildFetcher(Android.Content.Res.AssetManager? assetManager, string? assetPath) -> Bumptech.Glide.Load.Data.IDataFetcher?
virtual Bumptech.Glide.Load.Model.AssetUriLoader.FileDescriptorFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.AssetUriLoader.Handles(Android.Net.Uri! model) -> bool
virtual Bumptech.Glide.Load.Model.AssetUriLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.BuildFetcher(Android.Content.Res.AssetManager? assetManager, string? assetPath) -> Bumptech.Glide.Load.Data.IDataFetcher?
virtual Bumptech.Glide.Load.Model.AssetUriLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.BuildLoadData(byte[]! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.ByteBufferFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.Handles(byte[]! model) -> bool
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ByteArrayLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ByteBufferEncoder.Encode(Java.Nio.ByteBuffer! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Model.ByteBufferFileLoader.BuildLoadData(Java.IO.File! file, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ByteBufferFileLoader.Factory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ByteBufferFileLoader.Handles(Java.IO.File! file) -> bool
virtual Bumptech.Glide.Load.Model.FileLoader.BuildLoadData(Java.IO.File! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.FileLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.FileLoader.Handles(Java.IO.File! model) -> bool
virtual Bumptech.Glide.Load.Model.FileLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.GlideUrl.CacheKey.get -> string?
virtual Bumptech.Glide.Load.Model.GlideUrl.Headers.get -> System.Collections.Generic.IDictionary<string!, string!>?
virtual Bumptech.Glide.Load.Model.GlideUrl.ToStringUrl() -> string?
virtual Bumptech.Glide.Load.Model.GlideUrl.ToURL() -> Java.Net.URL?
virtual Bumptech.Glide.Load.Model.GlideUrl.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Load.Model.ModelCache.Clear() -> void
virtual Bumptech.Glide.Load.Model.ModelCache.Get(Java.Lang.Object? model, int width, int height) -> Java.Lang.Object?
virtual Bumptech.Glide.Load.Model.ModelCache.Put(Java.Lang.Object? model, int width, int height, Java.Lang.Object? value) -> void
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.Append(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> void
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.Build(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass) -> Bumptech.Glide.Load.Model.IModelLoader?
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.GetDataClasses(Java.Lang.Class! modelClass) -> System.Collections.Generic.IList<Java.Lang.Class!>!
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.GetModelLoaders(Java.Lang.Object! model) -> System.Collections.IList!
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.Prepend(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> void
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.Remove(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass) -> void
virtual Bumptech.Glide.Load.Model.ModelLoaderRegistry.Replace(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> void
virtual Bumptech.Glide.Load.Model.MultiModelLoaderFactory.Build(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ResourceLoader.BuildLoadData(Java.Lang.Integer! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.ResourceLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ResourceLoader.FileDescriptorFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ResourceLoader.Handles(Java.Lang.Integer! model) -> bool
virtual Bumptech.Glide.Load.Model.ResourceLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ResourceLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.ResourceLoader.UriFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.GetAlternateUrls(Java.Lang.Object? model, int width, int height, Bumptech.Glide.Load.Options? options) -> System.Collections.Generic.IList<string!>?
virtual Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader.GetHeaders(Java.Lang.Object? model, int width, int height, Bumptech.Glide.Load.Options? options) -> Bumptech.Glide.Load.Model.IHeaders?
virtual Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.BuildLoadData(Bumptech.Glide.Load.Model.GlideUrl! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Factory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader.Handles(Bumptech.Glide.Load.Model.GlideUrl! model) -> bool
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.BuildLoadData(Android.Net.Uri! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Factory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader.Handles(Android.Net.Uri! model) -> bool
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.BuildLoadData(Android.Net.Uri! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Factory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader.Handles(Android.Net.Uri! model) -> bool
virtual Bumptech.Glide.Load.Model.Stream.UrlLoader.BuildLoadData(Java.Net.URL! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.Stream.UrlLoader.Handles(Java.Net.URL! model) -> bool
virtual Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.Stream.UrlLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.StreamEncoder.Encode(System.IO.Stream! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Model.StringLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.StringLoader.BuildLoadData(string! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.StringLoader.FileDescriptorFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.StringLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.StringLoader.Handles(string! model) -> bool
virtual Bumptech.Glide.Load.Model.StringLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory! multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.StringLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.UnitModelLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.UnitModelLoader.Factory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.UnitModelLoader.Factory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.UnitModelLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.UriLoader.BuildLoadData(Android.Net.Uri! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.UriLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.Build(Android.Net.Uri? uri) -> Bumptech.Glide.Load.Data.IDataFetcher?
virtual Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.UriLoader.FileDescriptorFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.UriLoader.Handles(Android.Net.Uri! model) -> bool
virtual Bumptech.Glide.Load.Model.UriLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.UriLoader.StreamFactory.Build(Android.Net.Uri? uri) -> Bumptech.Glide.Load.Data.IDataFetcher?
virtual Bumptech.Glide.Load.Model.UriLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.UriLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.Model.UrlUriLoader.BuildLoadData(Android.Net.Uri! uri, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData?
virtual Bumptech.Glide.Load.Model.UrlUriLoader.BuildLoadData(Java.Lang.Object! model, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Model.ModelLoaderLoadData!
virtual Bumptech.Glide.Load.Model.UrlUriLoader.Handles(Android.Net.Uri! uri) -> bool
virtual Bumptech.Glide.Load.Model.UrlUriLoader.Handles(Java.Lang.Object! model) -> bool
virtual Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.Build(Bumptech.Glide.Load.Model.MultiModelLoaderFactory? multiFactory) -> Bumptech.Glide.Load.Model.IModelLoader!
virtual Bumptech.Glide.Load.Model.UrlUriLoader.StreamFactory.Teardown() -> void
virtual Bumptech.Glide.Load.MultiTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! resource, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
virtual Bumptech.Glide.Load.MultiTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.Decode(Java.Lang.Object! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder.Handles(Java.Lang.Object! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.Encode(Bumptech.Glide.Load.Engine.IResource! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.Encode(Java.Lang.Object! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder.GetEncodeStrategy(Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.EncodeStrategy!
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! drawableResourceToTransform, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.Encode(Bumptech.Glide.Load.Engine.IResource! resource, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.Encode(Java.Lang.Object! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder.GetEncodeStrategy(Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.EncodeStrategy!
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.Get() -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.Initialize() -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.Recycle() -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.ResourceClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Resource.Bitmap.BitmapResource.Size.get -> int
virtual Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.Decode(Java.Nio.ByteBuffer! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder.Handles(Java.Nio.ByteBuffer! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.AsBitmapDrawable() -> Bumptech.Glide.Load.ITransformation?
virtual Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! resource, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
virtual Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.FixMarkLimit() -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream.Release() -> void
virtual Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.Decode(Android.Net.Uri! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder.Handles(Android.Net.Uri! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.Decode(System.IO.Stream! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder.Handles(System.IO.Stream! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.Decode(Java.Lang.Object! resource, int outWidth, int outHeight, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder.Handles(Java.Lang.Object! data, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Cleanup() -> void
virtual Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.Build(Java.Nio.ByteBuffer? data) -> Bumptech.Glide.Load.Data.IDataRewinder!
virtual Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.Factory.DataClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder.RewindAndGet() -> Java.Nio.ByteBuffer!
virtual Bumptech.Glide.Load.Resource.Bytes.BytesResource.Get() -> byte[]!
virtual Bumptech.Glide.Load.Resource.Bytes.BytesResource.Recycle() -> void
virtual Bumptech.Glide.Load.Resource.Bytes.BytesResource.ResourceClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Resource.Bytes.BytesResource.Size.get -> int
virtual Bumptech.Glide.Load.Resource.Drawable.DrawableResource.Initialize() -> void
virtual Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.Decode(Android.Net.Uri! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder.Handles(Android.Net.Uri! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.Decode(Android.Graphics.Drawables.Drawable! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder.Handles(Android.Graphics.Drawables.Drawable! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.File.FileDecoder.Decode(Java.IO.File! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.File.FileDecoder.Handles(Java.IO.File! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.Decode(Java.Nio.ByteBuffer! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Resource.Gif.GifDrawableResource?
virtual Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder.Handles(Java.Nio.ByteBuffer! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.Buffer.get -> Java.Nio.ByteBuffer?
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.ClearAnimationCallbacks() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.FirstFrame.get -> Android.Graphics.Bitmap?
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.FrameCount.get -> int
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.FrameIndex.get -> int
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.FrameTransformation.get -> Bumptech.Glide.Load.ITransformation?
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.IsRunning.get -> bool
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.OnFrameReady() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.Recycle() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.RegisterAnimationCallback(AndroidX.VectorDrawable.Graphics.Drawable.Animatable2CompatAnimationCallback! animationCallback) -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.SetFrameTransformation(Bumptech.Glide.Load.ITransformation? frameTransformation, Android.Graphics.Bitmap? firstFrame) -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.SetLoopCount(int loopCount) -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.Size.get -> int
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.Start() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.StartFromFirstFrame() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.Stop() -> void
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawable.UnregisterAnimationCallback(AndroidX.VectorDrawable.Graphics.Drawable.Animatable2CompatAnimationCallback! animationCallback) -> bool
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.Encode(Bumptech.Glide.Load.Engine.IResource! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.Encode(Java.Lang.Object! data, Java.IO.File! file, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder.GetEncodeStrategy(Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.EncodeStrategy!
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.Transform(Android.Content.Context! context, Bumptech.Glide.Load.Engine.IResource! resource, int outWidth, int outHeight) -> Bumptech.Glide.Load.Engine.IResource!
virtual Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.Decode(System.IO.Stream! source, int width, int height, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder.Handles(System.IO.Stream! source, Bumptech.Glide.Load.Options! options) -> bool
virtual Bumptech.Glide.Load.Resource.SimpleResource.Recycle() -> void
virtual Bumptech.Glide.Load.Resource.SimpleResource.ResourceClass.get -> Java.Lang.Class!
virtual Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! toTranscode, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! toTranscode, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! toTranscode, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.Get(Java.Lang.Class! resourceClass, Java.Lang.Class! transcodedClass) -> Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder!
virtual Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.GetTranscodeClasses(Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass) -> System.Collections.Generic.IList<Java.Lang.Class!>!
virtual Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry.Register(Java.Lang.Class! decodedClass, Java.Lang.Class! transcodedClass, Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder! transcoder) -> void
virtual Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder.Transcode(Bumptech.Glide.Load.Engine.IResource! toTranscode, Bumptech.Glide.Load.Options! options) -> Bumptech.Glide.Load.Engine.IResource?
virtual Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory.Build(Android.Content.Context! context, Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListener! listener) -> Bumptech.Glide.Manager.IConnectivityMonitor!
virtual Bumptech.Glide.Manager.RequestManagerFragment.RequestManager.get -> Bumptech.Glide.RequestManager?
virtual Bumptech.Glide.Manager.RequestManagerFragment.RequestManager.set -> void
virtual Bumptech.Glide.Manager.RequestManagerFragment.RequestManagerTreeNode.get -> Bumptech.Glide.Manager.IRequestManagerTreeNode!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(Android.App.Activity! activity) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(Android.App.Fragment! fragment) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(Android.Content.Context! context) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(Android.Views.View! view) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(AndroidX.Fragment.App.Fragment! fragment) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.Get(AndroidX.Fragment.App.FragmentActivity! activity) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.Manager.RequestManagerRetriever.HandleMessage(Android.OS.Message? message) -> bool
virtual Bumptech.Glide.Manager.RequestTracker.ClearAndRemove(Bumptech.Glide.Request.IRequest? request) -> bool
virtual Bumptech.Glide.Manager.RequestTracker.ClearRequests() -> void
virtual Bumptech.Glide.Manager.RequestTracker.IsPaused.get -> bool
virtual Bumptech.Glide.Manager.RequestTracker.PauseAllRequests() -> void
virtual Bumptech.Glide.Manager.RequestTracker.PauseRequests() -> void
virtual Bumptech.Glide.Manager.RequestTracker.RestartRequests() -> void
virtual Bumptech.Glide.Manager.RequestTracker.ResumeRequests() -> void
virtual Bumptech.Glide.Manager.RequestTracker.RunRequest(Bumptech.Glide.Request.IRequest! request) -> void
virtual Bumptech.Glide.Manager.SupportRequestManagerFragment.RequestManager.get -> Bumptech.Glide.RequestManager?
virtual Bumptech.Glide.Manager.SupportRequestManagerFragment.RequestManager.set -> void
virtual Bumptech.Glide.Manager.SupportRequestManagerFragment.RequestManagerTreeNode.get -> Bumptech.Glide.Manager.IRequestManagerTreeNode!
virtual Bumptech.Glide.Module.AppGlideModule.ApplyOptions(Android.Content.Context! context, Bumptech.Glide.GlideBuilder! builder) -> void
virtual Bumptech.Glide.Module.AppGlideModule.IsManifestParsingEnabled.get -> bool
virtual Bumptech.Glide.Module.LibraryGlideModule.RegisterComponents(Android.Content.Context! context, Bumptech.Glide.Glide! glide, Bumptech.Glide.Registry! registry) -> void
virtual Bumptech.Glide.Provider.EncoderRegistry.Append(Java.Lang.Class! dataClass, Bumptech.Glide.Load.IEncoder! encoder) -> void
virtual Bumptech.Glide.Provider.EncoderRegistry.GetEncoder(Java.Lang.Class! dataClass) -> Bumptech.Glide.Load.IEncoder?
virtual Bumptech.Glide.Provider.EncoderRegistry.Prepend(Java.Lang.Class! dataClass, Bumptech.Glide.Load.IEncoder! encoder) -> void
virtual Bumptech.Glide.Provider.LoadPathCache.Get(Java.Lang.Class? dataClass, Java.Lang.Class? resourceClass, Java.Lang.Class? transcodeClass) -> Bumptech.Glide.Load.Engine.LoadPath?
virtual Bumptech.Glide.Provider.LoadPathCache.IsEmptyLoadPath(Bumptech.Glide.Load.Engine.LoadPath? path) -> bool
virtual Bumptech.Glide.Provider.LoadPathCache.Put(Java.Lang.Class? dataClass, Java.Lang.Class? resourceClass, Java.Lang.Class? transcodeClass, Bumptech.Glide.Load.Engine.LoadPath? loadPath) -> void
virtual Bumptech.Glide.Provider.ModelToResourceClassCache.Clear() -> void
virtual Bumptech.Glide.Provider.ModelToResourceClassCache.Get(Java.Lang.Class! modelClass, Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass) -> System.Collections.Generic.IList<Java.Lang.Class!>?
virtual Bumptech.Glide.Provider.ModelToResourceClassCache.Put(Java.Lang.Class! modelClass, Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass, System.Collections.Generic.IList<Java.Lang.Class!>! resourceClasses) -> void
virtual Bumptech.Glide.Provider.ResourceDecoderRegistry.Append(string! bucket, Bumptech.Glide.Load.IResourceDecoder! decoder, Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass) -> void
virtual Bumptech.Glide.Provider.ResourceDecoderRegistry.GetDecoders(Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass) -> System.Collections.IList!
virtual Bumptech.Glide.Provider.ResourceDecoderRegistry.GetResourceClasses(Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass) -> System.Collections.Generic.IList<Java.Lang.Class!>!
virtual Bumptech.Glide.Provider.ResourceDecoderRegistry.Prepend(string! bucket, Bumptech.Glide.Load.IResourceDecoder! decoder, Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass) -> void
virtual Bumptech.Glide.Provider.ResourceDecoderRegistry.SetBucketPriorityList(System.Collections.Generic.IList<string!>! buckets) -> void
virtual Bumptech.Glide.Provider.ResourceEncoderRegistry.Append(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceEncoder! encoder) -> void
virtual Bumptech.Glide.Provider.ResourceEncoderRegistry.Get(Java.Lang.Class! resourceClass) -> Bumptech.Glide.Load.IResourceEncoder?
virtual Bumptech.Glide.Provider.ResourceEncoderRegistry.Prepend(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceEncoder! encoder) -> void
virtual Bumptech.Glide.Registry.Append(Java.Lang.Class! dataClass, Bumptech.Glide.Load.IEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Append(Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceDecoder! decoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Append(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Append(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Append(string! bucket, Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceDecoder! decoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.GetLoadPath(Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass) -> Bumptech.Glide.Load.Engine.LoadPath?
virtual Bumptech.Glide.Registry.GetModelLoaders(Java.Lang.Object! model) -> System.Collections.IList!
virtual Bumptech.Glide.Registry.GetRegisteredResourceClasses(Java.Lang.Class! modelClass, Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass) -> System.Collections.Generic.IList<Java.Lang.Class!>!
virtual Bumptech.Glide.Registry.GetResultEncoder(Bumptech.Glide.Load.Engine.IResource! resource) -> Bumptech.Glide.Load.IResourceEncoder!
virtual Bumptech.Glide.Registry.GetRewinder(Java.Lang.Object! data) -> Bumptech.Glide.Load.Data.IDataRewinder!
virtual Bumptech.Glide.Registry.GetSourceEncoder(Java.Lang.Object! data) -> Bumptech.Glide.Load.IEncoder!
virtual Bumptech.Glide.Registry.ImageHeaderParsers.get -> System.Collections.Generic.IList<Bumptech.Glide.Load.IImageHeaderParser!>!
virtual Bumptech.Glide.Registry.IsResourceEncoderAvailable(Bumptech.Glide.Load.Engine.IResource! resource) -> bool
virtual Bumptech.Glide.Registry.Prepend(Java.Lang.Class! dataClass, Bumptech.Glide.Load.IEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Prepend(Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceDecoder! decoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Prepend(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Prepend(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Prepend(string! bucket, Java.Lang.Class! dataClass, Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceDecoder! decoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Register(Bumptech.Glide.Load.Data.IDataRewinderFactory! factory) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Register(Bumptech.Glide.Load.IImageHeaderParser! parser) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Register(Java.Lang.Class! dataClass, Bumptech.Glide.Load.IEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Register(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.IResourceEncoder! encoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Register(Java.Lang.Class! resourceClass, Java.Lang.Class! transcodeClass, Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder! transcoder) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Registry.Replace(Java.Lang.Class! modelClass, Java.Lang.Class! dataClass, Bumptech.Glide.Load.Model.IModelLoaderFactory! factory) -> Bumptech.Glide.Registry!
virtual Bumptech.Glide.Request.BaseRequestOptions.Apply_T(Bumptech.Glide.Request.BaseRequestOptions! o) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.AutoClone_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.CenterCrop_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.CenterInside_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.CircleCrop_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Clone_T() -> Java.Lang.Object?
virtual Bumptech.Glide.Request.BaseRequestOptions.Decode_T(Java.Lang.Class! resourceClass) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.DisallowHardwareConfig_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.DiskCacheStrategy_T(Bumptech.Glide.Load.Engine.DiskCacheStrategy! strategy) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.DontAnimate_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.DontTransform_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Downsample_T(Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy! strategy) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.EncodeFormat_T(Android.Graphics.Bitmap.CompressFormat! format) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.EncodeQuality_T(int quality) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Error_T(Android.Graphics.Drawables.Drawable? drawable) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Error_T(int resourceId) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Fallback_T(Android.Graphics.Drawables.Drawable? drawable) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Fallback_T(int resourceId) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.FitCenter_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Format_T(Bumptech.Glide.Load.DecodeFormat! format) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Frame_T(long frameTimeMicros) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Lock_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OnlyRetrieveFromCache_T(bool flag) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalCenterCrop_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalCenterInside_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalCircleCrop_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalFitCenter_T() -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalTransform_T(Bumptech.Glide.Load.ITransformation! transformation) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.OptionalTransform_T(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Override_T(int size) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Override_T(int width, int height) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Placeholder_T(Android.Graphics.Drawables.Drawable? drawable) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Placeholder_T(int resourceId) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Priority_T(Bumptech.Glide.Priority! priority) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Set_T(Bumptech.Glide.Load.Option! option, Java.Lang.Object! value) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Signature_T(Bumptech.Glide.Load.IKey! signature) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.SizeMultiplier_T(float sizeMultiplier) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.SkipMemoryCache_T(bool skip) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Theme_T(Android.Content.Res.Resources.Theme? theme) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Timeout_T(int timeoutMs) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Transform_T(Bumptech.Glide.Load.ITransformation! transformation) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Transform_T(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Transform_T(params Bumptech.Glide.Load.ITransformation![]! transformations) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.Transforms(params Bumptech.Glide.Load.ITransformation![]! transformations) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.UseAnimationPool_T(bool flag) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.BaseRequestOptions.UseUnlimitedSourceGeneratorsPool_T(bool flag) -> Java.Lang.Object!
virtual Bumptech.Glide.Request.RequestFutureTarget.Cancel(bool mayInterruptIfRunning) -> bool
virtual Bumptech.Glide.Request.RequestFutureTarget.Get() -> Java.Lang.Object?
virtual Bumptech.Glide.Request.RequestFutureTarget.Get(long time, Java.Util.Concurrent.TimeUnit! timeUnit) -> Java.Lang.Object?
virtual Bumptech.Glide.Request.RequestFutureTarget.GetSize(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.IsCancelled.get -> bool
virtual Bumptech.Glide.Request.RequestFutureTarget.IsDone.get -> bool
virtual Bumptech.Glide.Request.RequestFutureTarget.OnDestroy() -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnLoadFailed(Android.Graphics.Drawables.Drawable? errorDrawable) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnLoadFailed(Bumptech.Glide.Load.Engine.GlideException? e, Java.Lang.Object? model, Bumptech.Glide.Request.Target.ITarget? target, bool isFirstResource) -> bool
virtual Bumptech.Glide.Request.RequestFutureTarget.OnLoadStarted(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnResourceReady(Java.Lang.Object! resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnResourceReady(Java.Lang.Object? resource, Java.Lang.Object? model, Bumptech.Glide.Request.Target.ITarget? target, Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> bool
virtual Bumptech.Glide.Request.RequestFutureTarget.OnStart() -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.OnStop() -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.RemoveCallback(Bumptech.Glide.Request.Target.ISizeReadyCallback! cb) -> void
virtual Bumptech.Glide.Request.RequestFutureTarget.Request.get -> Bumptech.Glide.Request.IRequest?
virtual Bumptech.Glide.Request.RequestFutureTarget.Request.set -> void
virtual Bumptech.Glide.Request.RequestOptions.Apply(Bumptech.Glide.Request.BaseRequestOptions! o) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.AutoClone() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.CenterCrop() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.CenterInside() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.CircleCrop() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Clone() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Decode(Java.Lang.Class! resourceClass) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.DisallowHardwareConfig() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.DontAnimate() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.DontTransform() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Downsample(Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy! strategy) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.EncodeFormat(Android.Graphics.Bitmap.CompressFormat! format) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.EncodeQuality(int quality) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Error(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.Request.RequestOptions.Error(int resourceId) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Fallback(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Fallback(int resourceId) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.FitCenter() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Format(Bumptech.Glide.Load.DecodeFormat! format) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Frame(long frameTimeMicros) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Lock() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalCenterCrop() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalCenterInside() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalCircleCrop() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalFitCenter() -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalTransform(Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.OptionalTransform(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Override(int size) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Override(int width, int height) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Placeholder(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Placeholder(int resourceId) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Set(Bumptech.Glide.Load.Option! option, Java.Lang.Object! value) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetDiskCacheStrategy(Bumptech.Glide.Load.Engine.DiskCacheStrategy! strategy) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetOnlyRetrieveFromCache(bool flag) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetPriority(Bumptech.Glide.Priority! priority) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetSignature(Bumptech.Glide.Load.IKey! signature) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetSizeMultiplier(float sizeMultiplier) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetTheme(Android.Content.Res.Resources.Theme! theme) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetUseAnimationPool(bool flag) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SetUseUnlimitedSourceGeneratorsPool(bool flag) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.SkipMemoryCache(bool skip) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Timeout(int timeoutMs) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Transform(Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Transform(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.RequestOptions.Transform(params Bumptech.Glide.Load.ITransformation![]! transformations) -> Bumptech.Glide.Request.RequestOptions!
virtual Bumptech.Glide.Request.Target.AppWidgetTarget.OnResourceReady(Android.Graphics.Bitmap! resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnDestroy() -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnLoadCleared(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnLoadFailed(Android.Graphics.Drawables.Drawable? errorDrawable) -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnLoadStarted(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnStart() -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.OnStop() -> void
virtual Bumptech.Glide.Request.Target.BaseTarget.Request.get -> Bumptech.Glide.Request.IRequest?
virtual Bumptech.Glide.Request.Target.BaseTarget.Request.set -> void
virtual Bumptech.Glide.Request.Target.BitmapImageViewTarget.SetResource(Android.Graphics.Bitmap? resource) -> void
virtual Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget.GetDrawable(Android.Graphics.Bitmap? resource) -> Android.Graphics.Drawables.Drawable?
virtual Bumptech.Glide.Request.Target.CustomTarget.OnDestroy() -> void
virtual Bumptech.Glide.Request.Target.CustomTarget.OnLoadFailed(Android.Graphics.Drawables.Drawable? errorDrawable) -> void
virtual Bumptech.Glide.Request.Target.CustomTarget.OnLoadStarted(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.Target.CustomTarget.OnStart() -> void
virtual Bumptech.Glide.Request.Target.CustomTarget.OnStop() -> void
virtual Bumptech.Glide.Request.Target.CustomViewTarget.OnDestroy() -> void
virtual Bumptech.Glide.Request.Target.CustomViewTarget.OnResourceLoading(Android.Graphics.Drawables.Drawable? placeholder) -> void
virtual Bumptech.Glide.Request.Target.CustomViewTarget.OnStart() -> void
virtual Bumptech.Glide.Request.Target.CustomViewTarget.OnStop() -> void
virtual Bumptech.Glide.Request.Target.DrawableImageViewTarget.SetResource(Android.Graphics.Drawables.Drawable? resource) -> void
virtual Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget.GetDrawable(Android.Graphics.Drawables.Drawable? resource) -> Android.Graphics.Drawables.Drawable?
virtual Bumptech.Glide.Request.Target.ImageViewTarget.CurrentDrawable.get -> Android.Graphics.Drawables.Drawable?
virtual Bumptech.Glide.Request.Target.ImageViewTarget.SetDrawable(Android.Graphics.Drawables.Drawable? drawable) -> void
virtual Bumptech.Glide.Request.Target.ImageViewTargetFactory.BuildTarget(Android.Widget.ImageView! view, Java.Lang.Class! clazz) -> Bumptech.Glide.Request.Target.ViewTarget!
virtual Bumptech.Glide.Request.Target.NotificationTarget.OnResourceReady(Android.Graphics.Bitmap! resource, Bumptech.Glide.Request.Transition.ITransition? transition) -> void
virtual Bumptech.Glide.Request.Target.ViewTarget.View.get -> Android.Views.View!
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.Begin() -> void
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.CanNotifyCleared(Bumptech.Glide.Request.IRequest? request) -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.CanNotifyStatusChanged(Bumptech.Glide.Request.IRequest? request) -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.CanSetImage(Bumptech.Glide.Request.IRequest? request) -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.Clear() -> void
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.IsAnyResourceSet.get -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.IsCleared.get -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.IsComplete.get -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.IsEquivalentTo(Bumptech.Glide.Request.IRequest? o) -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.IsRunning.get -> bool
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.OnRequestFailed(Bumptech.Glide.Request.IRequest? request) -> void
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.OnRequestSuccess(Bumptech.Glide.Request.IRequest? request) -> void
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.Pause() -> void
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.Root.get -> Bumptech.Glide.Request.IRequestCoordinator?
virtual Bumptech.Glide.Request.ThumbnailRequestCoordinator.SetRequests(Bumptech.Glide.Request.IRequest? full, Bumptech.Glide.Request.IRequest? thumb) -> void
virtual Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory.Build(Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> Bumptech.Glide.Request.Transition.ITransition?
virtual Bumptech.Glide.Request.Transition.BitmapTransitionFactory.GetBitmap(Android.Graphics.Bitmap! current) -> Android.Graphics.Bitmap!
virtual Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Build(Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> Bumptech.Glide.Request.Transition.ITransition?
virtual Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.Build() -> Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory?
virtual Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder.SetCrossFadeEnabled(bool isCrossFadeEnabled) -> Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory.Builder?
virtual Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition.Transition(Android.Graphics.Drawables.Drawable? current, Bumptech.Glide.Request.Transition.ITransitionViewAdapter? adapter) -> bool
virtual Bumptech.Glide.Request.Transition.NoTransition.NoAnimationFactory.Build(Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> Bumptech.Glide.Request.Transition.ITransition?
virtual Bumptech.Glide.Request.Transition.NoTransition.Transition(Java.Lang.Object? current, Bumptech.Glide.Request.Transition.ITransitionViewAdapter? adapter) -> bool
virtual Bumptech.Glide.Request.Transition.ViewAnimationFactory.Build(Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> Bumptech.Glide.Request.Transition.ITransition?
virtual Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory.Build(Bumptech.Glide.Load.DataSource? dataSource, bool isFirstResource) -> Bumptech.Glide.Request.Transition.ITransition?
virtual Bumptech.Glide.Request.Transition.ViewPropertyTransition.Transition(Java.Lang.Object? current, Bumptech.Glide.Request.Transition.ITransitionViewAdapter? adapter) -> bool
virtual Bumptech.Glide.Request.Transition.ViewTransition.Transition(Java.Lang.Object? current, Bumptech.Glide.Request.Transition.ITransitionViewAdapter? adapter) -> bool
virtual Bumptech.Glide.RequestBuilder.AddListener(Bumptech.Glide.Request.IRequestListener? requestListener) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Apply(Bumptech.Glide.Request.BaseRequestOptions! o) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.AutoClone() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.CenterCrop() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.CenterInside() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.CircleCrop() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Clone() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Decode(Java.Lang.Class! resourceClass) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.DisallowHardwareConfig() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.DontAnimate() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.DontTransform() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.DownloadOnly(Java.Lang.Object! target) -> Java.Lang.Object?
virtual Bumptech.Glide.RequestBuilder.DownloadOnly(int width, int height) -> Bumptech.Glide.Request.IFutureTarget?
virtual Bumptech.Glide.RequestBuilder.DownloadOnlyRequest.get -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Downsample(Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy! strategy) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.EncodeFormat(Android.Graphics.Bitmap.CompressFormat! format) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.EncodeQuality(int quality) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Error(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Error(Bumptech.Glide.RequestBuilder? errorBuilder) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Error(Java.Lang.Object? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Error(int resourceId) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.ExperimentalIntoFront(Android.Widget.ImageView! view) -> Bumptech.Glide.Request.Target.ViewTarget!
virtual Bumptech.Glide.RequestBuilder.ExperimentalIntoFront(Java.Lang.Object! target) -> Java.Lang.Object!
virtual Bumptech.Glide.RequestBuilder.ExperimentalPreloadFront(int width, int height) -> Bumptech.Glide.Request.Target.ITarget!
virtual Bumptech.Glide.RequestBuilder.Fallback(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Fallback(int resourceId) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.FitCenter() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Format(Bumptech.Glide.Load.DecodeFormat! format) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Frame(long frameTimeMicros) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Into(Android.Widget.ImageView! view) -> Bumptech.Glide.Request.Target.ViewTarget!
virtual Bumptech.Glide.RequestBuilder.Into(Java.Lang.Object! target) -> Java.Lang.Object!
virtual Bumptech.Glide.RequestBuilder.Into(Java.Lang.Object! target, Bumptech.Glide.Request.IRequestListener? targetListener, Java.Util.Concurrent.IExecutor? callbackExecutor) -> Java.Lang.Object!
virtual Bumptech.Glide.RequestBuilder.Into(int width, int height) -> Bumptech.Glide.Request.IFutureTarget?
virtual Bumptech.Glide.RequestBuilder.Listener(Bumptech.Glide.Request.IRequestListener? requestListener) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Android.Graphics.Bitmap? bitmap) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Android.Graphics.Drawables.Drawable? drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Android.Net.Uri? uri) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Java.IO.File? file) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Java.Lang.Integer? resourceId) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Java.Lang.Object? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(Java.Net.URL? url) -> Bumptech.Glide.RequestBuilder?
virtual Bumptech.Glide.RequestBuilder.Load(byte[]? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Load(string? string) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Lock() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalCenterCrop() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalCenterInside() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalCircleCrop() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalFitCenter() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalTransform(Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.OptionalTransform(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Override(int size) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Override(int width, int height) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Placeholder(Android.Graphics.Drawables.Drawable! drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Placeholder(int resourceId) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Preload() -> Bumptech.Glide.Request.Target.ITarget!
virtual Bumptech.Glide.RequestBuilder.Preload(int width, int height) -> Bumptech.Glide.Request.Target.ITarget!
virtual Bumptech.Glide.RequestBuilder.Set(Bumptech.Glide.Load.Option! option, Java.Lang.Object! value) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetDiskCacheStrategy(Bumptech.Glide.Load.Engine.DiskCacheStrategy! strategy) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetOnlyRetrieveFromCache(bool flag) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetPriority(Bumptech.Glide.Priority! priority) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetSignature(Bumptech.Glide.Load.IKey! signature) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetSizeMultiplier(float sizeMultiplier) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetTheme(Android.Content.Res.Resources.Theme! theme) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetUseAnimationPool(bool flag) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SetUseUnlimitedSourceGeneratorsPool(bool flag) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.SkipMemoryCache(bool skip) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Submit() -> Bumptech.Glide.Request.IFutureTarget!
virtual Bumptech.Glide.RequestBuilder.Submit(int width, int height) -> Bumptech.Glide.Request.IFutureTarget!
virtual Bumptech.Glide.RequestBuilder.Thumbnail(Bumptech.Glide.RequestBuilder? thumbnailRequest) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Thumbnail(System.Collections.IList? thumbnails) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Thumbnail(float sizeMultiplier) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Thumbnail(params Bumptech.Glide.RequestBuilder![]? thumbnails) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Timeout(int timeoutMs) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Transform(Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Transform(Java.Lang.Class! resourceClass, Bumptech.Glide.Load.ITransformation! transformation) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Transform(params Bumptech.Glide.Load.ITransformation![]! transformations) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestBuilder.Transition(Bumptech.Glide.TransitionOptions! transitionOptions) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.AddDefaultRequestListener(Bumptech.Glide.Request.IRequestListener? requestListener) -> Bumptech.Glide.RequestManager?
virtual Bumptech.Glide.RequestManager.ApplyDefaultRequestOptions(Bumptech.Glide.Request.RequestOptions! requestOptions) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.RequestManager.As(Java.Lang.Class! resourceClass) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.AsBitmap() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.AsDrawable() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.AsFile() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.AsGif() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Clear(Android.Views.View! view) -> void
virtual Bumptech.Glide.RequestManager.Clear(Bumptech.Glide.Request.Target.ITarget? target) -> void
virtual Bumptech.Glide.RequestManager.ClearOnStop() -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.RequestManager.Download(Java.Lang.Object? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.DownloadOnly() -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.IsPaused.get -> bool
virtual Bumptech.Glide.RequestManager.Load(Android.Graphics.Bitmap? bitmap) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Android.Graphics.Drawables.Drawable? drawable) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Android.Net.Uri? uri) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Java.IO.File? file) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Java.Lang.Integer? resourceId) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Java.Lang.Object? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(Java.Net.URL? url) -> Bumptech.Glide.RequestBuilder?
virtual Bumptech.Glide.RequestManager.Load(byte[]? model) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.Load(string? string) -> Bumptech.Glide.RequestBuilder!
virtual Bumptech.Glide.RequestManager.OnConfigurationChanged(Android.Content.Res.Configuration? newConfig) -> void
virtual Bumptech.Glide.RequestManager.OnDestroy() -> void
virtual Bumptech.Glide.RequestManager.OnLowMemory() -> void
virtual Bumptech.Glide.RequestManager.OnStart() -> void
virtual Bumptech.Glide.RequestManager.OnStop() -> void
virtual Bumptech.Glide.RequestManager.OnTrimMemory(Android.Content.TrimMemory level) -> void
virtual Bumptech.Glide.RequestManager.PauseAllRequests() -> void
virtual Bumptech.Glide.RequestManager.PauseAllRequestsRecursive() -> void
virtual Bumptech.Glide.RequestManager.PauseRequests() -> void
virtual Bumptech.Glide.RequestManager.PauseRequestsRecursive() -> void
virtual Bumptech.Glide.RequestManager.ResumeRequests() -> void
virtual Bumptech.Glide.RequestManager.ResumeRequestsRecursive() -> void
virtual Bumptech.Glide.RequestManager.SetDefaultRequestOptions(Bumptech.Glide.Request.RequestOptions! requestOptions) -> Bumptech.Glide.RequestManager!
virtual Bumptech.Glide.RequestManager.SetPauseAllRequestsOnTrimMemoryModerate(bool pauseAllOnTrim) -> void
virtual Bumptech.Glide.RequestManager.SetRequestOptions(Bumptech.Glide.Request.RequestOptions! toSet) -> void
virtual Bumptech.Glide.Signature.MediaStoreSignature.UpdateDiskCacheKey(Java.Security.MessageDigest! messageDigest) -> void
virtual Bumptech.Glide.Util.ExceptionCatchingInputStream.Exception.get -> Java.IO.IOException?
virtual Bumptech.Glide.Util.ExceptionCatchingInputStream.Release() -> void
virtual Bumptech.Glide.Util.FixedPreloadSizeProvider.GetPreloadSize(Java.Lang.Object! item, int adapterPosition, int itemPosition) -> int[]?
virtual Bumptech.Glide.Util.LruCache.ClearMemory() -> void
virtual Bumptech.Glide.Util.LruCache.Contains(Java.Lang.Object! key) -> bool
virtual Bumptech.Glide.Util.LruCache.Count.get -> int
virtual Bumptech.Glide.Util.LruCache.CurrentSize.get -> long
virtual Bumptech.Glide.Util.LruCache.Get(Java.Lang.Object! key) -> Java.Lang.Object?
virtual Bumptech.Glide.Util.LruCache.GetSize(Java.Lang.Object? item) -> int
virtual Bumptech.Glide.Util.LruCache.MaxSize.get -> long
virtual Bumptech.Glide.Util.LruCache.OnItemEvicted(Java.Lang.Object! key, Java.Lang.Object? item) -> void
virtual Bumptech.Glide.Util.LruCache.Put(Java.Lang.Object! key, Java.Lang.Object? item) -> Java.Lang.Object?
virtual Bumptech.Glide.Util.LruCache.Remove(Java.Lang.Object! key) -> Java.Lang.Object?
virtual Bumptech.Glide.Util.LruCache.SetSizeMultiplier(float multiplier) -> void
virtual Bumptech.Glide.Util.LruCache.TrimToSize(long size) -> void
virtual Bumptech.Glide.Util.MultiClassKey.Set(Java.Lang.Class! first, Java.Lang.Class! second) -> void
virtual Bumptech.Glide.Util.MultiClassKey.Set(Java.Lang.Class! first, Java.Lang.Class! second, Java.Lang.Class? third) -> void
virtual Bumptech.Glide.Util.ViewPreloadSizeProvider.GetPreloadSize(Java.Lang.Object! item, int adapterPosition, int itemPosition) -> int[]?
virtual Bumptech.Glide.Util.ViewPreloadSizeProvider.OnSizeReady(int width, int height) -> void
virtual Bumptech.Glide.Util.ViewPreloadSizeProvider.SetView(Android.Views.View! view) -> void
