#nullable enable
AndroidX.Navigation.ActionOnlyNavDirections
AndroidX.Navigation.ActionOnlyNavDirections.ActionId.get -> int
AndroidX.Navigation.ActionOnlyNavDirections.ActionOnlyNavDirections(int actionId) -> void
AndroidX.Navigation.ActionOnlyNavDirections.Arguments.get -> Android.OS.Bundle!
AndroidX.Navigation.ActionOnlyNavDirections.Component1() -> int
AndroidX.Navigation.ActionOnlyNavDirections.Copy(int actionId) -> AndroidX.Navigation.ActionOnlyNavDirections!
AndroidX.Navigation.AnimBuilder
AndroidX.Navigation.AnimBuilder.AnimBuilder() -> void
AndroidX.Navigation.AnimBuilder.Enter.get -> int
AndroidX.Navigation.AnimBuilder.Enter.set -> void
AndroidX.Navigation.AnimBuilder.Exit.get -> int
AndroidX.Navigation.AnimBuilder.Exit.set -> void
AndroidX.Navigation.AnimBuilder.PopEnter.get -> int
AndroidX.Navigation.AnimBuilder.PopEnter.set -> void
AndroidX.Navigation.AnimBuilder.PopExit.get -> int
AndroidX.Navigation.AnimBuilder.PopExit.set -> void
AndroidX.Navigation.CollectionNavType
AndroidX.Navigation.CollectionNavType.CollectionNavType(bool isNullableAllowed) -> void
AndroidX.Navigation.CollectionNavType.CollectionNavType(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.IFloatingWindow
AndroidX.Navigation.INavArgs
AndroidX.Navigation.INavDeepLinkDsl
AndroidX.Navigation.INavDestinationDsl
AndroidX.Navigation.INavDirections
AndroidX.Navigation.INavDirections.ActionId.get -> int
AndroidX.Navigation.INavDirections.Arguments.get -> Android.OS.Bundle!
AndroidX.Navigation.INavOptionsDsl
AndroidX.Navigation.INavViewModelStoreProvider
AndroidX.Navigation.INavViewModelStoreProvider.GetViewModelStore(string! backStackEntryId) -> AndroidX.Lifecycle.ViewModelStore!
AndroidX.Navigation.ISupportingPane
AndroidX.Navigation.Internal.NavContext
AndroidX.Navigation.Internal.NavContext.Application.get -> Java.Lang.Object?
AndroidX.Navigation.Internal.NavContext.Context.get -> Android.Content.Context?
AndroidX.Navigation.Internal.NavContext.GetResourceName(int id) -> string!
AndroidX.Navigation.Internal.NavContext.NavContext(Android.Content.Context? context) -> void
AndroidX.Navigation.Internal.SynchronizedObjectKt
AndroidX.Navigation.Internal.SynchronizedObject_jvmCommonKt
AndroidX.Navigation.NamedNavArgument
AndroidX.Navigation.NamedNavArgument.Argument.get -> AndroidX.Navigation.NavArgument!
AndroidX.Navigation.NamedNavArgument.Component1() -> string!
AndroidX.Navigation.NamedNavArgument.Component2() -> AndroidX.Navigation.NavArgument!
AndroidX.Navigation.NamedNavArgument.Name.get -> string!
AndroidX.Navigation.NamedNavArgumentKt
AndroidX.Navigation.NavAction
AndroidX.Navigation.NavAction.DefaultArguments.get -> Android.OS.Bundle?
AndroidX.Navigation.NavAction.DefaultArguments.set -> void
AndroidX.Navigation.NavAction.DestinationId.get -> int
AndroidX.Navigation.NavAction.NavAction(int destinationId) -> void
AndroidX.Navigation.NavAction.NavAction(int destinationId, AndroidX.Navigation.NavOptions? navOptions) -> void
AndroidX.Navigation.NavAction.NavAction(int destinationId, AndroidX.Navigation.NavOptions? navOptions, Android.OS.Bundle? defaultArguments) -> void
AndroidX.Navigation.NavAction.NavOptions.get -> AndroidX.Navigation.NavOptions?
AndroidX.Navigation.NavAction.NavOptions.set -> void
AndroidX.Navigation.NavActionBuilder
AndroidX.Navigation.NavActionBuilder.DefaultArguments.get -> System.Collections.Generic.IDictionary<string!, Java.Lang.Object!>!
AndroidX.Navigation.NavActionBuilder.DestinationId.get -> int
AndroidX.Navigation.NavActionBuilder.DestinationId.set -> void
AndroidX.Navigation.NavActionBuilder.NavActionBuilder() -> void
AndroidX.Navigation.NavActionBuilder.NavOptions(Kotlin.Jvm.Functions.IFunction1! optionsBuilder) -> void
AndroidX.Navigation.NavArgsLazy
AndroidX.Navigation.NavArgsLazy.IsInitialized.get -> bool
AndroidX.Navigation.NavArgsLazy.NavArgsLazy(Kotlin.Reflect.IKClass! navArgsClass, Kotlin.Jvm.Functions.IFunction0! argumentProducer) -> void
AndroidX.Navigation.NavArgsLazy.Value.get -> Java.Lang.Object!
AndroidX.Navigation.NavArgsLazy_androidKt
AndroidX.Navigation.NavArgument
AndroidX.Navigation.NavArgument.Builder
AndroidX.Navigation.NavArgument.Builder.Build() -> AndroidX.Navigation.NavArgument!
AndroidX.Navigation.NavArgument.Builder.Builder() -> void
AndroidX.Navigation.NavArgument.Builder.SetDefaultValue(Java.Lang.Object? defaultValue) -> AndroidX.Navigation.NavArgument.Builder!
AndroidX.Navigation.NavArgument.Builder.SetIsNullable(bool isNullable) -> AndroidX.Navigation.NavArgument.Builder!
AndroidX.Navigation.NavArgument.Builder.SetType(AndroidX.Navigation.NavType! type) -> AndroidX.Navigation.NavArgument.Builder!
AndroidX.Navigation.NavArgument.DefaultValue.get -> Java.Lang.Object?
AndroidX.Navigation.NavArgument.IsDefaultValuePresent.get -> bool
AndroidX.Navigation.NavArgument.IsNullable.get -> bool
AndroidX.Navigation.NavArgument.PutDefaultValue(string! name, Android.OS.Bundle! bundle) -> void
AndroidX.Navigation.NavArgument.Type.get -> AndroidX.Navigation.NavType!
AndroidX.Navigation.NavArgument.Verify(string! name, Android.OS.Bundle! bundle) -> bool
AndroidX.Navigation.NavArgumentBuilder
AndroidX.Navigation.NavArgumentBuilder.Build() -> AndroidX.Navigation.NavArgument!
AndroidX.Navigation.NavArgumentBuilder.DefaultValue.get -> Java.Lang.Object?
AndroidX.Navigation.NavArgumentBuilder.DefaultValue.set -> void
AndroidX.Navigation.NavArgumentBuilder.NavArgumentBuilder() -> void
AndroidX.Navigation.NavArgumentBuilder.Nullable.get -> bool
AndroidX.Navigation.NavArgumentBuilder.Nullable.set -> void
AndroidX.Navigation.NavArgumentBuilder.Type.get -> AndroidX.Navigation.NavType!
AndroidX.Navigation.NavArgumentBuilder.Type.set -> void
AndroidX.Navigation.NavArgumentKt
AndroidX.Navigation.NavBackStackEntry
AndroidX.Navigation.NavBackStackEntry.Arguments.get -> Android.OS.Bundle?
AndroidX.Navigation.NavBackStackEntry.Companion
AndroidX.Navigation.NavBackStackEntry.Companion.Create(AndroidX.Navigation.Internal.NavContext? context, AndroidX.Navigation.NavDestination! destination, Android.OS.Bundle? arguments, AndroidX.Lifecycle.Lifecycle.State! hostLifecycleState, AndroidX.Navigation.INavViewModelStoreProvider? viewModelStoreProvider, string! id, Android.OS.Bundle? savedState) -> AndroidX.Navigation.NavBackStackEntry!
AndroidX.Navigation.NavBackStackEntry.DefaultViewModelCreationExtras.get -> AndroidX.Lifecycle.ViewModels.CreationExtras!
AndroidX.Navigation.NavBackStackEntry.DefaultViewModelProviderFactory.get -> AndroidX.Lifecycle.ViewModelProvider.IFactory!
AndroidX.Navigation.NavBackStackEntry.Destination.get -> AndroidX.Navigation.NavDestination!
AndroidX.Navigation.NavBackStackEntry.Destination.set -> void
AndroidX.Navigation.NavBackStackEntry.HandleLifecycleEvent(AndroidX.Lifecycle.Lifecycle.Event! e) -> void
AndroidX.Navigation.NavBackStackEntry.Id.get -> string!
AndroidX.Navigation.NavBackStackEntry.Lifecycle.get -> AndroidX.Lifecycle.Lifecycle!
AndroidX.Navigation.NavBackStackEntry.MaxLifecycle.get -> AndroidX.Lifecycle.Lifecycle.State!
AndroidX.Navigation.NavBackStackEntry.MaxLifecycle.set -> void
AndroidX.Navigation.NavBackStackEntry.NavBackStackEntry(AndroidX.Navigation.NavBackStackEntry! entry, Android.OS.Bundle? arguments) -> void
AndroidX.Navigation.NavBackStackEntry.SaveState(Android.OS.Bundle! outBundle) -> void
AndroidX.Navigation.NavBackStackEntry.SavedStateHandle.get -> AndroidX.Lifecycle.SavedStateHandle!
AndroidX.Navigation.NavBackStackEntry.SavedStateRegistry.get -> AndroidX.SavedState.SavedStateRegistry!
AndroidX.Navigation.NavBackStackEntry.UpdateState() -> void
AndroidX.Navigation.NavBackStackEntry.ViewModelStore.get -> AndroidX.Lifecycle.ViewModelStore!
AndroidX.Navigation.NavBackStackEntryKt
AndroidX.Navigation.NavDeepLink
AndroidX.Navigation.NavDeepLink.Action.get -> string?
AndroidX.Navigation.NavDeepLink.Builder
AndroidX.Navigation.NavDeepLink.Builder.Build() -> AndroidX.Navigation.NavDeepLink!
AndroidX.Navigation.NavDeepLink.Builder.Builder() -> void
AndroidX.Navigation.NavDeepLink.Builder.SetAction(string! action) -> AndroidX.Navigation.NavDeepLink.Builder!
AndroidX.Navigation.NavDeepLink.Builder.SetMimeType(string! mimeType) -> AndroidX.Navigation.NavDeepLink.Builder!
AndroidX.Navigation.NavDeepLink.Builder.SetUriPattern(Kotlin.Reflect.IKClass! route, string! basePath) -> AndroidX.Navigation.NavDeepLink.Builder!
AndroidX.Navigation.NavDeepLink.Builder.SetUriPattern(Kotlin.Reflect.IKClass! route, string! basePath, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap) -> AndroidX.Navigation.NavDeepLink.Builder!
AndroidX.Navigation.NavDeepLink.Builder.SetUriPattern(string! uriPattern) -> AndroidX.Navigation.NavDeepLink.Builder!
AndroidX.Navigation.NavDeepLink.GetMatchingArguments(Android.Net.Uri! deepLink, System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavArgument!>! arguments) -> Android.OS.Bundle?
AndroidX.Navigation.NavDeepLink.GetMimeTypeMatchRating(string! mimeType) -> int
AndroidX.Navigation.NavDeepLink.IsExactDeepLink.get -> bool
AndroidX.Navigation.NavDeepLink.MimeType.get -> string?
AndroidX.Navigation.NavDeepLink.NavDeepLink(string! uri) -> void
AndroidX.Navigation.NavDeepLink.UriPattern.get -> string?
AndroidX.Navigation.NavDeepLinkDslAttribute
AndroidX.Navigation.NavDeepLinkDslAttribute.NavDeepLinkDslAttribute() -> void
AndroidX.Navigation.NavDeepLinkDslBuilder
AndroidX.Navigation.NavDeepLinkDslBuilder.Action.get -> string?
AndroidX.Navigation.NavDeepLinkDslBuilder.Action.set -> void
AndroidX.Navigation.NavDeepLinkDslBuilder.MimeType.get -> string?
AndroidX.Navigation.NavDeepLinkDslBuilder.MimeType.set -> void
AndroidX.Navigation.NavDeepLinkDslBuilder.NavDeepLinkDslBuilder() -> void
AndroidX.Navigation.NavDeepLinkDslBuilder.UriPattern.get -> string?
AndroidX.Navigation.NavDeepLinkDslBuilder.UriPattern.set -> void
AndroidX.Navigation.NavDeepLinkDslBuilderKt
AndroidX.Navigation.NavDeepLinkRequest
AndroidX.Navigation.NavDeepLinkRequest.Builder
AndroidX.Navigation.NavDeepLinkRequest.Builder.Build() -> AndroidX.Navigation.NavDeepLinkRequest!
AndroidX.Navigation.NavDeepLinkRequest.Builder.Companion
AndroidX.Navigation.NavDeepLinkRequest.Builder.Companion.FromAction(string! action) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.Builder.Companion.FromMimeType(string! mimeType) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.Builder.Companion.FromUri(Android.Net.Uri! uri) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.Builder.SetAction(string! action) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.Builder.SetMimeType(string! mimeType) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.Builder.SetUri(Android.Net.Uri! uri) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
AndroidX.Navigation.NavDeepLinkRequest.NavDeepLinkRequest(Android.Net.Uri? uri, string? action, string? mimeType) -> void
AndroidX.Navigation.NavDeepLinkRequest.NavDeepLinkRequest(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavDestination
AndroidX.Navigation.NavDestination.AddArgument(string! argumentName, AndroidX.Navigation.NavArgument! argument) -> void
AndroidX.Navigation.NavDestination.AddDeepLink(AndroidX.Navigation.NavDeepLink! navDeepLink) -> void
AndroidX.Navigation.NavDestination.AddDeepLink(string! uriPattern) -> void
AndroidX.Navigation.NavDestination.AddInDefaultArgs(Android.OS.Bundle? args) -> Android.OS.Bundle?
AndroidX.Navigation.NavDestination.Arguments.get -> System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavArgument!>!
AndroidX.Navigation.NavDestination.BuildDeepLinkIds() -> int[]!
AndroidX.Navigation.NavDestination.BuildDeepLinkIds(AndroidX.Navigation.NavDestination? previousDestination) -> int[]!
AndroidX.Navigation.NavDestination.Companion
AndroidX.Navigation.NavDestination.Companion.CreateRoute(string? route) -> string!
AndroidX.Navigation.NavDestination.Companion.GetDisplayName(AndroidX.Navigation.Internal.NavContext! context, int id) -> string!
AndroidX.Navigation.NavDestination.Companion.GetHierarchy(AndroidX.Navigation.NavDestination! _this_hierarchy) -> Kotlin.Sequences.ISequence!
AndroidX.Navigation.NavDestination.Companion.HasRoute(AndroidX.Navigation.NavDestination! _this_hasRoute, Kotlin.Reflect.IKClass! route) -> bool
AndroidX.Navigation.NavDestination.Companion.ParseClassFromNameInternal(Android.Content.Context! context, string! name, Java.Lang.Class! expectedClassType) -> Java.Lang.Class!
AndroidX.Navigation.NavDestination.DeepLinkMatch
AndroidX.Navigation.NavDestination.DeepLinkMatch.CompareTo(Java.Lang.Object! other) -> int
AndroidX.Navigation.NavDestination.DeepLinkMatch.DeepLinkMatch(AndroidX.Navigation.NavDestination! destination, Android.OS.Bundle? matchingArgs, bool isExactDeepLink, int matchingPathSegments, bool hasMatchingAction, int mimeTypeMatchLevel) -> void
AndroidX.Navigation.NavDestination.DeepLinkMatch.Destination.get -> AndroidX.Navigation.NavDestination!
AndroidX.Navigation.NavDestination.DeepLinkMatch.HasMatchingArgs(Android.OS.Bundle? arguments) -> bool
AndroidX.Navigation.NavDestination.DeepLinkMatch.MatchingArgs.get -> Android.OS.Bundle?
AndroidX.Navigation.NavDestination.FillInLabel(Android.Content.Context! context, Android.OS.Bundle? bundle) -> string?
AndroidX.Navigation.NavDestination.GetAction(int id) -> AndroidX.Navigation.NavAction?
AndroidX.Navigation.NavDestination.HasRoute(string! route, Android.OS.Bundle? arguments) -> bool
AndroidX.Navigation.NavDestination.IClassType
AndroidX.Navigation.NavDestination.IClassType.Value() -> Java.Lang.Class?
AndroidX.Navigation.NavDestination.Id.get -> int
AndroidX.Navigation.NavDestination.Id.set -> void
AndroidX.Navigation.NavDestination.Label.get -> string?
AndroidX.Navigation.NavDestination.Label.set -> void
AndroidX.Navigation.NavDestination.LabelFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Navigation.NavDestination.LabelFormatted.set -> void
AndroidX.Navigation.NavDestination.MatchRoute(string! route) -> AndroidX.Navigation.NavDestination.DeepLinkMatch?
AndroidX.Navigation.NavDestination.NavDestination(AndroidX.Navigation.Navigator! navigator) -> void
AndroidX.Navigation.NavDestination.NavDestination(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavDestination.NavDestination(string! navigatorName) -> void
AndroidX.Navigation.NavDestination.NavigatorName.get -> string!
AndroidX.Navigation.NavDestination.Parent.get -> AndroidX.Navigation.NavGraph?
AndroidX.Navigation.NavDestination.Parent.set -> void
AndroidX.Navigation.NavDestination.PutAction(int actionId, AndroidX.Navigation.NavAction! action) -> void
AndroidX.Navigation.NavDestination.PutAction(int actionId, int destId) -> void
AndroidX.Navigation.NavDestination.RemoveAction(int actionId) -> void
AndroidX.Navigation.NavDestination.RemoveArgument(string! argumentName) -> void
AndroidX.Navigation.NavDestination.Route.get -> string?
AndroidX.Navigation.NavDestination.Route.set -> void
AndroidX.Navigation.NavDestinationBuilder
AndroidX.Navigation.NavDestinationBuilder.Action(int actionId, Kotlin.Jvm.Functions.IFunction1! actionBuilder) -> void
AndroidX.Navigation.NavDestinationBuilder.Argument(string! name, AndroidX.Navigation.NavArgument! argument) -> void
AndroidX.Navigation.NavDestinationBuilder.Argument(string! name, Kotlin.Jvm.Functions.IFunction1! argumentBuilder) -> void
AndroidX.Navigation.NavDestinationBuilder.DeepLink(AndroidX.Navigation.NavDeepLink! navDeepLink) -> void
AndroidX.Navigation.NavDestinationBuilder.DeepLink(Kotlin.Jvm.Functions.IFunction1! navDeepLink) -> void
AndroidX.Navigation.NavDestinationBuilder.DeepLink(Kotlin.Reflect.IKClass! route, string! basePath, Kotlin.Jvm.Functions.IFunction1! navDeepLink) -> void
AndroidX.Navigation.NavDestinationBuilder.DeepLink(string! uriPattern) -> void
AndroidX.Navigation.NavDestinationBuilder.Id.get -> int
AndroidX.Navigation.NavDestinationBuilder.Label.get -> string?
AndroidX.Navigation.NavDestinationBuilder.Label.set -> void
AndroidX.Navigation.NavDestinationBuilder.LabelFormatted.get -> Java.Lang.ICharSequence?
AndroidX.Navigation.NavDestinationBuilder.LabelFormatted.set -> void
AndroidX.Navigation.NavDestinationBuilder.NavDestinationBuilder(AndroidX.Navigation.Navigator! navigator, Kotlin.Reflect.IKClass? route, System.Collections.IDictionary! typeMap) -> void
AndroidX.Navigation.NavDestinationBuilder.NavDestinationBuilder(AndroidX.Navigation.Navigator! navigator, int id) -> void
AndroidX.Navigation.NavDestinationBuilder.NavDestinationBuilder(AndroidX.Navigation.Navigator! navigator, string? route) -> void
AndroidX.Navigation.NavDestinationBuilder.NavDestinationBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavDestinationBuilder.Navigator.get -> AndroidX.Navigation.Navigator!
AndroidX.Navigation.NavDestinationBuilder.Route.get -> string?
AndroidX.Navigation.NavDestinationDslAttribute
AndroidX.Navigation.NavDestinationDslAttribute.NavDestinationDslAttribute() -> void
AndroidX.Navigation.NavGraph
AndroidX.Navigation.NavGraph.AddAll(AndroidX.Navigation.NavGraph! other) -> void
AndroidX.Navigation.NavGraph.AddDestination(AndroidX.Navigation.NavDestination! node) -> void
AndroidX.Navigation.NavGraph.AddDestinations(System.Collections.Generic.ICollection<AndroidX.Navigation.NavDestination!>! nodes) -> void
AndroidX.Navigation.NavGraph.AddDestinations(params AndroidX.Navigation.NavDestination![]! nodes) -> void
AndroidX.Navigation.NavGraph.Clear() -> void
AndroidX.Navigation.NavGraph.Companion
AndroidX.Navigation.NavGraph.Companion.ChildHierarchy(AndroidX.Navigation.NavGraph! _this_childHierarchy) -> Kotlin.Sequences.ISequence!
AndroidX.Navigation.NavGraph.Companion.FindStartDestination(AndroidX.Navigation.NavGraph! _this_findStartDestination) -> AndroidX.Navigation.NavDestination!
AndroidX.Navigation.NavGraph.FindNode(Java.Lang.Object? route) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.FindNode(Kotlin.Reflect.IKClass! route) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.FindNode(int resId) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.FindNode(string! route, bool searchParents) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.FindNode(string? route) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.FindNodeComprehensive(int resId, AndroidX.Navigation.NavDestination? lastVisited, bool searchChildren, AndroidX.Navigation.NavDestination? matchingDest) -> AndroidX.Navigation.NavDestination?
AndroidX.Navigation.NavGraph.Iterator() -> Java.Util.IIterator!
AndroidX.Navigation.NavGraph.MatchDeepLinkComprehensive(AndroidX.Navigation.NavDeepLinkRequest! navDeepLinkRequest, bool searchChildren, bool searchParent, AndroidX.Navigation.NavDestination! lastVisited) -> AndroidX.Navigation.NavDestination.DeepLinkMatch?
AndroidX.Navigation.NavGraph.MatchRouteComprehensive(string! route, bool searchChildren, bool searchParent, AndroidX.Navigation.NavDestination! lastVisited) -> AndroidX.Navigation.NavDestination.DeepLinkMatch?
AndroidX.Navigation.NavGraph.NavGraph(AndroidX.Navigation.Navigator! navGraphNavigator) -> void
AndroidX.Navigation.NavGraph.NavGraph(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavGraph.Nodes.get -> AndroidX.Collection.SparseArrayCompat!
AndroidX.Navigation.NavGraph.Remove(AndroidX.Navigation.NavDestination! node) -> void
AndroidX.Navigation.NavGraph.SetStartDestination(KotlinX.Serialization.IKSerializer! serializer, Kotlin.Jvm.Functions.IFunction1! parseRoute) -> void
AndroidX.Navigation.NavGraph.SetStartDestination(string! startDestRoute) -> void
AndroidX.Navigation.NavGraph.StartDestDisplayName.get -> string!
AndroidX.Navigation.NavGraph.StartDestination.get -> int
AndroidX.Navigation.NavGraph.StartDestination.set -> void
AndroidX.Navigation.NavGraph.StartDestinationId.get -> int
AndroidX.Navigation.NavGraph.StartDestinationRoute.get -> string?
AndroidX.Navigation.NavGraphBuilder
AndroidX.Navigation.NavGraphBuilder.AddDestination(AndroidX.Navigation.NavDestination! destination) -> void
AndroidX.Navigation.NavGraphBuilder.Destination(AndroidX.Navigation.NavDestinationBuilder! navDestination) -> void
AndroidX.Navigation.NavGraphBuilder.NavGraphBuilder(AndroidX.Navigation.NavigatorProvider! provider, Java.Lang.Object! startDestination, Kotlin.Reflect.IKClass? route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap) -> void
AndroidX.Navigation.NavGraphBuilder.NavGraphBuilder(AndroidX.Navigation.NavigatorProvider! provider, Kotlin.Reflect.IKClass! startDestination, Kotlin.Reflect.IKClass? route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap) -> void
AndroidX.Navigation.NavGraphBuilder.NavGraphBuilder(AndroidX.Navigation.NavigatorProvider! provider, int id, int startDestination) -> void
AndroidX.Navigation.NavGraphBuilder.NavGraphBuilder(AndroidX.Navigation.NavigatorProvider! provider, string! startDestination, string? route) -> void
AndroidX.Navigation.NavGraphBuilder.NavGraphBuilder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavGraphBuilder.Provider.get -> AndroidX.Navigation.NavigatorProvider!
AndroidX.Navigation.NavGraphBuilder.UnaryPlus(AndroidX.Navigation.NavDestination! _this_unaryPlus) -> void
AndroidX.Navigation.NavGraphBuilderKt
AndroidX.Navigation.NavGraphKt
AndroidX.Navigation.NavGraphNavigator
AndroidX.Navigation.NavGraphNavigator.BackStack.get -> Xamarin.KotlinX.Coroutines.Flow.IStateFlow!
AndroidX.Navigation.NavGraphNavigator.NavGraphNavigator(AndroidX.Navigation.NavigatorProvider! navigatorProvider) -> void
AndroidX.Navigation.NavGraphNavigator.NavGraphNavigator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavOptions
AndroidX.Navigation.NavOptions.Builder
AndroidX.Navigation.NavOptions.Builder.Build() -> AndroidX.Navigation.NavOptions!
AndroidX.Navigation.NavOptions.Builder.Builder() -> void
AndroidX.Navigation.NavOptions.Builder.SetEnterAnim(int enterAnim) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetExitAnim(int exitAnim) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetLaunchSingleTop(bool singleTop) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopEnterAnim(int popEnterAnim) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopExitAnim(int popExitAnim) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(Java.Lang.Object! route, bool inclusive) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(Java.Lang.Object! route, bool inclusive, bool saveState) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(Kotlin.Reflect.IKClass! route, bool inclusive) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(Kotlin.Reflect.IKClass! route, bool inclusive, bool saveState) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(int destinationId, bool inclusive) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(int destinationId, bool inclusive, bool saveState) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(string? route, bool inclusive) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetPopUpTo(string? route, bool inclusive, bool saveState) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.Builder.SetRestoreState(bool restoreState) -> AndroidX.Navigation.NavOptions.Builder!
AndroidX.Navigation.NavOptions.EnterAnim.get -> int
AndroidX.Navigation.NavOptions.ExitAnim.get -> int
AndroidX.Navigation.NavOptions.IsPopUpToInclusive.get -> bool
AndroidX.Navigation.NavOptions.PopEnterAnim.get -> int
AndroidX.Navigation.NavOptions.PopExitAnim.get -> int
AndroidX.Navigation.NavOptions.PopUpTo.get -> int
AndroidX.Navigation.NavOptions.PopUpToId.get -> int
AndroidX.Navigation.NavOptions.PopUpToRoute.get -> string?
AndroidX.Navigation.NavOptions.PopUpToRouteClass.get -> Kotlin.Reflect.IKClass?
AndroidX.Navigation.NavOptions.PopUpToRouteObject.get -> Java.Lang.Object?
AndroidX.Navigation.NavOptions.ShouldLaunchSingleTop() -> bool
AndroidX.Navigation.NavOptions.ShouldPopUpToSaveState() -> bool
AndroidX.Navigation.NavOptions.ShouldRestoreState() -> bool
AndroidX.Navigation.NavOptionsBuilder
AndroidX.Navigation.NavOptionsBuilder.Anim(Kotlin.Jvm.Functions.IFunction1! animBuilder) -> void
AndroidX.Navigation.NavOptionsBuilder.InvokePopUpTo(Java.Lang.Object! route, Kotlin.Jvm.Functions.IFunction1! popUpToBuilder) -> void
AndroidX.Navigation.NavOptionsBuilder.InvokePopUpTo(Kotlin.Reflect.IKClass! route, Kotlin.Jvm.Functions.IFunction1! popUpToBuilder) -> void
AndroidX.Navigation.NavOptionsBuilder.InvokePopUpTo(int id, Kotlin.Jvm.Functions.IFunction1! popUpToBuilder) -> void
AndroidX.Navigation.NavOptionsBuilder.InvokePopUpTo(string! route, Kotlin.Jvm.Functions.IFunction1! popUpToBuilder) -> void
AndroidX.Navigation.NavOptionsBuilder.LaunchSingleTop.get -> bool
AndroidX.Navigation.NavOptionsBuilder.LaunchSingleTop.set -> void
AndroidX.Navigation.NavOptionsBuilder.NavOptionsBuilder() -> void
AndroidX.Navigation.NavOptionsBuilder.PopUpTo.get -> int
AndroidX.Navigation.NavOptionsBuilder.PopUpTo.set -> void
AndroidX.Navigation.NavOptionsBuilder.PopUpToId.get -> int
AndroidX.Navigation.NavOptionsBuilder.PopUpToRoute.get -> string?
AndroidX.Navigation.NavOptionsBuilder.PopUpToRouteClass.get -> Kotlin.Reflect.IKClass?
AndroidX.Navigation.NavOptionsBuilder.PopUpToRouteObject.get -> Java.Lang.Object?
AndroidX.Navigation.NavOptionsBuilder.RestoreState.get -> bool
AndroidX.Navigation.NavOptionsBuilder.RestoreState.set -> void
AndroidX.Navigation.NavOptionsBuilderKt
AndroidX.Navigation.NavOptionsDslAttribute
AndroidX.Navigation.NavOptionsDslAttribute.NavOptionsDslAttribute() -> void
AndroidX.Navigation.NavType
AndroidX.Navigation.NavType.Companion
AndroidX.Navigation.NavType.Companion.FromArgType(string? type, string? packageName) -> AndroidX.Navigation.NavType!
AndroidX.Navigation.NavType.Companion.InferFromValue(string! value) -> AndroidX.Navigation.NavType!
AndroidX.Navigation.NavType.Companion.InferFromValueType(Java.Lang.Object? value) -> AndroidX.Navigation.NavType!
AndroidX.Navigation.NavType.EnumType
AndroidX.Navigation.NavType.EnumType.EnumType(Java.Lang.Class! type) -> void
AndroidX.Navigation.NavType.NavType(bool isNullableAllowed) -> void
AndroidX.Navigation.NavType.NavType(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavType.ParcelableArrayType
AndroidX.Navigation.NavType.ParcelableArrayType.ParcelableArrayType(Java.Lang.Class! type) -> void
AndroidX.Navigation.NavType.ParcelableArrayType.Put(Android.OS.Bundle! bundle, string! key, Java.Lang.Object![]? value) -> void
AndroidX.Navigation.NavType.ParcelableArrayType.ValueEquals(Java.Lang.Object![]? value, Java.Lang.Object![]? other) -> bool
AndroidX.Navigation.NavType.ParcelableType
AndroidX.Navigation.NavType.ParcelableType.ParcelableType(Java.Lang.Class! type) -> void
AndroidX.Navigation.NavType.ParcelableType.Put(Android.OS.Bundle! bundle, string! key, Java.Lang.Object? value) -> void
AndroidX.Navigation.NavType.ParseAndPut(Android.OS.Bundle! bundle, string! key, string! value) -> Java.Lang.Object?
AndroidX.Navigation.NavType.ParseAndPut(Android.OS.Bundle! bundle, string! key, string? value, Java.Lang.Object? previousValue) -> Java.Lang.Object?
AndroidX.Navigation.NavType.SerializableArrayType
AndroidX.Navigation.NavType.SerializableArrayType.Put(Android.OS.Bundle! bundle, string! key, Java.Lang.Object![]? value) -> void
AndroidX.Navigation.NavType.SerializableArrayType.SerializableArrayType(Java.Lang.Class! type) -> void
AndroidX.Navigation.NavType.SerializableArrayType.ValueEquals(Java.Lang.Object![]? value, Java.Lang.Object![]? other) -> bool
AndroidX.Navigation.NavType.SerializableType
AndroidX.Navigation.NavType.SerializableType.SerializableType(Java.Lang.Class! type) -> void
AndroidX.Navigation.NavType.SerializableType.SerializableType(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavTypeKt
AndroidX.Navigation.NavUriKt
AndroidX.Navigation.NavUri_androidKt
AndroidX.Navigation.Navigator
AndroidX.Navigation.Navigator.IExtras
AndroidX.Navigation.Navigator.IName
AndroidX.Navigation.Navigator.IName.Value() -> string?
AndroidX.Navigation.Navigator.IsAttached.get -> bool
AndroidX.Navigation.Navigator.Navigator() -> void
AndroidX.Navigation.Navigator.Navigator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Navigator.Navigator(string! name) -> void
AndroidX.Navigation.Navigator.State.get -> AndroidX.Navigation.NavigatorState!
AndroidX.Navigation.NavigatorProvider
AndroidX.Navigation.NavigatorProvider.AddNavigator(AndroidX.Navigation.Navigator! navigator) -> AndroidX.Navigation.Navigator?
AndroidX.Navigation.NavigatorProvider.GetNavigator(Java.Lang.Class! navigatorClass) -> Java.Lang.Object!
AndroidX.Navigation.NavigatorProvider.NavigatorProvider() -> void
AndroidX.Navigation.NavigatorProvider.NavigatorProvider(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavigatorProvider.Navigators.get -> System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.Navigator!>!
AndroidX.Navigation.NavigatorProviderKt
AndroidX.Navigation.NavigatorState
AndroidX.Navigation.NavigatorState.BackStack.get -> Xamarin.KotlinX.Coroutines.Flow.IStateFlow!
AndroidX.Navigation.NavigatorState.Navigating.get -> bool
AndroidX.Navigation.NavigatorState.Navigating.set -> void
AndroidX.Navigation.NavigatorState.NavigatorState() -> void
AndroidX.Navigation.NavigatorState.NavigatorState(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavigatorState.TransitionsInProgress.get -> Xamarin.KotlinX.Coroutines.Flow.IStateFlow!
AndroidX.Navigation.NoOpNavigator
AndroidX.Navigation.NoOpNavigator.NoOpNavigator() -> void
AndroidX.Navigation.PopUpToBuilder
AndroidX.Navigation.PopUpToBuilder.Inclusive.get -> bool
AndroidX.Navigation.PopUpToBuilder.Inclusive.set -> void
AndroidX.Navigation.PopUpToBuilder.PopUpToBuilder() -> void
AndroidX.Navigation.PopUpToBuilder.SaveState.get -> bool
AndroidX.Navigation.PopUpToBuilder.SaveState.set -> void
AndroidX.Navigation.SavedStateHandleKt
AndroidX.Navigation.Serialization.NavTypeConverterKt
AndroidX.Navigation.Serialization.NavTypeConverterKt.WhenMappings
AndroidX.Navigation.Serialization.NavTypeConverter_androidKt
AndroidX.Navigation.Serialization.RouteDeserializerKt
AndroidX.Navigation.Serialization.RouteEncoder
AndroidX.Navigation.Serialization.RouteEncoder.EncodeToArgMap(Java.Lang.Object! value) -> System.Collections.Generic.IDictionary<string!, System.Collections.Generic.IList<string!>!>!
AndroidX.Navigation.Serialization.RouteEncoder.RouteEncoder(KotlinX.Serialization.IKSerializer! serializer, System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavType!>! typeMap) -> void
AndroidX.Navigation.Serialization.RouteEncoder.RouteEncoder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Serialization.RouteSerializerKt
abstract AndroidX.Navigation.CollectionNavType.EmptyCollection() -> Java.Lang.Object?
abstract AndroidX.Navigation.CollectionNavType.SerializeAsValues(Java.Lang.Object? value) -> System.Collections.Generic.IList<string!>!
abstract AndroidX.Navigation.NavType.Get(Android.OS.Bundle! bundle, string! key) -> Java.Lang.Object?
abstract AndroidX.Navigation.NavType.ParseValue(string! value) -> Java.Lang.Object?
abstract AndroidX.Navigation.Navigator.CreateDestination() -> Java.Lang.Object!
abstract AndroidX.Navigation.NavigatorState.CreateBackStackEntry(AndroidX.Navigation.NavDestination! destination, Android.OS.Bundle? arguments) -> AndroidX.Navigation.NavBackStackEntry!
const AndroidX.Navigation.NavGraphNavigator.Name = "navigation" -> string!
override AndroidX.Navigation.ActionOnlyNavDirections.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.AnimBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.CollectionNavType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.CollectionNavType.ThresholdClass.get -> nint
override AndroidX.Navigation.CollectionNavType.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Internal.NavContext.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Internal.SynchronizedObjectKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Internal.SynchronizedObject_jvmCommonKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NamedNavArgument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NamedNavArgumentKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavAction.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavActionBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgsLazy.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgsLazy_androidKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgument.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgument.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgumentBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavArgumentKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavBackStackEntry.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavBackStackEntry.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavBackStackEntryKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLink.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLink.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkDslBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkDslBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkRequest.Builder.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkRequest.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkRequest.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDeepLinkRequest.ThresholdClass.get -> nint
override AndroidX.Navigation.NavDeepLinkRequest.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavDestination.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDestination.DeepLinkMatch.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDestination.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDestination.ThresholdClass.get -> nint
override AndroidX.Navigation.NavDestination.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavDestinationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavDestinationBuilder.ThresholdClass.get -> nint
override AndroidX.Navigation.NavDestinationBuilder.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavGraph.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraph.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraph.ThresholdClass.get -> nint
override AndroidX.Navigation.NavGraph.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavGraphBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraphBuilder.ThresholdClass.get -> nint
override AndroidX.Navigation.NavGraphBuilder.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavGraphBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraphKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraphNavigator.CreateDestination() -> Java.Lang.Object!
override AndroidX.Navigation.NavGraphNavigator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavGraphNavigator.ThresholdClass.get -> nint
override AndroidX.Navigation.NavGraphNavigator.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavOptions.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavOptions.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavOptionsBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavOptionsBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.EnumType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.ParcelableArrayType.Get(Android.OS.Bundle! bundle, string! key) -> Java.Lang.Object?
override AndroidX.Navigation.NavType.ParcelableArrayType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.ParcelableArrayType.ParseValue(string! value) -> Java.Lang.Object!
override AndroidX.Navigation.NavType.ParcelableType.Get(Android.OS.Bundle! bundle, string! key) -> Java.Lang.Object?
override AndroidX.Navigation.NavType.ParcelableType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.ParcelableType.ParseValue(string! value) -> Java.Lang.Object?
override AndroidX.Navigation.NavType.SerializableArrayType.Get(Android.OS.Bundle! bundle, string! key) -> Java.Lang.Object?
override AndroidX.Navigation.NavType.SerializableArrayType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.SerializableArrayType.ParseValue(string! value) -> Java.Lang.Object!
override AndroidX.Navigation.NavType.SerializableType.Get(Android.OS.Bundle! bundle, string! key) -> Java.Lang.Object?
override AndroidX.Navigation.NavType.SerializableType.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavType.SerializableType.ParseValue(string! value) -> Java.Lang.Object!
override AndroidX.Navigation.NavType.SerializableType.ThresholdClass.get -> nint
override AndroidX.Navigation.NavType.SerializableType.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavType.ThresholdClass.get -> nint
override AndroidX.Navigation.NavType.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavTypeKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavUriKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavUri_androidKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Navigator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Navigator.ThresholdClass.get -> nint
override AndroidX.Navigation.Navigator.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavigatorProvider.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavigatorProvider.ThresholdClass.get -> nint
override AndroidX.Navigation.NavigatorProvider.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavigatorProviderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavigatorState.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NavigatorState.ThresholdClass.get -> nint
override AndroidX.Navigation.NavigatorState.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NoOpNavigator.CreateDestination() -> AndroidX.Navigation.NavDestination!
override AndroidX.Navigation.NoOpNavigator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.NoOpNavigator.Navigate(Java.Lang.Object! destination, Android.OS.Bundle? args, AndroidX.Navigation.NavOptions? navOptions, AndroidX.Navigation.Navigator.IExtras? navigatorExtras) -> AndroidX.Navigation.NavDestination!
override AndroidX.Navigation.PopUpToBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.SavedStateHandleKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.NavTypeConverterKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.NavTypeConverterKt.WhenMappings.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.NavTypeConverter_androidKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.RouteDeserializerKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.RouteEncoder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Serialization.RouteEncoder.ThresholdClass.get -> nint
override AndroidX.Navigation.Serialization.RouteEncoder.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Serialization.RouteSerializerKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.Navigation.NamedNavArgumentKt.NavArgument(string! name, Kotlin.Jvm.Functions.IFunction1! builder) -> AndroidX.Navigation.NamedNavArgument!
static AndroidX.Navigation.NavArgsLazy_androidKt.GetMethodSignature() -> Java.Lang.Class![]!
static AndroidX.Navigation.NavArgsLazy_androidKt.MethodMap.get -> AndroidX.Collection.ArrayMap!
static AndroidX.Navigation.NavBackStackEntryKt.ToRoute(AndroidX.Navigation.NavBackStackEntry! obj, Kotlin.Reflect.IKClass! route) -> Java.Lang.Object?
static AndroidX.Navigation.NavDeepLink.Builder.FromAction(string! action) -> AndroidX.Navigation.NavDeepLink.Builder!
static AndroidX.Navigation.NavDeepLink.Builder.FromMimeType(string! mimeType) -> AndroidX.Navigation.NavDeepLink.Builder!
static AndroidX.Navigation.NavDeepLink.Builder.FromUriPattern(string! uriPattern) -> AndroidX.Navigation.NavDeepLink.Builder!
static AndroidX.Navigation.NavDeepLinkDslBuilderKt.NavDeepLink(Kotlin.Jvm.Functions.IFunction1! deepLinkBuilder) -> AndroidX.Navigation.NavDeepLink!
static AndroidX.Navigation.NavDeepLinkDslBuilderKt.NavDeepLink(Kotlin.Reflect.IKClass! route, string! basePath, Kotlin.Jvm.Functions.IFunction1! deepLinkBuilder) -> AndroidX.Navigation.NavDeepLink!
static AndroidX.Navigation.NavDeepLinkDslBuilderKt.NavDeepLink(Kotlin.Reflect.IKClass! route, string! basePath, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Jvm.Functions.IFunction1! deepLinkBuilder) -> AndroidX.Navigation.NavDeepLink!
static AndroidX.Navigation.NavDeepLinkRequest.Builder.FromAction(string! action) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
static AndroidX.Navigation.NavDeepLinkRequest.Builder.FromMimeType(string! mimeType) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
static AndroidX.Navigation.NavDeepLinkRequest.Builder.FromUri(Android.Net.Uri! uri) -> AndroidX.Navigation.NavDeepLinkRequest.Builder!
static AndroidX.Navigation.NavDestination.GetDisplayName(AndroidX.Navigation.Internal.NavContext! context, int id) -> string!
static AndroidX.Navigation.NavDestination.GetHierarchy(AndroidX.Navigation.NavDestination! obj) -> Kotlin.Sequences.ISequence!
static AndroidX.Navigation.NavDestination.HasRoute(AndroidX.Navigation.NavDestination! obj, Kotlin.Reflect.IKClass! route) -> bool
static AndroidX.Navigation.NavDestination.ParseClassFromName(Android.Content.Context! context, string! name, Java.Lang.Class! expectedClassType) -> Java.Lang.Class!
static AndroidX.Navigation.NavDestination.ParseClassFromNameInternal(Android.Content.Context! context, string! name, Java.Lang.Class! expectedClassType) -> Java.Lang.Class!
static AndroidX.Navigation.NavGraph.FindStartDestination(AndroidX.Navigation.NavGraph! obj) -> AndroidX.Navigation.NavDestination!
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavGraphBuilder! _this_navigation, Kotlin.Reflect.IKClass! route, Java.Lang.Object! startDestination, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Jvm.Functions.IFunction1! builder) -> void
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavGraphBuilder! _this_navigation, Kotlin.Reflect.IKClass! route, Kotlin.Reflect.IKClass! startDestination, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Jvm.Functions.IFunction1! builder) -> void
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavGraphBuilder! _this_navigation, int id, int startDestination, Kotlin.Jvm.Functions.IFunction1! builder) -> void
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavGraphBuilder! _this_navigation, string! startDestination, string! route, Kotlin.Jvm.Functions.IFunction1! builder) -> void
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavigatorProvider! _this_navigation, Java.Lang.Object! startDestination, Kotlin.Reflect.IKClass? route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Jvm.Functions.IFunction1! builder) -> AndroidX.Navigation.NavGraph!
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavigatorProvider! _this_navigation, Kotlin.Reflect.IKClass! startDestination, Kotlin.Reflect.IKClass? route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Jvm.Functions.IFunction1! builder) -> AndroidX.Navigation.NavGraph!
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavigatorProvider! _this_navigation, int id, int startDestination, Kotlin.Jvm.Functions.IFunction1! builder) -> AndroidX.Navigation.NavGraph!
static AndroidX.Navigation.NavGraphBuilderKt.Navigation(AndroidX.Navigation.NavigatorProvider! _this_navigation, string! startDestination, string? route, Kotlin.Jvm.Functions.IFunction1! builder) -> AndroidX.Navigation.NavGraph!
static AndroidX.Navigation.NavGraphKt.Contains(AndroidX.Navigation.NavGraph! _this_contains, Java.Lang.Object! route) -> bool
static AndroidX.Navigation.NavGraphKt.Contains(AndroidX.Navigation.NavGraph! _this_contains, int id) -> bool
static AndroidX.Navigation.NavGraphKt.Contains(AndroidX.Navigation.NavGraph! _this_contains, string! route) -> bool
static AndroidX.Navigation.NavGraphKt.Get(AndroidX.Navigation.NavGraph! _this_get, Java.Lang.Object! route) -> AndroidX.Navigation.NavDestination!
static AndroidX.Navigation.NavGraphKt.Get(AndroidX.Navigation.NavGraph! _this_get, int id) -> AndroidX.Navigation.NavDestination!
static AndroidX.Navigation.NavGraphKt.Get(AndroidX.Navigation.NavGraph! _this_get, string! route) -> AndroidX.Navigation.NavDestination!
static AndroidX.Navigation.NavGraphKt.MinusAssign(AndroidX.Navigation.NavGraph! _this_minusAssign, AndroidX.Navigation.NavDestination! node) -> void
static AndroidX.Navigation.NavGraphKt.PlusAssign(AndroidX.Navigation.NavGraph! _this_plusAssign, AndroidX.Navigation.NavDestination! node) -> void
static AndroidX.Navigation.NavGraphKt.PlusAssign(AndroidX.Navigation.NavGraph! _this_plusAssign, AndroidX.Navigation.NavGraph! other) -> void
static AndroidX.Navigation.NavOptionsBuilderKt.NavOptions(Kotlin.Jvm.Functions.IFunction1! optionsBuilder) -> AndroidX.Navigation.NavOptions!
static AndroidX.Navigation.NavType.BoolArrayType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.BoolListType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.BoolType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.FloatArrayType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.FloatListType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.FloatType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.FromArgType(string? type, string? packageName) -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.InferFromValue(string! value) -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.InferFromValueType(Java.Lang.Object? value) -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.IntArrayType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.IntListType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.IntType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.LongArrayType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.LongListType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.LongType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.ReferenceType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.StringArrayType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.StringListType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavType.StringType.get -> AndroidX.Navigation.NavType!
static AndroidX.Navigation.NavTypeKt.ParseAndPutFromUri(AndroidX.Navigation.NavType! obj, Android.OS.Bundle! bundle, string! key, string! value) -> Java.Lang.Object?
static AndroidX.Navigation.NavUriKt.NavUri(string! uriString) -> Android.Net.Uri!
static AndroidX.Navigation.NavigatorProviderKt.Get(AndroidX.Navigation.NavigatorProvider! _this_get, Kotlin.Reflect.IKClass! clazz) -> Java.Lang.Object!
static AndroidX.Navigation.NavigatorProviderKt.Get(AndroidX.Navigation.NavigatorProvider! _this_get, string! name) -> Java.Lang.Object!
static AndroidX.Navigation.NavigatorProviderKt.PlusAssign(AndroidX.Navigation.NavigatorProvider! _this_plusAssign, AndroidX.Navigation.Navigator! navigator) -> void
static AndroidX.Navigation.NavigatorProviderKt.Set(AndroidX.Navigation.NavigatorProvider! _this_set, string! name, AndroidX.Navigation.Navigator! navigator) -> AndroidX.Navigation.Navigator?
static AndroidX.Navigation.SavedStateHandleKt.ToRoute(AndroidX.Lifecycle.SavedStateHandle! _this_toRoute, Kotlin.Reflect.IKClass! route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap) -> Java.Lang.Object!
static AndroidX.Navigation.Serialization.RouteDeserializerKt.DecodeArguments(KotlinX.Serialization.IKSerializer! obj, Android.OS.Bundle! bundle, System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavType!>! typeMap) -> Java.Lang.Object?
static AndroidX.Navigation.Serialization.RouteDeserializerKt.DecodeArguments(KotlinX.Serialization.IKSerializer! obj, AndroidX.Lifecycle.SavedStateHandle! handle, System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavType!>! typeMap) -> Java.Lang.Object?
static AndroidX.Navigation.Serialization.RouteSerializerKt.GenerateHashCode(KotlinX.Serialization.IKSerializer! obj) -> int
static AndroidX.Navigation.Serialization.RouteSerializerKt.GenerateNavArguments(KotlinX.Serialization.IKSerializer! obj, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap) -> System.Collections.Generic.IList<AndroidX.Navigation.NamedNavArgument!>!
static AndroidX.Navigation.Serialization.RouteSerializerKt.GenerateRouteWithArgs(Java.Lang.Object! route, System.Collections.Generic.IDictionary<string!, AndroidX.Navigation.NavType!>! typeMap) -> string!
virtual AndroidX.Navigation.NavDeepLinkRequest.Action.get -> string?
virtual AndroidX.Navigation.NavDeepLinkRequest.MimeType.get -> string?
virtual AndroidX.Navigation.NavDeepLinkRequest.Uri.get -> Android.Net.Uri?
virtual AndroidX.Navigation.NavDestination.DisplayName.get -> string!
virtual AndroidX.Navigation.NavDestination.HasDeepLink(Android.Net.Uri! deepLink) -> bool
virtual AndroidX.Navigation.NavDestination.HasDeepLink(AndroidX.Navigation.NavDeepLinkRequest! deepLinkRequest) -> bool
virtual AndroidX.Navigation.NavDestination.MatchDeepLink(AndroidX.Navigation.NavDeepLinkRequest! navDeepLinkRequest) -> AndroidX.Navigation.NavDestination.DeepLinkMatch?
virtual AndroidX.Navigation.NavDestination.OnInflate(Android.Content.Context! context, Android.Util.IAttributeSet! attrs) -> void
virtual AndroidX.Navigation.NavDestination.SupportsActions() -> bool
virtual AndroidX.Navigation.NavDestinationBuilder.Build() -> Java.Lang.Object!
virtual AndroidX.Navigation.NavDestinationBuilder.InstantiateDestination() -> Java.Lang.Object!
virtual AndroidX.Navigation.NavType.IsNullableAllowed.get -> bool
virtual AndroidX.Navigation.NavType.Name.get -> string!
virtual AndroidX.Navigation.NavType.ParseValue(string! value, Java.Lang.Object? previousValue) -> Java.Lang.Object?
virtual AndroidX.Navigation.NavType.SerializableType.Put(Android.OS.Bundle! bundle, string! key, Java.Lang.Object! value) -> void
virtual AndroidX.Navigation.NavType.SerializeAsValue(Java.Lang.Object? value) -> string!
virtual AndroidX.Navigation.NavType.ValueEquals(Java.Lang.Object? value, Java.Lang.Object? other) -> bool
virtual AndroidX.Navigation.Navigator.Navigate(Java.Lang.Object! destination, Android.OS.Bundle? args, AndroidX.Navigation.NavOptions? navOptions, AndroidX.Navigation.Navigator.IExtras? navigatorExtras) -> AndroidX.Navigation.NavDestination?
virtual AndroidX.Navigation.Navigator.Navigate(System.Collections.Generic.IList<AndroidX.Navigation.NavBackStackEntry!>! entries, AndroidX.Navigation.NavOptions? navOptions, AndroidX.Navigation.Navigator.IExtras? navigatorExtras) -> void
virtual AndroidX.Navigation.Navigator.OnAttach(AndroidX.Navigation.NavigatorState! state) -> void
virtual AndroidX.Navigation.Navigator.OnLaunchSingleTop(AndroidX.Navigation.NavBackStackEntry! backStackEntry) -> void
virtual AndroidX.Navigation.Navigator.OnRestoreState(Android.OS.Bundle! savedState) -> void
virtual AndroidX.Navigation.Navigator.OnSaveState() -> Android.OS.Bundle?
virtual AndroidX.Navigation.Navigator.PopBackStack() -> bool
virtual AndroidX.Navigation.Navigator.PopBackStack(AndroidX.Navigation.NavBackStackEntry! popUpTo, bool savedState) -> void
virtual AndroidX.Navigation.NavigatorProvider.AddNavigator(string! name, AndroidX.Navigation.Navigator! navigator) -> AndroidX.Navigation.Navigator?
virtual AndroidX.Navigation.NavigatorProvider.GetNavigator(string! name) -> Java.Lang.Object!
virtual AndroidX.Navigation.NavigatorState.MarkTransitionComplete(AndroidX.Navigation.NavBackStackEntry! entry) -> void
virtual AndroidX.Navigation.NavigatorState.OnLaunchSingleTop(AndroidX.Navigation.NavBackStackEntry! backStackEntry) -> void
virtual AndroidX.Navigation.NavigatorState.OnLaunchSingleTopWithTransition(AndroidX.Navigation.NavBackStackEntry! backStackEntry) -> void
virtual AndroidX.Navigation.NavigatorState.Pop(AndroidX.Navigation.NavBackStackEntry! popUpTo, bool saveState) -> void
virtual AndroidX.Navigation.NavigatorState.PopWithTransition(AndroidX.Navigation.NavBackStackEntry! popUpTo, bool saveState) -> void
virtual AndroidX.Navigation.NavigatorState.PrepareForTransition(AndroidX.Navigation.NavBackStackEntry! entry) -> void
virtual AndroidX.Navigation.NavigatorState.Push(AndroidX.Navigation.NavBackStackEntry! backStackEntry) -> void
virtual AndroidX.Navigation.NavigatorState.PushWithTransition(AndroidX.Navigation.NavBackStackEntry! backStackEntry) -> void
virtual AndroidX.Navigation.Serialization.RouteEncoder.EncodeSerializableValue(KotlinX.Serialization.ISerializationStrategy! serializer, Java.Lang.Object? value) -> void
virtual AndroidX.Navigation.Serialization.RouteEncoder.SerializersModule.get -> KotlinX.Serialization.Modules.SerializersModule!
