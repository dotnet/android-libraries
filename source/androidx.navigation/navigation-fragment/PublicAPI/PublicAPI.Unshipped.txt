#nullable enable
AndroidX.Navigation.Fragment.AbstractListDetailFragment
AndroidX.Navigation.Fragment.AbstractListDetailFragment.AbstractListDetailFragment() -> void
AndroidX.Navigation.Fragment.AbstractListDetailFragment.AbstractListDetailFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Fragment.AbstractListDetailFragment.DetailPaneNavHostFragment.get -> AndroidX.Navigation.Fragment.NavHostFragment!
AndroidX.Navigation.Fragment.AbstractListDetailFragment.SlidingPaneLayout.get -> AndroidX.SlidingPaneLayout.Widget.SlidingPaneLayout!
AndroidX.Navigation.Fragment.DialogFragmentNavigator
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.ClassName.get -> string!
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.Destination(AndroidX.Navigation.Navigator! fragmentNavigator) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.Destination(AndroidX.Navigation.NavigatorProvider! navigatorProvider) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.Destination(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.SetClassName(string! className) -> AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination!
AndroidX.Navigation.Fragment.DialogFragmentNavigator.DialogFragmentNavigator(Android.Content.Context! context, AndroidX.Fragment.App.FragmentManager! fragmentManager) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigator.Navigate(System.Collections.Generic.IList<AndroidX.Navigation.NavBackStackEntry!>! entries, AndroidX.Navigation.NavOptions? navOptions, AndroidX.Navigation.Navigator.IExtras? navigatorExtras) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilder
AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilder.DialogFragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.DialogFragmentNavigator! navigator, Kotlin.Reflect.IKClass! route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilder.DialogFragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.DialogFragmentNavigator! navigator, int id, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilder.DialogFragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.DialogFragmentNavigator! navigator, string! route, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilderKt
AndroidX.Navigation.Fragment.FragmentKt
AndroidX.Navigation.Fragment.FragmentNavArgsLazyKt
AndroidX.Navigation.Fragment.FragmentNavigator
AndroidX.Navigation.Fragment.FragmentNavigator.Destination
AndroidX.Navigation.Fragment.FragmentNavigator.Destination.ClassName.get -> string!
AndroidX.Navigation.Fragment.FragmentNavigator.Destination.Destination(AndroidX.Navigation.Navigator! fragmentNavigator) -> void
AndroidX.Navigation.Fragment.FragmentNavigator.Destination.Destination(AndroidX.Navigation.NavigatorProvider! navigatorProvider) -> void
AndroidX.Navigation.Fragment.FragmentNavigator.Destination.Destination(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Fragment.FragmentNavigator.Destination.SetClassName(string! className) -> AndroidX.Navigation.Fragment.FragmentNavigator.Destination!
AndroidX.Navigation.Fragment.FragmentNavigator.Extras
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder.AddSharedElement(Android.Views.View! sharedElement, string! name) -> AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder!
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder.AddSharedElements(System.Collections.Generic.IDictionary<Android.Views.View!, string!>! sharedElements) -> AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder!
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder.Build() -> AndroidX.Navigation.Fragment.FragmentNavigator.Extras!
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder.Builder() -> void
AndroidX.Navigation.Fragment.FragmentNavigator.Extras.SharedElements.get -> System.Collections.Generic.IDictionary<Android.Views.View!, string!>!
AndroidX.Navigation.Fragment.FragmentNavigator.FragmentNavigator(Android.Content.Context! context, AndroidX.Fragment.App.FragmentManager! fragmentManager, int containerId) -> void
AndroidX.Navigation.Fragment.FragmentNavigator.FragmentNavigator(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilder
AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilder.FragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.FragmentNavigator! navigator, Kotlin.Reflect.IKClass! route, System.Collections.Generic.IDictionary<Kotlin.Reflect.IKType!, AndroidX.Navigation.NavType!>! typeMap, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilder.FragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.FragmentNavigator! navigator, int id, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilder.FragmentNavigatorDestinationBuilder(AndroidX.Navigation.Fragment.FragmentNavigator! navigator, string! route, Kotlin.Reflect.IKClass! fragmentClass) -> void
AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilderKt
AndroidX.Navigation.Fragment.FragmentNavigatorExtrasKt
AndroidX.Navigation.Fragment.NavHostFragment
AndroidX.Navigation.Fragment.NavHostFragment.Companion
AndroidX.Navigation.Fragment.NavHostFragment.Companion.Create(int graphResId) -> AndroidX.Navigation.Fragment.NavHostFragment!
AndroidX.Navigation.Fragment.NavHostFragment.Companion.Create(int graphResId, Android.OS.Bundle? startDestinationArgs) -> AndroidX.Navigation.Fragment.NavHostFragment!
AndroidX.Navigation.Fragment.NavHostFragment.Companion.FindNavController(AndroidX.Fragment.App.Fragment! fragment) -> AndroidX.Navigation.NavController!
AndroidX.Navigation.Fragment.NavHostFragment.NavController.get -> AndroidX.Navigation.NavController!
AndroidX.Navigation.Fragment.NavHostFragment.NavHostFragment() -> void
AndroidX.Navigation.Fragment.NavHostFragment.NavHostFragment(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.Navigation.NavGraphViewModelLazyKt
abstract AndroidX.Navigation.Fragment.AbstractListDetailFragment.OnCreateListPaneView(Android.Views.LayoutInflater! inflater, Android.Views.ViewGroup? container, Android.OS.Bundle? savedInstanceState) -> Android.Views.View!
const AndroidX.Navigation.Fragment.NavHostFragment.KeyGraphId = "android-support-nav:fragment:graphId" -> string!
const AndroidX.Navigation.Fragment.NavHostFragment.KeyStartDestinationArgs = "android-support-nav:fragment:startDestinationArgs" -> string!
override AndroidX.Navigation.Fragment.AbstractListDetailFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.AbstractListDetailFragment.ThresholdClass.get -> nint
override AndroidX.Navigation.Fragment.AbstractListDetailFragment.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Fragment.DialogFragmentNavigator.CreateDestination() -> Java.Lang.Object!
override AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.ThresholdClass.get -> nint
override AndroidX.Navigation.Fragment.DialogFragmentNavigator.Destination.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Fragment.DialogFragmentNavigator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.DialogFragmentNavigatorDestinationBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavArgsLazyKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigator.CreateDestination() -> Java.Lang.Object!
override AndroidX.Navigation.Fragment.FragmentNavigator.Destination.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigator.Destination.ThresholdClass.get -> nint
override AndroidX.Navigation.Fragment.FragmentNavigator.Destination.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Fragment.FragmentNavigator.Extras.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigator.Extras.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigator.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigator.ThresholdClass.get -> nint
override AndroidX.Navigation.Fragment.FragmentNavigator.ThresholdType.get -> System.Type!
override AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigatorDestinationBuilderKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.FragmentNavigatorExtrasKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.NavHostFragment.Companion.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.NavHostFragment.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.Navigation.Fragment.NavHostFragment.ThresholdClass.get -> nint
override AndroidX.Navigation.Fragment.NavHostFragment.ThresholdType.get -> System.Type!
override AndroidX.Navigation.NavGraphViewModelLazyKt.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override sealed AndroidX.Navigation.Fragment.AbstractListDetailFragment.OnCreateView(Android.Views.LayoutInflater! inflater, Android.Views.ViewGroup? container, Android.OS.Bundle? savedInstanceState) -> Android.Views.View!
override sealed AndroidX.Navigation.Fragment.AbstractListDetailFragment.OnViewCreated(Android.Views.View! view, Android.OS.Bundle? savedInstanceState) -> void
static AndroidX.Navigation.Fragment.FragmentKt.FindNavController(AndroidX.Fragment.App.Fragment! obj) -> AndroidX.Navigation.NavController!
static AndroidX.Navigation.Fragment.FragmentNavigatorExtrasKt.FragmentNavigatorExtras(params Kotlin.Pair![]! sharedElements) -> AndroidX.Navigation.Fragment.FragmentNavigator.Extras!
static AndroidX.Navigation.Fragment.NavHostFragment.Create(int graphResId) -> AndroidX.Navigation.Fragment.NavHostFragment!
static AndroidX.Navigation.Fragment.NavHostFragment.Create(int graphResId, Android.OS.Bundle? startDestinationArgs) -> AndroidX.Navigation.Fragment.NavHostFragment!
static AndroidX.Navigation.Fragment.NavHostFragment.FindNavController(AndroidX.Fragment.App.Fragment! fragment) -> AndroidX.Navigation.NavController!
virtual AndroidX.Navigation.Fragment.AbstractListDetailFragment.OnCreateDetailPaneNavHostFragment() -> AndroidX.Navigation.Fragment.NavHostFragment!
virtual AndroidX.Navigation.Fragment.AbstractListDetailFragment.OnListPaneViewCreated(Android.Views.View! view, Android.OS.Bundle? savedInstanceState) -> void
virtual AndroidX.Navigation.Fragment.FragmentNavigator.InstantiateFragment(Android.Content.Context! context, AndroidX.Fragment.App.FragmentManager! fragmentManager, string! className, Android.OS.Bundle? args) -> AndroidX.Fragment.App.Fragment!
virtual AndroidX.Navigation.Fragment.FragmentNavigator.Navigate(System.Collections.Generic.IList<AndroidX.Navigation.NavBackStackEntry!>! entries, AndroidX.Navigation.NavOptions? navOptions, AndroidX.Navigation.Navigator.IExtras? navigatorExtras) -> void
virtual AndroidX.Navigation.Fragment.NavHostFragment.CreateFragmentNavigator() -> AndroidX.Navigation.Navigator!
virtual AndroidX.Navigation.Fragment.NavHostFragment.OnCreateNavController(AndroidX.Navigation.NavController! navController) -> void
virtual AndroidX.Navigation.Fragment.NavHostFragment.OnCreateNavHostController(AndroidX.Navigation.NavHostController! navHostController) -> void
