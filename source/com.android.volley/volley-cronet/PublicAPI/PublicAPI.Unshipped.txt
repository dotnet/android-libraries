#nullable enable
Volley.CroNet.BuildConfig
Volley.CroNet.BuildConfig.BuildConfig() -> void
Volley.CroNet.CronetHttpStack
Volley.CroNet.CronetHttpStack.Builder
Volley.CroNet.CronetHttpStack.Builder.Builder(Android.Content.Context? context) -> void
Volley.CroNet.CronetHttpStack.Builder.Builder(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Volley.CroNet.CronetHttpStack.CronetHttpStack(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
Volley.CroNet.CronetHttpStack.ICurlCommandLogger
Volley.CroNet.CronetHttpStack.ICurlCommandLogger.LogCurlCommand(string? p0) -> void
Volley.CroNet.CronetHttpStack.RequestListener
Volley.CroNet.CronetHttpStack.RequestListener.RequestListener() -> void
Volley.CroNet.CronetHttpStack.RequestListener.RequestListener(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
const Volley.CroNet.BuildConfig.BuildType = "release" -> string!
const Volley.CroNet.BuildConfig.Debug = false -> bool
const Volley.CroNet.BuildConfig.LibraryPackageName = "com.android.volley.cronet" -> string!
override Volley.CroNet.BuildConfig.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Volley.CroNet.CronetHttpStack.Builder.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Volley.CroNet.CronetHttpStack.Builder.ThresholdClass.get -> nint
override Volley.CroNet.CronetHttpStack.Builder.ThresholdType.get -> System.Type!
override Volley.CroNet.CronetHttpStack.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Volley.CroNet.CronetHttpStack.RequestListener.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override Volley.CroNet.CronetHttpStack.RequestListener.ThresholdClass.get -> nint
override Volley.CroNet.CronetHttpStack.RequestListener.ThresholdType.get -> System.Type!
override Volley.CroNet.CronetHttpStack.ThresholdClass.get -> nint
override Volley.CroNet.CronetHttpStack.ThresholdType.get -> System.Type!
static Volley.CroNet.CronetHttpStack.GetHeaders(System.Collections.Generic.IList<Java.Util.IMapEntry!>? headersList) -> System.Collections.Generic.IList<Volley.Header!>?
virtual Volley.CroNet.CronetHttpStack.Builder.Build() -> Volley.CroNet.CronetHttpStack?
virtual Volley.CroNet.CronetHttpStack.Builder.SetCurlCommandLogger(Volley.CroNet.CronetHttpStack.ICurlCommandLogger? curlCommandLogger) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.Builder.SetCurlLoggingEnabled(bool curlLoggingEnabled) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.Builder.SetLogAuthTokensInCurlCommands(bool logAuthTokensInCurlCommands) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.Builder.SetPool(Volley.Toolbox.ByteArrayPool? pool) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.Builder.SetRequestListener(Volley.CroNet.CronetHttpStack.RequestListener? requestListener) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.Builder.SetUrlRewriter(Volley.Toolbox.IUrlRewriter? urlRewriter) -> Volley.CroNet.CronetHttpStack.Builder?
virtual Volley.CroNet.CronetHttpStack.ExecuteRequest(Volley.Request? request, System.Collections.Generic.IDictionary<string!, string!>? additionalHeaders, Volley.Toolbox.AsyncHttpStack.IOnRequestComplete? callback) -> void
virtual Volley.CroNet.CronetHttpStack.RequestListener.BlockingExecutor.get -> Java.Util.Concurrent.IExecutor?
virtual Volley.CroNet.CronetHttpStack.RequestListener.NonBlockingExecutor.get -> Java.Util.Concurrent.IExecutor?
