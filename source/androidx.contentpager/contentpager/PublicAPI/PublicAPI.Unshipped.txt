#nullable enable
AndroidX.ContentPager.Content.ContentPager
AndroidX.ContentPager.Content.ContentPager.ContentPager(Android.Content.ContentResolver! resolver, AndroidX.ContentPager.Content.ContentPager.IQueryRunner! queryRunner, int cursorCacheSize) -> void
AndroidX.ContentPager.Content.ContentPager.ContentPager(Android.Content.ContentResolver? resolver, AndroidX.ContentPager.Content.ContentPager.IQueryRunner? queryRunner) -> void
AndroidX.ContentPager.Content.ContentPager.ContentPager(nint javaReference, Android.Runtime.JniHandleOwnership transfer) -> void
AndroidX.ContentPager.Content.ContentPager.IContentCallback
AndroidX.ContentPager.Content.ContentPager.IContentCallback.OnCursorReady(AndroidX.ContentPager.Content.Query! p0, Android.Database.ICursor? p1) -> void
AndroidX.ContentPager.Content.ContentPager.ICursorDisposition
AndroidX.ContentPager.Content.ContentPager.IQueryRunner
AndroidX.ContentPager.Content.ContentPager.IQueryRunner.Cancel(AndroidX.ContentPager.Content.Query! p0) -> void
AndroidX.ContentPager.Content.ContentPager.IQueryRunner.IsRunning(AndroidX.ContentPager.Content.Query! p0) -> bool
AndroidX.ContentPager.Content.ContentPager.IQueryRunner.Query(AndroidX.ContentPager.Content.Query! p0, AndroidX.ContentPager.Content.ContentPager.IQueryRunnerCallback! p1) -> void
AndroidX.ContentPager.Content.ContentPager.IQueryRunnerCallback
AndroidX.ContentPager.Content.ContentPager.IQueryRunnerCallback.OnQueryFinished(AndroidX.ContentPager.Content.Query! p0, Android.Database.ICursor? p1) -> void
AndroidX.ContentPager.Content.ContentPager.IQueryRunnerCallback.RunQueryInBackground(AndroidX.ContentPager.Content.Query! p0) -> Android.Database.ICursor?
AndroidX.ContentPager.Content.LoaderQueryRunner
AndroidX.ContentPager.Content.LoaderQueryRunner.Cancel(AndroidX.ContentPager.Content.Query! query) -> void
AndroidX.ContentPager.Content.LoaderQueryRunner.IsRunning(AndroidX.ContentPager.Content.Query! query) -> bool
AndroidX.ContentPager.Content.LoaderQueryRunner.LoaderQueryRunner(Android.Content.Context! context, Android.App.LoaderManager! loaderMgr) -> void
AndroidX.ContentPager.Content.LoaderQueryRunner.Query(AndroidX.ContentPager.Content.Query! query, AndroidX.ContentPager.Content.ContentPager.IQueryRunnerCallback! callback) -> void
AndroidX.ContentPager.Content.Query
AndroidX.ContentPager.Content.Query.Id.get -> int
AndroidX.ContentPager.Content.Query.Limit.get -> int
AndroidX.ContentPager.Content.Query.Offset.get -> int
AndroidX.ContentPager.Content.Query.Uri.get -> Android.Net.Uri!
const AndroidX.ContentPager.Content.ContentPager.CursorDispositionCopied = 1 -> int
const AndroidX.ContentPager.Content.ContentPager.CursorDispositionPaged = 2 -> int
const AndroidX.ContentPager.Content.ContentPager.CursorDispositionRepaged = 3 -> int
const AndroidX.ContentPager.Content.ContentPager.CursorDispositionWrapped = 4 -> int
const AndroidX.ContentPager.Content.ContentPager.ExtraHonoredArgs = "android.content.extra.HONORED_ARGS" -> string!
const AndroidX.ContentPager.Content.ContentPager.ExtraRequestedLimit = "android-support:extra-ignored-limit" -> string!
const AndroidX.ContentPager.Content.ContentPager.ExtraSuggestedLimit = "android-support:extra-suggested-limit" -> string!
const AndroidX.ContentPager.Content.ContentPager.ExtraTotalCount = "android.content.extra.TOTAL_COUNT" -> string!
const AndroidX.ContentPager.Content.ContentPager.QueryArgLimit = "android:query-arg-limit" -> string!
const AndroidX.ContentPager.Content.ContentPager.QueryArgOffset = "android:query-arg-offset" -> string!
override AndroidX.ContentPager.Content.ContentPager.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ContentPager.Content.ContentPager.ThresholdClass.get -> nint
override AndroidX.ContentPager.Content.ContentPager.ThresholdType.get -> System.Type!
override AndroidX.ContentPager.Content.LoaderQueryRunner.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
override AndroidX.ContentPager.Content.Query.JniPeerMembers.get -> Java.Interop.JniPeerMembers!
static AndroidX.ContentPager.Content.ContentPager.CreateArgs(int offset, int limit) -> Android.OS.Bundle!
virtual AndroidX.ContentPager.Content.ContentPager.Query(Android.Net.Uri! uri, string![]? projection, Android.OS.Bundle! queryArgs, Android.OS.CancellationSignal? cancellationSignal, AndroidX.ContentPager.Content.ContentPager.IContentCallback! callback) -> AndroidX.ContentPager.Content.Query!
virtual AndroidX.ContentPager.Content.ContentPager.Reset() -> void
