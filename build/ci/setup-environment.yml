parameters:
  installAndroidDependencies: false
  androidSdkRoot: $(Agent.TempDirectory)/android-sdk
  javaSdkRoot: $(Agent.ToolsDirectory)/jdk21

steps:
  # before the build starts, make sure the tooling is as expected. Clear the cache on shared agents
  - script: |
      dotnet build-server shutdown
      rm -rf $(Agent.ToolsDirectory)/dotnet
    displayName: Remove dotnet cache
    workingDirectory: $(Pipeline.Workspace)
    condition: eq(variables['Agent.OS'], 'Darwin')

  - task: UseDotNet@2
    displayName: 'Use dotnet $(dotnetVersion)'
    inputs:
      version: $(dotnetVersion)
      includePreviewVersions: true
    condition: ne('$(dotnetVersion)', '')

  - task: UseDotNet@2
    displayName: 'Use dotnet $(dotnetNextVersion)'
    inputs:
      version: $(dotnetNextVersion)
      performMultiLevelLookup: true
      includePreviewVersions: true
    condition: ne('$(dotnetNextVersion)', '')

  - script: dotnet --info
    displayName: Display dotnet info

  - powershell: dotnet tool restore
    displayName: 'Install .NET tools'
    ignoreLASTEXITCODE: true

  - pwsh: |    
      dotnet workload update --verbosity diag --source https://api.nuget.org/v3/index.json
      dotnet workload install maui-android android --verbosity diag --source https://api.nuget.org/v3/index.json
      if ($LASTEXITCODE -ne 0) {
          Write-Host "##vso[task.logissue type=error]Failed to install workloads."
          Write-Host "##vso[task.complete result=Failed;]"
          exit 0
      }
    displayName: Install .NET Workloads

  - template: install-java.yml
    parameters:
      jdkVersion: '21.0.8'
      jdkDestinationDirectory: ${{ parameters.javaSdkRoot }}

  - pwsh: |
      if (Test-Path "${{ parameters.androidSdkRoot }}") {
        Remove-Item "${{ parameters.androidSdkRoot }}" -Recurse -Force
      }
      New-Item -ItemType Directory -Path "${{ parameters.androidSdkRoot }}" -Force
    displayName: Clean and create Android SDK directory
    condition: eq(${{ parameters.installAndroidDependencies }}, true)

  - task: DotNetCoreCLI@2
    displayName: Install android dependencies Xamarin
    inputs:
      command: build
      projects: build/scripts/provision-android/provision-android.csproj
      arguments: >-
        -t:InstallAndroidDependencies -p:AcceptAndroidSdkLicenses=true -p:AndroidManifestType=Xamarin
        -p:AndroidSdkDirectory=${{ parameters.androidSdkRoot }}
        -v:n -bl:output/install-android-dependencies-Xamarin.binlog
      retryCountOnTaskFailure: 3

  - pwsh: |
      $ErrorActionPreference = 'Stop'
      $sdkManager = Join-Path "${{ parameters.androidSdkRoot }}" "cmdline-tools" "latest" "bin" "sdkmanager"
      if ($IsWindows) {
        $sdkManager += ".bat"
      }
      
      if (Test-Path $sdkManager) {
        Write-Host "Accepting Android SDK licenses..."
        Write-Host "y" | & $sdkManager --licenses --sdk_root="${{ parameters.androidSdkRoot }}"
      } else {
        Write-Host "SDK Manager not found at: $sdkManager"
      }
    displayName: Accept Android SDK licenses
    condition: eq(${{ parameters.installAndroidDependencies }}, true)

  - pwsh: |
      Write-Host "##vso[task.setvariable variable=AndroidSdkDirectory]${{ parameters.androidSdkRoot }}"
      Write-Host "##vso[task.setvariable variable=ANDROID_SDK_ROOT]${{ parameters.androidSdkRoot }}"
      Write-Host "##vso[task.setvariable variable=ANDROID_HOME]${{ parameters.androidSdkRoot }}"
    displayName: Set ANDROID_SDK_ROOT and ANDROID_HOME to ${{ parameters.androidSdkRoot }}

  - pwsh: |
      # Remove problematic package.xml files that cause JAXB parsing issues with Java 21
      $androidSdkRoot = if ($env:ANDROID_SDK_ROOT) { $env:ANDROID_SDK_ROOT } else { $env:ANDROID_HOME }
      if ($androidSdkRoot -and (Test-Path $androidSdkRoot)) {
        Write-Host "Removing package.xml files from: $androidSdkRoot"
        $files = Get-ChildItem -Path $androidSdkRoot -Filter "package.xml" -Recurse -ErrorAction SilentlyContinue
        $files | Remove-Item -Force -ErrorAction SilentlyContinue
        Write-Host "Removed $($files.Count) package.xml files"
      } else {
        Write-Host "Android SDK not found, skipping cleanup"
      }
    displayName: Clean Android SDK package.xml files
    continueOnError: true


