parameters:
  installAndroidDependencies: false
  androidSdkRoot: $(Agent.TempDirectory)/android-sdk
  javaSdkRoot: $(Agent.ToolsDirectory)\jdk21

steps:
  # before the build starts, make sure the tooling is as expected. Clear the cache on shared agents
  - script: |
      dotnet build-server shutdown
      rm -rf $(Agent.ToolsDirectory)/dotnet
    displayName: Remove dotnet cache
    workingDirectory: $(Pipeline.Workspace)
    condition: eq(variables['Agent.OS'], 'Darwin')

  - task: UseDotNet@2
    displayName: 'Use dotnet $(dotnetVersion)'
    inputs:
      version: $(dotnetVersion)
      includePreviewVersions: true
    condition: ne('$(dotnetVersion)', '')

  - task: UseDotNet@2
    displayName: 'Use dotnet $(dotnetNextVersion)'
    inputs:
      version: $(dotnetNextVersion)
      performMultiLevelLookup: true
      includePreviewVersions: true
    condition: ne('$(dotnetNextVersion)', '')

  - script: dotnet --info
    displayName: Display dotnet info

  - powershell: dotnet tool restore
    displayName: 'Install .NET tools'
    ignoreLASTEXITCODE: true

  - pwsh: |    
      dotnet workload update --verbosity diag --source https://api.nuget.org/v3/index.json
      dotnet workload install maui-android android --verbosity diag --source https://api.nuget.org/v3/index.json
      if ($LASTEXITCODE -ne 0) {
          Write-Host "##vso[task.logissue type=error]Failed to install workloads."
          Write-Host "##vso[task.complete result=Failed;]"
          exit 0
      }
    displayName: Install .NET Workloads

  - bash: |
      if [[ "$(Agent.Name)" == *"Azure Pipelines"* ]]; then
          echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_21_X64)"
      else
          echo "##vso[task.setvariable variable=JAVA_HOME]/Library/Java/JavaVirtualMachines/microsoft-21.jdk/Contents/Home"
      fi
    displayName: Use Java 21 SDK (Mac)
    condition: eq( variables['Agent.OS'], 'Darwin' )

  - task: JavaToolInstaller@0
    displayName: Use Java 21 SDK (Windows)
    condition: and(eq( variables['Agent.OS'], 'Windows_NT' ), ne(${{ parameters.installAndroidDependencies }}, true))
    inputs:
      versionSpec: '21'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: DotNetCoreCLI@2
    displayName: Install android dependencies GoogleV2
    inputs:
      command: build
      projects: build/scripts/provision-android/provision-android.csproj
      arguments: >-
        -t:InstallAndroidDependencies -p:AcceptAndroidSdkLicenses=true -p:AndroidManifestType=GoogleV2
        -p:AndroidSdkDirectory=${{ parameters.androidSdkRoot }}
        -v:n -bl:output/install-android-dependencies-GoogleV2.binlog
      retryCountOnTaskFailure: 3

  - task: DotNetCoreCLI@2
    displayName: Install android dependencies Xamarin
    inputs:
      command: build
      projects: build/scripts/provision-android/provision-android.csproj
      arguments: >-
        -t:InstallAndroidDependencies -p:AcceptAndroidSdkLicenses=true -p:AndroidManifestType=Xamarin
        -p:AndroidSdkDirectory=${{ parameters.androidSdkRoot }}
        -v:n -bl:output/install-android-dependencies-Xamarin.binlog
      retryCountOnTaskFailure: 3

  - pwsh: |
      Write-Host "##vso[task.setvariable variable=AndroidSdkDirectory]${{ parameters.androidSdkRoot }}"
      Write-Host "##vso[task.setvariable variable=ANDROID_SDK_ROOT]${{ parameters.androidSdkRoot }}"
      Write-Host "##vso[task.setvariable variable=ANDROID_HOME]${{ parameters.androidSdkRoot }}"
    displayName: Set ANDROID_SDK_ROOT and ANDROID_HOME to ${{ parameters.androidSdkRoot }}

  - ${{ if eq(parameters.installAndroidDependencies, true) }}:
    - pwsh: |
        $url = "https://aka.ms/download-jdk/microsoft-jdk-21.0.8-windows-x64.zip"
        if ($IsMacOS) {
            $url = "https://aka.ms/download-jdk/microsoft-jdk-21.0.8-macos-x64.tar.gz"
        }
        $fileName = [System.IO.Path]::GetFileName($url)
        Invoke-WebRequest -Uri $url -OutFile $fileName
        Write-Host "##vso[task.setvariable variable=JDK_21_FILE_PATH]$(Build.StagingDirectory)/$fileName"
      displayName: Download Java 21 SDK
      workingDirectory: $(Build.StagingDirectory)

    - task: JavaToolInstaller@0
      displayName: Use Java 21 SDK
      inputs:
        versionSpec: '21'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: LocalDirectory
        jdkFile: $(JDK_21_FILE_PATH)
        jdkDestinationDirectory: ${{ parameters.javaSdkRoot }}
        cleanDestinationDirectory: true
