parameters:
  # Environment Parameters
  name:                                                             # Job display name
  buildPool:                                                        # VM pool information

  # Build Parameters
  timeoutInMinutes: 300                                             # Max job runtime in minutes
  runAPIScan: false                                                 # Run APIScan analysis
  
  tools:                                                            # Additional .NET global tools to install
  - 'xamarin.androidbinderator.tool': '0.5.7'
  - 'Cake.Tool': '4.0.0'
  - 'private-api-tools': '1.0.3'
  
  # Reporting/Analysis Parameters
  artifactsPath: 'output'                                           # Path to the NuGet packages that need to be signed, verified and published
  signListPath: 'SignList.xml'                                      # Path to 'SignList.xml' used for signing NuGet packages

jobs:
- job: build_${{ parameters.name }}
  displayName: ${{ parameters.name }}
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  pool: ${{ parameters.buildPool }}
  
  templateContext:
    sdl:
      spotBugs:
        enabled: false
      binskim:
        scanOutputDirectoryOnly: true
    outputs:
    - output: pipelineArtifact
      targetPath: ${{ parameters.artifactsPath }}
      artifactName: output-${{ parameters.name }}
      condition: always()
      
  steps:
    - template: setup-environment.yml
      parameters:
        dotnetTools: ${{ parameters.tools }}

    - template: build-and-test.yml
      parameters:
        artifactsPath: ${{ parameters.artifactsPath }}

    - ${{ if eq(parameters.runAPIScan, true) }}:
      - template: api-scan.yml
        parameters:
          mainBranchName: $(mainBranchName)

    # Copy SignList.xml to output
    - pwsh: |
        $srcExists = (Test-Path "${{ parameters.signListPath }}")
        $dstExists = (Test-Path "${{ parameters.artifactsPath }}\SignList.xml")
        if ($srcExists -and !$dstExists) {
          Copy-Item "${{ parameters.signListPath }}" "${{ parameters.artifactsPath }}\SignList.xml"
          Write-Host "Copied ${{ parameters.signListPath }} to ${{ parameters.artifactsPath }}\SignList.xml"
        } elseif (!$srcExists) {
          Write-Host "${{ parameters.signListPath }} did not exist, nothing copied."
        } elseif ($dstExists) {
          Write-Host "${{ parameters.artifactsPath }}\SignList.xml already existed, nothing copied."
        }
      displayName: Copy SignList.xml to output
