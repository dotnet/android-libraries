parameters:
  condition: succeeded()
  verbosity:                                       # the build verbosity: 'minimal', 'normal', 'diagnostic'
  configuration:                                   # the build configuration: 'Debug', 'Release'
  artifactsPath:
  skipUnitTests: false                             # do not run unit test step
  
  validPackagePrefixes:                            # any NuGet prefixes that should pass validation
  - Xamarin
  - GoogleGson
  - Square

steps:
  - pwsh: |
      dotnet cake build.cake `
        --target=ci-build `
        --configuration="${{ parameters.configuration }}" `
        --verbosity="${{ parameters.verbosity }}"
    displayName: 'Build packages'
    env:
      JavaSdkDirectory: $(JAVA_HOME)
      RepositoryCommit: $(Build.SourceVersion)
      RepositoryBranch: $(Build.SourceBranchName)
      RepositoryUrl: $(Build.Repository.Uri)
      RepositoryType: "git"

  - pwsh: |
      dotnet cake validation.cake `
        --namespaces="${{ join(',', parameters.validPackagePrefixes) }}" `
        --verbosity="${{ parameters.verbosity }}"
    displayName: 'Run NuGet package validation'
    
  - pwsh: |
      dotnet cake nuget-diff.cake `
        --artifacts="${{ parameters.artifactsPath }}" `
        --output="${{ parameters.artifactsPath }}/api-diff" `
        --cache="$(Agent.TempDirectory)/api-diff" `
        --verbosity="${{ parameters.verbosity }}"
    displayName: 'Generate API diff'

  - pwsh: dotnet cake utilities.cake -t=verify-namespace-file
    displayName: Verify published namespaces

  - pwsh: |
      dotnet cake build.cake `
        --target=ci-samples `
        --configuration="${{ parameters.configuration }}" `
        --verbosity="${{ parameters.verbosity }}"
    displayName: 'Build samples'
    env:
      JavaSdkDirectory: $(JAVA_HOME)
      RepositoryCommit: $(Build.SourceVersion)
      RepositoryBranch: $(Build.SourceBranchName)
      RepositoryUrl: $(Build.Repository.Uri)
      RepositoryType: "git"
    
  - task: DotNetCoreCLI@2
    displayName: Run unit tests
    condition: ne(${{ parameters.skipUnitTests }}, 'true')
    inputs:
      command: test
      projects: util/**/*.Tests.csproj
      arguments: '-c ${{ parameters.configuration }}'
