<Project Sdk="Xamarin.Legacy.Sdk">
  <PropertyGroup>
    <TargetFrameworks>MonoAndroid9.0;net6.0-android</TargetFrameworks>
    <IsBindingProject>true</IsBindingProject>
    <!--
      No warnings for:
       - CS0618: 'member' is obsolete: 'text'
       - CS0109: The member 'member' does not hide an inherited member. The new keyword is not required
       - CS0114: 'function1' hides inherited member 'function2'. To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
       - CS0628: 'member' : new protected member declared in sealed class
       - CS0108: 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
       - CS0809: Obsolete member 'member' overrides non-obsolete member 'member'
       - CS1572: XML comment has a param tag for '', but there is no parameter by that name  
       - CS1574: XML comment has cref attribute 'Observer' that could not be resolved
    -->
    <NoWarn>0618;0109;0114;0628;0108;0809;1572;1574</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <AndroidClassParser>class-parse</AndroidClassParser>
    <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
  </PropertyGroup>

  <PropertyGroup>
    <Authors>Microsoft</Authors>
    <Owners>Microsoft</Owners>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageLicenseUrl>https://go.microsoft.com/fwlink/?linkid=865435</PackageLicenseUrl>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=865435</PackageProjectUrl>
    <PackageLicenseUrl>https://go.microsoft.com/fwlink/?linkid=865373</PackageLicenseUrl>
    <RepositoryUrl>https://github.com/bumptech/glide</RepositoryUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>

    @foreach (var art in @Model.MavenArtifacts) 
    {
      <PackageId>@Model.NuGetPackageId</PackageId>
      <AssemblyName>@Model.NuGetPackageId</AssemblyName>
      switch(@Model.NuGetPackageId)
      {
          case "Xamarin.Google.Guava":
            <Title>Xamarin.Google.Guava</Title>
            <Title>Google Guava reference library for Xamarin.Android</Title>
            <PackageDescription>
            Xamarin.Android bindings for Google Guava

            NOTE: This package is meant to be used as a reference only for other binding projects that depend on Guava.
            This package does not expose any useful API's in the .dll itself.

            Guava is a set of core libraries that includes new collection types (such as multimap and multiset), immutable collections, a graph library, functional types, an in-memory cache, and APIs/utilities for concurrency, I/O, hashing, primitives, reflection, string processing, and much more!
            </PackageDescription>
            <AssemblyName>Xamarin.Google.Guava</AssemblyName>
            <RootNamespace>Guava</RootNamespace>
            break; 
          case "Xamarin.Google.Guava.FailureAccess":
            <Title>Xamarin.Google.Guava.FailureAccess</Title>
            <Title>Google Guava FailureAccess reference library for Xamarin.Android</Title>
            <PackageDescription>
            Xamarin.Android bindings for Google Guava FailureAccess

            NOTE: This package is meant to be used as a reference only for other binding projects that depend on Guava.
            This package does not expose any useful API's in the .dll itself.

            Guava is a set of core libraries that includes new collection types (such as multimap and multiset), immutable collections, a graph library, functional types, an in-memory cache, and APIs/utilities for concurrency, I/O, hashing, primitives, reflection, string processing, and much more!
            </PackageDescription>
            <AssemblyName>Xamarin.Google.Guava.FailureAccess</AssemblyName>
            <RootNamespace>Guava.FailureAccess</RootNamespace>
            break; 
          case "Xamarin.Google.Guava.ListenableFuture":
            <Title>Xamarin.Google.Guava.ListenableFuture</Title>
            <Title>Google Guava ListenableFuture reference library for Xamarin.Android</Title>
            <PackageDescription>
            Xamarin.Android bindings for Google Guava ListenableFuture

            NOTE: This package is meant to be used as a reference only for other binding projects that depend on Guava.
            This package does not expose any useful API's in the .dll itself.

            Guava is a set of core libraries that includes new collection types (such as multimap and multiset), immutable collections, a graph library, functional types, an in-memory cache, and APIs/utilities for concurrency, I/O, hashing, primitives, reflection, string processing, and much more!
            </PackageDescription>
            <AssemblyName>Xamarin.Google.Guava.ListenableFuture</AssemblyName>
            <RootNamespace>Guava.ListenableFuture</RootNamespace>
            break; 
          default:
            break; 
      }
      <PackageVersion>@(Model.NuGetVersion)</PackageVersion>
    }
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>


  <ItemGroup>
    @foreach (var art in @Model.MavenArtifacts) 
    {
      <InputJar 
        Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId).jar" 
        Link="Jars\%(Filename)%(Extension)" 
        />
      <JavaSourcesJar 
        Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-sources.jar" 
        Link="Jars\%(Filename)%(Extension)" 
        />
      <JavaDocJar 
        Include="..\..\externals\@(art.MavenGroupId)\@(art.MavenArtifactId)-javadoc.jar" 
        Link="Jars\%(Filename)%(Extension)" 
        />
      <TransformFile
        Include="..\..\source\@(Model.MavenArtifacts[0].MavenGroupId)\@(Model.MavenArtifacts[0].MavenArtifactId)\Transforms\*.xml" 
        Link="Transforms\%(Filename)%(Extension)" 
        />
      <Compile 
        Include="..\..\source\@(Model.MavenArtifacts[0].MavenGroupId)\@(Model.MavenArtifacts[0].MavenArtifactId)\Additions\*.cs" 
        Link="Additions\%(Filename)%(Extension)" 
        />
      <None 
        Include="..\..\source\@(Model.MavenArtifacts[0].MavenGroupId)\@(Model.MavenArtifacts[0].MavenArtifactId)\*.targets" 
        Pack="True" 
        PackagePath="@@(_TfmNuGetBuildFolders->'%(Identity)$(PackageId).targets')" 
        />
     }
  </ItemGroup>

  <ItemGroup>
    @foreach (var dep in @Model.NuGetDependencies) {
      if (dep.IsProjectReference) {
    <ProjectReference Include="..\..\generated\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId)\@(dep.MavenArtifact.MavenGroupId).@(dep.MavenArtifact.MavenArtifactId).csproj" PrivateAssets="none" />
      } else {
    <PackageReference Include="@(dep.NuGetPackageId)" Version="@(dep.NuGetVersion)" />
      }
    }
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\templates\guava\License.md" Pack="true" PackagePath="License.md" />
    <None Include="..\..\templates\guava\External-Dependency-Info.txt" Pack="true" PackagePath="THIRD-PARTY-NOTICES.txt" />
  </ItemGroup>

</Project>
